-- =============================================2020年SQL保存============================================
 ------1、餐食点评数据
 select t2.orderid,t2.userid,t1.remark,t2.created,t1.remark_level,
decode(t1.source,1,'网站',2,'M网站',3,'IOS',4,'安卓',5,'微信',10,'微信')
from dw.fact_cms_ch_item_remark t1
join dw.fact_cms_remark t2 on t1.remarkid=t2.remarkid
where t1.CHANNEL=0
and t1.created>=to_date('2019-12-01','yyyy-mm-dd')
and t1.created< to_date('2020-01-01','yyyy-mm-dd');


 ------2、剔除不正常航班的特殊退改政策
 
  select decode(t1.log_code,
              5,
              '订单退票',
              6,
              '航班变更',
              20,
              '订单退票-审计',
              22,
              '特殊情况变更-审计',
              21,
              '修改姓名证件号-审计') 日志类型,
       to_char(t9.origin_std, 'yyyy-mm') 航班日期,
       sum(nvl(t1.fy, 0) * nvl(t2.r_com_rate, 1)) 实际费用,
       sum(nvl(t1.ys_fy, 0) * nvl(t2.r_com_rate, 1)) 规则费用,
       count(distinct t1.flights_order_head_id)
  from stg.s_cq_flights_head_history t1
  join stg.s_cq_order_head t2 on t1.flights_order_head_id =
                                 t2.flights_order_head_id
  join stg.s_cq_flights t3 on t2.flights_id = t3.flights_id
  join stg.s_cq_user t5 on t1.users_id = t5.users_id
                       and t5.company_id = t3.company_id
  join stg.s_cq_terminal t4 on t5.terminal_id = t4.terminal_id
  join stg.s_cq_order t6 on t6.flights_order_id = t2.flights_order_id
  join stg.s_cq_flights_segment_head t9 on t2.segment_head_id =
                                           t9.segment_head_id
 left join dw.fact_foc_unnormal_flight t10 on trunc(t9.origin_std) =
                                               t10.daylinedate
                                           and t9.r_flights_no =
                                               t10.flightno
                                           and t9.flights_segment =
                                               t10.originairport ||
                                               t10.destairport
 where t5.company_id = 0
   and t10.dayflightid is null
   and t9.origin_std >= to_date('2017-11-01', 'yyyy-mm-dd')
   and t9.origin_std < to_date('2020-01-01', 'yyyy-mm-dd')
   and t1.log_code in (20, 22)
 group by decode(t1.log_code,
                 5,
                 '订单退票',
                 6,
                 '航班变更',
                 20,
                 '订单退票-审计',
                 22,
                 '特殊情况变更-审计',
                 21,
                 '修改姓名证件号-审计'),
          to_char(t9.origin_std, 'yyyy-mm');

 
 
 ------3、用户画像变化
 
 select to_char(t1.flights_date,'yyyy'),
       case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
       else '非BGO' end 舱位类型,
       case
         when t1.ahead_days <= 3 then
          '00-03'
         when t1.ahead_days <= 7 then
          '04-07'
         when t1.ahead_days <= 15 then
          '08-15'
         when t1.ahead_days <= 30 then
          '15-30'
         when t1.ahead_days <= 60 then
          '31-60'
         when t1.ahead_days <= 90 then
          '61-90'
         when t1.ahead_days > 90 then
          '90+'
       end 提前期,
       t1.nationflag 航线性质,
       case when t5.nationality like '%中国%' then '中国'
       else '外国' end 国籍,
        case when t5.nationality like '%中国%' then t5.cust_province
       else '-' end 省份,
       case when t5.nationality like '%中国%' then t5.cust_city
       else '-' end 城市,
       t1.gender 性别, 
       case when getage(t1.flights_date,t1.birthday)<12 then '<12'
            when getage(t1.flights_date,t1.birthday)<18 then '12~17'
            when getage(t1.flights_date,t1.birthday)<24 then '18~23'
            when getage(t1.flights_date,t1.birthday)<30 then '24~29'
            when getage(t1.flights_date,t1.birthday)<40 then '30~39'
            when getage(t1.flights_date,t1.birthday)<50 then '40~49'
            when getage(t1.flights_date,t1.birthday)<60 then '50~59'
            when getage(t1.flights_date,t1.birthday)<70 then '60~69'
            when getage(t1.flights_date,t1.birthday)>=70 then '70+' 
            else '-' end age,     
       count(1) 销量,
       sum(t1.ticket_price) 机票金额,
       sum(t1.price) 民航公布价和,
       sum(t1.insurce_fee+t1.other_fee) 辅收和
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.bi_order_region t5 on t1.flights_order_head_id=t5.flights_order_head_id
 where t1.flights_date >= to_date('2017-01-01', 'yyyy-mm-dd')
   and t1.flights_date < to_date('2020-10-01', 'yyyy-mm-dd')
   and t1.whole_flight like '9C%'
   and t1.seats_name is not null
 group by to_char(t1.flights_date,'yyyy'),
       case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
       else '非BGO' end ,
       case
         when t1.ahead_days <= 3 then
          '00-03'
         when t1.ahead_days <= 7 then
          '04-07'
         when t1.ahead_days <= 15 then
          '08-15'
         when t1.ahead_days <= 30 then
          '15-30'
         when t1.ahead_days <= 60 then
          '31-60'
         when t1.ahead_days <= 90 then
          '61-90'
         when t1.ahead_days > 90 then
          '90+'
       end ,
       t1.nationflag ,
       case when t5.nationality like '%中国%' then '中国'
       else '外国' end ,
        case when t5.nationality like '%中国%' then t5.cust_province
       else '-' end ,
       case when t5.nationality like '%中国%' then t5.cust_city
       else '-' end ,
       t1.gender , 
       case when getage(t1.flights_date,t1.birthday)<12 then '<12'
            when getage(t1.flights_date,t1.birthday)<18 then '12~17'
            when getage(t1.flights_date,t1.birthday)<24 then '18~23'
            when getage(t1.flights_date,t1.birthday)<30 then '24~29'
            when getage(t1.flights_date,t1.birthday)<40 then '30~39'
            when getage(t1.flights_date,t1.birthday)<50 then '40~49'
            when getage(t1.flights_date,t1.birthday)<60 then '50~59'
            when getage(t1.flights_date,t1.birthday)<70 then '60~69'
            when getage(t1.flights_date,t1.birthday)>=70 then '70+' 
            else '-' end;
      
      
  select 
to_char(t1.flights_date,'yyyy'),
       case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
       else '非BGO' end 舱位类型,
      t2.area_type,
      avg(t1.ahead_days),
      avg(getage(t1.flights_date,t1.birthday)),   
       
       count(1) 销量,
       sum(t1.ticket_price) 机票金额,
       sum(t1.price) 民航公布价和,
       sum(t1.insurce_fee+t1.other_fee) 辅收和
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.bi_order_region t5 on t1.flights_order_head_id=t5.flights_order_head_id
 where t1.flights_date >= to_date('2017-01-01', 'yyyy-mm-dd')
   and t1.flights_date < to_date('2020-01-01', 'yyyy-mm-dd')
   and t1.whole_flight like '9C%'
   and t1.seats_name is not null
 group by to_char(t1.flights_date,'yyyy'),
       case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
       else '非BGO' end, t2.area_type;
 
 
 
 
 ------4、商务经济座点评数据
 
  select t2.orderid,t2.userid,t2.remark,t2.created,t2.remark_level,
decode(t2.source,1,'网站',2,'M网站',3,'IOS',4,'安卓',5,'微信',10,'微信')
from  dw.fact_cms_remark t2 
where  t2.created>=to_date('2019-12-01','yyyy-mm-dd')
and t2.created< to_date('2020-01-01','yyyy-mm-dd')
and exists(select 1 from dw.fact_order_detail t3
where t2.orderid=t3.flights_order_id
and t3.is_swj=1
and t3.order_day>=to_date('2019-01-01','yyyy-mm-dd'))
 
 
 ===============================================20200108============================================
 ------5、绿翼会员证件号与姓名不匹配

 select cust_id,users_id_fk,realname,substr(t1.codeno,1,6)||'********'||substr(t1.codeno,length(t1.codeno)-4,4) from dw.da_lyuser t1
where (t1.codetype =1
or length(t1.codeno) in(15,18))
and regexp_like(t1.realname,'[a-zA-Z]|[1-9]|(？)')
 
  ===============================================20200109============================================
 ------6、机上付数据
1.  机上付每天的支付量，占总支付量的比例，各支付方式的占比？
解释：
现有支付的渠道：
2.  * 21万人，在复购时，采用的支付方式，继续使用机上付的比例？
3.  已经开通机上付的客户，购买产品时没用用机上付，购买产品的金额分布比例？
4.  机上付的头枕巾有二维码宣传的座位号和没有的，使用比例的对比？
目前无法统计到机上付头片的人群。
5.  使用机上付的商品的价格分布比例？
6.使用机上付的航班的航线集中度，航班飞行时长的集中度，航班关舱门时长（起飞时间-CC时间）

 
  ------7、升舱但未在商务经济座升舱表里面
  
select  
t1.flights_order_id 订单号,t1.flight_date 航班日期,t1.whole_flight 航班号,t1.flights_segment_name 航段,
  t2.sub_channel 升级渠道,t2.users_id 升级操作人,t4.sub_channel 订票终端
  from dw.bi_superseat_detail t1
  join dw.fact_other_order_detail t2 on t1.flights_order_head_id =
                                        t2.flights_order_head_id
                                    and t2.xtype_id = 9
  left join cqsale.cq_super_seat_upgrade_record@to_air t3 on t1.flights_order_head_id =
                                                             t3.flights_Order_head_id
 left join dw.fact_order_detail t4 on t1.flights_order_head_id =
                                                             t4.flights_Order_head_id

           where t1.UPGRADE_TYPE=-1
           and t2.pay_together=1
           and t3.flights_order_head_id is null
           and t1.flight_date>=to_date('2019-01-01','yyyy-mm-dd')
           and t1.flight_date< to_date('2020-01-01','yyyy-mm-dd')
  
  
 ------8、商务经济座销售计划配置 
 
 
select distinct to_char(h2.origin_std,'hh24:mi') "起飞时间(北京时间)",to_char(h2.dest_sta,'hh24:mi') "降落时间(北京时间)",
to_char(h3.local_std,'hh24:mi')  "起飞时间(本地时间)" ,to_char(h3.local_sta,'hh24:mi') "降落时间(本地时间)",
round((h2.dest_sta-h2.origin_std)*24,2) 飞行小时,
h1.flights_date_begin 航班开始时间,h1.flights_date_end 航班结束时间,h1.ori_air_code 始发三字码 ,h1.dest_air_code 目的地三字码 ,
h1.flights_no 航班号,h1.airport_name 始发站中文
, h1.airport_name2 目的站中文
from(
select t1.flights_date_begin,t1.flights_date_end,t1.ori_air_code ,t1.dest_air_code ,t1.flights_no ,t2.airport_name 
, t3.airport_name airport_name2 
from cqsale.CQ_SUPER_SEAT_SALE_PLAN@to_air t1
left join hdb.cq_airport t2 on t1.ori_air_code=t2.threecodeforcity
left join hdb.cq_airport t3 on t1.dest_air_code=t3.threecodeforcity
where flights_date_end> trunc(sysdate)
and PLAN_STATUS=0
and  not exists(select 1 from cqsale.CQ_SUPER_SEAT_SALE_PLAN@to_air t2
where t1.ori_air_code=t2.ori_air_code
and t1.dest_air_code=t2.dest_air_code
and t1.flights_no=t2.flights_no
and t1.flights_date_begin=t2.flights_date_begin
and t1.flights_date_end=t2.flights_date_end
and t1.xproduct_id=t2.xproduct_id
and t1.SUPER_SEATS_NAME_NUM=t2.SUPER_SEATS_NAME_NUM
and t2.PLAN_STATUS=1
and t1.WEEKS=t2.WEEKS
and t1.UPGRADE_SEATS_NAME=t2.UPGRADE_SEATS_NAME
))h1
 join dw.da_flight h2 on h2.flight_date>=h1.flights_date_begin
and h2.flight_date<=h1.flights_date_end and h1.ori_air_code||h1.dest_air_code=h2.segment_code and h1.flights_no=h2.flight_no 
and h2.flag<>2 and h2.company_id=0
join stg.s_cq_flights_segment_head h3 on h2.segment_head_id=h3.segment_head_id
where  h2.flight_date>=trunc(sysdate);


select flights_date_begin 航班开始时间,flights_date_end 航班结束时间,ori_air_code 始发站三字码,dest_air_code 目的地站三字码,flights_no 航班号,airport_name 始发站中文
,airport_name2 目的站中文
from(
select t1.flights_date_begin,t1.flights_date_end,t1.nation_flag,t1.ori_air_code,t1.dest_air_code,t1.flights_no,t2.airport_name  ,
t3.airport_name airport_name2
from cqsale.CQ_SUPER_SEAT_SALE_PLAN@to_air t1
left join hdb.cq_airport t2 on t1.ori_air_code=t2.threecodeforcity
left join hdb.cq_airport t3 on t1.dest_air_code=t3.threecodeforcity
where flights_date_end> trunc(sysdate)
and PLAN_STATUS=1)h1
where not exists (select 1 from cqsale.CQ_SUPER_SEAT_UPGRADE_RULE@to_air h2
where h2.status=1
and h1.ori_air_code||h1.dest_air_code=h2.origin_airport||h2.dest_airport)
and exists(select 1 from  dw.da_flight h3 
where  h3.flight_date>=h1.flights_date_begin
and h3.flight_date<=h1.flights_date_end and h1.ori_air_code||h1.dest_air_code=h3.segment_code 
and h1.flights_no=h3.flight_no 
and  h3.flight_date>=trunc(sysdate)
and h3.flag<>2 and h3.company_id=0);


--Y舱关闭销售

select t3.nationflag,t3.flight_date,t3.originairport_name,t3.destairport_name,t3.flight_no
  from cqsale.cq_super_seat_sale_seg@to_air t2
  join dw.da_flight t3 on t2.segment_head_id=t3.segment_head_id
  where super_seats_name ='Y'
  and t3.flight_date>=trunc(sysdate)
  and t2.sale_status=2


 ------9、
 
 select  /*+parallel(4) */
t1.flights_order_id,t1.flight_date,t1.flight_date,t1.whole_flight,t1.flights_segment_name,
  t1.users_id,t1.terminal_id,t2.sub_channel,t2.users_id
  from dw.bi_superseat_detail t1
  join dw.fact_other_order_detail t2 on t1.flights_order_head_id =
                                        t2.flights_order_head_id
                                    and t2.xtype_id = 9
  left join cqsale.cq_super_seat_upgrade_record@to_air t3 on t1.flights_order_head_id =
                                                             t3.flights_Order_head_id

           where t1.UPGRADE_TYPE=-1
           and t2.pay_together=1
           and t3.flights_order_head_id is null
           and t1.flight_date>=to_date('2019-10-01','yyyy-mm-dd')
 
 
 ------10、特殊旅客数据
 
 002481@ch.com
 
select to_char(trunc(sysdate)-7,'mmdd')||'~'||to_char(trunc(sysdate),'mmdd') 日期段,
t3.type 特殊旅客类型,case when t4.ORIGIN_CITY ='SHA' then '上海出发'
when t4.DEST_CITY ='SHA' then '抵达上海' end 航班类型,count(distinct t1.order_head_id) 乘机人数
from cqsale.CQ_SPEC_TRAV_APPLY@to_air t1
join cqsale.cq_order_head@to_air t2 on t1.order_head_id=t2.flights_order_head_id
left join cqsale.CQ_SPEC_TRAV_CONF@to_air t3 on t1.SPEC_TRAV_TYPE=t3.id
left join cqsale.cq_flights_segment_head@to_air t4 on t2.segment_head_id=t4.segment_head_id
where t2.r_flights_date>=trunc(sysdate)-7
and t2.r_flights_date< trunc(sysdate)
and t2.flag_id =40
and regexp_like(t2.whole_segment,'(SHA)|(PVG)')
group by t3.type,case when t4.ORIGIN_CITY ='SHA' then '上海出发'
when t4.DEST_CITY ='SHA' then '抵达上海' end;
 
 
 ------11、零售物流数据
 
  --1、已确认收货、已签收   迁移到另外一张表
 --2、未收货、新订单    当前表
 --3、接口调用 状态更新
 --4、调用频率 1天1次
 
 
 ------12、
 
 /*数据条件：            
航班日期：  2019/3/31~2019/12/31          
剔除BGO  有乘机过2次及以上，&航线的人，第一次与第二次所乘航班的时刻段是否相同   */         
  
select /*+parallel(4) */
 to_char(tb1.flights_date,'yyyymm'),tb1.flights_city_name,tb1.origin_std,tb1.dest_sta,
tb1.origin_std2,tb1.dest_sta2,
case when tb1.origin_std=tb1.origin_std2
and  tb1.dest_sta=tb1.dest_sta2 then '相同'
when tb1.origin_std=tb1.origin_std2 then '始发相同'
when  tb1.dest_sta=tb1.dest_sta2 then '抵达相同'
else '不同' end,
tb1.flightdate2-tb1.flights_date 间隔时间,
count(1)
from(
select h1.traveller_name,h1.codeno,h1.flights_date,h1.flights_city_name,h1.origin_std,
h1.dest_sta,h2.flights_date flightdate2,h2.origin_std origin_std2,h2.dest_sta dest_sta2,
row_number()over(partition by h1.traveller_name,h1.codeno,h1.flights_city_name  order by h1.flights_date,h2.flights_date) rid
from(
select t1.traveller_name,t1.codetype,t1.codeno,t1.flights_date,f.flights_city_name,
       case  
                when to_char(f.origin_std, 'hh24') >= '00' and
                              to_char(f.origin_std, 'hh24') <= '03' then
                          '红眼'
                         when to_char(f.origin_std, 'hh24') >= '04' and
                              to_char(f.origin_std, 'hh24') <= '07' then
                          '早上'
                         when to_char(f.origin_std, 'hh24') >= '08' and
                              to_char(f.origin_std, 'hh24') <= '11' then
                          '上午'
                         when to_char(f.origin_std, 'hh24') >= '12' and
                              to_char(f.origin_std, 'hh24') <= '15' then
                          '下午'
                         when to_char(f.origin_std, 'hh24') >= '16' and
                              to_char(f.origin_std, 'hh24') <= '19' then
                          '晚上'
                         else
                          '深夜'
                       end origin_std,
                       case                        
                         when to_char(f.dest_sta, 'hh24') >= '00' and
                              to_char(f.dest_sta, 'hh24') <= '03' then
                          '红眼'
                         when to_char(f.dest_sta, 'hh24') >= '04' and
                              to_char(f.dest_sta, 'hh24') <= '07' then
                          '早上'
                         when to_char(f.dest_sta, 'hh24') >= '08' and
                              to_char(f.dest_sta, 'hh24') <= '11' then
                          '上午'
                         when to_char(f.dest_sta, 'hh24') >= '12' and
                              to_char(f.dest_sta, 'hh24') <= '15' then
                          '下午'
                         when to_char(f.dest_sta, 'hh24') >= '16' and
                              to_char(f.dest_sta, 'hh24') <= '19' then
                          '晚上'
                         else
                          '深夜'
                       end dest_sta
      from dw.fact_order_detail t1
      join dw.da_flight f on t1.segment_head_id=f.segment_head_id
      where f.flights_city_name like '%上海%'
      and regexp_like(f.flights_segment_name,'(深圳)|(广州)')
      and t1.flights_date>=to_date('2019-03-31','yyyy-mm-dd')
      and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
      and t1.flag_Id=40
      and t1.seats_name not in('B','G','G1','G2','O'))h1
      
      join 
      (select t1.traveller_name,t1.codetype,t1.codeno,t1.flights_date,f.flights_city_name,
       case  
                when to_char(f.origin_std, 'hh24') >= '00' and
                              to_char(f.origin_std, 'hh24') <= '03' then
                          '红眼'
                         when to_char(f.origin_std, 'hh24') >= '04' and
                              to_char(f.origin_std, 'hh24') <= '07' then
                          '早上'
                         when to_char(f.origin_std, 'hh24') >= '08' and
                              to_char(f.origin_std, 'hh24') <= '11' then
                          '上午'
                         when to_char(f.origin_std, 'hh24') >= '12' and
                              to_char(f.origin_std, 'hh24') <= '15' then
                          '下午'
                         when to_char(f.origin_std, 'hh24') >= '16' and
                              to_char(f.origin_std, 'hh24') <= '19' then
                          '晚上'
                         else
                          '深夜'
                       end origin_std,
                       case                        
                         when to_char(f.dest_sta, 'hh24') >= '00' and
                              to_char(f.dest_sta, 'hh24') <= '03' then
                          '红眼'
                         when to_char(f.dest_sta, 'hh24') >= '04' and
                              to_char(f.dest_sta, 'hh24') <= '07' then
                          '早上'
                         when to_char(f.dest_sta, 'hh24') >= '08' and
                              to_char(f.dest_sta, 'hh24') <= '11' then
                          '上午'
                         when to_char(f.dest_sta, 'hh24') >= '12' and
                              to_char(f.dest_sta, 'hh24') <= '15' then
                          '下午'
                         when to_char(f.dest_sta, 'hh24') >= '16' and
                              to_char(f.dest_sta, 'hh24') <= '19' then
                          '晚上'
                         else
                          '深夜'
                       end dest_sta
      from dw.fact_order_detail t1
      join dw.da_flight f on t1.segment_head_id=f.segment_head_id
      where f.flights_city_name like '%上海%'
      and regexp_like(f.flights_segment_name,'(深圳)|(广州)')
      and t1.flights_date>=to_date('2019-03-31','yyyy-mm-dd')
      and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
      and t1.flag_Id=40
      and t1.seats_name not in('B','G','G1','G2','O'))h2 on h1.traveller_name=h2.traveller_name and h1.codeno=h2.codeno 
      and h1.flights_city_name=h2.flights_city_name and h1.flights_date< h2.flights_date)tb1
      where tb1.rid=1
      group by to_char(tb1.flights_date,'yyyymm'),tb1.flights_city_name,tb1.origin_std,tb1.dest_sta,
tb1.origin_std2,tb1.dest_sta2,
case when tb1.origin_std=tb1.origin_std2
and  tb1.dest_sta=tb1.dest_sta2 then '相同'
when tb1.origin_std=tb1.origin_std2 then '始发相同'
when  tb1.dest_sta=tb1.dest_sta2 then '抵达相同'
else '不同' end,tb1.flightdate2-tb1.flights_date;
      
     
      
     
 
 ------13、
select h1.*,h2.users_id,h2.users_group_name,h2.end_date,h3.users_work_id
from(
select t1.terminal_id,t1.terminal,t2.area_name,t2.area_id
from stg.s_cq_terminal t1
left join stg.s_cq_area t2 on t1.area_id=t2.area_id
where t1.terminal like '%分社%' or  t2.area_name like '%分社%')h1
left join hdb.b2b_user h2 on h1.terminal_id=h2.terminal_id
left join cqsale.cq_user@to_air h3 on h2.users_id=h3.users_id

union 

select h1.*,h2.users_id,h2.users_group_name,h2.end_date,h3.users_work_id
from(
select t1.terminal_id,t1.terminal,t2.area_name,t2.area_id
from stg.s_cq_terminal t1
left join stg.s_cq_area t2 on t1.area_id=t2.area_id
)h1
left join hdb.b2b_user h2 on h1.terminal_id=h2.terminal_id
left join cqsale.cq_user@to_air h3 on h2.users_id=h3.users_id
where h2.users_id in('','','');

==========================================================20200116============================================
 ------14、
 /*1.   今年春节期间的热门国际航线和目的地有哪些？相比去年，去往这些国家的客运量是增长还是下降，同比增长率有什么样的变化？
2.   有哪些国际航线是去年春节很火爆，但今年冷却下来的吗？ 数据上有什么体现吗？*/
/*1.   今年春节期间的热门国际航线和目的地有哪些？相比去年，去往这些国家的客运量是增长还是下降，同比增长率有什么样的变化？
2.   有哪些国际航线是去年春节很火爆，但今年冷却下来的吗？ 数据上有什么体现吗？*/
select year,flights_segment_name,nationflag,sum(oversale),sum(ticketnum)
from (
select  '2020' year,t2.flights_segment_name,t1.segment_head_id,t2.oversale,t1.nationflag,
count(1) ticketnum
from dw.fact_order_detail t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.flights_date>=to_date('2020-01-10','yyyy-mm-dd')
 and t1.flights_date< to_date('2020-02-19','yyyy-mm-dd')
 and t1.company_id=0
 and t2.flag<>2
 and t1.seats_name is not null
 and t2.dest_country_id>0
 group by  t2.flights_segment_name,t1.segment_head_id,t2.oversale,t1.nationflag
 
 union all
 
select  '2019' 年, t2.flights_segment_name,t1.segment_head_id,t2.oversale,t1.nationflag,count(1)
from dw.fact_order_detail t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.flights_date>=to_date('2019-01-21','yyyy-mm-dd')
 and t1.flights_date<= to_date('2019-03-01','yyyy-mm-dd')
 and t1.company_id=0
 and t2.flag<>2
 and t1.order_day< to_date('2019-01-27','yyyy-mm-dd')
 and t1.seats_name is not null
 and t2.dest_country_id>0
 group by  t2.flights_segment_name,t1.segment_head_id,t2.oversale,t1.nationflag)h1
 group by year,flights_segment_name,nationflag;
 
 1、今年春节期间主要热门航线为浦东-普吉、浦东-曼谷、浦东-济州岛、浦东-札幌、浦东-大阪，目的地集中在泰国、韩国、日本；
 相比去年，去往这些国际的客运量增加将近60%（概数，具体数据57%），增幅较明显；
 2、去年浦东-台北（区域航线）销售比较火爆，今年因台湾局势，今年冷却下来，销售进度差了10~20% （概数，具体数据20%）；浦东-茨城（国际航线）去年销售较火爆，今年冷却下来，
 销售进度放缓，销售进度差10~20%（概数，具体数据20%）
 
 
 ------15、
 
商务经济座监控


select  h1.segment_head_Id,h1.flights_date,h1.whole_flight,h1.whole_segment,h1.flights_segment_name,h1.nationflag,h1.segment_type,
h1.superseat_num,h1.ticketnum,h2.jjnum,h2.ptnum
from(
select t1.segment_head_Id,t1.flights_date,t1.whole_flight,t1.whole_segment,t2.flights_segment_name,t2.segment_type,
t2.nationflag,
t2.superseat_num,count(1) ticketnum
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2020-01-10','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-02-19','yyyy-mm-dd')
    and t1.company_id=0
    and t1.seats_name is not null
    and t1.is_swj >=1
    group by t1.segment_head_Id,t1.flights_date,t1.whole_flight,t1.whole_segment,t2.flights_segment_name,t2.nationflag,t2.segment_type,
t2.superseat_num)h1
left join (
select t1.segment_head_Id,t1.flights_date,t1.whole_flight,t1.whole_segment,t2.flights_segment_name,t2.nationflag,
t2.superseat_num,
sum(case when t1.EX_CFD6  is not null then 1 else 0 end) jjnum,
sum(case when t1.EX_CFD6  is not null then 0
when t1.is_swj>=1 then 0
 else 1 end) ptnum
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2020-01-10','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-02-19','yyyy-mm-dd')
    and t1.company_id=0
    and t1.seats_name is not null
    and t1.seats_name ='Y'
  and  t1.EX_CFD6 is not null 
  and t1.sex=1
    group by t1.segment_head_Id,t1.flights_date,t1.whole_flight,t1.whole_segment,t2.flights_segment_name,t2.nationflag,
t2.superseat_num)h2 on h1.segment_head_id=h2.segment_head_Id
where h1.superseat_num>h1.ticketnum;
 
 ------16、京东相关数据
 
 select distinct users_id,cust_id
  from cqsale.cq_users_huiyuan_change@to_air
  where AUTHENTICATION_METHODS=6
  and  create_date>=to_date('2020-01-13','yyyy-mm-dd')
    and create_date< to_date('2020-01-14','yyyy-mm-dd');
 
 
 ------17、新昌机场对应的数据
 select to_date('2019'||'-'||lpad(split_part(sdate,'.',1),2,'0')||'-'||lpad(split_Part(sdate,'.',2),2,'0'),'yyyy-mm-dd') flight_date,
t.*,upper(fn_getpy(sname)) 姓名拼音,
t1.codeno,t1.flights_date,t1.traveller_name,t2.traveller_name
from wb_xinchangbus_data@to_dds t
left join dw.fact_order_detail t1 on t.flights_Order_id=t1.flights_order_id and 
to_date('2019'||'-'||lpad(split_part(sdate,'.',1),2,'0')||'-'||lpad(split_Part(sdate,'.',2),2,'0'),'yyyy-mm-dd') =t1.flights_date
and upper(fn_getpy(sname)) =upper(fn_getpy(t1.traveller_name))
left join dw.fact_order_detail t2 on t.flights_Order_id=t2.flights_order_id and 
to_date('2019'||'-'||lpad(split_part(sdate,'.',1),2,'0')||'-'||lpad(split_Part(sdate,'.',2),2,'0'),'yyyy-mm-dd') =t2.flights_date
where to_date('2019'||'-'||lpad(split_part(sdate,'.',1),2,'0')||'-'||lpad(split_Part(sdate,'.',2),2,'0'),'yyyy-mm-dd')>=to_date('2019-09-30','yyyy-mm-dd')
  and to_date('2019'||'-'||lpad(split_part(sdate,'.',1),2,'0')||'-'||lpad(split_Part(sdate,'.',2),2,'0'),'yyyy-mm-dd')< to_date('2020-01-01','yyyy-mm-dd')

 
 
 
 ------18、商务经济座销售计划
 
 select  h1.segment_head_Id,h1.flights_date,h1.whole_flight,h1.whole_segment,h1.flights_segment_name,h1.nationflag,h1.segment_type,
h1.superseat_num,h1.ticketnum,h2.jjnum,h2.ptnum
from(
select t1.segment_head_Id,t1.flights_date,t1.whole_flight,t1.whole_segment,t2.flights_segment_name,t2.segment_type,
t2.nationflag,
t2.superseat_num,count(1) ticketnum
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2020-01-10','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-02-19','yyyy-mm-dd')
    and t1.company_id=0
    and t1.seats_name is not null
    and t1.is_swj >=1
    group by t1.segment_head_Id,t1.flights_date,t1.whole_flight,t1.whole_segment,t2.flights_segment_name,t2.nationflag,t2.segment_type,
t2.superseat_num)h1
join (
select t1.segment_head_Id,t1.flights_date,t1.whole_flight,t1.whole_segment,t2.flights_segment_name,t2.nationflag,
t2.superseat_num,
sum(case when t1.EX_CFD6  is not null then 1 else 0 end) jjnum,
sum(case when t1.EX_CFD6  is not null then 0
when t1.is_swj>=1 then 0
 else 1 end) ptnum
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2020-01-10','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-02-19','yyyy-mm-dd')
    and t1.company_id=0
    and t1.seats_name is not null
    and t1.seats_name ='Y'
  and  t1.EX_CFD6 is not null 
  and t1.sex=1
    group by t1.segment_head_Id,t1.flights_date,t1.whole_flight,t1.whole_segment,t2.flights_segment_name,t2.nationflag,
t2.superseat_num)h2 on h1.segment_head_id=h2.segment_head_Id
where h1.superseat_num>h1.ticketnum;
 
 ------19、
 
 为推广“免税品预约”新业务上线，需推送营销短信，烦请协助喜欢总提供营销短信的旅客手机号，要求：
1.短信推送规则：20日推送短信，提供27日的旅客信息，21日推送短信，提供28日的旅客信息，以此类推
2.航班信息：8876 澳门-浦东、8590 大阪-浦东、8668 普吉-浦东、8792 札幌-浦东、8522 普吉-浦东、6244 仰光-浦东、8878 高雄-浦东、8512 清迈-浦东、8516 东京-浦东、6220 札幌-浦东、8980 清迈-浦东、8756 曼谷-浦东、8550 新加坡-浦东、6218 东京-浦东、8602 名古屋-浦东、8594 沙巴-浦东、8560 首尔-浦东（合计17个航班）
3.旅客数据：1月20日提供：1月27日-2月7日旅客数据；1月31日，提供2月8日-2月27日数据


select r_flights_date,mobile
from(
select t1.r_flights_date,getmobile(t1.r_tel) mobile,row_number()over(partition by getmobile(t1.r_tel) order by t1.r_flights_date) rid
--distinct t2.nation_flag,t1.whole_segment
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
  join cqsale.cq_flights_segment_head@to_air t2 on t1.segment_head_Id=t2.segment_head_Id
  where t1.r_flights_date>=to_date('2020-01-27','yyyy-mm-dd')
     and t1.r_flights_date<= to_date('2020-02-07','yyyy-mm-dd')
   and t1.flag_id in(3,5,40)
   and t1.whole_flight like '9C%'
   and t1.seats_name is not null
   and t1.sex=1
   and getmobile(t1.r_tel)<>'-'
   and t2.flag<>2
   and t1.whole_flight in('9C8876',
'9C8590',
'9C8668',
'9C8792',
'9C8522',
'9C6244',
'9C8878',
'9C8512',
'9C8516',
'9C6220',
'9C8980',
'9C8756',
'9C8550',
'9C6218',
'9C8602',
'9C8594',
'9C8560'))h1
where h1.rid=1;

==================================================20200121========================================================
-------20、

select trunc(t1.money_date),t2.flights_segment_name,t1.apply_memo,t2.flight_date,t1.seats_name,count(1)
from dw.da_order_drawback t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
--join cqsale.cq_flights_segment_head@to_air t3 on  t3.segment_head_id=t2.segment_head_id
where t1.money_date>=to_date('2020-01-19','yyyy-mm-dd')
  and t1.money_date< to_date('2020-01-21','yyyy-mm-dd')
  and t2.flag<>2
  --and t3.flag<>2
group by  trunc(t1.money_date),t2.flights_segment_name,t1.apply_memo,t2.flight_date,t1.seats_name;

 ------21、
 
 1、退票日期数据：20200101~至今 对比日期20190112~去年春运相同日期    每个日期的退票量
 2、航段退票量差距：票量差TOP 20    航渡 昨天退票量、 20200113~20200119 平均退票量  票量差
 3、航班日期 昨天退票量
 
 select '今年' 类型,trunc(t1.money_date) 退票日期,count(1)  退票量
from dw.da_order_drawback t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.money_date>=to_date('2020-01-01','yyyy-mm-dd')
  and t1.money_date< trunc(sysdate)
  and t2.flag<>2
  and t1.seats_name is not null
  group  by trunc(t1.money_date)

union all


select '去年同期' 类型,t3.datetime,count(1)
from dw.da_order_drawback t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join (select * from dw.adt_chunyun_corredate 
where chunyun_year = 2020 and corre_year = 2019)t3 on trunc(t1.money_date)=t3.corre_date
where t1.money_date>=to_date('2019-01-12','yyyy-mm-dd')
  and t1.money_date< trunc(sysdate)
  and t3.datetime>=to_date('2020-01-01','yyyy-mm-dd')
  and t3.datetime< trunc(sysdate)
  and t2.flag<>2
  and t1.seats_name is not null
  group by t3.datetime;
  
  
  
  
  select h1.flights_segment_name 航段, h1.ticketnum 昨日退票量,nvl(h2.avgnum,0) "0113~0119平均退票量",
h1.ticketnum-nvl(h2.avgnum,0) 票量差,row_number()over(order by h1.ticketnum-nvl(h2.avgnum,0) desc) 票量差排序
from(
select t2.flights_segment_name,count(1) ticketnum
from dw.da_order_drawback t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.money_date>=trunc(sysdate-1)
  and t1.money_date< trunc(sysdate)
  and t2.flag<>2
  and t1.seats_name is not null
  group  by t2.flights_segment_name)h1
  left join (
  select flights_segment_name,round(avg(ticketnum),0) avgnum
  from(
  select t2.flights_segment_name,trunc(t1.money_date) moneydate,count(1) ticketnum
from dw.da_order_drawback t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.money_date>=to_date('2020-01-13','yyyy-mm-dd')
  and t1.money_date< to_date('2020-01-20','yyyy-mm-dd')
  and t2.flag<>2
  and t1.seats_name is not null
  group  by t2.flights_segment_name,trunc(t1.money_date))
  group by flights_segment_name)h2 on h1.flights_segment_name=h2.flights_segment_name;
  
  
  
  select h1.flight_date 航班日期, h1.adheads 退票提前期,h1.ticketnum 昨日退票量,
nvl(h2.avgnum,0) "0113~0119提前期平均退票量",
h1.ticketnum-nvl(h2.avgnum,0) 票量差,row_number()over(order by h1.ticketnum-nvl(h2.avgnum,0) desc) 票量差排序
from(
select t2.flight_date,t2.flight_date-trunc(t1.money_date) adheads,count(1) ticketnum
from dw.da_order_drawback t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.money_date>=trunc(sysdate-1)
  and t1.money_date< trunc(sysdate)
  and t2.flag<>2
  and t1.seats_name is not null
  group  by t2.flight_date,t2.flight_date-trunc(t1.money_date)
  )h1
  left join (
  select t2.flight_date-trunc(t1.money_date) adheads,round(count(1)/7,0) avgnum
from dw.da_order_drawback t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.money_date>=to_date('2020-01-13','yyyy-mm-dd')
  and t1.money_date< to_date('2020-01-20','yyyy-mm-dd')
  and t2.flag<>2
  and t1.seats_name is not null
  group by t2.flight_date-trunc(t1.money_date)
 )h2 on h1.adheads=h2.adheads;




 select to_char(t1.money_date,'mmd') 类型,t2.flights_segment_name 航段,count(1) 退票量
from dw.da_order_drawback t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.money_date>=to_date('2020-01-20','yyyy-mm-dd')
  and t1.money_date< trunc(sysdate)
  and t2.flag<>2
  and t1.seats_name is not null
  group  by to_char(t1.money_date,'mmd'),t2.flights_segment_name
  
  union all
  
  select '0113~0119' 类型, flights_segment_name,round(avg(ticketnum),0) avgnum
  from(
  select t2.flights_segment_name,trunc(t1.money_date) moneydate,count(1) ticketnum
from dw.da_order_drawback t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.money_date>=to_date('2020-01-13','yyyy-mm-dd')
  and t1.money_date< to_date('2020-01-20','yyyy-mm-dd')
  and t2.flag<>2
  and t1.seats_name is not null
  group  by t2.flights_segment_name,trunc(t1.money_date))
  group by flights_segment_name;
 
 
 
select *
from(
select h1.*,h2.fee_rate
from(
select trunc(t1.origin_std) flightdate,case when t1.seattype='商务座' then '商务座'
else '非商务座' end seattype,
case when regexp_like(t1.seats_name ,'Y|W') then 'YW'
when regexp_like(t1.seats_name ,'S|H|V|K|L|M') then 'SHVKLM'
when regexp_like(t1.seats_name ,'N|Q|T|X|U|E') then 'NQTXUE'
when regexp_like(t1.seats_name ,'R1|R2|R3|R4') then 'R1R2R3R4'
when regexp_like(t1.seats_name ,'B|G|G1|G2|O') then 'BGO'
when regexp_like(t1.seats_name ,'P|P1|P2|P3|P4|P5') then 'PP1P2P3P4P5'
else '其他' end seatname,
case when t2.area_type='国内' then 
case when (t1.origin_std-t1.money_date)*24< 2 then '2h-'
when (t1.origin_std-t1.money_date)*24>= 2 
and (t1.origin_std-t1.money_date)*24< 24 then '[2h,1D)'
when (t1.origin_std-t1.money_date)>= 1 
and (t1.origin_std-t1.money_date)< 3 then '[1D,3D)'
when (t1.origin_std-t1.money_date)>= 3 
and (t1.origin_std-t1.money_date)< 7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)>= 7
 then '7D+'
end
when t2.area_type='国际' then 
case when (t1.origin_std-t1.money_date)*24< 0 then '离站后'
when (t1.origin_std-t1.money_date)*24>= 0
and (t1.origin_std-t1.money_date)*24< 24 then '[0,1D)'
when (t1.origin_std-t1.money_date)>= 1 
and (t1.origin_std-t1.money_date)< 7 then '[1D,7D)'
when (t1.origin_std-t1.money_date)>= 7
and (t1.origin_std-t1.money_date)< 15 then '[7D,15D)'
when (t1.origin_std-t1.money_date)>= 15
and (t1.origin_std-t1.money_date)< 30 then '[15D,30D)'
when (t1.origin_std-t1.money_date)>= 30 then '30D+'
end
end priod_date,t2.flights_segment_name,
t2.area_type,
t1.money_fy,t1.ticketprice,
case when t1.ticketprice=0 then 0
else t1.money_fy/ t1.ticketprice end rate
from dw.da_order_drawback t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.money_date>=trunc(sysdate)-1
and t1.seats_name is not null)h1
left join dw.dim_tg_rule h2 on h2.seat_type=h1.seattype and h2.nationflag=h1.area_type and h2.priod_date=h1.priod_date and h1.seatname=h2.seats_name
where h2.fee_rate is not null)h3
where round(h3.fee_rate*10,0)-round(h3.rate*10,0)>0.1;

 ======================================================20200302=======================================
 ------22、
 
冯老师：
你好！
因补贴申请需求，烦请提取高松-上海9C8890的10月~12月行李数据。
10月18日9C8890有取消，19日补班9C889Z
10月24日9C8890有取消，25日补班9C889B
谢谢！

select h2.fi 航班号日期,h2.rl 订单号,h2.sex 乘机人类型,h2.baga 行李件数,h2.bagw 行李重量
from(
select  h1.fi,h1.id,h1.offg,h1.offn,h1.fd,h1.fs,h1.rl,h1.ri,h1.ena,h1.sn,h1.seat,h1.sex,h1.baga,h1.bagw,h1.fdate
from stg.s_dcs_old_h h1
where h1.fdate>=to_date('2019-10-01','yyyy-mm-dd')
 and h1.fdate< to_date('2020-01-01','yyyy-mm-dd')
 and h1.fs in('TAKPVG')

  
  union 
  
  select h1.fi,h1.id,h1.offg,h1.offn,h1.fd,h1.fs,h1.rl,h1.ri,h1.ena,h1.sn,h1.seat,h1.sex,h1.baga,h1.bagw,h1.fdate
  from stg.s_dcs_old_h_bak h1
where h1.fdate>=to_date('2019-10-01','yyyy-mm-dd')
  and h1.fdate< to_date('2020-01-01','yyyy-mm-dd')
   and h1.fs in('TAKPVG')
 )h2;

=================================================20200303===================================================
 ------23、
 --广州机场市场部这边要提我们3-9号广州大阪的往返数据，要的比较急
 
 select t1.r_flights_date 航班日期,t2.flight_no 航班号,t2.segment_code 航段,t2.flights_segment_name 航段中文,
count(1)  销售人数
from cqsale.cq_order_head@to_air t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t2.segment_head_id=t3.segment_head_id
left join cqsale.cq_flights_seats_amount_plan@to_air t6 on t1.segment_Head_id=t6.segment_Head_id
where t1.r_flights_date>=to_date('2020-03-01','yyyy-mm-dd')
and t1.r_flights_date<=to_date('2020-03-09','yyyy-mm-dd')
and t1.flag_id in(3,5,40,41)
and t2.company_id=0
and t3.flag<>2
and t1.seats_name is not null
and t2.flights_segment_name like '%广州%'
and t2.flights_segment_name like '%大阪%'
group by t1.r_flights_date ,t2.flight_no ,t2.segment_code ,t2.flights_segment_name;
 
 ------24、泰国航线分析
 
 select /*+parallel(4) */
case when t1.order_day >= to_date('2020-02-14','yyyy-mm-dd')
   and t1.order_day <=to_date('2020-02-20', 'yyyy-mm-dd') then '上周'
   when t1.order_day >= to_date('2020-02-21','yyyy-mm-dd')
   and t1.order_day <=to_date('2020-02-27', 'yyyy-mm-dd') then '本周' end 周类型, 
   '02'||to_char(t1.order_day,'dd') 日期,
   case when t2.flights_segment_name like '%曼谷%' then '曼谷'
   when t2.flights_segment_name like '%普吉%' then '普吉'
   else '其他' end 航站类型,
   case when t2.origin_country_id>0 then '入境'
   else '出境' end 出入境类型,
   case when t1.IS_QU_HUI =1 then '去程'
   when t1.IS_QU_HUI =2 then '回程'
   else '单程'  end 往返程类型,
   case when t1.IS_QU_HUI in(1,2) and t6.flights_order_head_id is not null  then abs(t1.flights_date-t6.flights_date)
   else null end  往返天数,
case when t1.channel in('网站','手机') then '线上自有'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '线下其他' end 渠道,
case
         when t1.ahead_days <= 3 then
          '00~03'
         when t1.ahead_days <= 7 then
          '04~07'
         when t1.ahead_days <= 15 then
          '08~15'
         when t1.ahead_days <= 30 then
          '15~30'
         when t1.ahead_days <= 60 then
          '31~60'
         when t1.ahead_days <= 90 then
          '61~90'
         when t1.ahead_days > 90 then
          '90+'
       end 提前期,
        t1.seat_type 座位类型,
       t3.wf_segment 往返航线,       
       case when t5.nationality like '%中国%' then '中国'
       when t5.nationality like '%泰国%' then '泰国'
       else '其他' end 国籍,       
       t1.gender 性别, 
       case when getage(t1.flights_date,t1.birthday)<12 then '<12'
            when getage(t1.flights_date,t1.birthday)<18 then '12~17'
            when getage(t1.flights_date,t1.birthday)<24 then '18~23'
            when getage(t1.flights_date,t1.birthday)<30 then '24~29'
            when getage(t1.flights_date,t1.birthday)<40 then '30~39'
            when getage(t1.flights_date,t1.birthday)<50 then '40~49'
            when getage(t1.flights_date,t1.birthday)<60 then '50~59'
            when getage(t1.flights_date,t1.birthday)<70 then '60~69'
            when getage(t1.flights_date,t1.birthday)>=70 then '70+' 
            else '-' end age,     
       count(1) 销量,
       sum(t1.ticket_price) 机票金额
  from dw.fact_recent_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left  join dw.fact_recent_order_detail t6  on t1.WF_FLIGHTS_ORDER_HEAD_ID=t6.flights_order_head_id
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id
                                  and t2.route_id = t3.route_id
  left join dw.bi_order_region t5 on t1.flights_order_head_id=t5.flights_order_head_id
 where t1.order_day >= to_date('2020-02-14','yyyy-mm-dd')
   and t1.order_day <=to_date('2020-02-27', 'yyyy-mm-dd')
   and t1.whole_flight like '9C%'
   and t1.flag_id in(3,5,40,41)
   and t2.flag<>2
   and t1.seats_name is not null
   and t2.segment_country='泰国'
   and t1.seats_name not in ('B', 'G', 'G1', 'G2', 'O')
 group by case when t1.order_day >= to_date('2020-02-14','yyyy-mm-dd')
   and t1.order_day <=to_date('2020-02-20', 'yyyy-mm-dd') then '上周'
   when t1.order_day >= to_date('2020-02-21','yyyy-mm-dd')
   and t1.order_day <=to_date('2020-02-27', 'yyyy-mm-dd') then '本周' end,
   case when t2.flights_segment_name like '%曼谷%' then '曼谷'
   when t2.flights_segment_name like '%普吉%' then '普吉'
   else '其他' end ,
   case when t2.origin_country_id>0 then '入境'
   else '出境' end ,
   case when t1.IS_QU_HUI =1 then '去程'
   when t1.IS_QU_HUI =2 then '回程'
   else '单程'  end,
   case when t1.IS_QU_HUI in(1,2) and t6.flights_order_head_id is not null  then abs(t1.flights_date-t6.flights_date)
   else null end  ,
case when t1.channel in('网站','手机') then '线上自有'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '线下其他' end,
case
         when t1.ahead_days <= 3 then
          '00~03'
         when t1.ahead_days <= 7 then
          '04~07'
         when t1.ahead_days <= 15 then
          '08~15'
         when t1.ahead_days <= 30 then
          '15~30'
         when t1.ahead_days <= 60 then
          '31~60'
         when t1.ahead_days <= 90 then
          '61~90'
         when t1.ahead_days > 90 then
          '90+'
       end ,
       t1.seat_type,
       t3.wf_segment,       
       case when t5.nationality like '%中国%' then '中国'
       when t5.nationality like '%泰国%' then '泰国'
       else '其他' end ,       
       t1.gender , 
       case when getage(t1.flights_date,t1.birthday)<12 then '<12'
            when getage(t1.flights_date,t1.birthday)<18 then '12~17'
            when getage(t1.flights_date,t1.birthday)<24 then '18~23'
            when getage(t1.flights_date,t1.birthday)<30 then '24~29'
            when getage(t1.flights_date,t1.birthday)<40 then '30~39'
            when getage(t1.flights_date,t1.birthday)<50 then '40~49'
            when getage(t1.flights_date,t1.birthday)<60 then '50~59'
            when getage(t1.flights_date,t1.birthday)<70 then '60~69'
            when getage(t1.flights_date,t1.birthday)>=70 then '70+' 
            else '-' end,  '02'||to_char(t1.order_day,'dd') 
      
union all




select case when t1.order_day >= to_date('2019-02-15','yyyy-mm-dd')
   and t1.order_day <=to_date('2019-02-21', 'yyyy-mm-dd') then '去年上周'
   when t1.order_day >= to_date('2019-02-22','yyyy-mm-dd')
   and t1.order_day <=to_date('2019-02-28', 'yyyy-mm-dd') then '去年本周' end 周类型, 
   '02'|| to_char(to_number(to_char(t1.order_day,'dd'))-1) 日期,
   case when t2.flights_segment_name like '%曼谷%' then '曼谷'
   when t2.flights_segment_name like '%普吉%' then '普吉'
   else '其他' end 航站类型,
   case when t2.origin_country_id>0 then '入境'
   else '出境' end 出入境类型,
   case when t1.IS_QU_HUI =1 then '去程'
   when t1.IS_QU_HUI =2 then '回程'
   else '单程'  end,
   case when t1.IS_QU_HUI in(1,2) and t6.flights_order_head_id is not null  then abs(t1.flights_date-t6.flights_date)
   else null end  往返天数,
case when t1.channel in('网站','手机') then '线上自有'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '线下其他' end,
case
         when t1.ahead_days <= 3 then
          '00~03'
         when t1.ahead_days <= 7 then
          '04~07'
         when t1.ahead_days <= 15 then
          '08~15'
         when t1.ahead_days <= 30 then
          '15~30'
         when t1.ahead_days <= 60 then
          '31~60'
         when t1.ahead_days <= 90 then
          '61~90'
         when t1.ahead_days > 90 then
          '90+'
       end 提前期,
         t1.seat_type,
       t3.wf_segment,       
       case when t5.nationality like '%中国%' then '中国'
       when t5.nationality like '%泰国%' then '泰国'
       else '其他' end 国籍,       
       t1.gender 性别, 
       case when getage(t1.flights_date,t1.birthday)<12 then '<12'
            when getage(t1.flights_date,t1.birthday)<18 then '12~17'
            when getage(t1.flights_date,t1.birthday)<24 then '18~23'
            when getage(t1.flights_date,t1.birthday)<30 then '24~29'
            when getage(t1.flights_date,t1.birthday)<40 then '30~39'
            when getage(t1.flights_date,t1.birthday)<50 then '40~49'
            when getage(t1.flights_date,t1.birthday)<60 then '50~59'
            when getage(t1.flights_date,t1.birthday)<70 then '60~69'
            when getage(t1.flights_date,t1.birthday)>=70 then '70+' 
            else '-' end age,     
       count(1) 销量,
       sum(t1.ticket_price) 机票金额
  from dw.fact_recent_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left  join dw.fact_recent_order_detail t6  on t1.WF_FLIGHTS_ORDER_HEAD_ID=t6.flights_order_head_id
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id
                                  and t2.route_id = t3.route_id
  left join dw.bi_order_region t5 on t1.flights_order_head_id=t5.flights_order_head_id
 where t1.order_day >= to_date('2019-02-15','yyyy-mm-dd')
   and t1.order_day <=to_date('2019-02-28', 'yyyy-mm-dd')
   and t1.whole_flight like '9C%'
   and t1.flag_id in(3,5,40,41)
  and t2.flag<>2
   and t1.seats_name is not null
   and t2.segment_country='泰国'
   and t1.seats_name not in ('B', 'G', 'G1', 'G2', 'O')
 group by case when t1.order_day >= to_date('2019-02-15','yyyy-mm-dd')
   and t1.order_day <=to_date('2019-02-21', 'yyyy-mm-dd') then '去年上周'
   when t1.order_day >= to_date('2019-02-22','yyyy-mm-dd')
   and t1.order_day <=to_date('2019-02-28', 'yyyy-mm-dd') then '去年本周' end,  
   '02'|| to_char(to_number(to_char(t1.order_day,'dd'))-1) ,
   case when t2.flights_segment_name like '%曼谷%' then '曼谷'
   when t2.flights_segment_name like '%普吉%' then '普吉'
   else '其他' end ,
   case when t2.origin_country_id>0 then '入境'
   else '出境' end ,
  case when t1.IS_QU_HUI =1 then '去程'
   when t1.IS_QU_HUI =2 then '回程'
   else '单程'  end,
   case when t1.IS_QU_HUI in(1,2) and t6.flights_order_head_id is not null  then abs(t1.flights_date-t6.flights_date)
   else null end  ,
case when t1.channel in('网站','手机') then '线上自有'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '线下其他' end,
case
         when t1.ahead_days <= 3 then
          '00~03'
         when t1.ahead_days <= 7 then
          '04~07'
         when t1.ahead_days <= 15 then
          '08~15'
         when t1.ahead_days <= 30 then
          '15~30'
         when t1.ahead_days <= 60 then
          '31~60'
         when t1.ahead_days <= 90 then
          '61~90'
         when t1.ahead_days > 90 then
          '90+'
       end ,
         t1.seat_type,
       t3.wf_segment,       
       case when t5.nationality like '%中国%' then '中国'
       when t5.nationality like '%泰国%' then '泰国'
       else '其他' end ,       
       t1.gender , 
       case when getage(t1.flights_date,t1.birthday)<12 then '<12'
            when getage(t1.flights_date,t1.birthday)<18 then '12~17'
            when getage(t1.flights_date,t1.birthday)<24 then '18~23'
            when getage(t1.flights_date,t1.birthday)<30 then '24~29'
            when getage(t1.flights_date,t1.birthday)<40 then '30~39'
            when getage(t1.flights_date,t1.birthday)<50 then '40~49'
            when getage(t1.flights_date,t1.birthday)<60 then '50~59'
            when getage(t1.flights_date,t1.birthday)<70 then '60~69'
            when getage(t1.flights_date,t1.birthday)>=70 then '70+' 
            else '-' end
 
 
 ------25、
 
 麻烦提供3月6日8521 浦东普吉，航班旅客联系方式；3月6日8753 深圳西安，6280杭州西安，6349深圳西安，航班旅客联系方式；3月6日 三亚出港旅客联系方式  分别提供，谢谢@冯喜欢 
 
 
 
 ------26、日币支付数据
 
 select t1.flights_date,t1.whole_flight,t1.channel,t1.sub_channel,count(1)
  from dw.fact_order_detail t1
  where t1.whole_flight in('9C8889','9C8890')
  and t1.flights_date>=to_date('2019-10-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2020-03-01','yyyy-mm-dd')
  and t1.money_class_id=1
  and t1.seats_name is not null
  group by t1.flights_date,t1.whole_flight,t1.channel,t1.sub_channel
 
 ------27、泰国往返数据
 
 select '航班日期',t1.flights_date,case when t2.origin_country_id=0 then '中国出发'
when t2.origin_country_id>0 then '中国到达' end,decode(t1.is_qu_hui,1,'旅客购买去程',2,'旅客购买回程',0,'单程'),
count(1)
from dw.fact_recent_order_detail t1 
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.flights_date>=trunc(sysdate)
 and t1.flights_date< trunc(sysdate)+7
 and t1.flag_id in(3,5,40)
 and t1.seats_name is not null
 and t2.segment_country='泰国'
 group by t1.flights_date,case when t2.origin_country_id=0 then '中国出发'
when t2.origin_country_id>0 then '中国到达' end,decode(t1.is_qu_hui,1,'旅客购买去程',2,'旅客购买回程',0,'单程')

union all


select '订单日期',t1.order_day,case when t2.origin_country_id=0 then '中国出发'
when t2.origin_country_id>0 then '中国到达' end,decode(t1.is_qu_hui,1,'旅客购买去程',2,'旅客购买回程',0,'单程'),
count(1)
from dw.fact_recent_order_detail t1 
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.order_day>=trunc(sysdate)-7
 and t1.order_day< trunc(sysdate)
 and t1.flag_id in(3,5,40)
 and t1.seats_name is not null
 and t2.segment_country='泰国'
 group by t1.order_day,case when t2.origin_country_id=0 then '中国出发'
when t2.origin_country_id>0 then '中国到达' end,decode(t1.is_qu_hui,1,'旅客购买去程',2,'旅客购买回程',0,'单程')

 
 =================================================20200313============================================
 
 ------28、变动成本（每班）
 
 select t1.flight_date 航班日期,t1.flight_no 航班号,t1.route_name 航线,(t1.trans_cost-t1.gdcost_money) 变动成本
 from hdb.recent_flights_cost t1
where t1.flight_date>=to_date('2020-02-01','yyyy-mm-dd')
  and t1.flight_date< to_date('2020-03-13','yyyy-mm-dd')
  and t1.total_cost>0;
  
  
  select t1.flight_date 航班日期,sum(
t1.total_income-(t1.trans_cost-t1.gdcost_money)-t1.tax_fee) 不含税边际收益, 
sum(t1.total_income-(t1.trans_cost-t1.gdcost_money)) 含税边际收益,
sum(t1.tax_fee)/sum(t1.total_income) 税率
 from hdb.recent_flights_cost t1
where t1.flight_date>=to_date('2020-02-01','yyyy-mm-dd')
  and t1.flight_date< to_date('2020-03-13','yyyy-mm-dd')
  --and t1.total_cost>0
  --- t1.total_income>0
  group by t1.flight_date;
 
 ------29、
 --您这边方便将 3月12日20点到3月13日9点期间 微信渠道 售卖出去的 航线  舱位明细

select t2.flights_segment_name 航线,t1.seats_name 舱位,count(1) 票量
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t2.flag<>2
  and t.order_date>=to_date('2020-03-12 20:00','yyyy-mm-dd hh24:mi')
  and t.order_date<=to_date('2020-03-13 09:00','yyyy-mm-dd hh24:mi')
  and t1.flag_Id in(3,5,40,41)
  and t.terminal_id<0
  and t.web_id=0
  and t.ex_nfd1 in(5,10)
  group by t2.flights_segment_name,t1.seats_name;
  
 
 =============================================20200316=================================================
 ------30、包机回国旅客退票
 
 
 select t3.carrier 公司,t1.whole_flight 航班号,t1.r_flights_date 航班日期,t1.whole_segment 航段,t3.flights_segment_name,trunc(t.order_date) 订单日期,
       to_char(t.order_date,'hh24:mi') 订单时间,t4.channel 渠道大类,t4.sub_channel 渠道小类,t2.flag_name,
       t1.name||' '||coalesce(t1.second_name,'') 姓名,t1.codeno 证件号码,decode(t1.sex,1,'成人',2,'儿童',3,'婴儿') 旅客类型,
       t1.seats_name 舱位,t1.ticket_price 票价,t1.ad_fy 燃油费,t1.port_pay 机建费,t1.other_fy 其他税费,t1.insurance_fee 保险费,t1.other_fee 其他X产品费,t1.sx_fy 订票手续费,
       t1.r_com_money_class_id
       
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
  left join stg.s_cq_order_head_flag t2 on t1.flag_id=t2.flag
  left join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
  left join dw.fact_recent_order_detail t4 on t1.flights_order_head_id=t4.flights_order_head_id
  where t1.flag_id in(3,5,40)
  and t1.r_flights_date>=to_date('2020-01-01','yyyy-mm-dd')
  --and t1.r_flights_date>=to_date('2020-03-14','yyyy-mm-dd')
  and   t1.codeno in('G58849178',
'G46099455',
'EG4253925',
'E79190322',
'EG2593910',
'G50542289',
'E75492772',
'E52182636',
'E58424648',
'E17397787',
'E16734534',
'E40053615',
'ED1534756',
'E58424611',
'EG1709324',
'EE9644915',
'EH5718704',
'EH5740513',
'E10499712',
'EB3601494',
'EG7206557',
'E05310001',
'G39113422',
'G61927972',
'E11916873',
'EH3132569',
'EJ0500445',
'E96782535',
'G48345340',
'E11913545',
'EJ0500406',
'E53181028',
'EJ0500425',
'E21992305',
'EH1436496',
'EJ0523817',
'E61190688',
'EH3132561',
'EB4656724',
'E85287035',
'EH5745413',
'E60755753',
'EH1439224',
'EE6355736',
'EH5745414',
'E50396003',
'E05330679',
'EJ0521249',
'E05330674',
'E26673443',
'EH6370578',
'EA4497822',
'E50395979',
'E00537405',
'EG8981458',
'E26668278',
'E65288686',
'E79968695',
'EF9090808',
'G50530663',
'EH8803836',
'E60745462',
'E91908504',
'E11918413',
'E23815321',
'E75211017',
'E24511399',
'E24511352',
'ED6622307',
'E22890992',
'ED6668348',
'E06892518',
'E22893470',
'E68623233',
'G56181005',
'ED0161226',
'G56181007',
'EF6481918',
'EA4543441',
'E71102743',
'E46835428',
'E01600693',
'E46835456',
'EJ0528406',
'EA1113034',
'EB2515784',
'EA8264608',
'E84324116',
'E18478669',
'E63918974',
'E63918974',
'E77558458',
'E01603258',
'E01601374',
'EC8766713',
'EC8766715',
'E66922838',
'E01603258',
'E01601374',
'G51657678',
'EE1023872',
'EH7275523',
'E71330152',
'E91897915',
'E43484698',
'E69479279',
'EA4523659',
'G55787829');
 
 
 
 ------31、往返浦东的国际地区航线销售数据
 
select /*+parallel(4) */
tb3.flight_date 航班日期 ,tb3.segment_country 航线国家,
case when  tb3.origin_country_id>0 then '进港'
else '出港' end 进出港类型,count(1) 航班架次,sum((t6.PLAN_Y + t6.PLAN_B + t6.PLAN_H + t6.PLAN_K + t6.PLAN_L +
                       t6.PLAN_M + t6.PLAN_N + t6.PLAN_Q + t6. PLAN_T + t6.
                        PLAN_X + t6.PLAN_U + t6.PLAN_E + t6.PLAN_W + t6.PLAN_P +
                        t6.PLAN_P1 + t6.PLAN_P2 + t6.PLAN_O + t6. PLAN_G + t6.
                        PLAN_G1 + t6.
                        PLAN_G2 + t6.PLAN_R1 + t6.PLAN_R2 + t6.PLAN_R3 + t6.PLAN_R4 +
                        NVL(t6.PLAN_F, 0) + NVL(t6.PLAN_F1, 0) + NVL(t6.PLAN_F2, 0) +
                        NVL(t6.PLAN_F3, 0) + NVL(t6.PLAN_F4, 0) + NVL(t6.PLAN_C, 0) +
                        NVL(t6.PLAN_C1, 0) + NVL(t6.PLAN_C2, 0) +
                        NVL(t6.PLAN_C3, 0) + NVL(t6.PLAN_C4, 0) + NVL(t6.PLAN_S, 0) +
                        NVL(t6.PLAN_V, 0) + NVL(t6.PLAN_A, 0) + NVL(t6.PLAN_D, 0) +
                        NVL(t6.PLAN_I, 0) + NVL(t6.PLAN_J, 0) + NVL(t6.PLAN_Z, 0) +
                        NVL(t6.PLAN_P3, 0) + NVL(t6.PLAN_P4, 0) +
                        NVL(t6.PLAN_P5, 0))) 座位数,sum(nvl(ticketnum,0)) 预约数
from  cqsale.cq_flights_segment_head@to_air tb1 
join cqsale.cq_flights_seats_amount_plan@to_air t6  on tb1.segment_Head_id=t6.segment_Head_id
join dw.da_flight tb3  on tb1.segment_head_id=tb3.segment_head_id
left join 
(
select t1.segment_head_id,count(1)  ticketnum
from cqsale.cq_order_head@to_air t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.r_flights_date>=trunc(sysdate)+1
and t1.r_flights_date<=trunc(sysdate)+1+6
and t1.flag_id in(3,5,40,41)
and t2.company_id=0
and t2.flag<>2
and t1.seats_name is not null
and t2.flights_segment_name like '%浦东%'
and t2.nationflag<>'国内'
group by t1.segment_head_id)tb4 on tb3.segment_head_id=tb4.segment_head_id
where tb1.flag<>2
and  tb3.flight_date>=trunc(sysdate)+1
and tb3.flight_date<=trunc(sysdate)+1+6
and tb3.company_id=0
and tb3.flights_segment_name like '%浦东%'
and tb3.nationflag<>'国内'
group by tb3.flight_date,tb3.segment_country,
case when  tb3.origin_country_id>0 then '进港'
else '出港' end;

 
 ------33、 辅收推荐效果跟踪
 
 select /*+parallel(4) */
 h1.ordermonth,count(1) ordernum,sum(case when h2.flights_order_id is not null then 1 else 0 end),
       sum(h2.booknum),sum(h2.bookfee)
from(
select t1.flights_order_id,to_char(t1.order_day,'yyyymm') ordermonth,count(1) ticketnum
from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
      left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
 where  t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.order_day< to_date('2020-03-01','yyyy-mm-dd')
    and t1.company_id=0
    and t1.channel in('网站','手机')
    and t3.users_id is null
    group by t1.flights_order_id,to_char(t1.order_day,'yyyymm'))h1
  left join (
  select t1.flights_order_id,sum(t1.book_num) booknum,sum(t1.book_fee) bookfee
  from dw.fact_other_order_detail t1
  where t1.channel in('网站','手机')
    and t1.pay_together=0
    and (t1.xtype_id in(1,2,4,11,6,7,10,17) or (t1.xtype_id =21 and regexp_like(lower(t1.xproduct_name),'(wifi)|(wf)|(4G)|(上网卡)')))
    and t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.order_day< to_date('2020-03-01','yyyy-mm-dd')
    and t1.company_id=0
    group by t1.flights_order_id)h2 on h1.flights_order_id=h2.flights_order_id
    group by h1.ordermonth;
 
 ------34、代理手机号码数据
 
 select t1.order_day,case when t3.mobile is not null then '代理手机号'
when t1.r_tel is not null then '空值'
when t1.r_tel='' then '空值'
when getmobile(t1.r_tel)='-' then '非11位手机号'
else '正常' end,count(1)
from dw.fact_order_detail t1
  left join (select distinct getmobile(t2.feature_value) mobile
               from dw.da_restrict_userinfo t2
              where getmobile(t2.feature_value) <> '-') t3 on getmobile(t1.r_tel) =
                                                              t3.mobile
    where t1.order_day>=to_date('2020-02-17','yyyy-mm-dd')
    and t1.company_id=0
    and t1.seats_name is not null
                                                              group by t1.order_day,case when t3.mobile is not null then '代理手机号'
when t1.r_tel is not null then '空值'
when t1.r_tel='' then '空值'
when getmobile(t1.r_tel)='-' then '非11位手机号'
else '正常' end;

 
 
 
 ------35、华东地区国际地区旅客客座率统计表
 
select /*+parallel(4) */
tb3.flight_date 航班日期 ,tb3.flight_no 航班号,
tt1.c_name||'-'||tt2.c_name 航线,
tb3.origin_country 始发地,
tb3.dest_country 目的地,
tb3.layout 座位数,
nvl(ticketnum,0) 预约数
from  cqsale.cq_flights_segment_head@to_air tb1 
join cqsale.cq_flights_seats_amount_plan@to_air t6  on tb1.segment_Head_id=t6.segment_Head_id
join dw.da_flight tb3  on tb1.segment_head_id=tb3.segment_head_id
left join stg.f_airport tt1 on tb3.originairport=tt1.t_code
left join stg.f_airport tt2 on tb3.destairport=tt2.t_code
left join 
(
select t1.segment_head_id,count(1)  ticketnum
from cqsale.cq_order_head@to_air t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.r_flights_date>=trunc(sysdate)
and t1.r_flights_date<=trunc(sysdate)+6
and t1.flag_id in(3,5,40,41)
and t2.company_id=0
and t2.flag<>2
and t1.seats_name is not null
and t2.flights_segment_name like '%浦东%'
and t2.nationflag<>'国内'
group by t1.segment_head_id)tb4 on tb3.segment_head_id=tb4.segment_head_id
where tb1.flag<>2
and  tb3.flight_date>=trunc(sysdate)
and  tb3.flight_date<=trunc(sysdate)+6
and tb3.company_id=0
and tb3.flights_segment_name like '%浦东%'
and tb3.nationflag<>'国内'
order by 1,2

 
 
 ------36、
 
 
--宁波机场要个数据，就是从国际转国内，国内进宁波的旅客信息
select t1.flights_date_1 第一段航班日期,t1.flights_no_1 第一段航班号,t1.flights_segment_1 第一段航段,
t1.flights_date_2 第二段航班日期,t1.flight_no_2 第二段航班号,
t1.flights_segment_2 第二段航段,t1.en_name 姓名,t4.codetype_name 证件类型,t1.codeno 证件号,t2.r_tel 紧急人联系方式,t2.work_tel 订票人联系方式
 from dw.bi_connect_segment t1
 left join dw.fact_order_detail t2 on t1.flights_order_head_id_1=t2.flights_order_head_id
 left join dw.fact_order_detail t3 on t1.flights_order_head_id_2=t3.flights_order_head_id
 left join stg.s_cq_codetype t4 on t1.codetype=t4.codetype
 where t1.flights_segment_2 like '%NGB'
 and t1.flights_date_2<=to_date('2020-03-16','yyyy-mm-dd')
 and t1.flights_date_2>=to_date('2020-03-09','yyyy-mm-dd')
 and t1.nationflag_1<>'国内'
 and t1.nationflag_2='国内';
 
 ------37、辅收产品税率
 
 select t2.xtype_id,
       t1.xtype_name,
       t1.revenue/t1.sale tax_rate,
       t1.months,
       sysdate create_time
  from dw.fact_xproduct_profit_input t1
  join (select distinct c.xtype_id, c.xtype_name, c.ex_nfd2
          from dw.dim_x_product_classify c
         where c.xtype_id > 0
           and ex_nfd2 is not null) t2 on t1.xtype_name = t2.ex_nfd2
 where t1.sale > 0
order by 1,4
 
 
 ------38、泰国海关数据
 
 select /*+parallel(4) */
tb3.flight_date 航班日期 ,
case when tb3.origin_country_id>0 then tb3.originairport
when tb3.dest_country_id>0 then tb3.destairport end,
sum(case when tb3.origin_country_id>0 then nvl(tb4.boardnum,0)
else 0 end) out_num,
sum(case when tb3.dest_country_id>0 then nvl(tb4.boardnum,0)
else 0 end) in_num,
sum(kornoshow) kornoshow,
sum(chnnoshow) chnnoshow,
sum(HKGnoshow) HKGnoshow,
sum(MFMnoshow) MFMnoshow,
sum(ITAnoshow) ITAnoshow,
sum(IRNnoshow) IRNnoshow
from  cqsale.cq_flights_segment_head@to_air tb1 
join cqsale.cq_flights_seats_amount_plan@to_air t6  on tb1.segment_Head_id=t6.segment_Head_id
join dw.da_flight tb3  on tb1.segment_head_id=tb3.segment_head_id
left join 
(
select t1.segment_head_id,sum(case when t1.flag_id=40 then 1 else 0 end) boardnum,
sum( case when t5.NATIONALITY='KOR' then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) kornoshow,
sum( case when t5.NATIONALITY='CHN' or t5.NATIONALITY is null then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) chnnoshow,
sum( case when t5.NATIONALITY='HKG'  then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) HKGnoshow,
sum( case when t5.NATIONALITY='MFM'  then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) MFMnoshow,
sum( case when t5.NATIONALITY='ITA'  then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) ITAnoshow,
sum( case when t5.NATIONALITY='IRN'  then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) IRNnoshow
from cqsale.cq_order_head@to_air t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
left join dw.da_order_drawback t3 on t1.flights_order_head_id=t3.flights_order_head_id
left join dw.da_order_drawback t4 on t1.flights_order_head_id=t4.flights_order_head_id
left join cqsale.cq_traveller_info@to_air t5 on t1.flights_order_head_id=t5.flights_order_head_id
where t1.r_flights_date>=trunc(sysdate-7)
and t1.r_flights_date< trunc(sysdate)
and t2.company_id=0
and t1.flag_Id in(3,5,40,41,7,11,12)
and t2.flag<>2
and t1.seats_name is not null
and t2.segment_country='泰国'
and t2.nationflag<>'国内'
group by t1.segment_head_id)tb4 on tb3.segment_head_id=tb4.segment_head_id
where tb1.flag<>2
and  tb3.flight_date>=trunc(sysdate)-7
and  tb3.flight_date< trunc(sysdate)
and tb3.company_id=0
and tb3.segment_country='泰国'
and tb3.nationflag<>'国内'
group by tb3.flight_date  ,
case when tb3.origin_country_id>0 then tb3.originairport
when tb3.dest_country_id>0 then tb3.destairport end 
order by 1,2;
 
 
 ===================================20200324=============================================
 ------39、
 
 select  /*+parallel(4) */
  case when instr(t6.wf_segment,'＝',1,2)>0 then split_part(t6.wf_segment,'＝',1)||'＝'||split_part(t6.wf_segment,'＝',3)
else t6.wf_segment end 往返航段,t2.segment_code 航段三字码,t2.flight_no 航班号,t2.flight_date 航班日期, t5.terminal 申请终端,t1.cabin 舱位,t1.plan_num 计划数,t1.price 系统包位价格,
h2.minprice 散客成人最低价,h2.ticketnum 散客成人最低价机票量
from cqsale.CQ_BSALE_FLIGHTS_APPLY@to_air t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_terminal@to_air t5 on t1.terminal_id=t5.terminal_id
left join dw.dim_segment_type t6 on t2.h_route_id=t6.h_route_id and t2.route_id=t6.route_id
left join(
select h1.*
from(
select  t1.segment_Head_id,t1.ticket_price,count(1) ticketnum,
min(min(t1.ticket_price))over(partition by t1.segment_Head_id) minprice
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2020-02-01','yyyy-mm-dd')
and t1.flights_date< to_date('2020-03-01','yyyy-mm-dd')
and t1.seats_name not in('B','G','G1','G2','O','A','D','Z','I','J','P2','P5','P4','P3')
and t1.sex=1
and t1.company_id=0
and t2.flag<>2
and t1.change_flag='N'
and not exists(select  1
                         from stg.c_cq_order_youhui_detail t3
             where t1.flights_order_head_id=t3.flights_order_head_id
             and t3.YOUHUI_RESULT>0)
and not exists(select 1
                         from dw.bi_yhq_use t4
             where t1.flights_order_head_id=t4.flights_order_head_id
             and t4.USE_MONEY>0
             and t4.ORDER_TYPE=0)
  group by t1.segment_Head_id,t1.ticket_price)h1
  where h1.ticket_price=h1.minprice
)h2 on t1.segment_Head_id=h2.segment_Head_id
where t2.flag<>2

and t2.flight_date>=to_date('2020-02-01','yyyy-mm-dd')
and t2.flight_date< to_date('2020-03-01','yyyy-mm-dd')
and t5.terminal='出境电商产品组'
and t1.cabin='G2'
and t1.plan_num>0;
 
 ------40、佐贺上海行李重量数据&高松上海行李重量数据
 
 select h2.fi 航班日期,h2.fn,h2.fs,h2.rl 订单号,h2.sex 乘机人类型,h2.baga 行李件数,h2.bagw 行李重量
from(
select  h1.fi,h1.id,h1.offg,h1.offn,h1.fd,h1.fn,h1.fs,h1.rl,h1.ri,h1.ena,h1.sn,h1.seat,h1.sex,h1.baga,h1.bagw,h1.fdate
from stg.s_dcs_old_h h1
where h1.fdate>=to_date('2020-01-01','yyyy-mm-dd')
 and h1.fdate< to_date('2020-03-01','yyyy-mm-dd')
 and h1.fs='HSGPVG'

  
  union 
  
  select h1.fi,h1.id,h1.offg,h1.offn,h1.fd,h1.fn,h1.fs,h1.rl,h1.ri,h1.ena,h1.sn,h1.seat,h1.sex,h1.baga,h1.bagw,h1.fdate
  from stg.s_dcs_old_h_bak h1
where h1.fdate>=to_date('2020-01-01','yyyy-mm-dd')
  and h1.fdate< to_date('2020-03-01','yyyy-mm-dd')
  and h1.fs='HSGPVG'
 )h2;
 
 
 
 select h2.fi 航班日期,h2.fn,h2.fs,h2.rl 订单号,h2.sex 乘机人类型,h2.baga 行李件数,h2.bagw 行李重量
from(
select  h1.fi,h1.id,h1.offg,h1.offn,h1.fd,h1.fn,h1.fs,h1.rl,h1.ri,h1.ena,h1.sn,h1.seat,h1.sex,h1.baga,h1.bagw,h1.fdate
from stg.s_dcs_old_h h1
where h1.fdate>=to_date('2020-01-01','yyyy-mm-dd')
 and h1.fdate< to_date('2020-03-01','yyyy-mm-dd')
 and h1.fs='TAKPVG'

  
  union 
  
  select h1.fi,h1.id,h1.offg,h1.offn,h1.fd,h1.fn,h1.fs,h1.rl,h1.ri,h1.ena,h1.sn,h1.seat,h1.sex,h1.baga,h1.bagw,h1.fdate
  from stg.s_dcs_old_h_bak h1
where h1.fdate>=to_date('2020-01-01','yyyy-mm-dd')
  and h1.fdate< to_date('2020-03-01','yyyy-mm-dd')
  and h1.fs='TAKPVG'
 )h2;
 
 
 
 
 ==================================20200325=============================
 ------41、政府要求的退票数据
 
 select /*+parallel(4) */
trunc(t1.money_date) 退票日期,
sum(case when t1.seats_name is not null then 1 else 0 end) 总退票量,
sum((t3.ticket_price+t3.ad_fy)*nvl(t3.r_com_rate,1)) 票面金额,
sum(case when t1.seats_name is  not null and t2.flights_segment_name like '%武汉%' then 1 else 0 end) 武汉退票量,
sum(case when t1.seats_name is  not null and t2.flights_segment_name like '%武汉%' then (t3.ticket_price+t3.ad_fy)*nvl(t3.r_com_rate,1) else 0 end) 武汉票面金额
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join cqsale.cq_order_head@to_air t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.money_date>=to_date('2020-03-05','yyyy-mm-dd')
 and t1.money_date< trunc(sysdate)
 and t2.company_id=0
 group by trunc(t1.money_date)
 
 
 ------42、泰国海关要求的数据，每天进出泰国的人员数据
 
 select /*+parallel(4) */
tb3.flight_date 航班日期 ,
case when tb3.origin_country_id>0 then tb3.originairport
when tb3.dest_country_id>0 then tb3.destairport end,
sum(case when tb3.origin_country_id>0 then nvl(tb4.boardnum,0)
else 0 end) out_num,
sum(case when tb3.dest_country_id>0 then nvl(tb4.boardnum,0)
else 0 end) in_num,
sum(kornoshow) kornoshow,
sum(chnnoshow) chnnoshow,
sum(HKGnoshow) HKGnoshow,
sum(MFMnoshow) MFMnoshow,
sum(ITAnoshow) ITAnoshow,
sum(IRNnoshow) IRNnoshow
from  cqsale.cq_flights_segment_head@to_air tb1 
join cqsale.cq_flights_seats_amount_plan@to_air t6  on tb1.segment_Head_id=t6.segment_Head_id
join dw.da_flight tb3  on tb1.segment_head_id=tb3.segment_head_id
left join 
(
select t1.segment_head_id,sum(case when t1.flag_id=40 then 1 else 0 end) boardnum,
sum( case when t5.NATIONALITY='KOR' then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) kornoshow,
sum( case when t5.NATIONALITY='CHN' or t5.NATIONALITY is null then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) chnnoshow,
sum( case when t5.NATIONALITY='HKG'  then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) HKGnoshow,
sum( case when t5.NATIONALITY='MFM'  then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) MFMnoshow,
sum( case when t5.NATIONALITY='ITA'  then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) ITAnoshow,
sum( case when t5.NATIONALITY='IRN'  then 
case when t1.flag_id in(3,5,41) then 1 
when t3.money_date>=t2.origin_std then 1 
when t4.money_date>=t2.origin_std then 1
else 0 end
else 0 end) IRNnoshow
from cqsale.cq_order_head@to_air t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
left join dw.da_order_drawback t3 on t1.flights_order_head_id=t3.flights_order_head_id
left join dw.da_order_drawback t4 on t1.flights_order_head_id=t4.flights_order_head_id
left join cqsale.cq_traveller_info@to_air t5 on t1.flights_order_head_id=t5.flights_order_head_id
where t1.r_flights_date>=trunc(sysdate-7)
and t1.r_flights_date< trunc(sysdate)
and t2.company_id=0
and t1.flag_Id in(3,5,40,41,7,11,12)
and t2.flag<>2
and t1.seats_name is not null
and t2.segment_country='泰国'
and t2.nationflag<>'国内'
group by t1.segment_head_id)tb4 on tb3.segment_head_id=tb4.segment_head_id
where tb1.flag<>2
and  tb3.flight_date>=trunc(sysdate)-7
and  tb3.flight_date< trunc(sysdate)
and tb3.company_id=0
and tb3.segment_country='泰国'
and tb3.nationflag<>'国内'
group by tb3.flight_date  ,
case when tb3.origin_country_id>0 then tb3.originairport
when tb3.dest_country_id>0 then tb3.destairport end 
order by 1,2;
 
 
 ------43、
 
 select distinct getmobile(t1.r_tel) 联系方式 
from cqsale.cq_order@to_air t
join  cqsale.cq_order_head@to_air  t1 on t.flights_order_id=t1.flights_order_Id
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t1.segment_head_id=t3.segment_head_id
where t1.r_flights_date=trunc(sysdate)+1
and t3.flag<>2
and t1.flag_id in(3,5,40,41)
and t1.whole_flight like '9C%'
and t1.whole_flight='9C8521'
and t2.destairport_name='乌鲁木齐'
and getmobile(t1.r_tel)<>'-'

union 

select distinct t.work_tel
from cqsale.cq_order@to_air t
join  cqsale.cq_order_head@to_air  t1 on t.flights_order_id=t1.flights_order_Id
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t1.segment_head_id=t3.segment_head_id
where t1.r_flights_date=trunc(sysdate)+1
and t3.flag<>2
and t1.flag_id in(3,5,40,41)
and t1.whole_flight like '9C%'
and t1.whole_flight='9C8521'
and t2.destairport_name='乌鲁木齐'
and getmobile(t.work_tel)<>'-' ;
 
 ------44、订票人是乘机人之一的订票人数及订单数
 
 select count(distinct t1.client_Id),count(distinct t1.flights_Order_id)
from dw.fact_order_detail t1
where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
  and t1.order_day< to_date('2020-01-01','yyyy-mm-dd')
  and t1.company_id=0
  and t1.channel in('网站','手机');
  
  
 select count(distinct t1.client_Id),count(distinct t1.flights_Order_id)
from dw.fact_order_detail t1
where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
  and t1.order_day< to_date('2020-01-01','yyyy-mm-dd')
  and t1.company_id=0
  and t1.channel in('网站','手机')
  and exists(select 1
               from dw.fact_order_detail t2 
               where t1.flights_order_id=t2.flights_order_id
                 and t1.order_linkman=t2.traveller_name)；
                 
         
select count(1),count(distinct t1.traveller_name||t1.codeno)
from dw.fact_order_detail t1
where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
  and t1.company_id=0;
 
 
 
 
 ------45、旅客联系方式监控
 
 select /*t1.work_tel,
         t1.r_tel,*/
         case when t1.work_tel is null then '空值' 
         when getmobile(t1.work_tel) = '-' then '有误' 
         when substr(getmobile(t1.work_tel), 1, 3) not in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '非正常手机号'
          when substr(getmobile(t1.work_tel), 1, 3)  in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '正常手机号'
          end,
            case when t1.r_tel is null then '空值' 
         when getmobile(t1.r_tel) = '-' then '有误' 
         when substr(getmobile(t1.r_tel), 1, 3) not in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '非正常手机号'
          when substr(getmobile(t1.r_tel), 1, 3)  in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '正常手机号'
          end,t1.channel,t1.sub_channel,
          count(1)  
    from dw.fact_order_detail t1
   where t1.order_day >= trunc(sysdate) - 7
   and t1.company_id=0
   group by case when t1.work_tel is null then '空值' 
         when getmobile(t1.work_tel) = '-' then '有误' 
         when substr(getmobile(t1.work_tel), 1, 3) not in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '非正常手机号'
          when substr(getmobile(t1.work_tel), 1, 3)  in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '正常手机号'
          end,
            case when t1.r_tel is null then '空值' 
         when getmobile(t1.r_tel) = '-' then '有误' 
         when substr(getmobile(t1.r_tel), 1, 3) not in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '非正常手机号'
          when substr(getmobile(t1.r_tel), 1, 3)  in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '正常手机号'
          end,t1.channel,t1.sub_channel;
      
  
--手机号码校验

select *
from(
select t1.flights_order_id,
t1.work_tel,
         t1.r_tel,
         case when t1.work_tel is null then '空值' 
         when getmobile(t1.work_tel) = '-' then '有误' 
         when substr(getmobile(t1.work_tel), 1, 3) not in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '非正常手机号'
          when substr(getmobile(t1.work_tel), 1, 3)  in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '正常手机号'
          end type1,
            case when t1.r_tel is null then '空值' 
         when getmobile(t1.r_tel) = '-' then '有误' 
         when substr(getmobile(t1.r_tel), 1, 3) not in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '非正常手机号'
          when substr(getmobile(t1.r_tel), 1, 3)  in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '正常手机号'
          end type2,t1.channel,t1.sub_channel
    from dw.fact_order_detail t1
   where t1.order_day >= trunc(sysdate) - 7
   and t1.company_id=0)h1
   where not (type1 ='正常手机号' and type2='正常手机号');
 
 
 
 ------46、航线销售差距数据
 
 
 select 
  t1.flights_date,   
t2.nationflag,t3.wf_segment,t2.flights_segment_name,
sum(case when t1.order_day>=to_date('2020-03-16','yyyy-mm-dd')
   and t1.order_day<=to_date('2020-03-22','yyyy-mm-dd') then 1
   when t1.order_day>=to_date('2020-03-23','yyyy-mm-dd')
   and t1.order_day<=to_date('2020-03-29','yyyy-mm-dd') then 0 end) 上周票量,
   sum(case when t1.order_day>=to_date('2020-03-16','yyyy-mm-dd')
   and t1.order_day<=to_date('2020-03-22','yyyy-mm-dd') then 0
   when t1.order_day>=to_date('2020-03-23','yyyy-mm-dd')
   and t1.order_day<=to_date('2020-03-29','yyyy-mm-dd') then 1 end) 本周票量
  
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t2.flag<>2
   and t1.order_day>=to_date('2020-03-16','yyyy-mm-dd')
   and t1.order_day<=trunc(SYSDATE-1)
   AND T1.SEATS_NAME IS NOT NULL
   and to_char(t1.order_day,'day') in('星期二','星期三')
   and t1.company_id=0
   and t1.seats_name not in('B','G','G1','G2','O')
   group by 
  t1.flights_date,   
t2.nationflag,t3.wf_segment,t2.flights_segment_name;
  
 
 =============================================20200326=========================================
 ------47、正常手机号码的订票频次
 
select t1.work_tel, t1.r_tel, t1.sub_channel,case when t2.users_id is not null then 1 else 0 end agent_type, count(1)
  from dw.fact_order_detail t1
  left join dw.da_restrict_userinfo@to_ods t2 on t1.client_id=t2.users_id
 where t1.order_day >= trunc(sysdate) - 7
   and t1.company_id = 0
     and substr(getmobile(t1.r_tel), 1, 3) in
       ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152',
        '157', '158', '159', '172', '178', '182', '183', '184', '187', '188',
        '198', '130', '131', '132', '140', '145', '146', '155', '156', '166',
        '167', '185', '186', '175', '176', '133', '149', '153', '177', '173',
        '180', '181', '189', '191', '199', '162', '165', '170', '171', '197',
        '196', '192', '190', '197', '196', '192', '190')      
   and substr(getmobile(t1.work_tel), 1, 3) in
       ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152',
        '157', '158', '159', '172', '178', '182', '183', '184', '187', '188',
        '198', '130', '131', '132', '140', '145', '146', '155', '156', '166',
        '167', '185', '186', '175', '176', '133', '149', '153', '177', '173',
        '180', '181', '189', '191', '199', '162', '165', '170', '171', '197',
        '196', '192', '190')
 group by t1.work_tel, t1.r_tel, t1.sub_channel,case when t2.users_id is not null then 1 else 0 end
having count(1) >= 100

 
 
 
 ------48、下单账号类型分类
 
 select t2.cust_typename,t2.register_type,count(1)
 from dw.fact_order_detail t1
 join dw.da_b2c_user t2 on t1.client_id=t2.users_id
 where t1.order_day>=trunc(sysdate)-7
 and t1.order_day< trunc(sysdate)
 and t1.company_id=0
 and t1.channel in('网站','手机')
 group by t2.cust_typename,t2.register_type
 
 
 ------49、2019年全年，乘坐春秋航空航班超过四次（包含4次），年龄在28-35岁的女性乘机人手机号，预计约40000个
 
  select /*+parallel(4) */
distinct r_tel
 from(
 select t1.traveller_name||t1.codeno,t1.r_tel,count(1) ticketnum,sum(count(1))over(partition by t1.traveller_name||t1.codeno) accnum
  from dw.fact_order_detail t1
 where t1.flights_date >= to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date < to_date('2020-01-01','yyyy-mm-dd')
   and t1.company_id = 0
   and t1.gender='女'
   and t1.flag_id=40
   and t1.seats_name <>'O'
   and getage(t1.flights_date,t1.birthday)>=28
   and getage(t1.flights_date,t1.birthday)<=35
   group by t1.traveller_name||t1.codeno,t1.r_tel)
   where accnum>=4
   and getmobile(r_tel)<>'-'
   and rownum<=40000
 
 
 
 ------50、
 

select t.flights_Order_Id,t5.country_name,t4.nationality,t1.codeno,t1.codetype,t1.name||' '||coalesce(t1.second_name,''),t1.r_tel,t.work_tel,t1.whole_flight
from cqsale.cq_order@to_air t
join  cqsale.cq_order_head@to_air  t1 on t.flights_order_id=t1.flights_order_Id
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t1.segment_head_id=t3.segment_head_id
left join cqsale.cq_traveller_info@to_air t4 on t1.flights_order_head_id=t4.flights_order_head_id
left join stg.s_cq_country_area t5 on t4.nationality=t5.country_code
where t1.r_flights_date=trunc(sysdate)
and t3.flag<>2
and t1.flag_id in(3,5,40,41)
and t1.whole_flight in('9C8530','9C8580')
and t1.whole_flight like '9C%'
and t1.whole_segment in('PNHCAN','BKKPVG')


=======================================20200330============================================
 ------51、航班号数据
 
 select t.flights_Order_Id,t5.country_name,t4.nationality,t1.codeno,t1.codetype,t1.name||' '||coalesce(t1.second_name,''),t1.r_tel,t.work_tel
from cqsale.cq_order@to_air t
join  cqsale.cq_order_head@to_air  t1 on t.flights_order_id=t1.flights_order_Id
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t1.segment_head_id=t3.segment_head_id
left join cqsale.cq_traveller_info@to_air t4 on t1.flights_order_head_id=t4.flights_order_head_id
left join stg.s_cq_country_area t5 on t4.nationality=t5.country_code
where t1.r_flights_date=trunc(sysdate)
and t3.flag<>2
and t1.flag_id in(3,5,40,41)
and t1.whole_flight in('9C8530','9C8580')
and t1.whole_flight like '9C%'
and t1.whole_segment in('PNHCAN','BKKPVG');
 

 
 
 ------52、服务查询某个人
 
 select t1.*
from cqsale.cq_order@to_air t
join  cqsale.cq_order_head@to_air  t1 on t.flights_order_id=t1.flights_order_Id
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t1.segment_head_id=t3.segment_head_id
where t1.r_flights_date>=trunc(sysdate)
and t3.flag<>2
and t1.flag_id in(3,5,40,41)
and t1.whole_flight like '9C%'
--and t2.segment_country='泰国'
and lower(t1.name||coalesce(t1.second_name,'')) like '%zheng%'
and lower(t1.name||coalesce(t1.second_name,'')) like '%ying%';
 
 ------53、河北机场损失数据
 
 
select --t1.flight_date,count(distinct case when t1.flag=2 then t1.flights_id else null end),count(distinct t1.flights_id)
distinct flights_segment_name
from  dw.da_flight t1
where t1.flight_date>=to_date('2020-01-24','yyyy-mm-dd')
  and t1.flight_date< to_date('2020-03-29','yyyy-mm-dd')
  and t1.company_id=0
  and regexp_like(t1.flights_segment_name,'(安国)|(保定)|(承德)|(承德)|(定州)|(邯郸)|(衡水)|(秦皇岛)|(石家庄)|(唐山)|(辛集)|(邢台)|(张家口)')
group by t1.flight_date;


select t1.flight_date,sum(t1.total_income-t1.total_cost)
 from hdb.recent_flights_cost t1
 where t1.flight_date>=to_date('2020-01-24','yyyy-mm-dd')
  and t1.flight_date< to_date('2020-03-29','yyyy-mm-dd')
  and t1.total_cost>0
  and regexp_like(t1.route_name,'(安国)|(保定)|(承德)|(承德)|(定州)|(邯郸)|(衡水)|(秦皇岛)|(石家庄)|(唐山)|(辛集)|(邢台)|(张家口)') 
 group by t1.flight_date
 
 
 ------54、航班noshow数据
 
 select h1.segment_head_id,h3.flight_date,h3.flights_segment_name,h3.flight_no,h3.nationflag,h3.segment_country,h3.origin_country,h3.dest_country,
h1.boardnum,h2.noshow,h2.wainum,h2.wainum2,h2.noshoworder,h2.waiorder
from dw.da_main_order h1
join dw.da_flight h3 on h1.segment_head_id=h3.segment_head_id
left join(
select t1.segment_head_id,count(1) noshow,sum(case when  t2.nationality is null then 0
when regexp_like(t3.country_name,'(中国)|(香港)|(澳门)|(台湾)') then 0
when t2.nationality='CHN' then 0
else 1 end) wainum,count(distinct t1.flights_order_id) noshoworder,
sum(case when  t2.nationality is null then 0
when regexp_like(t3.country_name,'(中国)|(香港)|(澳门)|(台湾)') then 1
when t2.nationality='CHN' then 0
else 0 end) wainum2,
count(distinct case when  t2.nationality is null then null
when regexp_like(t3.country_name,'(中国)|(香港)|(澳门)|(台湾)') then null
when t2.nationality='CHN' then null
else t1.flights_order_id end) waiorder
 from hdb.mid_noshow_data t1
 left join dw.fact_recent_order_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join stg.s_cq_country_area t3 on t2.nationality=t3.country_code
 where t1.origin_std>=trunc(sysdate-2)
 and t1.origin_std< trunc(sysdate)
 group by t1.segment_head_id)h2 on h1.segment_head_id=h2.segment_head_id
 where h1.flights_date>=trunc(sysdate-2)
  and h1.flights_date< trunc(sysdate)
  and h3.flag<>2
  and h1.flights_no like '9C%';
 
 
 ------55、国际回程航班数据
 
 select tb3.flight_date 航班日期,
tb3.origin_std 起飞时间 ,tb3.flight_no 航班号,tb3.flights_segment_name,
replace(replace(replace(tb3.origin_country,'香港','中国香港'),'澳门','中国澳门'),'台湾','中国台湾') 始发地,
replace(replace(replace(tb3.dest_country,'香港','中国香港'),'澳门','中国澳门'),'台湾','中国台湾') 目的地,
tb3.layout 座位数,
(t6.PLAN_Y + t6.PLAN_B + t6.PLAN_H + t6.PLAN_K + t6.PLAN_L +
                       t6.PLAN_M + t6.PLAN_N + t6.PLAN_Q + t6. PLAN_T + t6.
                        PLAN_X + t6.PLAN_U + t6.PLAN_E + t6.PLAN_W + t6.PLAN_P +
                        t6.PLAN_P1 + t6.PLAN_P2 + t6.PLAN_O + t6. PLAN_G + t6.
                        PLAN_G1 + t6.
                        PLAN_G2 + t6.PLAN_R1 + t6.PLAN_R2 + t6.PLAN_R3 + t6.PLAN_R4 +
                        NVL(t6.PLAN_F, 0) + NVL(t6.PLAN_F1, 0) + NVL(t6.PLAN_F2, 0) +
                        NVL(t6.PLAN_F3, 0) + NVL(t6.PLAN_F4, 0) + NVL(t6.PLAN_C, 0) +
                        NVL(t6.PLAN_C1, 0) + NVL(t6.PLAN_C2, 0) +
                        NVL(t6.PLAN_C3, 0) + NVL(t6.PLAN_C4, 0) + NVL(t6.PLAN_S, 0) +
                        NVL(t6.PLAN_V, 0) + NVL(t6.PLAN_A, 0) + NVL(t6.PLAN_D, 0) +
                        NVL(t6.PLAN_I, 0) + NVL(t6.PLAN_J, 0) + NVL(t6.PLAN_Z, 0) +
                        NVL(t6.PLAN_P3, 0) + NVL(t6.PLAN_P4, 0) +
                        NVL(t6.PLAN_P5, 0)) 计划数,
nvl(ticketnum,0) 预约总数,
nvl(nationnum,0) 外籍旅客数,
nvl(nationnum2,0) 台湾旅客数,
nvl(nationnum3,0) 澳门旅客数,
nvl(nationnum4,0) 香港旅客数,
nvl(ticketnum,0)/tb3.layout 客座率
from  cqsale.cq_flights_segment_head@to_air tb1 
join cqsale.cq_flights_seats_amount_plan@to_air t6  on tb1.segment_Head_id=t6.segment_Head_id
join dw.da_flight tb3  on tb1.segment_head_id=tb3.segment_head_id
left join stg.f_airport tt1 on tb3.originairport=tt1.t_code
left join stg.f_airport tt2 on tb3.destairport=tt2.t_code
left join 
(
select t1.segment_head_id,count(1)  ticketnum,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'(中国)|(香港)|(澳门)|(台湾)') then 0
when t3.nationality='CHN' then 0
else 1 end) nationnum,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'(台湾)') then 1
when t3.nationality='CHN' then 0
else 0 end) nationnum2,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'(澳门)|') then 1
when t3.nationality='CHN' then 0
else 0 end) nationnum3,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'(香港)') then 1
when t3.nationality='CHN' then 0
else 0 end) nationnum4
from cqsale.cq_order_head@to_air t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
left join cqsale.cq_traveller_info@to_air t3 on t1.flights_order_head_id=t3.flights_order_head_id
left join cqsale.cq_country_area@to_air t4 on t3.nationality=t4.country_code
where t1.r_flights_date>=to_date('2020-04-01','yyyy-mm-dd')
and t1.r_flights_date<=to_date('2020-04-29','yyyy-mm-dd')
and t1.flag_id in(3,5,40,41)
and t2.company_id=0
and t2.origin_std>sysdate
and t2.flag<>2
and t1.seats_name is not null
and t2.origin_country_id>0
and t2.nationflag<>'国内'
group by t1.segment_head_id)tb4 on tb3.segment_head_id=tb4.segment_head_id
where tb1.flag<>2
and  tb3.flight_date>=to_date('2020-04-01','yyyy-mm-dd')
and tb3.flight_date<=to_date('2020-04-29','yyyy-mm-dd') 
and tb3.company_id=0
and tb3.origin_std>sysdate
and tb3.origin_country_id>0
and tb3.nationflag<>'国内'
order by 1,2;


 ------56、营销数据
 
 select /*+parallel(4) */ count(distinct mobile)
from(
select getmobile(t1.r_tel) mobile
from dw.fact_recent_order_detail t1
where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
  and getmobile(t1.r_tel)<>'-'
  
union all

select getmobile(t1.work_tel)
from dw.fact_recent_order_detail t1
where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
  and getmobile(t1.work_tel)<>'-');
  
  
  
  
select /*+parallel(4) */
count(1),count(distinct t1.traveller_name||t1.codeno)
from dw.fact_order_detail t1
where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
  and t1.company_id=0

 
 ------57、
 提取工号：  100715、102971、105987          
提取日期：  2.27-3.27          
航班状态：  已乘机          
提取条件：  在这段日期内二次购买为旅客添加过0元餐食的名单且旅客已乘机              
            
工号  操作人名称  订单号  操作日期  餐食名称  餐食ID  航班日期


select  t.users_id 工号,t4.users_work_id 操作人名称,t.flights_Order_Id 订单号,t.order_date 操作日期,t3.xproduct_name 餐食名称,t1.book_id 餐食ID,t1.r_flights_date 航班日期
  from cqsale.cq_other_order@to_air t 
  join cqsale.cq_other_order_head@to_air t1 on t.order_id=t1.order_id
  left join stg.s_cq_xtype t2 on t1.ex_nfd1=t2.xtype_id
  left join stg.s_cq_xproduct t3 on t1.ex_nfd1=t3.xtype_id and t1.book_id=t3.xproduct_id
  left join stg.s_cq_user t4 on t.users_id=t4.users_id
  where t.order_date>=to_date('2020-02-27','yyyy-mm-dd')
   and t.order_date< to_date('2020-03-28','yyyy-mm-dd')
    and t.users_id in(100715,102971,105987)
    and t1.ex_nfd1=7
  and t1.book_price=0
  and t.pay_together=1
  and t1.flag_id=40;
  
  

 
 
 ------58、IJ恶意占位 
 
 select T1.R_TEL,case when T1.FLAG_ID=2 then '预订'
when t1.flag_id in(3,5,40) then '成功'
else '失败'end,TRUNC(t.order_date),COUNT(1),count(distinct t.flights_order_id)
from cqsale.cq_order@to_air t
join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
where t.order_date>=trunc(sysdate-7)
and t1.r_tel  IN('17310088093','15102456364')
and t1.whole_flight like 'IJ%'
GROUP BY T1.R_TEL,case when T1.FLAG_ID=2 then '预订'
when t1.flag_id in(3,5,40) then '成功'
else '失败'end,TRUNC(t.order_date);
 
 
================================================20200401=======================================
 ------59、华东地区国际航线销售数据
 
 select tp1.sdate 日期,
       case
         when tp2.航班号 is null then
          '无航班'
         else
          tp2.航班号
       end 航班号,
       航线,
       始发地,
       目的地,
       座位数,
       预约数,
       客座率
  from (select trunc(sysdate) + rownum - 1 sdate
          from dual
        connect by rownum <= 7) tp1
  left join (select trunc(tb3.dest_sta) 日期,
                    tb3.flight_no 航班号,
                    tt1.c_name || '-' || tt2.c_name 航线,
                    replace(replace(replace(tb3.origin_country,
                                            '香港',
                                            '中国香港'),
                                    '澳门',
                                    '中国澳门'),
                            '台湾',
                            '中国台湾') 始发地,
                    replace(replace(replace(tb3.dest_country,
                                            '香港',
                                            '中国香港'),
                                    '澳门',
                                    '中国澳门'),
                            '台湾',
                            '中国台湾') 目的地,
                    tb3.layout 座位数,
                    nvl(ticketnum, 0) 预约数,
                    nvl(ticketnum, 0) / tb3.layout 客座率
               from cqsale.cq_flights_segment_head@to_air tb1
               join cqsale.cq_flights_seats_amount_plan@to_air t6 on tb1.segment_Head_id =
                                                                     t6.segment_Head_id
               join dw.da_flight tb3 on tb1.segment_head_id =
                                        tb3.segment_head_id
               left join stg.f_airport tt1 on tb3.originairport = tt1.t_code
               left join stg.f_airport tt2 on tb3.destairport = tt2.t_code
               left join (select t1.segment_head_id, count(1) ticketnum
                           from cqsale.cq_order_head@to_air t1
                           join dw.da_flight t2 on t1.segment_head_id =
                                                   t2.segment_head_id
                          where t2.dest_sta >= trunc(sysdate)
                            and t2.dest_sta < trunc(sysdate) + 7
                            and t1.flag_id in (3, 5, 40, 41)
                            and t2.company_id = 0
                            and t2.flag <> 2
                            and t2.dest_country_id = 0
                            and t1.seats_name is not null
                            and t2.flights_segment_name like '%浦东%'
                            and t2.nationflag <> '国内'
                          group by t1.segment_head_id) tb4 on tb3.segment_head_id =
                                                              tb4.segment_head_id
              where tb1.flag <> 2
                and tb3.dest_sta >= trunc(sysdate)
                and tb3.dest_sta < trunc(sysdate) + 7
                and tb3.company_id = 0
                and tb3.dest_country_id = 0
                and tb3.flights_segment_name like '%浦东%'
                and tb3.nationflag <> '国内') tp2 on tp1.sdate = tp2.日期
 order by 1, 2;
 
 
 ------60、国际地区航线各国国籍数据
 
 select
 tb3.flight_date 航班日期,
tb3.origin_std 起飞时间 ,tb3.flight_no 航班号,tb3.flights_segment_name,
replace(replace(replace(tb3.origin_country,'香港','中国香港'),'澳门','中国澳门'),'台湾','中国台湾') 始发地,
replace(replace(replace(tb3.dest_country,'香港','中国香港'),'澳门','中国澳门'),'台湾','中国台湾') 目的地,
tb3.layout 座位数,
(t6.PLAN_Y + t6.PLAN_B + t6.PLAN_H + t6.PLAN_K + t6.PLAN_L +
                       t6.PLAN_M + t6.PLAN_N + t6.PLAN_Q + t6. PLAN_T + t6.
                        PLAN_X + t6.PLAN_U + t6.PLAN_E + t6.PLAN_W + t6.PLAN_P +
                        t6.PLAN_P1 + t6.PLAN_P2 + t6.PLAN_O + t6. PLAN_G + t6.
                        PLAN_G1 + t6.
                        PLAN_G2 + t6.PLAN_R1 + t6.PLAN_R2 + t6.PLAN_R3 + t6.PLAN_R4 +
                        NVL(t6.PLAN_F, 0) + NVL(t6.PLAN_F1, 0) + NVL(t6.PLAN_F2, 0) +
                        NVL(t6.PLAN_F3, 0) + NVL(t6.PLAN_F4, 0) + NVL(t6.PLAN_C, 0) +
                        NVL(t6.PLAN_C1, 0) + NVL(t6.PLAN_C2, 0) +
                        NVL(t6.PLAN_C3, 0) + NVL(t6.PLAN_C4, 0) + NVL(t6.PLAN_S, 0) +
                        NVL(t6.PLAN_V, 0) + NVL(t6.PLAN_A, 0) + NVL(t6.PLAN_D, 0) +
                        NVL(t6.PLAN_I, 0) + NVL(t6.PLAN_J, 0) + NVL(t6.PLAN_Z, 0) +
                        NVL(t6.PLAN_P3, 0) + NVL(t6.PLAN_P4, 0) +
                        NVL(t6.PLAN_P5, 0)) 计划数,
nvl(ticketnum,0) 预约总数,
nvl(nationnum,0) 外籍旅客数,
nvl(nationnum5,0) 中国大陆旅客数,
nvl(nationnum2,0) 台湾旅客数,
nvl(nationnum3,0) 澳门旅客数,
nvl(nationnum4,0) 香港旅客数,
nvl(nationnum6,0) 日本旅客数,
nvl(nationnum7,0) 韩国旅客数,
nvl(nationnum8,0) 泰国旅客数,
nvl(nationnum9,0) 柬埔寨旅客数,
nvl(ticketnum,0)/tb3.layout 客座率
from  cqsale.cq_flights_segment_head@to_air tb1 
join cqsale.cq_flights_seats_amount_plan@to_air t6  on tb1.segment_Head_id=t6.segment_Head_id
join dw.da_flight tb3  on tb1.segment_head_id=tb3.segment_head_id
left join stg.f_airport tt1 on tb3.originairport=tt1.t_code
left join stg.f_airport tt2 on tb3.destairport=tt2.t_code
left join 
(
select t1.segment_head_id,count(1)  ticketnum,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'(中国)|(香港)|(澳门)|(台湾)') then 0
when t3.nationality='CHN' then 0
else 1 end) nationnum,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'(台湾)') then 1
when t3.nationality='CHN' then 0
else 0 end) nationnum2,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'(澳门)|') then 1
when t3.nationality='CHN' then 0
else 0 end) nationnum3,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'(香港)') then 1
when t3.nationality='CHN' then 0
else 0 end) nationnum4,
sum(case when t3.nationality is null then 1
when t4.country_name='中国' then 1
when t3.nationality='CHN' then 1
else 0 end) nationnum5,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'日本') then 1
when t3.nationality='CHN' then 0
else 0 end) nationnum6,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'韩国') then 1
when t3.nationality='CHN' then 0
else 0 end) nationnum7,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'泰国') then 1
when t3.nationality='CHN' then 0
else 0 end) nationnum8,
sum(case when t3.nationality is null then 0
when regexp_like(t4.country_name,'柬埔寨') then 1
when t3.nationality='CHN' then 0
else 0 end) nationnum9
from cqsale.cq_order_head@to_air t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
left join cqsale.cq_traveller_info@to_air t3 on t1.flights_order_head_id=t3.flights_order_head_id
left join cqsale.cq_country_area@to_air t4 on t3.nationality=t4.country_code
where t1.r_flights_date>=to_date('2020-04-01','yyyy-mm-dd')
and t1.r_flights_date<=to_date('2020-04-29','yyyy-mm-dd')
and t1.flag_id in(3,5,40,41)
and t2.company_id=0
--and t2.origin_std>sysdate
and t2.flag<>2
and t1.seats_name is not null
--and t2.origin_country_id>0
and t2.nationflag<>'国内'
group by t1.segment_head_id)tb4 on tb3.segment_head_id=tb4.segment_head_id
where tb1.flag<>2
and  tb3.flight_date>=to_date('2020-04-01','yyyy-mm-dd')
and tb3.flight_date<=to_date('2020-04-29','yyyy-mm-dd') 
and tb3.company_id=0
--and tb3.origin_std>sysdate
--and tb3.origin_country_id>0
and tb3.nationflag<>'国内'
order by 1,2
 
 
 ------61、查询航班的计划金额
 
 select t2.*
 from dw.da_flight t1
 join cqsale.cq_flights_segment_head@to_air t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flight_date>=trunc(sysdate-2)
   and t1.flight_date< trunc(sysdate)
   and t1.flights_city_name like '%上海%'
   and t1.flights_city_name like '%沈阳%'
   and t2.flag<>2
 
 
 =================================================20200408=============================
 ------62、联系方式匹配
 
 select orderno,sname,t1.r_tel,t.work_tel
  from anl.temp_feng_200408@to_dds t2
  left join stg.s_cq_order_head t1 on t1.flights_order_id=t2.orderno and t2.sname=t1.name||coalesce(t1.second_name,'')
  left join stg.s_cq_order t on t.flights_order_id = t1.flights_order_id
  where t.order_date>=to_date('2019-03-01','yyyy-mm-dd')

  
 
 ------63、
 create table anl.temp_feng_200408
(orderno varchar2(200),
 sname varchar2(500));
 
 drop table anl.temp_feng_200408 purge;
 
 
 ------64、
 
 --麻烦提供订票日期在今日12点前所有泰国曼谷，韩国济州出发的旅客联系方式和邮箱@冯喜欢

select /*+parallel(4) */
 case when getmobile(t1.r_tel)='-' then t1.r_tel
else getmobile(t1.r_tel) end 联系方式,t1.flag_id,t.email
from cqsale.cq_order@to_air t
join  cqsale.cq_order_head@to_air  t1 on t.flights_order_id=t1.flights_order_Id
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t1.segment_head_id=t3.segment_head_id
where t.order_date< to_date('2020-04-08 12:00','yyyy-mm-dd hh24:mi')
and t3.flag<>2
and t1.r_flights_date>=trunc(sysdate)
and t1.r_flights_date< to_date('2020-05-01','yyyy-mm-dd')
and t3.origin_std>sysdate
and t1.flag_id in(3,5,40,41)
and t1.whole_flight like '9C%'
and t2.origin_country_id>0
and regexp_like(t2.originairport_name,'(曼谷)|(济州)')


union all

select  
 case when getmobile(t.work_tel)='-' then t.work_tel
else getmobile(t.work_tel) end,t1.flag_id,t.email
from cqsale.cq_order@to_air t
join  cqsale.cq_order_head@to_air  t1 on t.flights_order_id=t1.flights_order_Id
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t1.segment_head_id=t3.segment_head_id
where t.order_date< to_date('2020-04-08 12:00','yyyy-mm-dd hh24:mi')
and t3.flag<>2
and t1.r_flights_date>=trunc(sysdate)
and t1.r_flights_date< to_date('2020-05-01','yyyy-mm-dd')
and t3.origin_std>sysdate
and t1.flag_id in(3,5,40,41)
and t1.whole_flight like '9C%'
and t2.origin_country_id>0
and regexp_like(t2.originairport_name,'(曼谷)|(济州)')

 
 ------65、
 
 --序号  航空公司    航班号  计划机型  旅客人数  航站1  计划起飞  实际起飞  计划落地  实际落地  航站2  客座率

select h1.sdate 日期,'国内' 航司类型,'春秋航' 航空公司,h1.flight_no 航班号,h1.aircraft_type 计划机型,
nvl(h3.ticketnum,0) 旅客人数,h1.airport 航站1,h1.origin_std 计划起飞,h2.take_off_time 实际起飞,
h1.dest_sta 计划落地,h2.landing_time 实际落地,'' 航站2,nvl(h3.ticketnum,0)/h1.flights_amount
from(
select t1.segment_head_id,t2.flight_date,t2.segment_code,t1.r_flights_no flight_no,trunc(t1.dest_sta) sdate,
case when t3.city_name is not null then t3.CITY_NAME||'/'||t3.CNNAMEFORCITY
else t2.originairport_name end airport,case when t2.aircraft_type like '%A320%' then 'A320'
 else t2.aircraft_type end aircraft_type,
 to_char(t1.origin_std,'hh24:mi') origin_std,to_char(t1.dest_sta,'hh24:mi') dest_sta,t1.flights_amount
   from stg.s_cq_flights_segment_head t1
   join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
   left join hdb.covid_airport t3 on t1.origin_airport=t3.THREECODEFORCITY
   where t1.dest_sta>=trunc(sysdate-2)
     and t1.dest_sta< trunc(sysdate)
     and t1.flag<>2
     and t1.nation_flag in(2,3)
     and t2.oversale>0
     and t1.dest_airport='PVG')h1
   left join (  
   select  distinct T2.T_CODE||T3.T_CODE segment_code,t1.flight_date,t1.flight_no,to_char(t1.plan_dept_time,'hh24:mi') origin_std,
   to_char(t1.take_off_time,'hh24:mi')  take_off_time,to_char(t1.landing_time,'hh24:mi') landing_time
    from fm.fm_day_flight@to_foc T1
    LEFT JOIN FM.FM_AIRPORT@TO_FOC T2 ON T1.PLAN_DEPT_AIRPORT=T2.F_CODE
    LEFT JOIN FM.FM_AIRPORT@TO_FOC T3 ON T1.PLAN_ARR_AIRPORT=T3.F_CODE    
    where flight_date>=trunc(sysdate-2)
    and flight_date<=trunc(sysdate)
    and t1.take_off_time is not null
    and t1.landing_time is not null)h2 on h1.flight_date=h2.flight_date and h1.flight_no=h2.flight_no and h1.segment_code=h2.segment_code and h1.origin_std=h2.origin_std
left join 
(select t1.segment_head_id,count(1) ticketnum
         from cqsale.cq_order_head@to_air t1
     join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
     where t1.flag_Id=40
       and t2.nationflag <>'国内'
       and t1.whole_flight like '9C%'
       and t1.r_flights_date>=trunc(sysdate-2)
       and t1.r_flights_date<=trunc(sysdate-1)
       and t1.seats_name is not null
       group by t1.segment_head_id
     )h3 on h1.segment_head_id=h3.segment_head_id;
 
 --------------------------------------------------------------------------20200410-------------------------------------------------------
 ------66、所有去程国际，国际回程的中国籍旅客的预订人数和退票人数
 
select /*+parallel(4) */
case when t2.origin_country_id>0 then '国际回程'
when t2.origin_country_id=0 then '国际去程' end 类型,
sum(case when t1.flag_id in(3,5,40,41) then 1
else 0 end) 预订人数,
sum(case when t1.flag_id in(7,11,12) then 1
else 0 end) 退票人数 
from cqsale.cq_order@to_air t
join  cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_Id
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t1.segment_head_id=t3.segment_head_id
left join cqsale.cq_traveller_info@to_air t4 on t1.flights_order_head_id=t4.flights_order_head_id
left join stg.s_cq_country_area t6 on t4.nationality=t6.country_code
where t1.r_flights_date>=trunc(sysdate)
and t2.flag<>2
and t3.flag<>2
and t1.flag_id in(3,5,40,41,7,11,12)
and t1.seats_name is not null
and t1.whole_flight like '9C%'
and t2.nationflag='国际'
and nvl(t6.country_name,'中国') like '%中国%'
group by case when t2.origin_country_id>0 then '国际回程'
when t2.origin_country_id=0 then '国际去程' end;


select /*+parallel(4) */
t1.r_flights_date,t1.whole_flight,
sum(case when t1.flag_id in(3,5,40,41) then 1
else 0 end) 预订人数,
sum(case when t1.flag_id in(7,11,12) then 1
else 0 end) 退票人数 
from cqsale.cq_order@to_air t
join  cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_Id
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t1.segment_head_id=t3.segment_head_id
left join cqsale.cq_traveller_info@to_air t4 on t1.flights_order_head_id=t4.flights_order_head_id
left join stg.s_cq_country_area t6 on t4.nationality=t6.country_code
where t1.r_flights_date>=trunc(sysdate)
and t2.flag<>2
and t3.flag<>2
and t1.flag_id in(3,5,40,41,7,11,12)
and t1.seats_name is not null
and t1.whole_flight like '9C%'
and t2.nationflag='国际'
and t2.origin_country_id>0
and nvl(t6.country_name,'中国') like '%中国%'
group by t1.r_flights_date,t1.whole_flight


 
 
 ------67、中转联程数据
 
 
drop table hdb.temp_feng_04102 purge;
create table hdb.temp_feng_04102 as
select distinct t1.seg_flag,t2.originairport_name||'-'||t2.destairport_name||'-'||t3.destairport_name ssegment,
t2.flight_no,to_char(t2.origin_std,'hh24:mi') origin_std,to_char(t2.dest_sta,'hh24:mi') dest_sta,
t2.originairport originairport ,case when t2.aircraft_type like '%320%' then 'A320'
else t2.aircraft_type end acno,to_char(t2.origin_std-1,'d') week,
t3.flight_no flight_no2,to_char(t3.origin_std,'hh24:mi') origin_std2,to_char(t3.dest_sta,'hh24:mi') dest_sta2,
t3.destairport,case when t3.aircraft_type like '%320%' then 'A320'
else t3.aircraft_type end acno2,to_char(t3.origin_std-1,'d') week2,t1.angle,round(t1.hub_interval,1) hub_interval
 from dw.da_connect_flight t1
 join dw.da_flight t2 on t1.segment_id1=t2.segment_head_id
 join dw.da_flight t3 on t1.segment_id2=t3.segment_head_id
 where t1.origin_airport2='CAN'
 and t2.flag<>2
 and t1.hub_interval<36
 and t1.hub_interval>1
 and t3.flag<>3
 and  t1.origin_std>=to_date('2019-12-22','yyyy-mm-dd')
 and t1.origin_std<  to_date('2019-12-29','yyyy-mm-dd')
 and t1.seg_flag in('境外-境外','境外-境内','境内-境外');


select tb1.*,tb2.week1,tb3.week2
from(
select distinct  t1.seg_flag,t1.ssegment,t1.flight_no,t1.origin_std,t1.dest_sta,t1.originairport,t1.acno,t1.flight_no2,t1.origin_std2,
t1.dest_sta2,t1.destairport,t1.acno2,t1.angle,t1.hub_interval
 from hdb.temp_feng_04102 t1)tb1
 left join (
 select distinct flight_no,origin_std,dest_sta,originairport,listagg(week,' ')within group(order by week)over(partition by 
 flight_no,origin_std,dest_sta,originairport ) week1
 from (select distinct h1.flight_no,h1.origin_std,h1.dest_sta,h1.originairport,h1.acno,h1.week
                from hdb.temp_feng_04102 h1))tb2 on tb1.flight_no=tb2.flight_no and tb1.origin_std=tb2.origin_std and tb1.dest_sta=tb2.dest_sta and tb1.originairport=tb2.originairport
 left join (
 select distinct flight_no2,origin_std2,dest_sta2,destairport,listagg(week2,' ')within group(order by week2)over(partition by 
 flight_no2,origin_std2,dest_sta2,destairport ) week2
 from (select distinct h1.flight_no2,h1.origin_std2,h1.dest_sta2,h1.destairport,h1.week2
                from hdb.temp_feng_04102 h1))tb3 on tb1.flight_no2=tb3.flight_no2 and tb1.origin_std2=tb3.origin_std2 and tb1.dest_sta2=tb3.dest_sta2 and tb1.destairport=tb3.destairport
 
 
 ==========================================20200413=========================
 ------68、扬泰
 
/*郑总，您好，打扰了，有一数据和您申请要下，您看能否方便提供下。扬泰机场张董，想要知看下2019年1月-12月从扬泰出港江苏客源构成
（就是江苏省各个城市旅客从扬泰出行比例构成），提供截图就可。*/


select t2.cust_province,t2.cust_city,count(1)
  from dw.fact_order_detail t1
  join dw.bi_order_region  t2 on t1.flights_order_head_id=t2.flights_order_head_id
  join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
  where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
    and t1.flag_id in(3,5,40)
    and t1.company_id=0
    and t1.whole_segment like 'YTY%'
    group by t2.cust_province,t2.cust_city
 
 
 ------69、
 select *
 from cqsale.cq_order@to_air t
 where t.terminal_id=-1
 and t.web_id=0
 and t.pay_flag=1
 and t.order_date>=trunc(sysdate)
 
 ====================================================20200414===========================================
 
 ------70、中转联程航线数据
 
 with temp_feng_04102 as(
select distinct t1.seg_flag,t2.originairport_name||'-'||t2.destairport_name||'-'||t3.destairport_name ssegment,
t2.flight_no,to_char(t2.origin_std,'hh24:mi') origin_std,to_char(t2.dest_sta,'hh24:mi') dest_sta,
t2.originairport originairport ,case when t2.aircraft_type like '%320%' then 'A320'
else t2.aircraft_type end acno,to_char(t2.origin_std-1,'d') week,
t3.flight_no flight_no2,to_char(t3.origin_std,'hh24:mi') origin_std2,to_char(t3.dest_sta,'hh24:mi') dest_sta2,
t3.destairport,case when t3.aircraft_type like '%320%' then 'A320'
else t3.aircraft_type end acno2,to_char(t3.origin_std-1,'d') week2,t1.angle,round(t1.hub_interval,1) hub_interval
 from dw.da_connect_flight t1
 join dw.da_flight t2 on t1.segment_id1=t2.segment_head_id
 join dw.da_flight t3 on t1.segment_id2=t3.segment_head_id
 where t1.origin_airport2='CAN'
 and t2.flag<>2
 and t1.hub_interval<36
 and t1.hub_interval>1
 and t3.flag<>3
 and  t1.origin_std>=to_date('2019-12-22','yyyy-mm-dd')
 and t1.origin_std<  to_date('2019-12-29','yyyy-mm-dd')
 and t1.seg_flag in('境外-境外','境外-境内','境内-境外'))

select tb1.*,tb2.week1,tb3.week2
from(
select distinct  t1.seg_flag,t1.ssegment,t1.flight_no,t1.origin_std,t1.dest_sta,t1.originairport,t1.acno,t1.flight_no2,t1.origin_std2,
t1.dest_sta2,t1.destairport,t1.acno2,t1.angle,t1.hub_interval
 from temp_feng_04102 t1)tb1
 left join (
 select distinct flight_no,origin_std,dest_sta,originairport,listagg(week,' ')within group(order by week)over(partition by 
 flight_no,origin_std,dest_sta,originairport ) week1
 from (select distinct h1.flight_no,h1.origin_std,h1.dest_sta,h1.originairport,h1.acno,h1.week
                from temp_feng_04102 h1))tb2 on tb1.flight_no=tb2.flight_no and tb1.origin_std=tb2.origin_std and tb1.dest_sta=tb2.dest_sta and tb1.originairport=tb2.originairport
 left join (
 select distinct flight_no2,origin_std2,dest_sta2,destairport,listagg(week2,' ')within group(order by week2)over(partition by 
 flight_no2,origin_std2,dest_sta2,destairport ) week2
 from (select distinct h1.flight_no2,h1.origin_std2,h1.dest_sta2,h1.destairport,h1.week2
                from temp_feng_04102 h1))tb3 on tb1.flight_no2=tb3.flight_no2 and tb1.origin_std2=tb3.origin_std2 and tb1.dest_sta2=tb3.dest_sta2 and tb1.destairport=tb3.destairport;
 
 ------71、成田到上海的旅客名单
 
 select t.order_date,t1.whole_segment,t1.r_flights_date,t6.country_name,t.work_tel,t1.r_tel,t.email,t1.change_flag,t1.seats_name,
t1.flights_order_id,t1.name||' '||coalesce(t1.second_name,''),t1.ticket_price*t1.r_com_rate
from cqsale.cq_order@to_air t
join  cqsale.cq_order_head@to_air  t1 on t.flights_order_id=t1.flights_order_Id
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
join cqsale.cq_flights_segment_head@to_air t3 on t1.segment_head_id=t3.segment_head_id
left join cqsale.cq_traveller_info@to_air t4 on t1.flights_order_head_id=t4.flights_order_head_id
left join stg.s_cq_codetype t5 on t1.codetype=t5.codetype
left join stg.s_cq_country_area t6 on t4.nationality=t6.country_code
where t1.r_flights_date=to_date('2020-05-03','yyyy-mm-dd')
and t3.flag<>2
and t1.r_tel is not null
and t1.flag_id in(3,5,40,41)
and t1.whole_flight like '9C%'
and t2.flights_segment_name like '成田%'
order by 1 desc
 
 
 =====================================20200420=================================================
 
 ------72、
 郑连刚:
拉一下 清明小长假，我们能到的几个旅游目的地航班的客座率情况，比如昆明、三亚、厦门\张家口\西安、青岛\兰州\西双版纳\十堰\敦煌\安顺\长白山\张家界等
郑连刚:
以及五一假期目前航班销售情况
郑连刚:
对应的这些航线的
 
 
 select '五一' 类型,h2.flights_date,h2.flights_segment_name,h2.destairport_name,sum(oversale),sum(ticketnum)
from(
select t1.segment_head_Id,t2.oversale,t1.flights_date,t2.flights_segment_name,t2.destairport_name,count(1) ticketnum
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_Id
 where t1.flights_date>=to_date('2020-05-01','yyyy-mm-dd')
    and t1.flights_date<=to_date('2020-05-05','yyyy-mm-dd')
    and t2.flag<>2
    and t1.company_id=0
  and t1.seats_name is not null
  and t1.flag_id in(3,5,40)
    and t2.destairport_name in('昆明','三亚','厦门','张家口','西安','青岛','兰州','西双版纳','十堰（武当山）','敦煌','长白山','张家界')
    group by t1.segment_head_Id,t2.oversale,t1.flights_date,t2.flights_segment_name,t2.destairport_name)h2
    group by h2.flights_date,h2.flights_segment_name,h2.destairport_name

   union all

   select '清明' 类型,h2.flights_date,h2.flights_segment_name,h2.destairport_name,sum(oversale),sum(ticketnum)
from(
select t1.segment_head_Id,t2.oversale,t1.flights_date,t2.flights_segment_name,t2.destairport_name,count(1) ticketnum
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_Id
 where t1.flights_date>=to_date('2020-04-04','yyyy-mm-dd')
    and t1.flights_date<=to_date('2020-04-06','yyyy-mm-dd')
    and t2.flag<>2
    and t1.company_id=0
  and t1.seats_name is not null
  and t1.flag_id in(3,5,40)
    and t2.destairport_name in('昆明','三亚','厦门','张家口','西安','青岛','兰州','西双版纳','十堰（武当山）','敦煌','长白山','张家界')
    group by t1.segment_head_Id,t2.oversale,t1.flights_date,t2.flights_segment_name,t2.destairport_name)h2
    group by h2.flights_date,h2.flights_segment_name,h2.destairport_name;
 
 
 ------73、乌鲁木齐到达旅客填写
 select t2.traveller_name,t2.idcard_no,t.flights_order_id,t.order_date,t1.name||' '||coalesce(t1.second_name,'') sname,
       t1.codeno,t1.r_flights_date,tt2.flights_segment_name
from cqsale.cq_order@to_air t
join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
join dw.da_flight tt2 on t1.segment_head_id=tt2.segment_head_id
join stg.tb_covid19_traveller_info t2 on t1.codeno=trim(upper(t2.idcard_no))
where t1.r_flights_date>=trunc(sysdate)
  and t1.whole_segment like '%URC'
  and t1.flag_id in(3,5,40,41)

union all

select t3.traveller_name,t3.passport_no,t.flights_order_id,t.order_date,t1.name||' '||coalesce(t1.second_name,'') sname,
       t1.codeno,t1.r_flights_date,tt2.flights_segment_name
from cqsale.cq_order@to_air t
join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
join dw.da_flight tt2 on t1.segment_head_id=tt2.segment_head_id
join stg.tb_covid19_traveller_info t3 on t1.codeno=trim(upper(t3.passport_no))
where t1.r_flights_date>=trunc(sysdate)
  and t1.whole_segment like '%URC'
  and t1.flag_id in(3,5,40,41)
 
 ======================================================20200423======================================
 ------74、货运收入数据导入
 
 insert into stg.wb_freight_charter 
select distinct t1.flight_no,t1.flight_date,t1.flights_segment_name,100000 income,sysdate
 from dw.da_flight t1
 where t1.flag in(0,1)
 and t1.flight_no in('9C6173','9C6174'/*,'9C8589','9C8590'*/)
 and t1.flight_date>=to_date('2020-04-22','yyyy-mm-dd')
 and t1.flight_date<=to_date('2020-04-25','yyyy-mm-dd')
 --and t1.flight_date in(trunc(sysdate-1),trunc(sysdate+2)
union all

select distinct t1.flight_no,t1.flight_date,t1.flights_segment_name,80000,sysdate
 from dw.da_flight t1
 where t1.flag in(0,1)
 and t1.flight_no in('9C8589','9C8590')
 and t1.flight_date>=to_date('2020-04-22','yyyy-mm-dd')
 and t1.flight_date<=to_date('2020-04-25','yyyy-mm-dd')
 and t1.flight_date in(trunc(sysdate-1),trunc(sysdate+2))
 
 union all
 
 select distinct t1.flight_no,t1.flight_date,t1.flights_segment_name,165000/2,sysdate
 from dw.da_flight t1
 where t1.flag in(0,1)
 and t1.flight_no in('9C8589','9C8590')
 and t1.flight_date>=to_date('2020-04-22','yyyy-mm-dd')
 and t1.flight_date<=to_date('2020-04-25','yyyy-mm-dd')
 and t1.flight_date in(trunc(sysdate),trunc(sysdate+1));
 
 
 ------75、
 select /*+parallel(4) */
case when t1.channel in('OTA','旗舰店') then 'OTA'
             else '自有' end channel,
       sum(case when t1.seats_name is not null then 1 else 0 end) num,
       sum(t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurce_fee+t1.other_fee+t1.other_fy)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
    and t2.flag<>2
    and t1.whole_flight like '9C%'
     -- and t1.seats_name not in('B','G','G1','G2','O')
    and t1.flag_id=40
    and t2.nationflag='国际'
    group by case when t1.channel in('OTA','旗舰店') then 'OTA'
             else '自有' end;
 
 
 ------76、货运数据录入
 
 insert into stg.wb_freight_charter
select distinct t1.flight_no,t1.flight_date,t1.flights_segment_name,192000/2 income,sysdate
 from dw.da_flight t1
 where t1.flag in(0,1)
 and t1.flight_no in('9C6239','9C6240')
 and t1.flight_date=to_date('2020-04-28','yyyy-mm-dd')
 
 union all
 
 select distinct t1.flight_no,t1.flight_date,t1.flights_segment_name,220000/2 income,sysdate
 from dw.da_flight t1
 where t1.flag in(0,1)
 and t1.flight_no in('9C6173','9C6174')
 and t1.flight_date=to_date('2020-04-28','yyyy-mm-dd')
 
 union all
 

select distinct t1.flight_no,t1.flight_date,t1.flights_segment_name,188000/2 income,sysdate
 from dw.da_flight t1
 where t1.flag in(0,1)
 and t1.flight_no in('9C8999','9C9000')
 and t1.flight_date=to_date('2020-04-28','yyyy-mm-dd')
 
union all

select distinct t1.flight_no,t1.flight_date,t1.flights_segment_name,188000/2,sysdate
 from dw.da_flight t1
 where t1.flag in(0,1)
 and t1.flight_no in('9C8589','9C8590')
and t1.flight_date=to_date('2020-04-28','yyyy-mm-dd')

 
 
 ------77、曼谷济州到上海的联系方式
 
 select distinct t.flights_order_id 订单号,t.email 邮箱,t.work_tel 订票人联系方式,t1.r_tel 乘机人联系方式
  FROM cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_air t1 ON t.flights_order_id =
                                         t1.flights_order_id
  JOIN dw.da_flight t2 ON t1.segment_head_id = t2.segment_head_id
 WHERE t.order_date>= trunc(sysdate-1)+18/24
   and t.order_date < trunc(sysdate)+18/24
   and t2.flag <> 2
   and t1.r_flights_date>=to_date('2020-05-01','yyyy-mm-dd')
   and t1.r_flights_date< to_date('2020-06-01','yyyy-mm-dd')
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t2.destairport_name='浦东'
   and t2.originairport in('CJU','BKK')
   and t1.whole_flight like '9C%'

 
 ------78、
 
 select /*+parallel(4) */
 t1.flights_date 航班日期, 
 case when t1.flag_id in(3,5,41) then '已售未乘机'
 when t1.flag_id in(7,11,12) then '已退票' end ,    
       case 
         when t1.order_date < to_date('2020-01-24', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-24', 'yyyy-mm-dd') 
              and d.money_date>d.origin_std 
              then '不符合规则'
         when t1.order_date < to_date('2020-01-24', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-24', 'yyyy-mm-dd') 
              and d.money_date< to_date('2020-01-24', 'yyyy-mm-dd') 
              then '不符合规则'
         when t1.order_date < to_date('2020-01-24', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-24', 'yyyy-mm-dd')
              and t2.origin_std< trunc(sysdate) and t1.flag_id in(3,5,41) then
          '不符合规则' 
           when t1.order_date < to_date('2020-01-24', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-24', 'yyyy-mm-dd') then
          '符合规则' 
          when t1.order_date < to_date('2020-01-28', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-28', 'yyyy-mm-dd') 
              and d.money_date>d.origin_std  then
          '不符合规则'
          when t1.order_date < to_date('2020-01-28', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-28', 'yyyy-mm-dd') 
              and d.money_date< to_date('2020-01-28', 'yyyy-mm-dd') then
          '不符合规则'   
           when t1.order_date < to_date('2020-01-28', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-28', 'yyyy-mm-dd') 
              and t2.origin_std< trunc(sysdate) and t1.flag_id in(3,5,41) then
          '不符合规则'        
         when t1.order_date < to_date('2020-01-28', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-28', 'yyyy-mm-dd') then
          '符合规则'
         else
          '不符合规则'
       end 政策类型,
       count(1)  退票数,
       sum(t1.ticket_price) 票价和
  from dw.fact_recent_order_detail t1
  left join dw.da_order_drawback d  on t1.flights_order_head_id =d.flights_order_head_id
  left join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date >= to_date('2020-01-24', 'yyyy-mm-dd')
   and t1.flag_id in(3,5,41,7,11,12)  
 group by t1.flights_date ,     
       case when t1.flag_id in(3,5,41) then '已售未乘机'
 when t1.flag_id in(7,11,12) then '已退票' end ,    
       case 
         when t1.order_date < to_date('2020-01-24', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-24', 'yyyy-mm-dd') 
              and d.money_date>d.origin_std 
              then '不符合规则'
         when t1.order_date < to_date('2020-01-24', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-24', 'yyyy-mm-dd') 
              and d.money_date< to_date('2020-01-24', 'yyyy-mm-dd') 
              then '不符合规则'
         when t1.order_date < to_date('2020-01-24', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-24', 'yyyy-mm-dd')
              and t2.origin_std< trunc(sysdate) and t1.flag_id in(3,5,41) then
          '不符合规则' 
           when t1.order_date < to_date('2020-01-24', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-24', 'yyyy-mm-dd') then
          '符合规则' 
          when t1.order_date < to_date('2020-01-28', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-28', 'yyyy-mm-dd') 
              and d.money_date>d.origin_std  then
          '不符合规则'
          when t1.order_date < to_date('2020-01-28', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-28', 'yyyy-mm-dd') 
              and d.money_date< to_date('2020-01-28', 'yyyy-mm-dd') then
          '不符合规则'   
           when t1.order_date < to_date('2020-01-28', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-28', 'yyyy-mm-dd') 
              and t2.origin_std< trunc(sysdate) and t1.flag_id in(3,5,41) then
          '不符合规则'        
         when t1.order_date < to_date('2020-01-28', 'yyyy-mm-dd') and
              t2.origin_std >= to_date('2020-01-28', 'yyyy-mm-dd') then
          '符合规则'
         else
          '不符合规则'
       end;
 
 ------79、
 
 select t1.flight_date,t1.h_route_id,case when t1.segment_type ='经停AB段' then 1
when t1.segment_type ='经停BC段' then 2 end,t1.flights_segment_name
 from dw.da_flight t1
 where t1.route_name like '%承德%'
 and t1.route_name like '%石家庄%'
 and t1.h_route_id in(1747,1748)
 and t1.flag<>2
 and t1.flight_date>=to_date('2019-01-01','yyyy-mm-dd')
 and t1.flight_date< to_date('2020-05-01','yyyy-mm-dd')
 and t1.segment_type<>'经停AC段';
 
 

 
 
 ------80、
 
 
  select /*+parallel(4) */ 
 t1.order_day,t1.channel,count(1),sum(case when t3.youhui_result>0 then 1 else 0 end),sum(t3.youhui_result)
 from dw.fact_order_detail t1
 left join stg.c_cq_order_youhui_detail t3 on t1.flights_order_head_id=t3.flights_order_head_id
 join 
 ( 
  select *
  from dw.da_restrict_userinfo@to_ods
  where feature_value='13317480002' 
 
 
 union all
 
 
 select *
  from dw.da_restrict_userinfo t1
  where t1.feature like '%福州任你游%')t2 on t1.client_id=t2.users_id
  where t1.order_day>=to_date('2020-04-01','yyyy-mm-dd')
  group by t1.order_day,t1.channel;
 
 ------81、多人往返订单(多人往返订单退订)
 
 select /*+parallel(4) */
count(1)
from(
select t1.flights_order_id,count(1) num,sum(case when t1.flag_id in(7,11,12) then 1 else 0 end)
  from dw.fact_recent_order_detail t1
  where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.order_day< to_date('2020-01-01','yyyy-mm-dd')
    and t1.wf_lc_father_id<>t1.flights_order_head_id
    group by t1.flights_order_id
    having count(1)>1);
  

select  /*+parallel(4) */
count(1)
from(
select t1.flights_order_id,count(1) num1,sum(case when t1.flag_id in(7,11,12) then 1 else 0 end) num2
  from dw.fact_recent_order_detail t1
  where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.order_day< to_date('2020-01-01','yyyy-mm-dd')
    and t1.wf_lc_father_id<>t1.flights_order_head_id
    group by t1.flights_order_id
    having count(1)>1)h1
    where h1.num2>1
 
 ------82、
 
 --再帮忙拉下7~16号  经停航班两段飞行时间之和大于4小时的航班，需要（航段，航班号，总计飞行时间）

select distinct route_name,flight_no,flighttime
from(
select t1.flight_date,t1.route_name,t1.flight_no,sum((t1.dest_sta-t1.origin_std)*24) flighttime
 from dw.da_flight t1
 where t1.flight_date>=to_date('2020-05-07','yyyy-mm-dd')
  and t1.flight_date< to_date('2020-05-17','yyyy-mm-dd')
  and t1.flag<>2
  and t1.segment_type like '%经停%'
  and t1.segment_type <>'经停AC段'
  group by t1.flight_date,t1.route_name,t1.flight_no)
  where flighttime>=4
 
 ------83、去哪儿代理识别数据
 
   select /*+parallel(4) */ 
 t1.order_day,t1.channel,count(1),sum(case when t3.youhui_result>0 then 1 else 0 end),sum(t3.youhui_result)
 from dw.fact_order_detail t1
 left join stg.c_cq_order_youhui_detail t3 on t1.flights_order_head_id=t3.flights_order_head_id
 join 
 ( 
  select *
  from dw.da_restrict_userinfo@to_ods
  where feature_value='13317480002' 
 
 
 union all
 
 
 select *
  from dw.da_restrict_userinfo t1
  where t1.feature like '%福州任你游%')t2 on t1.client_id=t2.users_id
  where t1.order_day>=to_date('2020-04-01','yyyy-mm-dd')
  group by t1.order_day,t1.channel
 
 ------84、候补数据
 
 create table hdb.temp_Feng_0508 as
select *
from(
select t1.segment_head_id,t1.flights_date,t1.flights_segment,t1.order_date orderday,t1.discount,t1.price,t1.ticketadfy,
       row_number()over(partition by  t1.segment_head_id order by t1.order_date) xid,t1.flights_date-trunc(t1.order_date) aheadys
 from hdb.mid_sellout_data t1
 where t1.seats_name <>'O'
 and t1.ticketadfy>0)h1
 where h1.xid=1
 
 union all
 
 select *
from(
select t1.segment_head_id,t1.FLIGHT_DATE,t1.FLIGHTS_SEGMENT_NAME,t1.r_order_date,t1.discount,t1.price,t1.ticketadfy,
       row_number()over(partition by  t1.segment_head_id order by t1.r_order_date) xid,t1.flight_date-trunc(t1.r_order_date) aheadys
 from hdb.mid_sellout_jtdata t1
 where t1.seats_name <>'O'
 and t1.ticketadfy>0)h1
 where h1.xid=1;


select /*+parallel(4) */
h1.segment_head_id,h1.flights_date,h1.flights_segment,
count(1) flightnum,sum(h1.ticketadfy),sum(h3.noshownum*h4.channelrate),sum(h3.noshownum*h4.channelrate*h2.rate),
sum(h5.backnum*h4.channelrate*h2.rate)
from hdb.temp_Feng_0508 h1
join dw.da_flight hb1 on h1.segment_head_id=hb1.segment_head_id
 left join (select tt1.segment_head_id,tt1.ahead_days,count(1),sum(count(1))over(partition by tt1.segment_head_id) totalnum,
 count(1)/sum(count(1))over(partition by tt1.segment_head_id) rate
              from dw.fact_order_detail tt1
              join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
              where tt1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
                and tt1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
                and tt1.seats_name not in('B','G1','G2','G','O')
                group by tt1.segment_head_id,tt1.ahead_days
 )h2 on h1.segment_head_id =h2.segment_head_id  and h1.aheadys=h2.ahead_days
 left join( 
 select segment_head_id,count(1)  noshownum
 from(
 select t1.segment_head_id,t1.flights_order_head_id
 from hdb.mid_noshow_data t1
 where t1.origin_std>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.origin_std< to_date('2020-01-01','yyyy-mm-dd')
 
union

select t2.segment_head_id,t2.flights_order_head_id
 from hdb.mid_jianke_data t2
 where t2.origin_std>=to_date('2019-01-01','yyyy-mm-dd')
   and t2.origin_std< to_date('2020-01-01','yyyy-mm-dd'))
   group by segment_head_id)h3 on h1.segment_head_id=h3.segment_head_id
   left join 
   (select tt1.segment_head_id,sum(case when tt1.channel in('手机','网站') then 1 else 0 end)/count(1) channelrate
              from dw.fact_order_detail tt1
              join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
              where tt1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
                and tt1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
                and tt1.seats_name not in('B','G1','G2','G','O')
                group by tt1.segment_head_id)h4 on h1.segment_head_id=h4.segment_head_id
left join (
select segment_head_id,sum(backnum)  backnum
from(select t1.segment_head_id,count(1) backnum
               from dw.da_order_drawback t1
               join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
               join hdb.Temp_Feng_0508 t3 on t1.segment_head_id=t3.segment_head_id
               where t1.money_date>=to_date('2019-01-01','yyyy-mm-dd')
                 and t1.money_date< to_date('2020-01-01','yyyy-mm-dd')
                 and t3.orderday<t1.money_date
                 and t1.money_date< t2.origin_std-2/24
                 group by t1.segment_head_id
                 
             union all
             
             select tb1.old_segment_id,count(1) 
               from dw.da_order_change tb1
               join dw.da_flight tb2 on tb1.old_segment_id=tb2.segment_head_id
               join hdb.temp_feng_0508 tb3 on tb1.old_segment_id=tb2.segment_head_id
               where tb1.modify_date>=to_date('2019-01-01','yyyy-mm-dd')
                 and tb1.modify_date< to_date('2020-01-01','yyyy-mm-dd')
                 and tb3.orderday< tb1.modify_date
                 and tb1.modify_date< tb2.origin_std-2/24
                 group by tb1.old_segment_id)
                 group by segment_head_id
                 
                 
                 ) h5 on h1.segment_head_id=h5.segment_head_id 
                 where hb1.flag<>2   
                group by h1.segment_head_id,h1.flights_date,h1.flights_segment;
        
        

        
select /*+parallel(4) */
h1.segment_head_id,h1.flights_date,h1.flights_segment,
1 flightnum,h1.ticketadfy,h3.noshownum,h4.channelrate,h2.rate,h5.backnum
from hdb.temp_Feng_0508 h1
join dw.da_flight hb1 on h1.segment_head_id=hb1.segment_head_id
 left join (select tt1.segment_head_id,tt1.ahead_days,count(1),sum(count(1))over(partition by tt1.segment_head_id) totalnum,
 count(1)/sum(count(1))over(partition by tt1.segment_head_id) rate
              from dw.fact_order_detail tt1
              join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
              where tt1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
                and tt1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
                and tt1.seats_name not in('B','G1','G2','G','O')
                group by tt1.segment_head_id,tt1.ahead_days
 )h2 on h1.segment_head_id =h2.segment_head_id  and h1.aheadys=h2.ahead_days
 left join( 
 select segment_head_id,count(1)  noshownum
 from(
 select t1.segment_head_id,t1.flights_order_head_id
 from hdb.mid_noshow_data t1
 where t1.origin_std>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.origin_std< to_date('2020-01-01','yyyy-mm-dd')
 
union

select t2.segment_head_id,t2.flights_order_head_id
 from hdb.mid_jianke_data t2
 where t2.origin_std>=to_date('2019-01-01','yyyy-mm-dd')
   and t2.origin_std< to_date('2020-01-01','yyyy-mm-dd'))
   group by segment_head_id)h3 on h1.segment_head_id=h3.segment_head_id
   left join 
   (select tt1.segment_head_id,sum(case when tt1.channel in('手机','网站') then 1 else 0 end)/count(1) channelrate
              from dw.fact_order_detail tt1
              join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
              where tt1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
                and tt1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
                and tt1.seats_name not in('B','G1','G2','G','O')
                group by tt1.segment_head_id)h4 on h1.segment_head_id=h4.segment_head_id
left join (
select segment_head_id,sum(backnum)  backnum
from(select t1.segment_head_id,count(1) backnum
               from dw.da_order_drawback t1
               join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
               join hdb.Temp_Feng_0508 t3 on t1.segment_head_id=t3.segment_head_id
               where t1.money_date>=to_date('2019-01-01','yyyy-mm-dd')
                 and t1.money_date< to_date('2020-01-01','yyyy-mm-dd')
                 and t3.orderday<t1.money_date
                 and t1.money_date< t2.origin_std-2/24
                 group by t1.segment_head_id
                 
             union all
             
             select tb1.old_segment_id,count(1) 
               from dw.da_order_change tb1
               join dw.da_flight tb2 on tb1.old_segment_id=tb2.segment_head_id
               join hdb.temp_feng_0508 tb3 on tb1.old_segment_id=tb3.segment_head_id
               where tb1.modify_date>=to_date('2019-01-01','yyyy-mm-dd')
                 and tb1.modify_date< to_date('2020-01-01','yyyy-mm-dd')
                 and tb3.orderday< tb1.modify_date
                 and tb1.modify_date< tb2.origin_std-2/24
                 group by tb1.old_segment_id)
                 group by segment_head_id                 
                 
                 ) h5 on h1.segment_head_id=h5.segment_head_id 
                 where hb1.flag<>2 ;
 
 
 ------85、网上值机数据
 
 /*select *
 from dba_tab_comments t1
 where t1.comments like '%值机%'*/
 
 select t1.airport,sum(t1.yd_zj+t1.web_zj) "web+移动值机数"
  from stg.s_cq_zj_kpi t1
  where t1.airport in('SHA','PVG','SZX')
    and t1.ym like '2019%'
    group by t1.airport
    
    select t2.originairport,sum(t1.boardnum)
 from dw.da_main_order t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
    and t2.origincity_name in('上海','深圳')
    and t2.company_id=0
    group by originairport
 
 
 ------86、零售直播手机号码收集

 
 select /*+PARALLEL(4)*/mobile
  from (select mobile,
               order_date,
               row_number() over(order by order_date desc) rid
          from (select getmobile(t1.mobile) mobile,
                       max(t1.order_date) order_date
                  from dw.fact_prt_order_detail t1
                 where t1.status in ('200', '300', '301', '400', '500')
                   and t1.mobile != '13888888888'
                   and getmobile(t1.mobile) != '-'
                 group by getmobile(t1.mobile)))
 where rid <= 200000;
 
 
 ------87、国际4、5月份noshow人数
 
 
select t2.flight_date,t2.flight_no,t2.flights_segment_name,t3.boardnum,t2.layout,count(1)
 from hdb.mid_noshow_data t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.da_main_order t3 on t1.segment_head_id=t3.segment_head_id
 where t1.origin_std>=to_date('2020-04-01','yyyy-mm-dd')
   and t2.nationflag<>'国内'
   and t2.flag<>2
   group by t2.flight_date,t2.flight_no,t2.flights_segment_name,t3.boardnum,t2.layout
   
 ------88、商务经济座特殊情况说明
 
 select *
from(
select distinct flights_order_head_id,ori_price,real_price
 from cqsale.CQ_IP_ADDITIONALSERVICE_SS@to_air)
 
 
 update  dw.bi_superseat_detail t1
set t1.UPGRADE_FEE=(
select min(real_price) real_price
 from cqsale.CQ_IP_ADDITIONALSERVICE_SS@to_air h1
 where h1.flights_order_head_id=t1.flights_order_head_id
 and t1.upgrade_fee<>h1.real_price)
where t1.upgrade_type>=0
and t1.flights_order_head_id in(select flights_order_head_id
from cqsale.CQ_IP_ADDITIONALSERVICE_SS@to_air);


 
 ------89、入境航班航班量、23岁以下乘机人数占比

   select /*+parallel(4) */
to_char(t1.flights_date,'yyyymm'),sum(case when getage(t1.flights_date,t1.birthday)<=23 then 1 else 0 end),
count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t2.destcity_name='上海'
   and t2.origin_country_id>0
   and t1.flights_date>=to_date('2020-04-01','yyyy-mm-dd')
   and t1.flights_date< trunc(sysdate)
   and t1.flag_id =40
   and t1.company_id=0
   group by to_char(t1.flights_date,'yyyymm');
   
   
   select /*+parallel(4) */
to_char(t1.flights_date,'yyyymm'),t2.segment_country,t2.originairport_name,count(distinct t1.segment_head_id),sum(case when getage(t1.flights_date,t1.birthday)<=23 then 1 else 0 end),
count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t2.destcity_name='上海'
   and t2.origin_country_id>0
   and t1.flights_date>=to_date('2020-04-01','yyyy-mm-dd')
   and t1.flights_date< trunc(sysdate)
   and t1.flag_id=40
   and t2.flag=0
   and t1.company_id=0
   group by to_char(t1.flights_date,'yyyymm'),t2.segment_country,t2.originairport_name
   
   union all
   
select 
to_char(t1.flights_date,'yyyymm'),t2.segment_country,t2.originairport_name,count(distinct t1.segment_head_id),sum(case when getage(t1.flights_date,t1.birthday)<=23 then 1 else 0 end),
count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t2.destcity_name='上海'
   and t2.origin_country_id>0
   and t1.flights_date>=trunc(sysdate)
   and t1.flights_date< to_date('2020-06-01','yyyy-mm-dd')
   and t1.flag_id in(3,5,40)
   and t2.flag=0
   and t1.company_id=0
   group by to_char(t1.flights_date,'yyyymm'),t2.segment_country,t2.originairport_name
   
   
 
 ------90、航线乘机人购票频次最高的航线
 
 select /*+parallel(4) */
replace(replace(t3.wf_segment,'浦东','上海'),'虹桥','上海'),count(1),count(distinct t1.traveller_name||t1.codeno)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
   and t1.flag_id=40
   and t1.seats_name is not null
   and t1.sex=1
   and t1.whole_flight like '9C%'
   group by replace(replace(t3.wf_segment,'浦东','上海'),'虹桥','上海');
   
   
   select /*+parallel(4) */
replace(replace(t3.wf_segment,'浦东','上海'),'虹桥','上海'),t1.traveller_name||t1.codeno,count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
   and t1.flag_id=40
   and t1.seats_name is not null
   and t1.sex=1
   and t1.whole_flight like '9C%'
   group by replace(replace(t3.wf_segment,'浦东','上海'),'虹桥','上海'),t1.traveller_name||t1.codeno;
   
   
   
   
   select /*+parallel(4) */
wf_city,count(1) sname
from(
select 
replace(replace(t3.wf_segment,'浦东','上海'),'虹桥','上海') wf_city,t1.traveller_name||t1.codeno sname,count(1) num1
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
   and t1.flag_id=40
   and t1.seats_name is not null
   and t1.sex=1
   and t1.whole_flight like '9C%'
   group by replace(replace(t3.wf_segment,'浦东','上海'),'虹桥','上海'),t1.traveller_name||t1.codeno)h1
   where  num1>=10
   group by wf_city;
   
 
 
 ------91、
 
 始发地，目的地。


select distinct t1.originairport_name,t1.destairport_name
from dw.da_flight t1
where t1.flight_date>=to_date('2020-05-17','yyyy-mm-dd')
  and t1.flight_date< to_date('2020-05-23','yyyy-mm-dd')
  and t1.flag<>2
  and t1.company_id=0
 
 ------92、销售截止时间测算
 
 select '临近20分钟' 类型,t1.flights_date,t2.weeks,count(1),sum(t1.ticket_price)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id
                                  and t2.route_id = t3.route_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2020-04-06', 'yyyy-mm-dd')
   and t1.flights_date <=to_date('2020-05-10', 'yyyy-mm-dd')

   and t1.seats_name not in ('B', 'G', 'G1', 'G2', 'O')
   and t1.whole_segment like 'SHA%'
   and t2.flag <> 2
   and (t2.origin_std-t1.order_date)*24>=60/60
   and (t2.origin_std-t1.order_date)*24<=80/60
   group by t1.flights_date,t2.weeks

union all

select '临近40分钟' 类型,t1.flights_date,t2.weeks,count(1),sum(t1.ticket_price)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id
                                  and t2.route_id = t3.route_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2020-04-06', 'yyyy-mm-dd')
   and t1.flights_date <=to_date('2020-05-10', 'yyyy-mm-dd')

   and t1.seats_name not in ('B', 'G', 'G1', 'G2', 'O')
   and t1.whole_segment like 'SHA%'
   and t2.flag <> 2
   and (t2.origin_std-t1.order_date)*24>=80/60
   and (t2.origin_std-t1.order_date)*24<=100/60
   group by t1.flights_date,t2.weeks；
   
   
   select '临近20分钟' 类型,to_char(t1.flights_date,'yyyymm'),count(1),sum(t1.ticket_price)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id
                                  and t2.route_id = t3.route_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-10', 'yyyy-mm-dd')
   
   and t1.seats_name not in ('B', 'G', 'G1', 'G2', 'O')
   and t1.whole_segment like 'SHA%'
   and t2.flag <> 2
   and (t2.origin_std-t1.order_date)*24>=60/60
   and (t2.origin_std-t1.order_date)*24<=80/60
   group by to_char(t1.flights_date,'yyyymm')

union all

select '临近40分钟' 类型,to_char(t1.flights_date,'yyyymm'),count(1),sum(t1.ticket_price)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id
                                  and t2.route_id = t3.route_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date < to_date('2020-01-10', 'yyyy-mm-dd')
   
   and t1.seats_name not in ('B', 'G', 'G1', 'G2', 'O')
   and t1.whole_segment like 'SHA%'
   and t2.flag <> 2
   and (t2.origin_std-t1.order_date)*24>=80/60
   and (t2.origin_std-t1.order_date)*24<=100/60
   group by to_char(t1.flights_date,'yyyymm');
 
 
 ------93、保险立减
 
 select /*+parallel(4) */
to_char(t1.flights_date,'yyyymm') 航班月,
                    count(distinct t1.flights_order_head_id) 机票量,
                    sum(t2.DISCOUNT_AMOUNT) 立减金额
 from dw.fact_order_detail t1
 join cqsale.CQ_INSURANCE_DISCOUNT_HISTORY@to_air t2 on t1.flights_order_head_id =
                                                        t2.order_head_id
where t1.flights_date >= to_date('2018-01-01','yyyy-mm-dd')
  and t2.type = 1
  and t1.flag_id =40
  and t1.whole_flight like '9C%'           
group by to_char(t1.flights_date,'yyyymm');
 
=================================================20200515==============================================
 ------94、辅收产品订单单退数据94、辅收产品订单单退数据
 
 /*航班日期： 2019.1月31-2020年4月31
展示维度：

航班日期、订单号、单退的辅收产品、单退的辅收产品的销售终端、销售工号、单退的金额、操作单退的工号、操作单退的时间点
*/

select /*+parallel(4) */
h2.r_flights_date 航班日期,h3.flights_order_id 订单号,h9.flag_name 机票状态,h7.terminal 机票订票终端,h5.users_id 机票操作人工号,
h2.order_id 辅收订单号,h2.other_order_head_id 辅收订单编号,h10.xproduct_name 辅收产品名称,h6.terminal 辅收销售终端,h3.users_id 辅收操作人工号,h2.EX_NFD2 行李件数,
h2.book_price*h2.r_com_rate 辅收金额,h1.users_id 单退操作人工号,h1.modify_date 单退操作时间,h8.BAGA,h8.bagw
from(
select modify_date,users_id,fy,to_number(regexp_substr(modify_content,'[0-9]+')) other_order_head_id,modify_content
 from cqsale.cq_flights_head_history@to_air
 where modify_content like '%单退%'
 and modify_content like '%辅助产品订单%'
 and modify_date>=to_date('2018-01-01','yyyy-mm-dd')
 and modify_date< trunc(sysdate))h1
 join cqsale.cq_other_order_head h2 on h1.other_order_head_id=h2.other_order_head_id
 join cqsale.cq_other_order h3 on h2.order_id=h3.order_id
 left join cqsale.cq_order_head h4 on h2.order_head_id=h4.flights_order_head_id
 left join cqsale.cq_order h5 on h5.flights_order_id=h4.flights_order_id
 left join cqsale.cq_termial h6 on h3.terminal_id=h6.terminal_id
  left join cqsale.cq_termial h7 on h5.terminal_id=h7.terminal_id 
 left join dw.da_dcs_h h8 on h8.rl=h4.flights_order_id and h4.valid_code=h8.ri
left join stg.s_cq_order_head_flag h9 on h4.flag_id=h9.flag
left join cqsale.cq_xproduct h10 on h10.xproduct_id=h2.book_id and h2.ex_nfd1=h10.xtype_id
 where h2.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and h2.flights_date< to_date('2020-05-01','yyyy-mm-dd')
and h2.whole_flight like '9C%'
and h2.ex_nfd1 in(6,10,17) 
 
 
 
 select /*+parallel(4) */
h2.r_flights_date,h3.flights_order_id,h9.flag_name,h7.terminal,h5.users_id,
h2.order_id,h2.other_order_head_id,h10.xproduct_name,h6.terminal,h3.users_id,h2.EX_NFD2,
h2.book_price*h2.r_com_rate,h1.users_id,h1.modify_date,h8.BAGA,h8.bagw
from(
select modify_date,users_id,fy,to_number(regexp_substr(modify_content,'[0-9]+')) other_order_head_id,modify_content
 from cqsale.cq_flights_head_history@to_air
 where modify_content like '%单退%'
 and modify_content like '%辅助产品订单%'
 and modify_date>=to_date('2018-01-01','yyyy-mm-dd')
 and modify_date< trunc(sysdate))h1
 join cqsale.cq_other_order_head@to_air h2 on h1.other_order_head_id=h2.other_order_head_id
 join cqsale.cq_other_order@to_air h3 on h2.order_id=h3.order_id
 left join cqsale.cq_order_head@to_air h4 on h2.order_head_id=h4.flights_order_head_id
 left join cqsale.cq_order@to_air h5 on h5.flights_order_id=h4.flights_order_id
 left join stg.s_cq_terminal h6 on h3.terminal_id=h6.terminal_id
  left join cqsale.cq_terminal@to_air h7 on h5.terminal_id=h7.terminal_id 
 left join dw.da_dcs_h h8 on h8.rl=h4.flights_order_id and h4.valid_code=h8.ri
left join stg.s_cq_order_head_flag h9 on h4.flag_id=h9.flag
left join cqsale.cq_xproduct@to_air h10 on h10.xproduct_id=h2.book_id and h2.ex_nfd1=h10.xtype_id
 where h2.r_flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and h2.r_flights_date< to_date('2020-05-01','yyyy-mm-dd')
and h2.whole_flight like '9C%'
and h2.ex_nfd1 in(6,10,17) 
 
 
 ========================================20200518================================================
 
 ------95、
 
 
 select * from cqsale.cq_flights_head_history@to_air t 
where t.modify_content like '%辅助产品订单%' and t.users_id = '99952'



select /*+parallel(4) */
h2.r_flights_date 航班日期,h3.flights_order_id 订单号,h9.flag_name 机票状态,h7.terminal 机票订票终端,h5.users_id 机票操作人工号,
h2.order_id 辅收订单号,h2.other_order_head_id 辅收订单编号,h10.xproduct_name 辅收产品名称,h6.terminal 辅收销售终端,h3.users_id 辅收操作人工号,h2.EX_NFD2 行李件数,
h2.book_price*h2.r_com_rate 辅收金额,h1.users_id 单退操作人工号,h1.modify_date 单退操作时间
from(
select modify_date,users_id,fy,to_number(regexp_substr(modify_content,'[0-9]+')) other_order_head_id,modify_content
 from cqsale.cq_flights_head_history@to_air
 where modify_content like '%单退%'
 and modify_content like '%辅助产品订单%'
 and modify_date>=to_date('2018-01-01','yyyy-mm-dd')
 and users_id = '99952'
 and modify_date< trunc(sysdate))h1
 join cqsale.cq_other_order_head h2 on h1.other_order_head_id=h2.other_order_head_id
 join cqsale.cq_other_order h3 on h2.order_id=h3.order_id
 left join cqsale.cq_order_head h4 on h2.order_head_id=h4.flights_order_head_id
 left join cqsale.cq_order h5 on h5.flights_order_id=h4.flights_order_id
 left join cqsale.cq_termial h6 on h3.terminal_id=h6.terminal_id
  left join cqsale.cq_termial h7 on h5.terminal_id=h7.terminal_id 
left join stg.s_cq_order_head_flag h9 on h4.flag_id=h9.flag
left join cqsale.cq_xproduct h10 on h10.xproduct_id=h2.book_id and h2.ex_nfd1=h10.xtype_id
 where h2.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and h2.flights_date< to_date('2020-05-01','yyyy-mm-dd')
and h2.whole_flight like '9C%'
and h2.ex_nfd1 in(6,10,17) 

 
 ------96、上海临沂数据

 select  trunc(t1.origin_std) 航班日期,t1.flights_segment,
   (t2.PLAN_Y + t2.PLAN_B + t2.PLAN_H + t2.PLAN_K + t2.PLAN_L +
                       t2.PLAN_M + t2.PLAN_N + t2.PLAN_Q + t2. PLAN_T + t2.
                        PLAN_X + t2.PLAN_U + t2.PLAN_E + t2.PLAN_W + t2.PLAN_P +
                        t2.PLAN_P1 + t2.PLAN_P2 + t2.PLAN_O + t2. PLAN_G + t2.PLAN_G1 
            + t2.PLAN_G2 + t2.PLAN_R1 + t2.PLAN_R2 + t2.PLAN_R3 + t2.PLAN_R4 +
                        NVL(t2.PLAN_F, 0) + NVL(t2.PLAN_F1, 0) + NVL(t2.PLAN_F2, 0) +
                        NVL(t2.PLAN_F3, 0) + NVL(t2.PLAN_F4, 0) + NVL(t2.PLAN_C, 0) +
                        NVL(t2.PLAN_C1, 0) + NVL(t2.PLAN_C2, 0) +
                        NVL(t2.PLAN_C3, 0) + NVL(t2.PLAN_C4, 0) + NVL(t2.PLAN_S, 0) +
                        NVL(t2.PLAN_V, 0) + NVL(t2.PLAN_A, 0) + NVL(t2.PLAN_D, 0) +
                        NVL(t2.PLAN_I, 0) + NVL(t2.PLAN_J, 0) + NVL(t2.PLAN_Z, 0) +
                        NVL(t2.PLAN_P3, 0) + NVL(t2.PLAN_P4, 0) +
                        NVL(t2.PLAN_P5, 0)) 计划数,
   (T3.SALED_Y + T3.SALED_B + T3.SALED_H + T3.SALED_K + T3.SALED_L +
                       T3.SALED_M + T3.SALED_N + T3.SALED_Q + T3.SALED_T + T3.SALED_X + T3.SALED_U + T3.SALED_E + T3.SALED_W + T3.SALED_P +
                        T3.SALED_P1 + T3.SALED_P2 + T3.SALED_O + T3.SALED_G + T3.SALED_G1 
            + T3.SALED_G2 + T3.SALED_R1 + T3.SALED_R2 + T3.SALED_R3 + T3.SALED_R4 +
                        NVL(T3.SALED_F, 0) + NVL(T3.SALED_F1, 0) + NVL(T3.SALED_F2, 0) +
                        NVL(T3.SALED_F3, 0) + NVL(T3.SALED_F4, 0) + NVL(T3.SALED_C, 0) +
                        NVL(T3.SALED_C1, 0) + NVL(T3.SALED_C2, 0) +
                        NVL(T3.SALED_C3, 0) + NVL(T3.SALED_C4, 0) + NVL(T3.SALED_S, 0) +
                        NVL(T3.SALED_V, 0) + NVL(T3.SALED_A, 0) + NVL(T3.SALED_D, 0) +
                        NVL(T3.SALED_I, 0) + NVL(T3.SALED_J, 0) + NVL(T3.SALED_Z, 0) +
                        NVL(T3.SALED_P3, 0) + NVL(T3.SALED_P4, 0) +
                        NVL(T3.SALED_P5, 0)) 占位数,
--  在售价格  舱位  在售价格余票
  case when t3.REMNANT_P1>0 then t1.money_p1
  when t3.REMNANT_P>0 then t1.money_p
  when t3.REMNANT_R4>0 then t1.money_R4
  when t3.REMNANT_R3>0 then t1.money_R3
  when t3.REMNANT_R2>0 then t1.money_R2
  when t3.REMNANT_R1>0 then t1.money_R1
  when t3.REMNANT_E>0 then t1.money_E
  when t3.REMNANT_U>0 then t1.money_U
  when t3.REMNANT_X>0 then t1.money_X
  when t3.REMNANT_T>0 then t1.money_T
  when t3.REMNANT_Q>0 then t1.money_Q
  when t3.REMNANT_N>0 then t1.money_N
  when t3.REMNANT_M>0 then t1.money_M
  when t3.REMNANT_L>0 then t1.money_L
  when t3.REMNANT_K>0 then t1.money_K
  when t3.REMNANT_V>0 then t1.money_V
  when t3.REMNANT_H>0 then t1.money_H
    when t3.REMNANT_S>0 then t1.money_S
  when t3.REMNANT_Y>0 then t1.money_Y 
  else null end  minmoney,
  case when t3.REMNANT_P1>0 then 'P1'
  when t3.REMNANT_P>0 then 'P'
  when t3.REMNANT_R4>0 then 'R4'
  when t3.REMNANT_R3>0 then 'R3'
  when t3.REMNANT_R2>0 then 'R2'
  when t3.REMNANT_R1>0 then 'R1'
  when t3.REMNANT_E>0 then 'E'
  when t3.REMNANT_U>0 then 'U'
  when t3.REMNANT_X>0 then 'X'
  when t3.REMNANT_T>0 then 'T'
  when t3.REMNANT_Q>0 then 'Q'
  when t3.REMNANT_N>0 then 'N'
  when t3.REMNANT_M>0 then 'M'
  when t3.REMNANT_L>0 then 'L'
  when t3.REMNANT_K>0 then 'K'
  when t3.REMNANT_V>0 then 'V'
  when t3.REMNANT_H>0 then 'H'
    when t3.REMNANT_S>0 then 'S'
  when t3.REMNANT_Y>0 then 'Y' 
  else null end  mincabin,
    case when t3.REMNANT_P1>0 then 'P1'
  when t3.REMNANT_P>0 then t3.REMNANT_P
  when t3.REMNANT_R4>0 then t3.REMNANT_R4
  when t3.REMNANT_R3>0 then t3.REMNANT_R3
  when t3.REMNANT_R2>0 then t3.REMNANT_R2
  when t3.REMNANT_R1>0 then t3.REMNANT_R1
  when t3.REMNANT_E>0 then t3.REMNANT_E
  when t3.REMNANT_U>0 then t3.REMNANT_U
  when t3.REMNANT_X>0 then t3.REMNANT_X
  when t3.REMNANT_T>0 then t3.REMNANT_T
  when t3.REMNANT_Q>0 then t3.REMNANT_Q
  when t3.REMNANT_N>0 then t3.REMNANT_N
  when t3.REMNANT_M>0 then t3.REMNANT_M
  when t3.REMNANT_L>0 then t3.REMNANT_L
  when t3.REMNANT_K>0 then t3.REMNANT_K
  when t3.REMNANT_V>0 then t3.REMNANT_V
  when t3.REMNANT_H>0 then t3.REMNANT_H
    when t3.REMNANT_S>0 then t3.REMNANT_S
  when t3.REMNANT_Y>0 then t3.REMNANT_Y
  else null end  minremant            
  from cqsale.cq_flights_segment_head t1
  join cqsale.cq_flights_seats_amount_plan t2 on t1.segment_head_id=t2.segment_head_id
  join cqsale.cq_flights_seats_amount t3 on t1.segment_head_id=t3.segment_head_id
  where t1.flights_segment in('LYISHA','LYIPVG','PVGLYI','SHALYI')
    and t1.origin_std>=to_date('2020-05-25','yyyy-mm-dd')
  and t1.origin_std<  to_date('2020-07-22','yyyy-mm-dd')
  and t1.flag<>2;
  
  

select  t1.r_flights_no 航班号,t1.flights_segment 航段,to_char(t1.origin_std,'yymmdd') 航班日期,
t2.PLAN_Y Y_计划数,
t3.SALED_Y Y_占位数,
t2.PLAN_S S_计划数,
t3.SALED_S S_占位数,
t2.PLAN_H H_计划数,
t3.SALED_H H_占位数,
t2.PLAN_V V_计划数,
t3.SALED_V V_占位数,
t2.PLAN_K K_计划数,
t3.SALED_K K_占位数,
t2.PLAN_L L_计划数,
t3.SALED_L L_占位数,
t2.PLAN_M M_计划数,
t3.SALED_M M_占位数,
t2.PLAN_N N_计划数,
t3.SALED_N N_占位数,
t2.PLAN_Q Q_计划数,
t3.SALED_Q Q_占位数,
t2.PLAN_T T_计划数,
t3.SALED_T T_占位数,
t2.PLAN_X X_计划数,
t3.SALED_X X_占位数,
t2.PLAN_U U_计划数,
t3.SALED_U U_占位数,
t2.PLAN_E E_计划数,
t3.SALED_E E_占位数,
t2.PLAN_R1 R1_计划数,
t3.SALED_R1 R1_占位数,
t2.PLAN_R2 R2_计划数,
t3.SALED_R2 R2_占位数,
t2.PLAN_R3 R3_计划数,
t3.SALED_R3 R3_占位数,
t2.PLAN_R4 R4_计划数,
t3.SALED_R4 R4_占位数,
t2.PLAN_P P_计划数,
t3.SALED_P P_占位数,
t2.PLAN_P1 P1_计划数,
t3.SALED_P1 P1_占位数
  from cqsale.cq_flights_segment_head@to_air t1
  join cqsale.cq_flights_seats_amount_plan@to_air t2 on t1.segment_head_id=t2.segment_head_id
  join cqsale.cq_flights_seats_amount@to_air t3 on t1.segment_head_id=t3.segment_head_id
  where t1.flights_segment in('LYISHA','LYIPVG','PVGLYI','SHALYI')
    and t1.origin_std>=trunc(sysdate)
  and t1.origin_std<  to_date('2020-10-25','yyyy-mm-dd')
  and t1.flag<>2
  order by 3,2 desc;

 ------97、航线出行目的判断
 select t2.flights_city_name,t.part,count(1)
 from dw.fact_orderhead_trippurpose@to_ods t
 join dw.fact_order_detail t1 on t.flights_order_head_id=t1.flights_order_head_Id
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flag_id=40
   and t1.flights_date>=to_date('2020-05-01','yyyy-mm-dd')
   group by t2.flights_city_name,t.part
 
 ===========================================20200529============================================
 ------98、 支付宝小程序的销售数
 
 select trunc(t2.order_date),t2.ex_nfd1,count(1)
 from hdb.cms_app_aliminiorder t1
 join stg.s_cq_order t2 on t1.orderno=t2.flights_order_id
 join stg.s_cq_order_pay_flag t3 on t2.pay_flag=t3.pay_flag
 --where t2.pay_flag=1
 group by trunc(t2.order_date),t2.ex_nfd1
 
 ------99、短信数据获取
 select *
from(
select t3.name,decode(t1.SMS_PLATFORM,1,'东方般若',2,'满意通',5,'哈朵',6,'讯越',
7,'亿美',8,'佳讯',9,'大汉三通',t1.SMS_PLATFORM) 供应商,t1.content,row_Number()over(partition by 
t3.name,decode(t1.SMS_PLATFORM,1,'东方般若',2,'满意通',5,'哈朵',6,'讯越',
7,'亿美',8,'佳讯',9,'大汉三通',t1.SMS_PLATFORM) order by 1) xid
  from stg.s_tb_sms_down_his t1
  LEFT JOIN STG.S_TB_SMS_SYS_FLAG T2 ON T1.SYS_FLAG=T2.ID
  LEFT JOIN STG.S_TB_SMS_TYPE T3 ON T1.REF_ID1=T3.ID
  WHERE TRUNC(t1.PROCESS_TIME)>=to_date('2020-05-01','yyyy-mm-dd')
  and t1.STATUS=3)h1
  where xid=1;
 
 ==============================================20200601=============================================
 ------100、实时渠道占比及立减占比
 
select t1.order_day,t1.segment_head_id,t2.flight_date,t2.flight_no,t2.flights_segment_name,t1.seats_name,t1.ticket_price/t1.r_com_rate,t1.seat_type,t1.comb_fee,
h1.money cny_money,h2.money jny_money_,t1.r_com_rate,
case when h2.money=0 and h2.seats_name <>'Y' then round(round((h1.money+nvl(t1.comb_fee,0))/t1.r_com_rate,0)/10,0)*10
when h2.money>0 and h2.seats_name ='Y' then h2.money
else h2.money end jp_money     
     from dw.fact_recent_order_detail t1
     join dw.da_flight t2 on t1.segment_Head_id=t2.segment_head_id
     join (
select *
          from (select segment_head_id,
                       MONEY_E,
MONEY_H,
MONEY_I,
MONEY_K,
MONEY_L,
MONEY_M,
MONEY_N,
MONEY_P,
MONEY_P1,
MONEY_P2,
MONEY_P3,
MONEY_P4,
MONEY_P5,
MONEY_Q,
MONEY_R1,
MONEY_R2,
MONEY_R3,
MONEY_R4,
MONEY_S,
MONEY_T,
MONEY_U,
MONEY_V,
MONEY_X,
MONEY_Y                       
from cqsale.cq_flights_segment_head@to_air) unpivot(money for seats_name in (MONEY_E as 'E',
MONEY_H as 'H',
MONEY_I as 'I',
MONEY_K as 'K',
MONEY_L as 'L',
MONEY_M as 'M',
MONEY_N as 'N',
MONEY_P as 'P',
MONEY_P1 as 'P1',
MONEY_P2 as 'P2',
MONEY_P3 as 'P3',
MONEY_P4 as 'P4',
MONEY_P5 as 'P5',
MONEY_Q as 'Q',
MONEY_R1 as 'R1',
MONEY_R2 as 'R2',
MONEY_R3 as 'R3',
MONEY_R4 as 'R4',
MONEY_S as 'S',
MONEY_T as 'T',
MONEY_U as 'U',
MONEY_V as 'V',
MONEY_X as 'X',
MONEY_Y as 'Y'
))
)h1 on t1.segment_head_id=h1.segment_head_id and t1.seats_name=h1.seats_name

left join(
select *
          from (select segment_head_id,
                       MONEY_E,
MONEY_H,
MONEY_I,
MONEY_K,
MONEY_L,
MONEY_M,
MONEY_N,
MONEY_P,
MONEY_P1,
MONEY_P2,
MONEY_P3,
MONEY_P4,
MONEY_P5,
MONEY_Q,
MONEY_R1,
MONEY_R2,
MONEY_R3,
MONEY_R4,
MONEY_S,
MONEY_T,
MONEY_U,
MONEY_V,
MONEY_X,
MONEY_Y                       
from cqsale.cq_flights_segment_head_m@to_air
where money_class_id=1) unpivot(money for seats_name in (MONEY_E as 'E',
MONEY_H as 'H',
MONEY_I as 'I',
MONEY_K as 'K',
MONEY_L as 'L',
MONEY_M as 'M',
MONEY_N as 'N',
MONEY_P as 'P',
MONEY_P1 as 'P1',
MONEY_P2 as 'P2',
MONEY_P3 as 'P3',
MONEY_P4 as 'P4',
MONEY_P5 as 'P5',
MONEY_Q as 'Q',
MONEY_R1 as 'R1',
MONEY_R2 as 'R2',
MONEY_R3 as 'R3',
MONEY_R4 as 'R4',
MONEY_S as 'S',
MONEY_T as 'T',
MONEY_U as 'U',
MONEY_V as 'V',
MONEY_X as 'X',
MONEY_Y as 'Y'
))
)h2 on t1.segment_head_id=h2.segment_head_id and t1.seats_name=h2.seats_name              
  
where t2.flight_date>=to_date('2020-04-01','yyyy-mm-dd')    
    --and t2.flights_segment_name like '浦东%'
    and t1.money_class_id=1
    and t2.segment_country='日本'
    and t2.company_id=0
    and t1.flag_id in(3,5,40)
    and t1.sex in(1,2)
    and t1.seats_name ='Y'
 ===================================================20200602============================================
 ------101、
 能看一下19年1月到现在国际和地区的上海航线中，身份证是上海本地乘客人次的比例吗，月度的
 
 select  /*+parallel(2) */
  to_char(t1.flights_date,'yyyymm'),
case when t5.cust_province like '%上海%' then '上海'
     else '-' end 省份,        
       count(1) 销量
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id
                                  and t2.route_id = t3.route_id
  left join dw.da_restrict_userinfo t4 on t1.client_id = t4.users_id
  left join dw.bi_order_region t5 on t1.flights_order_head_id=t5.flights_order_head_id
 where t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date < to_date('2020-06-01', 'yyyy-mm-dd')
   and t1.whole_flight like '9C%'
   and t2.nationflag <>'国内'
   and t2.flights_city_name like '%上海%'
   and t1.seats_name is not null
   group by to_char(t1.flights_date,'yyyymm'),
case when t5.cust_province like '%上海%' then '上海'
       else '-' end;
 
 
 
 ------102、日币定价和人民币定价的差异
 
select t1.segment_head_id,t2.flight_date,t2.flight_no,t2.flights_segment_name,t1.seats_name,t1.ticket_price/t1.r_com_rate,t1.seat_type,t1.comb_fee,
h1.money cny_money,h2.money jny_money_,t1.r_com_rate,
case when h2.money=0 and h2.seats_name <>'Y' then ceil((h1.money+nvl(t1.comb_fee,0))/t1.r_com_rate/10)
when h2.money>0 and h2.seats_name ='Y' then h2.money
else h2.money end jp_money     
     from dw.fact_recent_order_detail t1
     join dw.da_flight t2 on t1.segment_Head_id=t2.segment_head_id
     join (
select *
          from (select segment_head_id,
                       MONEY_E,
MONEY_H,
MONEY_I,
MONEY_K,
MONEY_L,
MONEY_M,
MONEY_N,
MONEY_P,
MONEY_P1,
MONEY_P2,
MONEY_P3,
MONEY_P4,
MONEY_P5,
MONEY_Q,
MONEY_R1,
MONEY_R2,
MONEY_R3,
MONEY_R4,
MONEY_S,
MONEY_T,
MONEY_U,
MONEY_V,
MONEY_X,
MONEY_Y                       
from cqsale.cq_flights_segment_head@to_air) unpivot(money for seats_name in (MONEY_E as 'E',
MONEY_H as 'H',
MONEY_I as 'I',
MONEY_K as 'K',
MONEY_L as 'L',
MONEY_M as 'M',
MONEY_N as 'N',
MONEY_P as 'P',
MONEY_P1 as 'P1',
MONEY_P2 as 'P2',
MONEY_P3 as 'P3',
MONEY_P4 as 'P4',
MONEY_P5 as 'P5',
MONEY_Q as 'Q',
MONEY_R1 as 'R1',
MONEY_R2 as 'R2',
MONEY_R3 as 'R3',
MONEY_R4 as 'R4',
MONEY_S as 'S',
MONEY_T as 'T',
MONEY_U as 'U',
MONEY_V as 'V',
MONEY_X as 'X',
MONEY_Y as 'Y'
))
)h1 on t1.segment_head_id=h1.segment_head_id and t1.seats_name=h1.seats_name

left join(
select *
          from (select segment_head_id,
                       MONEY_E,
MONEY_H,
MONEY_I,
MONEY_K,
MONEY_L,
MONEY_M,
MONEY_N,
MONEY_P,
MONEY_P1,
MONEY_P2,
MONEY_P3,
MONEY_P4,
MONEY_P5,
MONEY_Q,
MONEY_R1,
MONEY_R2,
MONEY_R3,
MONEY_R4,
MONEY_S,
MONEY_T,
MONEY_U,
MONEY_V,
MONEY_X,
MONEY_Y                       
from cqsale.cq_flights_segment_head_m@to_air
where money_class_id=1) unpivot(money for seats_name in (MONEY_E as 'E',
MONEY_H as 'H',
MONEY_I as 'I',
MONEY_K as 'K',
MONEY_L as 'L',
MONEY_M as 'M',
MONEY_N as 'N',
MONEY_P as 'P',
MONEY_P1 as 'P1',
MONEY_P2 as 'P2',
MONEY_P3 as 'P3',
MONEY_P4 as 'P4',
MONEY_P5 as 'P5',
MONEY_Q as 'Q',
MONEY_R1 as 'R1',
MONEY_R2 as 'R2',
MONEY_R3 as 'R3',
MONEY_R4 as 'R4',
MONEY_S as 'S',
MONEY_T as 'T',
MONEY_U as 'U',
MONEY_V as 'V',
MONEY_X as 'X',
MONEY_Y as 'Y'
))
)h2 on t1.segment_head_id=h2.segment_head_id and t1.seats_name=h2.seats_name              
  
where t2.flight_date>=to_date('2020-04-01','yyyy-mm-dd')    
    --and t2.flights_segment_name like '浦东%'
    and t1.money_class_id=1
    and t2.segment_country='日本'
    and t2.company_id=0;

 
 
 
 
 ------103、日币定价问题
 
 select t1.order_day,t1.segment_head_id,t2.flight_date,t2.flight_no,t2.flights_segment_name,t1.seats_name,t1.ticket_price/t1.r_com_rate,t1.seat_type,t1.comb_fee,
h1.money cny_money,h2.money jny_money_,t1.r_com_rate,
case when h2.money=0 and h2.seats_name <>'Y' then round(round((h1.money+nvl(t1.comb_fee,0))/t1.r_com_rate,0)/10,0)*10
when h2.money>0 and h2.seats_name ='Y' then h2.money
else h2.money end jp_money     
     from dw.fact_recent_order_detail t1
     join dw.da_flight t2 on t1.segment_Head_id=t2.segment_head_id
     join (
select *
          from (select segment_head_id,
                       MONEY_E,
MONEY_H,
MONEY_I,
MONEY_K,
MONEY_L,
MONEY_M,
MONEY_N,
MONEY_P,
MONEY_P1,
MONEY_P2,
MONEY_P3,
MONEY_P4,
MONEY_P5,
MONEY_Q,
MONEY_R1,
MONEY_R2,
MONEY_R3,
MONEY_R4,
MONEY_S,
MONEY_T,
MONEY_U,
MONEY_V,
MONEY_X,
MONEY_Y                       
from cqsale.cq_flights_segment_head@to_air) unpivot(money for seats_name in (MONEY_E as 'E',
MONEY_H as 'H',
MONEY_I as 'I',
MONEY_K as 'K',
MONEY_L as 'L',
MONEY_M as 'M',
MONEY_N as 'N',
MONEY_P as 'P',
MONEY_P1 as 'P1',
MONEY_P2 as 'P2',
MONEY_P3 as 'P3',
MONEY_P4 as 'P4',
MONEY_P5 as 'P5',
MONEY_Q as 'Q',
MONEY_R1 as 'R1',
MONEY_R2 as 'R2',
MONEY_R3 as 'R3',
MONEY_R4 as 'R4',
MONEY_S as 'S',
MONEY_T as 'T',
MONEY_U as 'U',
MONEY_V as 'V',
MONEY_X as 'X',
MONEY_Y as 'Y'
))
)h1 on t1.segment_head_id=h1.segment_head_id and t1.seats_name=h1.seats_name

left join(
select *
          from (select segment_head_id,
                       MONEY_E,
MONEY_H,
MONEY_I,
MONEY_K,
MONEY_L,
MONEY_M,
MONEY_N,
MONEY_P,
MONEY_P1,
MONEY_P2,
MONEY_P3,
MONEY_P4,
MONEY_P5,
MONEY_Q,
MONEY_R1,
MONEY_R2,
MONEY_R3,
MONEY_R4,
MONEY_S,
MONEY_T,
MONEY_U,
MONEY_V,
MONEY_X,
MONEY_Y                       
from cqsale.cq_flights_segment_head_m@to_air
where money_class_id=1) unpivot(money for seats_name in (MONEY_E as 'E',
MONEY_H as 'H',
MONEY_I as 'I',
MONEY_K as 'K',
MONEY_L as 'L',
MONEY_M as 'M',
MONEY_N as 'N',
MONEY_P as 'P',
MONEY_P1 as 'P1',
MONEY_P2 as 'P2',
MONEY_P3 as 'P3',
MONEY_P4 as 'P4',
MONEY_P5 as 'P5',
MONEY_Q as 'Q',
MONEY_R1 as 'R1',
MONEY_R2 as 'R2',
MONEY_R3 as 'R3',
MONEY_R4 as 'R4',
MONEY_S as 'S',
MONEY_T as 'T',
MONEY_U as 'U',
MONEY_V as 'V',
MONEY_X as 'X',
MONEY_Y as 'Y'
))
)h2 on t1.segment_head_id=h2.segment_head_id and t1.seats_name=h2.seats_name              
  
where t2.flight_date>=to_date('2020-04-01','yyyy-mm-dd')    
    --and t2.flights_segment_name like '浦东%'
    and t1.money_class_id=1
    and t2.segment_country='日本'
    and t2.company_id=0
    and t1.flag_id in(3,5,40)
    and t1.sex in(1,2)
    and t1.seats_name ='Y';
 
 
 ------104、不正常航班量统计
 
select to_char(h1.flight_date, 'yyyy'),
       count(distinct
             flight_no || flight_date || old_oriairport || old_destairport)
  from (select t1.flight_no,
               t1.flight_date,
               t1.old_oriairport,
               t1.old_destairport,
               decode(t1.unnormaltype,
                      1,
                      '延误',
                      2,
                      '取消',
                      3,
                      '备降',
                      4,
                      '转场/改降',
                      5,
                      '返航',
                      6,
                      '补班') unnormaltype,
               max(t1.publish_date)
          from stg.s_cq_unnormal_flights t1
         where flight_date >= to_date('2013-01-01', 'yyyy-mm-dd')
           and flight_date < to_date('2020-01-01', 'yyyy-mm-dd')
         group by t1.flight_no,
                  t1.flight_date,
                  t1.old_oriairport,
                  t1.old_destairport,
                  decode(t1.unnormaltype,
                         1,
                         '延误',
                         2,
                         '取消',
                         3,
                         '备降',
                         4,
                         '转场/改降',
                         5,
                         '返航',
                         6,
                         '补班')) h1
 group by to_char(h1.flight_date, 'yyyy');

 
 ------105、绿翼立减
 
 select to_char(t1.order_day,'yyyymm') 日期,
        case when t1.channel in('网站','手机') then '线上自有'
            else '其他' end 渠道,
        case
         when t1.channel in('网站','手机') and t5.users_id is not null then
          'ods识别'
          when t1.channel in('网站','手机') then '线上其他'
          else '其他' end ods识别,
        case
         when t1.channel in('网站','手机') and t6.users_id is not null then
          'dw识别'
          when t1.channel in('网站','手机') then '线上其他'
          else '其他' end dw识别,
          
       case when t1.channel in('网站','手机') and
              t1.pay_gate in (15, 29, 31) then
          '线上自有易宝商旅卡'
         when t1.channel in('网站','手机') then '线上其他'
          else '其他' end 支付方式,  
          case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end 立减类型,
       case when t1.channel in('网站','手机') and t5.users_id is not null then 1
       when t1.channel in('网站','手机') and t1.pay_gate in (15, 29, 31) then 1
            when t1.channel in('网站','手机') and t6.users_id is not null then 1
         else 0 end,
       count(1) 票量
  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo@to_ods t5 on t1.client_id = t5.users_id
  left join dw.da_restrict_userinfo t6 on t1.client_id=t6.users_id
  left join (select hh1.flights_order_head_id,
                    hh1.nvl(is_beneficiary, 0) is_beneficiary,
                    hh1.youhui_result
               from stg.c_cq_order_youhui_detail hh1
               join stg.c_cq_youhui_policy_main hh2 on hh1.youhui_id=hh2.id
              where hh1.product_type = 0
                and hh1.yh_ret_time is null
                and hh1.youhui_result is not null
                and hh2.yh_stype=2
                ) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id
 where t1.order_day >= to_date('2019-06-01','yyyy-mm-dd')
   and t1.order_day <  to_date('2020-06-01','yyyy-mm-dd')
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
 group by to_char(t1.order_day,'yyyymm'),
       case when t1.channel in('网站','手机') then '线上自有'
            else '其他' end,
        case
         when t1.channel in('网站','手机') and t5.users_id is not null then
          'ods识别'
          when t1.channel in('网站','手机') then '线上其他'
          else '其他' end,
        case
         when t1.channel in('网站','手机') and t6.users_id is not null then
          'dw识别'
          when t1.channel in('网站','手机') then '线上其他'
          else '其他' end,
          
       case when t1.channel in('网站','手机') and
              t1.pay_gate in (15, 29, 31) then
          '线上自有易宝商旅卡'
         when t1.channel in('网站','手机') then '线上其他'
          else '其他' end,
          case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end, case when t1.channel in('网站','手机') and t5.users_id is not null then 1
       when t1.channel in('网站','手机') and t1.pay_gate in (15, 29, 31) then 1
       when t1.channel in('网站','手机') and t6.users_id is not null then 1       
         else 0 end;

----需求量数据   
select /*+parallel(2) */
h1.snum3,h1.snum2,h1.snum,h1.usetype,count(1)
from(
select  case when decode(t7.MEMBERLEVELID,1,'注册会员',2,'普卡',3,'银卡',4,'金卡')  is not null  then decode(t7.MEMBERLEVELID,1,'注册会员',2,'普卡',3,'银卡',4,'金卡')
when t8.cust_id is not null then '普卡'
else '注册会员' end usetype,
t1.client_id,
count(distinct t1.traveller_name||t1.codeno) snum,
count(distinct case when t1.codeno=nvl(t8.codeno,'---') then null
 when t1.codeno =nvl(t9.code_no,'--') then null
else t1.traveller_name||t1.codeno end) snum2,
count(distinct t1.flights_order_head_id) snum3
  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo@to_ods t5 on t1.client_id = t5.users_id
  left join dw.da_restrict_userinfo t6 on t1.client_id=t6.users_id
  left join dw.da_user_level t7 on t7.users_id=t1.client_id
  left join dw.da_lyuser t8 on t1.client_id=t8.users_id_fk
  left join stg.c_cq_cust_code t9 on t9.user_id=t1.client_id and t9.status in(1,9)
  left join (select flights_order_head_id,
                    nvl(is_beneficiary, 0) is_beneficiary,
                    youhui_result
               from stg.c_cq_order_youhui_detail
              where product_type = 0
                and yh_ret_time is null
                and youhui_result is not null
                and youhui_id in (1129,1130, 1137,1138)
            ) t4 on t1.flights_order_head_id =t4.flights_order_head_id
 where t1.order_day >= to_date('2019-06-01','yyyy-mm-dd')
   and t1.order_day < to_date('2020-06-01','yyyy-mm-dd')
   and t1.flights_date >= to_date('2019-06-01','yyyy-mm-dd')-7
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
   and t1.channel in('网站','手机')
   and t5.users_id is null
   and t1.pay_gate not in (15, 29, 31)
   group by case when decode(t7.MEMBERLEVELID,1,'注册会员',2,'普卡',3,'银卡',4,'金卡')  is not null  then decode(t7.MEMBERLEVELID,1,'注册会员',2,'普卡',3,'银卡',4,'金卡')
when t8.cust_id is not null then '普卡'
else '注册会员' end ,
t1.client_id)h1
   group by h1.snum3,h1.snum2,h1.snum,h1.usetype;
 
 
 ------106、
 
 select t1.email,t1.*
 from cqsale.cq_order@to_air t1
 where t1.client_id in(189181380,
189344989,
189222141,
189342452,
189337107,
189289134,
189270709,
189094773)
and order_date>=trunc(sysdate-30);



select t1.users_id||',',t1.reg_date,lower(md5(t1.login_id)),t1.register_ip,t1.last_login_ip
 from dw.da_b2c_user t1
 left join dw.da_restrict_userinfo@to_ods t2 on t1.users_id=t2.users_id
 where login_id in('15707968422',
'17660418457',
'17732052613',
'17869130613',
'16673539660',
'13048533218',
'18955621220',
'17798125773',
'13145778965');
 
 
 
 ------107、成田浦东放舱
 
 select t.client_id,t.work_tel,t1.r_flights_date,t2.flights_segment_name,t.order_linkman,t1.name,t.flights_order_Id,t1.flag_id,t.order_date,
t.terminal_id,t.web_id,t.ex_nfd1
 from cqsale.cq_order@to_air t
 join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_Order_id
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 --left join dw.da_b2c_user t3 on t.client_id=t3.users_id
 where t.order_date>=trunc(sysdate)
 and t.order_date< to_date('2020-07-01','yyyy-mm-dd')
 and t2.flights_segment_name like '%成田%'
 and t1.whole_flight like '9C%'
 and t.client_id=153535587
 order by t.order_date
 
 ------108、
 
select t.terminal_id,t.web_id,count(1)
 from cqsale.cq_order@to_air t
 join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
 where t.order_date>=trunc(sysdate-7)
 and t.work_tel='13773671963'
 and t1.flag_id in(3,5,40,41,7,11,12)
 group by t.terminal_id,t.web_id
 
 
 ------109、4、5月份行李重量
 
  select /*+parallel(4) */
 to_char(h1.fdate,'yyyymm'),count(1) ticketnum,sum(case when h1.bagw>0 then 1 else 0 end) buggnum,
        sum(h1.bagw) bagw
 from(
 select 
      offg,eda,offn,FS,fn,fdate,fi,IGC,rl,ri,cna,ena,sn,sng,seat,sex,memo,inf,infen,boarding,baga,bagw
       from stg.s_dcs_old_h_bak t1
       where fdate>=to_date('2020-04-01','yyyy-mm-dd')
         and fdate< to_date('2020-06-01','yyyy-mm-dd')
         
         
         union
         
         
         select offg,eda,offn,FS,fn,fdate,fi,IGC,rl,ri,cna,ena,sn,sng,seat,sex,memo,inf,infen,boarding,baga,bagw
       from stg.s_dcs_old_h t1
        where fdate>=to_date('2020-04-01','yyyy-mm-dd')
         and fdate< to_date('2020-06-01','yyyy-mm-dd')
         )h1
         join (select distinct segment_code,nationflag
                       from dw.da_flight 
                       where flag<>2
                        and company_id=0)h2 on h1.fs=h2.segment_code
                        where h2.nationflag='国内'
                        group by to_char(h1.fdate,'yyyymm')
         
 
 ------110、
 
 
您好！
因工作需要，现需要以下数据分析
1、近5年以来，每年我司飞新疆的总旅客数量，冬春季和夏秋寄分开。
2、近5年以来，每年我司飞新疆游客数量，冬春季和夏秋季分开。
3、以上数据需要进疆和出疆共同数据。

 
select *
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_Head_id=t2.segment_Head_id
 join dw.da_flight_season t3 on t2.flight_date>=t3.
 where t1.flights_date>=to_date('2015-03-29','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-05-03','yyyy-mm-dd')
  and t1.flag<>2
  and regexp_like(t2.flights_segment_name,'(乌鲁木齐)|(克拉玛依)|(莎车)')
  

 ------111、
 
   /*扬州往返的国际及地区航线。2017、18、19年 销售往返总人数  分别是多少
就是国际航班的吞吐量。谢谢*/

select to_char(t1.flight_date,'yyyy'),count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_Head_id=t2.segment_Head_id
 join dw.da_flight_season t3 on t2.flight_date>=t3.
 where t1.flights_date>=to_date('2017-01-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
  and t1.flag<>2
  and t2.flights_segment_name like '%扬州泰州%'
  and t1.flag_id=40
  and t2.nationflag <>'国内'
 
 ------112、
 
 
 --航班是：曼谷、金边、济州、成田出发飞浦东

--需要航班日期从6月5日开始~10月31日，销售超过139之外的航班日期、航班号、人数和订单金额


--单一库查询
select /*+parallel(4) */
r_flights_date,whole_flight,whole_segment,sum(toprice),sum(num),max(xid)
from(
select t1.segment_head_id,t1.r_flights_date,t1.whole_flight,t1.whole_segment,
       t.order_date,(t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.insurance_fee+t1.other_fee)*t1.r_com_rate toprice,
       1 num,row_number()over(partition by t1.segment_head_id order by t.order_date) xid
   from cqsale.cq_order@to_air t
   join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
   join cqsale.cq_flights_segment_head@to_air t2 on t1.segment_head_id=t2.segment_head_id
   where t1.r_flights_date>=trunc(sysdate)
     and t1.r_flights_date< to_date('2020-11-01','yyyy-mm-dd')
     and t2.flag<>2
     and t1.whole_flight like '9C%'
     and t1.whole_segment in('CJUPVG','BKKPVG','PNHPVG','NRTPVG')
     and t1.seats_name is not null
     and t2.company_id=0
     and t1.flag_Id in(3,5,40,41)
     )
   where xid>139
   group by r_flights_date,whole_flight,whole_segment;

   ----跨库查询

select /*+parallel(4) */
flight_date,flight_no,segment_code,flights_segment_name,layout,sum(toprice),sum(num),max(xid)
from(
select t1.segment_head_id,t2.flight_date,t2.flight_no,t2.segment_code,t2.flights_segment_name,t2.layout,
       t.order_date,t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.insurance_fee+t1.other_fee toprice,
       1 num,row_number()over(partition by t1.segment_head_id order by t.order_date) xid
   from cqsale.cq_order@to_air t
   join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
   join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
   where t1.r_flights_date>=trunc(sysdate)
     and t1.r_flights_date< to_date('2020-11-01','yyyy-mm-dd')
     and t2.flag<>2
     and t2.segment_country in('泰国','柬埔寨','韩国','日本')
     and t2.destairport_name ='浦东'
     and t1.seats_name is not null
     and t2.company_id=0
     and t1.flag_Id in(3,5,40,41)
     )
   where xid>139
   group by flight_date,flight_no,segment_code,flights_segment_name,layout
     
 
 ------113、
 
/*1、2019年整年和2020年至今，在自有线上渠道购买机票后24小时内申请退票的人数以及对应的退票费和退票手续费比例（退票手续费/机票票面价）
2、2019年和2020年（至今）两个麻烦分开列下，谢谢*/


select to_char(t1.flights_date,'yyyymm'),count(1),sum(t3.money_fy),sum(t3.money_fy)/sum(t1.ticket_price)
 from dw.fact_recent_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.da_order_drawback t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2020-06-05','yyyy-mm-dd')
   and t1.flag_id in(7,11,12)
   and t1.channel in('网站','手机')
   and t3.money_date-t1.order_date>=0
   and t3.money_date-t1.order_date<=1
   group by to_char(t1.flights_date,'yyyymm')
   
 
 
 ------114、
 
  时间范围：销售日期5月18-6月4  更新渠道：APP + 微信小程序。                                                        
 数据需求1、app 根据版本更新情况,未更新版本的线上行李产品的购买率（一二次分开）、人均、、更新版本的购买率（一二次分开）、人均、
 做20天的环比
  数据需求2、M站未更新，（但是考虑其人均幅度波动较大），列出销售日期5月18-6月4环比20天的 M网站的线上行李产品购买率（一二次分开）、人均                                     数据需求 3、旅客在更新版本的 APP+微信小程序的一次+二次购买流程中，在页面各步骤的流量转化+停留时长+热点分布，这三个运营数据
 
 
  
 
 select '辅收' 类型,t1.order_day 订单日期,t1.pay_together+1 购买场景,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end 渠道,nvl(h2.version,h1.version) 版本,
 case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end,
 sum(t1.book_num) 行李购买数量,sum(t1.book_fee) 行李购买金额,null 机票量
  from dw.fact_other_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
  left join (select ordernum,max(trmnl_tp)  trmnl_tp,max(version) version
     from hdb.cms_all_roiinfo t1
     where t1.ordertime>=to_date('2020-04-29','yyyy-mm-dd')
     group by ordernum)h1 on t1.flights_order_id=h1.ordernum
    left join (select ordernum,max(trmnl_tp)  trmnl_tp,max(version) version
     from hdb.cms_all_roiinfo t1
     where t1.ordertime>=to_date('2020-04-29','yyyy-mm-dd')
     group by ordernum)h2 on t1.order_id=h2.ordernum
     where t1.xtype_id in(6,10,17)
     and  t1.order_day>=to_date('2020-04-29','yyyy-mm-dd')
     and t1.order_day< to_date('2020-06-05','yyyy-mm-dd')
     and t1.channel in('网站','手机')
     and t1.company_id=0
     and t1.station_id>=2
     group by t1.order_day,t1.pay_together+1,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end,nvl(h2.version,h1.version),case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end 
    
 union all
 
select '机票' 类型,t1.order_day,null,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end,h1.version,case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end 账号识别,
 null,null,count(1)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
   left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
  left join (select ordernum,max(trmnl_tp)  trmnl_tp,max(version) version
     from hdb.cms_all_roiinfo t1
     where t1.ordertime>=to_date('2020-05-18','yyyy-mm-dd')
     group by ordernum)h1 on t1.flights_order_id=h1.ordernum
   
     where   t1.order_day>=to_date('2020-05-18','yyyy-mm-dd')
     and t1.order_day< to_date('2020-06-19','yyyy-mm-dd')
     and t1.channel in('网站','手机')
     and t1.company_id=0
     and t1.station_id>=2
     group by t1.order_day,null,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end,h1.version,case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end

 
 
 ------115、新疆运力数据
 
 select /*+parallel(2) */
case when t3.flight_season is not null then t3.flight_season
else '2019年冬春季' end,case when t2.originairport_name in('乌鲁木齐','克拉玛依','莎车') then '新疆出发'
when t2.destairport_name in('乌鲁木齐','克拉玛依','莎车') then '到新疆' end,
count(1),sum(case when t1.seats_name in('B','G','G1','G2') then 1 else 0 end)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_Head_id=t2.segment_Head_id
 join dw.da_flight_season t3 on t2.flight_date>=t3.b_date and t2.flight_date<=t3.e_date
 where t1.flights_date>=to_date('2015-03-29','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-05-03','yyyy-mm-dd')
  and t2.flag<>2
  and regexp_like(t2.flights_segment_name,'(乌鲁木齐)|(克拉玛依)|(莎车)')
  and t1.flag_id=40
  and t1.seats_name is not null
  group by case when t3.flight_season is not null then t3.flight_season
else '2019年冬春季' end,case when t2.originairport_name in('乌鲁木齐','克拉玛依','莎车') then '新疆出发'
when t2.destairport_name in('乌鲁木齐','克拉玛依','莎车') then '到新疆' end
 
 ------116、P5舱数据机票放量
 
 
select to_char(h1.flights_date,'yyyymm'),h1.date_type,h1.flights_segment_name,
h1.wf_segment_name,h1.wf_segment,count(1) segments,sum(h1.swplan) swplan,sum(h1.ticketnum),
sum(h1.days1),sum(h1.days2),sum(h1.onlinenum),sum(h1.onlinenum1),sum(h1.ticket_price),
sum(price)
from(
select t1.segment_head_id,t2.oversale-t2.bgo_plan+t2.o_plan swplan,
       t1.flights_date,t3.date_type,t2.flights_segment_name,t2.flights_city_name,
       t5.wf_segment,t5.wf_segment_name,
       count(1) ticketnum,sum(case when t1.ahead_days>7 then 1 else 0 end) days1,
       sum(case when t1.ahead_days>15 then 1 else 0 end) days2,
          sum(case when t1.channel in('手机','网站') and t4.users_id is null then 1
                 else 0 end) onlinenum,   
       sum(case when t1.channel in('手机','网站') and t4.users_id is not null then 0
                when t1.pay_gate in(15, 29, 31) and t1.channel in('手机','网站') then 0
                when  t1.channel in('手机','网站') then 1
                else 0 end) onlinenum1,
   sum(t1.ticket_price) ticket_price,
   sum(t1.price) price
  from dw.fact_order_detail t1
  join dw.da_flight t2  on t1.segment_head_id=t2.segment_head_id
  left join dw.da_restrict_userinfo t4 on t1.client_id=t4.users_id
  left join dw.dim_segment_type t5 on t2.route_id=t5.route_id and t2.h_route_id=t5.h_route_id
 left join(select t.datetime,
  case
                              when to_char(t.datetime, 'mm') in ('07', '08') then
                               '暑运'
                              when t.day_chunyun like '春运第%' then
                               '春运'
                              when trim(t.festivals) is not null then
                               t.festivals
                              when t.isworkdays = '是' then
                               '--'
                              when t.isworkdays = '否' then
                               '--'
                            end date_type
                       from if.if_cq_date_property t
                       where t.datetime>=to_date('2019-01-01','yyyy-mm-dd')
                         and t.datetime< to_date('2020-01-01','yyyy-mm-dd')) t3 on t1.flights_date=t3.datetime
  where t1.flag_id=40
    and t1.seats_name is not null
    and t1.seats_name not in('B','G','G1','G2')
    and t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
    and t1.company_id=0
    group by t1.segment_head_id,t2.oversale-t2.bgo_plan+t2.o_plan,
       t1.flights_date,t3.date_type,t2.flights_segment_name,t2.flights_city_name,
       t5.wf_segment,t5.wf_segment_name)h1
       group by to_char(h1.flights_date,'yyyymm'),h1.date_type,h1.flights_segment_name,
h1.wf_segment_name,h1.wf_segment

 

 ------117、中转量数据统计
 
 select trunc(t1.origin_std_1) 航班日期,trunc((t1.origin_std_2-t1.dest_sta_1)*24),
case when (t1.origin_std_2-t1.dest_sta_1)*24<=2 then '(0-2]'
when (t1.origin_std_2-t1.dest_sta_1)*24<=4 then '(2-4]'
when (t1.origin_std_2-t1.dest_sta_1)*24<=8 then '(4-8]'
when (t1.origin_std_2-t1.dest_sta_1)*24<=16 then '(8-16]'
when (t1.origin_std_2-t1.dest_sta_1)*24<=24 then '(16-24]'
when (t1.origin_std_2-t1.dest_sta_1)*24>24 then '24+' end,
count(1) 中转量
 from dw.bi_connect_segment t1
 where t1.origin_std_1>=to_date('2020-01-01','yyyy-mm-dd')
  and t1.origin_std_2>=t1.dest_sta_1
  and t1.dest_sta_2< trunc(sysdate)
  and t1.company_id_1=0
  and t1.company_id_2=0
 group by 
 trunc(t1.origin_std_1) ,trunc((t1.origin_std_2-t1.dest_sta_1)*24),
case when (t1.origin_std_2-t1.dest_sta_1)*24<=2 then '(0-2]'
when (t1.origin_std_2-t1.dest_sta_1)*24<=4 then '(2-4]'
when (t1.origin_std_2-t1.dest_sta_1)*24<=8 then '(4-8]'
when (t1.origin_std_2-t1.dest_sta_1)*24<=16 then '(8-16]'
when (t1.origin_std_2-t1.dest_sta_1)*24<=24 then '(16-24]'
when (t1.origin_std_2-t1.dest_sta_1)*24>24 then '24+' end;

 
 ------118、
 
 select /*+parallel(4) */   
      count(distinct t1.segment_head_id) 票量 ,sum(t1.boardnum)  
  from dw.da_main_order t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id  
 where  t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
   and t2.flag<>2
   and t2.segment_country like '%泰国%';
 
 
 ------119、数美及我司的订单明细数据
 
 select decode(t1.r_company_id,0,'9C',6,'IJ') 公司,
decode(t1.ex_nfd1,1,'网站',2,'M网站',3,'IOS',4,'Andriod',5,'微信','其他'),
t1.EX_CFD4,t1.flights_order_id,t2.users_id,t2.login_id,t2.email,t3.register_type,t3.cust_type,
t4.gate_name/*,t6.gate_name*/,t8.pay_flag_name

 from cqsale.cq_order@to_air t1
 join cust.cq_flights_users@to_air t2 on t1.client_id=t2.users_id
 left join dw.da_b2c_user t3 on t1.client_id=t3.users_id
 left join stg.p_cq_pay_gate t4 on t1.pay_gate=t4.id
 left join stg.s_cq_order_pay_flag t8 on t1.pay_flag=t8.pay_flag
/* left join pay.cq_ips_order_id@to_air t5 on t1.flights_order_id=t5.flights_order_id
 left join stg.p_cq_pay_gate t6 on t5.pay_gate=t6.id*/
 where t1.order_date>=trunc(sysdate)-1
 and t1.order_date< trunc(sysdate)
 and t1.terminal_id<0
 and t1.web_id=0;
 
 
 
 ------120、秒杀相关规则
 
 select to_char(t1.order_day,'yyyy')||
case when to_char(t1.order_day,'mmdd') in('0309','0310','0311') then '0309'

from dw.fact_order_detail t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t1.order_day>=to_date('2016-01-01','yyyy-mm-dd')
  and t1.order_day< to_date('2020-01-01','yyyy-mm-dd')
  and t1.company_id=0
  and t1.ahead_days>7
  and t1.channel in('网站','手机')
  and t1.seats_name is not null 
  and to_char(t1.order_day,'mmdd') in('0309','0310','0311','0509','0510','0511',
  '0718','0719','0720','0809','0810','0811','1109','1110','1111')
 
 
 ------121、退改签报表优化
 
 select trunc(t1.money_date),decode(t2.flag,2,'取消','正常'),t2.flight_date,t2.flights_segment_name,count(1)
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.money_date>=trunc(sysdate-2)  
 group by trunc(t1.money_date),decode(t2.flag,2,'取消','正常'),t2.flight_date,t2.flights_segment_name
 
 ------122、有低价和无低价相关数据测算
 
 select h2.date_type,h2.flights_segment_name,h2.stype,sum(h2.segments),sum(h2.swplan),
sum(h2.ticketnum),
sum(h2.ticket_price),
sum(h2.days1),
sum(h2.days1price),
sum(h2.days3),
sum(h2.days3price)
from(
select h1.flights_date,h1.date_type,
h1.flights_segment_name,
case when h1.days3>0 then '有低价'
else '无低价' end stype,count(1) segments,sum(h1.swplan) swplan,sum(h1.ticketnum) ticketnum,
sum(h1.days1) days1,sum(h1.days2),sum(h1.onlinenum),sum(h1.onlinenum1),sum(h1.ticket_price) ticket_price,
sum(price),h1.nationflag,sum(h1.days1price) days1price,
sum(h1.days3) days3,sum(h1.days3price) days3price
from(
select t1.segment_head_id,t2.oversale-t2.bgo_plan+t2.o_plan swplan,
       t1.flights_date,t3.date_type,t2.flights_segment_name,t2.flights_city_name,
       t5.wf_segment,t5.wf_segment_name,t2.nationflag,
       count(1) ticketnum,
       sum(case when t1.ahead_days>7 and t1.seats_name in('P2','P5') then 1 else 0 end) days3,
       sum(case when t1.ahead_days>7 and t1.seats_name in('P2','P5') then t1.ticket_price else 0 end) days3price,
       sum(case when t1.ahead_days>7 then 1 else 0 end) days1,
       sum(case when t1.ahead_days>15 then 1 else 0 end) days2,
          sum(case when t1.channel in('手机','网站') and t4.users_id is null then 1
                 else 0 end) onlinenum,   
       sum(case when t1.channel in('手机','网站') and t4.users_id is not null then 0
                when t1.pay_gate in(15, 29, 31) and t1.channel in('手机','网站') then 0
                when  t1.channel in('手机','网站') then 1
                else 0 end) onlinenum1,
   sum(t1.ticket_price) ticket_price,
   sum(t1.price) price,
   sum(case when t1.ahead_days>7 then t1.ticket_price else 0 end)  days1price
  from dw.fact_order_detail t1
  join dw.da_flight t2  on t1.segment_head_id=t2.segment_head_id
  left join dw.da_restrict_userinfo t4 on t1.client_id=t4.users_id
  left join dw.dim_segment_type t5 on t2.route_id=t5.route_id and t2.h_route_id=t5.h_route_id
 left join(select t.datetime,
  case
                              when to_char(t.datetime, 'mm') in ('07', '08') then
                               '暑运'
                              when t.day_chunyun like '春运第%' then
                               '春运'
                              when trim(t.festivals) is not null then
                               t.festivals
                              when t.isworkdays = '是' then
                               '--'
                              when t.isworkdays = '否' then
                               '--'
                            end date_type
                       from if.if_cq_date_property t
                       where t.datetime>=to_date('2019-01-01','yyyy-mm-dd')
                         and t.datetime< to_date('2020-01-01','yyyy-mm-dd')) t3 on t1.flights_date=t3.datetime
  where t1.flag_id=40
    and t1.seats_name is not null
    and t1.seats_name not in('B','G','G1','G2')
    and t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
    and t1.company_id=0
    group by t1.segment_head_id,t2.oversale-t2.bgo_plan+t2.o_plan,
       t1.flights_date,t3.date_type,t2.flights_segment_name,t2.flights_city_name,
       t5.wf_segment,t5.wf_segment_name,t2.nationflag)h1
       group by h1.flights_date,h1.date_type,
h1.flights_segment_name,
case when h1.days3>0 then '有低价'
else '无低价' end,h1.nationflag)h2
group by h2.date_type,h2.flights_segment_name,h2.stype

 
 ------123、宁波乘机人数
 select sum(t1.boardnum)
  from dw.da_main_order t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  where t1.flights_date >= to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
     and t2.flag <> 2
     and t2.nationflag<>'国内'
   and t2.flights_segment_name like '%宁波%'
   and t2.company_id=0
 
 ------124、
 
 时间范围：销售日期5月18-6月18  更新渠道：APP + 微信小程序。                                                        
 数据需求1、app 根据版本更新情况,未更新版本的线上行李产品的购买率（一二次分开）、人均、、更新版本的购买率（一二次分开）、人均、
 做20天的环比
  数据需求2、M站未更新，（但是考虑其人均幅度波动较大），列出销售日期5月18-6月4环比20天的 M网站的线上行李产品购买率（一二次分开）、人均                                     数据需求 3、旅客在更新版本的 APP+微信小程序的一次+二次购买流程中，在页面各步骤的流量转化+停留时长+热点分布，这三个运营数据
 
 
  
 select '辅收' 类型,t1.order_day 订单日期,t1.pay_together+1 购买场景,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end 渠道,nvl(h2.version,h1.version) 版本,
 case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end,
 sum(t1.book_num) 行李购买数量,sum(t1.book_fee) 行李购买金额,null 机票量
  from dw.fact_other_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
  left join (select ordernum,max(trmnl_tp)  trmnl_tp,max(version) version
     from hdb.cms_all_roiinfo t1
     where t1.ordertime>=to_date('2020-05-18','yyyy-mm-dd')
     group by ordernum)h1 on t1.flights_order_id=h1.ordernum
    left join (select ordernum,max(trmnl_tp)  trmnl_tp,max(version) version
     from hdb.cms_all_roiinfo t1
     where t1.ordertime>=to_date('2020-05-18','yyyy-mm-dd')
     group by ordernum)h2 on t1.order_id=h2.ordernum
     where t1.xtype_id in(6,10,17)
     and  t1.order_day>=to_date('2020-05-18','yyyy-mm-dd')
     and t1.order_day< to_date('2020-06-19','yyyy-mm-dd')
     and t1.channel in('网站','手机')
     and t1.company_id=0
     and t1.station_id>=2
     group by t1.order_day,t1.pay_together+1,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end,nvl(h2.version,h1.version),case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end 
    
 union all
 
select '机票' 类型,t1.order_day,null,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end,h1.version,case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end 账号识别,
 null,null,count(1)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
   left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
  left join (select ordernum,max(trmnl_tp)  trmnl_tp,max(version) version
     from hdb.cms_all_roiinfo t1
     where t1.ordertime>=to_date('2020-05-18','yyyy-mm-dd')
     group by ordernum)h1 on t1.flights_order_id=h1.ordernum
   
     where   t1.order_day>=to_date('2020-05-18','yyyy-mm-dd')
     and t1.order_day< to_date('2020-06-19','yyyy-mm-dd')
     and t1.channel in('网站','手机')
     and t1.company_id=0
     and t1.station_id>=2
     group by t1.order_day,null,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end,h1.version,case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end
 
 ------125、
  select '辅收' 类型,t1.order_day 订单日期,t1.pay_together+1 购买场景,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end 渠道,nvl(h2.version,h1.version) 版本,
 case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end,
 sum(t1.book_num) 行李购买数量,sum(t1.book_fee) 行李购买金额,null 机票量
  from dw.fact_other_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
  left join (select ordernum,max(trmnl_tp)  trmnl_tp,max(version) version
     from hdb.cms_all_roiinfo t1
     where t1.ordertime>=to_date('2020-05-18','yyyy-mm-dd')
     group by ordernum)h1 on t1.flights_order_id=h1.ordernum
    left join (select ordernum,max(trmnl_tp)  trmnl_tp,max(version) version
     from hdb.cms_all_roiinfo t1
     where t1.ordertime>=to_date('2020-05-18','yyyy-mm-dd')
     group by ordernum)h2 on t1.order_id=h2.ordernum
     where t1.xtype_id in(6,10,17)
     and  t1.order_day>=to_date('2020-05-18','yyyy-mm-dd')
     and t1.order_day< to_date('2020-06-19','yyyy-mm-dd')
     and t1.channel in('网站','手机')
     and t1.company_id=0
     and t1.station_id>=2
     group by t1.order_day,t1.pay_together+1,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end,nvl(h2.version,h1.version),case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end 
    
 union all
 
select '机票' 类型,t1.order_day,null,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end,h1.version,case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end 账号识别,
 null,null,count(1)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
   left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
  left join (select ordernum,max(trmnl_tp)  trmnl_tp,max(version) version
     from hdb.cms_all_roiinfo t1
     where t1.ordertime>=to_date('2020-05-18','yyyy-mm-dd')
     group by ordernum)h1 on t1.flights_order_id=h1.ordernum
   
     where   t1.order_day>=to_date('2020-05-18','yyyy-mm-dd')
     and t1.order_day< to_date('2020-06-19','yyyy-mm-dd')
     and t1.channel in('网站','手机')
     and t1.company_id=0
     and t1.station_id>=2
     group by t1.order_day,null,case when t1.station_id in(3,8) then 'IOS'
 when t1.station_id in(4,9) then 'Andriod'
 when t1.station_id =5 then '小程序'
 when t1.station_id =2 then 'M网站'
 else '其他' end,h1.version,case when t3.users_id is not null then '代理'
 when t1.pay_gate in (15, 29, 31) then '易宝商旅卡'
 else '其他' end
 
 ------126、国际进港超人数航班
 
 select /*+parallel(4) */
r_flights_date,whole_flight,whole_segment,sum(toprice),sum(num),max(xid)
from(
select t1.segment_head_id,t1.r_flights_date,t1.whole_flight,t1.whole_segment,
       t.order_date,(t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.insurance_fee+t1.other_fee)*t1.r_com_rate toprice,
       1 num,row_number()over(partition by t1.segment_head_id order by t.order_date) xid
   from cqsale.cq_order@to_air t
   join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
   join cqsale.cq_flights_segment_head@to_air t2 on t1.segment_head_id=t2.segment_head_id
   where t1.r_flights_date>=trunc(sysdate)
     and t1.r_flights_date< to_date('2020-11-01','yyyy-mm-dd')
     and t2.flag<>2
     and t1.whole_flight like '9C%'
     and t1.whole_segment in('CJUPVG','BKKPVG','PNHPVG','NRTPVG')
     and t1.seats_name is not null
     and t2.company_id=0
     and t1.flag_Id in(3,5,40,41)
     )
   where xid>139
   group by r_flights_date,whole_flight,whole_segment
 
 ------127、
 
 照实际同比去年的，算上所有去年在飞的航线的销售额来统计，今年停飞的就是0：
1、统计韩国航线总体散客销售量和销售同比；
2、统计韩国航线散客在线销售量和销售同比；
3、统计韩国航线散客在线韩文网站销售量和销售同比；

 
   select '201905' 月份,
t4.memo,
  count(1) 总销量,sum(case when t1.channel in('网站','手机') then 1 else 0 end) 线上销量,
 sum(case when t1.channel in('网站','手机') and t1.order_language='韩文' then 1 else 0 end) 线上韩文销量,
 sum(t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.insurce_fee+t1.other_fee) 总销售额,
 sum(case when t1.channel in('网站','手机') then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.insurce_fee+t1.other_fee else 0 end) 线上销售额,
 sum(case when t1.channel in('网站','手机') and t1.order_language='韩文' then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.insurce_fee+t1.other_fee else 0 end) 线上韩文销售额
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
  left join stg.p_cq_money_class t4 on t1.money_class_id=t4.money_class_id
 where t2.flag<>2
   and t1.flights_date>=to_date('2019-05-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2019-06-01','yyyy-mm-dd')
/*   and t1.order_day>=to_date('2019-05-01','yyyy-mm-dd')   
   and t1.order_day< to_date('2019-06-01','yyyy-mm-dd')*/
   and t1.company_id=0
      and t2.segment_country='韩国'
   and t1.seats_name not in('B','G','G1','G2')
   and t1.seats_name is not null
   group by t4.memo
   
   union all
   
   
select '202005' 月份,
t4.memo,count(1),sum(case when t1.channel in('网站','手机') then 1 else 0 end),
 sum(case when t1.channel in('网站','手机') and t1.order_language='韩文' then 1 else 0 end),
 sum(t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.insurce_fee+t1.other_fee),
 sum(case when t1.channel in('网站','手机') then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.insurce_fee+t1.other_fee else 0 end),
 sum(case when t1.channel in('网站','手机') and t1.order_language='韩文' then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.insurce_fee+t1.other_fee else 0 end) 
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id 
    left join stg.p_cq_money_class t4 on t1.money_class_id=t4.money_class_id 
 where t2.flag<>2
   and t1.flights_date>=to_date('2020-05-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-06-01','yyyy-mm-dd')
 /*  and t1.order_day>=to_date('2019-05-01','yyyy-mm-dd')   
   and t1.order_day< to_date('2019-06-01','yyyy-mm-dd')*/
   and t1.company_id=0
   and t2.segment_country='韩国'
   and t1.seats_name not in('B','G','G1','G2')
   and t1.seats_name is not null
     group by t4.memo;
 
 
 ------128、浦东长白山实时数据分析
 
 select t.order_date 订单日期,t.order_linkman 订票联系人,t.work_tel 订票联系方式, t.email 订票人邮箱,
c.channel 渠道大类,c.terminal 终端,CASE WHEN t.terminal_id<=0 and t.web_id=0 and t5.users_id is  not null then '黑代'
else '非黑代' end 是否黑代,
t1.r_flights_date 航班日期,t1.whole_flight 航班号,t1.whole_segment 航段,
t1.name||coalesce(t1.second_name,'') 旅客姓名 ,t1.codetype 证件类型,t1.codeno 证件号,
decode(t1.sex,1,'成人',2,'儿童',3,'婴儿') 乘机人类型,
getage(t1.r_flights_date,t1.birthday) 年龄,
case when getage(t1.r_flights_date,t1.birthday)<12 then '<12'
            when getage(t1.r_flights_date,t1.birthday)<18 then '12~17'
            when getage(t1.r_flights_date,t1.birthday)<24 then '18~23'
            when getage(t1.r_flights_date,t1.birthday)<30 then '24~29'
            when getage(t1.r_flights_date,t1.birthday)<40 then '30~39'
            when getage(t1.r_flights_date,t1.birthday)<50 then '40~49'
            when getage(t1.r_flights_date,t1.birthday)<60 then '50~59'
            when getage(t1.r_flights_date,t1.birthday)< 70 then '60~69'
            when getage(t1.r_flights_date,t1.birthday)>=70 then '70+' end 年龄分层,
   CASE WHEN t3.nationality='CHN' THEN '中国'
          WHEN t3.nationality IS NULL THEN '中国'
          ELSE t6.country_name END 国籍,
     CASE WHEN (CASE WHEN t3.nationality='CHN' THEN '中国'
          WHEN t3.nationality IS NULL THEN '中国'
          ELSE t6.country_name END) like '%中国%' THEN      
          CASE WHEN t.terminal_id<=0 and t.web_id=0 and t5.users_id is  not null 
          and tt1.province is not null then tt1.province
          when  t8.province IS NOT NULL THEN t8.province
               WHEN t8.province IS NULL AND tt1.province IS NOT NULL THEN tt1.province
               ELSE NULL END 
          ELSE NULL END 省份,
      CASE WHEN ((CASE WHEN t3.nationality='CHN' THEN '中国'
          WHEN t3.nationality IS NULL THEN '中国'
          ELSE t6.country_name END)) like '%中国%' THEN 
      CASE WHEN t.terminal_id<=0 and t.web_id=0 and t5.users_id is  not null 
          and tt1.province is not null then tt1.city
           WHEN t8.province IS NOT NULL THEN t8.city
               WHEN t8.province IS NULL AND tt1.province IS NOT NULL THEN tt1.city
               ELSE NULL END 
          ELSE NULL END 城市
from cqsale.cq_order@to_air t
join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
left join dw.da_restrict_userinfo t5 on t.client_id=t5.users_id
left join dw.adt_mobile_list t8 on regexp_like(t1.r_tel, '^1[0-9]{10}$')
                          and substr(t1.r_tel, 1, 7) = t8.mobilenumber
left join dw.adt_region_code tt1 on t1.codetype = 1
                        and tt1.regioncode=substr(t1.codeno, 1, 6)
   left join cqsale.cq_traveller_info@to_air t3 on t1.flights_order_head_id=t3.flights_order_head_id
   left join stg.s_cq_country_area t6 on t3.nationality=t6.country_code  
    left join dw.da_channel_part c on c.terminal_id = t.terminal_id
                                and c.web_id = nvl(t.web_id, 0)
                                and c.station_id =
                                    (case when t.terminal_id < 0 and
                                     nvl(t.ex_nfd1, 0) <= 1 then 1 else
                                     nvl(t.ex_nfd1, 0) end)
                                and t.order_date >= c.sdate
                                and t.order_date < c.edate + 1
where t1.whole_flight in('9C8532','9C8531')
and t1.r_flights_date=trunc(sysdate)+1
and t1.flag_id in(3,5,40,41);
 
 ------129、OTA P2舱销量
 
 select trunc(t1.r_order_date) 日期,nvl(t2.abrv,'线上自有') 渠道,count(1) 票量
 from cqsale.cq_order@to_air t
 join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
 left join stg.s_cq_agent_info t2 on t.web_id=t2.agent_id
 where t1.r_order_date>=trunc(sysdate)
 and t1.seats_name ='P2'
 and t1.flag_id in(3,5,40)
 and t1.whole_flight like '9C%'
 group by trunc(t1.r_order_date),t2.abrv
 
 ------130、
 
select t1.origincity_name,t1.origin_country_id,count(distinct t2.wf_segment),count(distinct t1.segment_code)
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=trunc(sysdate)
 and t1.flag<>2
 and t1.company_id=0
 group by t1.origincity_name,t1.origin_country_id;
 
 
 select t2.wf_segment,suM(t.ticketprice)/sum(t.ticketnum)
  from dw.da_main_order t
  join dw.da_flight t1 on t.segment_head_id=t1.segment_head_id
   join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
  where t.flights_date>=to_date('2020-05-01','yyyy-mm-dd')
    and t.flights_date< to_date('2020-06-01','yyyy-mm-dd')
    and t1.nationflag ='国内'
    and t1.company_id=0
    group by t2.wf_segment
    order by 2;
  
select t2.wf_segment,t2.wf_segment_name,max(t1.mile)
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=trunc(sysdate)
 and t1.flag<>2
 and t1.company_id=0
 group by t2.wf_segment,t2.wf_segment_name;


select t4.wf_segment,t4.wf_segment_name,t2.part,count(1)
 from dw.fact_order_detail t1
 join dw.fact_orderhead_trippurpose@to_ods t2 on t1.flights_order_head_id=t2.flights_order_head_id
 join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 join dw.dim_segment_type t4 on t3.h_route_id=t4.h_route_id and t3.route_id=t4.route_id
 where t1.flights_date>=trunc(sysdate)-7
 and t1.flights_date< trunc(sysdate)
 and t1.company_id=0
 group by t4.wf_segment,t4.wf_segment_name,t2.part;
 
select max(t1.board_num)
 from dw.fact_idno_statistics t1
 where t1.codeno not in('666666','888888','null','120104197706043812')
 and t1.o_num=0;
 
 select *
 from dw.fact_idno_statistics t1
 where t1.board_num=559;
 
  select /*+parallel(4) */ to_char(r_flights_date,'yyyy'),count(1)
  from stg.s_cq_order_head
  where codeno='321028197906100213'
  and flag_id=40
  group by to_char(r_flights_date,'yyyy');
  
  
  select max(t1.max_flightdate-t1.min_flightdate)
 from dw.fact_idno_statistics t1
 where t1.codeno not in('666666','888888','null','120104197706043812')
 and t1.o_num=0;
 
 select max(getage(t1.max_flightdate,t1.birthday))
 from dw.fact_idno_statistics t1
 where t1.codeno not in('666666','888888','null','120104197706043812')
 and t1.o_num=0;
  
 select max(getage(t1.max_flightdate,t1.birthday))
 from dw.fact_idno_statistics t1
 where t1.codeno not in('666666','888888','null','120104197706043812')
 and t1.o_num=0
 and t1.codetype=1;
 
 select /*+parallel(4) */  *
 from dw.fact_idno_statistics t1
 where t1.codeno not in('666666','888888','null','120104197706043812')
 and t1.o_num=0
 and t1.codetype=1
 and getage(t1.max_flightdate,t1.birthday)=112;
 
 
 select max(t1.bagw)
 from dw.da_dcs_h t1
 where t1.fdate>=to_date('2019-01-01','yyyy-mm-dd');
 
 
 select /*+parallel(4) */ max(t1.bagw)
 from dw.da_dcs_h t1
 where t1.fdate>=to_date('2019-01-01','yyyy-mm-dd')
 and t1.fdate< to_date('2020-01-01','yyyy-mm-dd')
 and t1.seat not in('B','G1','G','G2','O')

 ================================================20200622====================================================================
 ------131、商务旅行判断
 
 select t4.wf_segment,t4.wf_segment_name,t2.part,count(1)
 from dw.fact_order_detail t1
 join dw.fact_orderhead_trippurpose@to_ods t2 on t1.flights_order_head_id=t2.flights_order_head_id
 join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 join dw.dim_segment_type t4 on t3.h_route_id=t4.h_route_id and t3.route_id=t4.route_id
 where t1.flights_date>=trunc(sysdate)-7
 and t1.flights_date< trunc(sysdate)
 and t1.company_id=0
 group by t4.wf_segment,t4.wf_segment_name,t2.part;
 
 ------132、呼叫中心退改签数据 
 
 select to_char(t1.origin_std,'yyyymm'),case when t1.terminal_id<0 and t1.web_id>0 and t3.agent_type=1 then 'OTA'
else '其他' end ,
case when t2.terminal like '%中心%' then '呼叫中心'
 else '其他' end,
 count(1)
 from dw.da_order_drawback t1
 left join stg.s_cq_terminal t2 on t1.money_terminal=t2.terminal_id
 left join stg.s_cq_agent_info t3 on t1.web_id=t3.agent_id
 where t1.origin_std>=to_date('2019-01-01','yyyy-mm-dd')
 group by to_char(t1.origin_std,'yyyymm'),case when t1.terminal_id<0 and t1.web_id>0 and t3.agent_type=1 then 'OTA'
else '其他' end ,
case when t2.terminal like '%中心%' then '呼叫中心'
 else '其他' end
  
====================================================20200623============================================
 ------133、OTA购票呼叫中心退票
 
 select to_char(t1.origin_std,'yyyymm') 航班月,case when t1.terminal_id<0 and t1.web_id>0 and t3.agent_type=1 then 'OTA'
else '其他' end 是否OTA ,
case when t2.terminal  in('石家庄呼叫中心','呼叫中心新','石家庄客服中心') then '呼叫中心'
 else '其他' end 是否呼叫中心,
 t2.terminal 终端,
 count(1) 票量
 from dw.da_order_drawback t1
 left join stg.s_cq_terminal t2 on t1.money_terminal=t2.terminal_id
 left join stg.s_cq_agent_info t3 on t1.web_id=t3.agent_id
 left join dw.da_flight t4 on t1.segment_head_id=t4.segment_head_id
 where t1.origin_std>=to_date('2019-01-01','yyyy-mm-dd')
 and t1.origin_std< to_date('2020-06-01','yyyy-mm-dd')
 and t4.flag<>2
 and t4.company_id=0
 group by to_char(t1.origin_std,'yyyymm'),case when t1.terminal_id<0 and t1.web_id>0 and t3.agent_type=1 then 'OTA'
else '其他' end ,
case when t2.terminal in('石家庄呼叫中心','呼叫中心新','石家庄客服中心') then '呼叫中心'
 else '其他' end,
  t2.terminal;
 
 ------134、旅客航线出行目的
 --月度航线出行目的
  select to_char(t1.flights_date,'yyyymm'),t2.flights_city_name,t.part,count(1)
 from dw.fact_orderhead_trippurpose@to_ods t
 join dw.fact_order_detail t1 on t.flights_order_head_id=t1.flights_order_head_Id
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flag_id=40
   and t2.company_id=0
   and t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-06-01','yyyy-mm-dd')
   group by to_char(t1.flights_date,'yyyymm'),t2.flights_city_name,t.part;
   
   --按照星期数据
 select to_char(t1.flights_date,'iw'),to_char(t1.flights_date-1,'d'),t2.flights_city_name,t.part,count(1)
 from dw.fact_orderhead_trippurpose@to_ods t
 join dw.fact_order_detail t1 on t.flights_order_head_id=t1.flights_order_head_Id
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flag_id=40
   and t2.company_id=0
   and t1.flights_date>=to_date('2020-06-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-06-23','yyyy-mm-dd')
   group by to_char(t1.flights_date,'iw'),to_char(t1.flights_date-1,'d'),t2.flights_city_name,t.part;
 
 ------135、
 
 select /*+parallel(4) */
'2019' syear,to_char(t1.order_day,'mm'),to_char(t1.order_day,'mmdd'),t1.order_day,case when t1.ahead_days<=7 then '7天内'
when t1.ahead_days>7 then '7天外' end aheadys,t2.area_type,
case when t1.channel in('网站','手机') and t3.users_id is not null then '线上自有纯量'
when t1.channel in('网站','手机')  then '代理'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '其他' end channel,
count(1) ticketnum,
sum(t1.ticket_price) ticketprice
  from  dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
  where t2.flag<>2
   and t1.order_day>=to_date('20190301','yyyymmdd')
   and t1.order_day< to_date('20190624','yyyymmdd')
   and t1.seats_name not in('B','G','G1','G2','O')
   and t1.company_id=0
   group by to_char(t1.order_day,'mm'),to_char(t1.order_day,'mmdd'),t1.order_day,case when t1.ahead_days<=7 then '7天内'
when t1.ahead_days>7 then '7天外' end ,t2.area_type,
case when t1.channel in('网站','手机') and t3.users_id is not null then '线上自有纯量'
when t1.channel in('网站','手机')  then '代理'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '其他' end
   
union all

select '2020' syear,to_char(t1.order_day,'mm'),to_char(t1.order_day,'mmdd'),t1.order_day,case when t1.ahead_days<=7 then '7天内'
when t1.ahead_days>7 then '7天外' end aheadys,t2.area_type,
case when t1.channel in('网站','手机') and t3.users_id is not null then '线上自有纯量'
when t1.channel in('网站','手机')  then '代理'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '其他' end channel,
count(1) ticketnum,
sum(t1.ticket_price) ticketprice

  from  dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
  where t2.flag<>2
   and t1.order_day>=to_date('20200301','yyyymmdd')
   and t1.order_day< to_date('20200624','yyyymmdd')
   and t1.seats_name not in('B','G','G1','G2','O')
   and t1.company_id=0
   group by to_char(t1.order_day,'mm'),to_char(t1.order_day,'mmdd'),t1.order_day,case when t1.ahead_days<=7 then '7天内'
when t1.ahead_days>7 then '7天外' end ,t2.area_type,
case when t1.channel in('网站','手机') and t3.users_id is not null then '线上自有纯量'
when t1.channel in('网站','手机')  then '代理'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '其他' end;
 
 
 ------136、
 
 select /*+parallel(4) */
case when t1.flights_segment_name like '%成田%' then '成田=上海浦东'
when t1.flights_segment_name like '%东京%' then '羽田=上海浦东'
when t1.flights_segment_name like '%大阪%' then '关西=上海浦东'
when t1.flights_segment_name like '%名古屋%' then '中部=上海浦东'
end,
case when t.channel in('网站','手机') and t.order_language like '%中文%' then '9C中文网站'
when t.channel in('网站','手机') and t.order_language like '%日文%' then '9C日文网站'
when t.channel in('网站','手机')  then '9C其他语言网站'
when t.terminal_id in(2789,2790,1661,1529) then 'IJ呼叫中心'
when t.channel ='呼叫中心' then '9C呼叫中心'
else t.channel end,
t.sub_channel,
count(1),
sum(t.ticket_price+t.ad_fy+t.port_pay+t.other_fy+t.insurce_fee+t.other_fee)
from dw.fact_order_detail t
join dw.da_flight t1 on t.segment_head_id=t1.segment_head_id
where t.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
  and t.flights_date< to_date('2020-01-01','yyyy-mm-dd')
  and t1.flag<>2
  and t1.segment_country='日本'
  and t1.company_id=0
  and regexp_like(t1.flights_segment_name,'(成田)|(东京)|(大阪)|(名古屋)')
  and t1.flights_segment_name like '%浦东%'
  group by case when t1.flights_segment_name like '%成田%' then '成田=上海浦东'
when t1.flights_segment_name like '%东京%' then '羽田=上海浦东'
when t1.flights_segment_name like '%大阪%' then '关西=上海浦东'
when t1.flights_segment_name like '%名古屋%' then '中部=上海浦东'
end,
case when t.channel in('网站','手机') and t.order_language like '%中文%' then '9C中文网站'
when t.channel in('网站','手机') and t.order_language like '%日文%' then '9C日文网站'
when t.channel in('网站','手机')  then '9C其他语言网站'
when t.terminal_id in(2789,2790,1661,1529) then 'IJ呼叫中心'
when t.channel ='呼叫中心' then '9C呼叫中心'
else t.channel end,
t.sub_channel;

---所有日本航线的日文网站销售占比

select /*+parallel(4) */
t2.wf_segment,
sum(case when t.channel in('网站','手机') and t.order_language like '%日文%' then 1 else 0 end) 日文销量,
count(1)
from dw.fact_order_detail t
join dw.da_flight t1 on t.segment_head_id=t1.segment_head_id
left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
where t.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
  and t.flights_date< to_date('2020-01-01','yyyy-mm-dd')
  and t1.flag<>2
   and t1.segment_country='日本'
  and t1.company_id=0
  --and regexp_like(t1.flights_segment_name,'(成田)|(东京)|(大阪)|(名古屋)')
  --and t1.flights_segment_name like '%浦东%'
  group by t2.wf_segment
 
 ==========================================20200628=============================
 ------137、购票金额超过2999元的旅客 19.49万
 
 select h1.ticketnum,count(1)
from(
select t1.traveller_name||t1.codeno,count(1) ticketnum,round(sum(t1.ticket_price),0) ticketprice
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
   and t1.company_id=0
   and t1.seats_name is not null
   and t1.sex=1
   and t1.nationflag='国内'
   group by t1.traveller_name||t1.codeno
   having sum(t1.ticket_price)>=2999
    )h1
    group by h1.ticketnum;
 
 ------138、线上渠道购买金银卡加速升级
 
 
select ticketnum3,count(1)
from(
select t1.traveller_name||t1.codeno,count(1) ticketnum,sum(case when t1.channel in('网站','手机') then 1 else 0 end) ticketnum1,
count(1)-sum(case when t1.channel in('网站','手机') then 1 else 0 end) ticketnum2,
sum(case when t1.channel in('网站','手机') then 1 else 0 end)*2+count(1)-sum(case when t1.channel in('网站','手机') then 1 else 0 end) ticketnum3
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
   and t1.company_id=0
   and t1.seats_name is not null
   and t1.sex=1
   and t1.seats_name <>'O'
   and t1.seats_name not in('B','G','G1','G2','O')
   group by  t1.traveller_name||t1.codeno
)
  where ticketnum3>=10
  group by ticketnum3;
  
  剔除掉现在已有金银卡会员
  
  select ticketnum3,count(1)
from(
select t1.traveller_name||t1.codeno,count(1) ticketnum,sum(case when t1.channel in('网站','手机') then 1 else 0 end) ticketnum1,
count(1)-sum(case when t1.channel in('网站','手机') then 1 else 0 end) ticketnum2,
sum(case when t1.channel in('网站','手机') then 1 else 0 end)*2+count(1)-sum(case when t1.channel in('网站','手机') then 1 else 0 end) ticketnum3
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
   and t1.company_id=0
   and t1.seats_name is not null
   and t1.sex=1
   and t1.codetype>0
   and t1.seats_name <>'O'
   and t1.seats_name not in('B','G','G1','G2','O')
   and not  exists(
   select 1 from dw.da_user_level tt1
join dw.da_lyuser tt2 on tt1.users_id=tt2.users_id_fk
where tt1.MEMBERLEVELID>=3
and tt2.codeno=t1.codeno)
  
   group by  t1.traveller_name||t1.codeno
)
  where ticketnum3>=10
  group by ticketnum3
   

 ------139、中转联程航线数据（两段价格之和<=直飞航班)
WITH segment_lowprice AS(
select HB1.SEGMENT_HEAD_ID,hb1.flight_date,hb1.flights_segment,min(cabin_price) lowprice
from(
select h1.segment_head_id,
       h1.seats_name ,
       h1.money ,
       h2.remnant ,
       trunc(h3.origin_std) flight_date ,
       h3.flights_segment ,
       h3.r_flights_no flight_no ,
       h4.flights_segment_name,
       h7.sub_cabin,
       case when h7.sub_cabin is not null then h7.sub_cabin
       else h1.money end cabin_price
  from (select *
          from (select segment_head_id,
                       MONEY_E,
MONEY_H,
MONEY_I,
MONEY_K,
MONEY_L,
MONEY_M,
MONEY_N,
MONEY_P,
MONEY_P1,
MONEY_P2,
MONEY_P3,
MONEY_P4,
MONEY_P5,
MONEY_Q,
MONEY_R1,
MONEY_R2,
MONEY_R3,
MONEY_R4,
MONEY_S,
MONEY_T,
MONEY_U,
MONEY_V,
MONEY_X,
MONEY_Y                       
from cqsale.cq_flights_segment_head@to_air) unpivot(money for seats_name in (MONEY_E as 'E',
MONEY_H as 'H',
MONEY_I as 'I',
MONEY_K as 'K',
MONEY_L as 'L',
MONEY_M as 'M',
MONEY_N as 'N',
MONEY_P as 'P',
MONEY_P1 as 'P1',
MONEY_P2 as 'P2',
MONEY_P3 as 'P3',
MONEY_P4 as 'P4',
MONEY_P5 as 'P5',
MONEY_Q as 'Q',
MONEY_R1 as 'R1',
MONEY_R2 as 'R2',
MONEY_R3 as 'R3',
MONEY_R4 as 'R4',
MONEY_S as 'S',
MONEY_T as 'T',
MONEY_U as 'U',
MONEY_V as 'V',
MONEY_X as 'X',
MONEY_Y as 'Y'
))
                  ) h1
  join (select *
          from (select segment_head_id,
                       REMNANT_E,
REMNANT_H,
REMNANT_I,
REMNANT_K,
REMNANT_L,
REMNANT_M,
REMNANT_N,
REMNANT_P,
REMNANT_P1,
REMNANT_P2,
REMNANT_P3,
REMNANT_P4,
REMNANT_P5,
REMNANT_Q,
REMNANT_R1,
REMNANT_R2,
REMNANT_R3,
REMNANT_R4,
REMNANT_S,
REMNANT_T,
REMNANT_U,
REMNANT_V,
REMNANT_X,
REMNANT_Y
from cqsale.cq_flights_seats_amount@to_air) unpivot(remnant for seats_name in (REMNANT_E AS 'E',
REMNANT_H AS 'H',
REMNANT_I AS 'I',
REMNANT_K AS 'K',
REMNANT_L AS 'L',
REMNANT_M AS 'M',
REMNANT_N AS 'N',
REMNANT_P AS 'P',
REMNANT_P1 AS 'P1',
REMNANT_P2 AS 'P2',
REMNANT_P3 AS 'P3',
REMNANT_P4 AS 'P4',
REMNANT_P5 AS 'P5',
REMNANT_Q AS 'Q',
REMNANT_R1 AS 'R1',
REMNANT_R2 AS 'R2',
REMNANT_R3 AS 'R3',
REMNANT_R4 AS 'R4',
REMNANT_S AS 'S',
REMNANT_T AS 'T',
REMNANT_U AS 'U',
REMNANT_V AS 'V',
REMNANT_X AS 'X',
REMNANT_Y AS 'Y'))) h2 on h1.segment_head_id =  h2.segment_head_id    and h1.seats_name = h2.seats_name
  join cqsale.cq_flights_segment_head@to_air h3 on h1.segment_head_id =  h3.segment_head_id
  join cqsale.cq_flights_seats_amount@to_air h5 on h1.segment_head_id=h5.segment_head_id
  left join dw.da_flight h4 on h1.segment_head_id = h4.segment_head_id
  left join (
  select h6.segment_head_id,h6.main_cabin,max(h6.sub_cabin_price) sub_cabin
from stg.s_CQ_SUB_CABIN_SEGMENT_HEAD h6
where h6.state=1
group by h6.segment_head_id,h6.main_cabin)h7 on h1.segment_head_id=h7.segment_head_id and h1.seats_name=h7.main_cabin
 where h3.origin_std >= trunc(sysdate)+1
   and h3.origin_std<   trunc(sysdate)+8
   and h2.remnant > 0
   and h3.flag <> 2
   and h3.r_flights_no like '9C%'
   and h1.seats_name not in('P2','P5','P3','P4'))hb1
   group by HB1.SEGMENT_HEAD_ID,hb1.flight_date,hb1.flights_segment)
   
   select  t1.*,t2.lowprice,t3.lowprice,t4.lowprice
 from dw.da_connect_flight t1
 JOIN segment_lowprice T2 ON T1.SEGMENT_ID1=T2.SEGMENT_HEAD_ID
 JOIN segment_lowprice t3 on t1.segment_id2=t3.segment_head_id
 left join (select  flight_date,flights_segment,min(lowprice) lowprice
                     from segment_lowprice
           group by flight_date,flights_segment
 )t4 on t4.flight_date=trunc(t1.ORIGIN_STD) and t4.flights_segment=t1.ORIGIN_AIRPORT1||t1.DEST_AIRPORT2
 where t1.origin_std>=trunc(sysdate)+1
   and t1.origin_std< trunc(sysdate)+8
   and t1.seg_flag='境内-境内'
   and t1.HUB_INTERVAL< 32;  
 
 =======================================================20200629==================================================
  ------140、 三亚相关数据提取
   
   /*需要3个 数据      1.   2019  全年春航所有三亚航线   进出港旅客总数    
 2。  2019年 1-6月底 春航所有三亚航线   进出港旅客总数   
  3.   2020年 1-6月底 春航所有三亚航线   进出港旅客总数*/
  
  select to_char(t1.flights_date,'yyyymm'),sum(t1.boardnum)
   from dw.da_main_order t1
   join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
   where t2.flights_segment_name like '%三亚%'
     and t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
     group by to_char(t1.flights_date,'yyyymm');
  
 =================================================20200702=========================================================================================
 ------141、
 
 select t1.t
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_Id=t2.segment_Head_id
 where t1.flights_date>=to_date('2019-07-15','yyyy-mm-dd')
 and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
 and t1.sex=1
 and t2.nationflag='国内'
 and t1.company_id=0
 and t1.codeno is not null

 
 
 
 
 ------142、套票数据
 
  select /*+parallel(4) */
    case when ticket_price>=2999 then 1
  else 0 end,count(1)
 from(
 select t1.traveller_name||t1.codeno,count(1),sum(t1.ticket_price) ticket_price
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_Id=t2.segment_Head_id
 where t1.flights_date>=to_date('2019-07-15','yyyy-mm-dd')
 and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
 and t1.sex=1
 and t2.nationflag='国内'
 and t1.company_id=0
 and t1.codeno is not null
 group by t1.traveller_name||t1.codeno
)h1
group by  case when ticket_price>=2999 then 1
  else 0 end；
  
  
   
  select /*+parallel(4) */
    case when ticket_price>=2999 then 1
  else 0 end,channel,count(1)
 from(
 select t1.traveller_name||t1.codeno,max(case when t1.channel in('网站','手机') then 0
 else 1 end) channel,
 count(1),sum(t1.ticket_price) ticket_price
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_Id=t2.segment_Head_id
 where t1.flights_date>=to_date('2019-07-15','yyyy-mm-dd')
 and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
 and t1.sex=1
 and t2.nationflag='国内'
 and t1.company_id=0
 and t1.codeno is not null
 group by t1.traveller_name||t1.codeno
)h1
group by  case when ticket_price>=2999 then 1
  else 0 end,channel;
  
   select /*+parallel(4) */
    case when ticket_price<=1000 then '(0,1000]'
    when ticket_price<=2000 then '(0,2000]'
    when ticket_price<=2999 then '(2000,2999]'
    when ticket_price<=4000 then '(2999,4000]'
    when ticket_price> 4000 then '4000+' end,
count(1),sum(case when ticket_price-2999>0 then ticket_price-2999
else null end),sum(ticketnum),sum(ticket_price) ticket_price
  
  
 from(
 select t1.traveller_name||t1.codeno,count(1) ticketnum,sum(t1.ticket_price) ticket_price
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_Id=t2.segment_Head_id
 where t1.flights_date>=to_date('2020-04-01','yyyy-mm-dd')
 and t1.flights_date< to_date('2020-07-01','yyyy-mm-dd')
 and t1.sex=1
 and t2.nationflag='国内'
 and t1.company_id=0
 and t1.codeno is not null
 group by t1.traveller_name||t1.codeno
)h1
group by   case when ticket_price<=1000 then '(0,1000]'
    when ticket_price<=2000 then '(0,2000]'
    when ticket_price<=2999 then '(2000,2999]'
    when ticket_price<=4000 then '(2999,4000]'
    when ticket_price> 4000 then '4000+' end;

 
 ------143、
select '限制20座位' type, h2.flights_date,h2.flights_segment_name,sum(h2.snum) snum,sum(h2.plannum),sum(h2.ticket_price)
from(
select h1.segment_head_id,h1.flights_date,h1.flights_segment_name,h1.snum,20 plannum,sum(h1.ticket_price) ticket_price
from(
select t1.segment_head_id,t1.flights_date,t2.flights_segment_name,t3.ticketnum,case when t2.oversale-t3.ticketnum<=0 then 0
else t2.oversale-t3.ticketnum end snum,t1.ticket_price,row_number()over(partition by t1.segment_head_id
order by t1.ticket_price) xid
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_Id=t2.segment_Head_id
 join dw.da_main_order t3 on t1.segment_head_id=t3.segment_head_id
 where t1.flights_date>=to_date('2019-07-15','yyyy-mm-dd')
 and t1.flights_date<   to_date('2020-01-01','yyyy-mm-dd')
 and t2.nationflag='国内'
 and t1.company_id=0
 and t1.sex=1
 and not (t1.flights_date>=to_date('2019-09-13','yyyy-mm-dd')
 and t1.flights_date<   to_date('2019-09-16','yyyy-mm-dd'))
 and not (t1.flights_date>=to_date('2019-10-01','yyyy-mm-dd')
 and t1.flights_date<   to_date('2019-10-07','yyyy-mm-dd'))
 and t1.is_swj=0
 and t1.EX_CFD6 is null
 and t1.seats_name is not null
 and t2.flag<>2
 and (case when t3.ticketnum <=0 then 0
 else  t3.ticketprice/t3.ticketnum end) >=0.4)h1
 where h1.xid+snum<=20
 group by h1.segment_head_id,h1.flights_date,h1.flights_segment_name,h1.snum)h2
group by h2.flights_date,h2.flights_segment_name
 

union all

select '限制10座位' type, h2.flights_date,h2.flights_segment_name,sum(h2.snum) snum,sum(h2.plannum),sum(h2.ticket_price)
from(
select h1.segment_head_id,h1.flights_date,h1.flights_segment_name,h1.snum,20 plannum,sum(h1.ticket_price) ticket_price
from(
select t1.segment_head_id,t1.flights_date,t2.flights_segment_name,t3.ticketnum,case when t2.oversale-t3.ticketnum<=0 then 0
else t2.oversale-t3.ticketnum end snum,t1.ticket_price,row_number()over(partition by t1.segment_head_id
order by t1.ticket_price) xid
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_Id=t2.segment_Head_id
 join dw.da_main_order t3 on t1.segment_head_id=t3.segment_head_id
 where t2.nationflag='国内'
 and t1.company_id=0
 and t1.sex=1
 and t1.flights_date>=to_date('2019-09-13','yyyy-mm-dd')
 and t1.flights_date<   to_date('2019-09-16','yyyy-mm-dd')
 and t1.is_swj=0
 and t1.EX_CFD6 is null
 and t1.seats_name is not null
 and t2.flag<>2
 and (case when t3.ticketnum <=0 then 0
 else  t3.ticketprice/t3.ticketnum end) >=0.4)h1
 where h1.xid+snum<=10
 group by h1.segment_head_id,h1.flights_date,h1.flights_segment_name,h1.snum)h2
group by h2.flights_date,h2.flights_segment_name

union all

select '限制10座位' type, h2.flights_date,h2.flights_segment_name,sum(h2.snum) snum,sum(h2.plannum),sum(h2.ticket_price)
from(
select h1.segment_head_id,h1.flights_date,h1.flights_segment_name,h1.snum,20 plannum,sum(h1.ticket_price) ticket_price
from(
select t1.segment_head_id,t1.flights_date,t2.flights_segment_name,t3.ticketnum,case when t2.oversale-t3.ticketnum<=0 then 0
else t2.oversale-t3.ticketnum end snum,t1.ticket_price,row_number()over(partition by t1.segment_head_id
order by t1.ticket_price) xid
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_Id=t2.segment_Head_id
 join dw.da_main_order t3 on t1.segment_head_id=t3.segment_head_id
 where t2.nationflag='国内'
 and t1.company_id=0
 and t1.sex=1
 and t1.flights_date>=to_date('2019-10-01','yyyy-mm-dd')
 and t1.flights_date<   to_date('2019-10-08','yyyy-mm-dd')
 and t1.is_swj=0
 and t1.EX_CFD6 is null
 and t1.seats_name is not null
 and t2.flag<>2
 and (case when t3.ticketnum <=0 then 0
 else  t3.ticketprice/t3.ticketnum end) >=0.4)h1
 where h1.xid+snum<=10
 group by h1.segment_head_id,h1.flights_date,h1.flights_segment_name,h1.snum)h2
group by h2.flights_date,h2.flights_segment_name;
 
 
 ------144、
 
 2019年1-4月 按月的 分年龄/性别/同行人数/航班出发时间段（0点-6点，7-9点，10-12点，12-18点，18-24点）/航线性质/出发城市/出行目的的 贵宾厅购买数量


select /*+parallel(4) */
 to_char(t1.flights_date,'yyyymm'), t4.AGE,decode(t4.GENDER,0,'-',1,'男',2,'女') 性别,t3.ticketnum,
case when to_char(t2.origin_std,'hh24')>='00' and to_char(t2.origin_std,'hh24')<='06' then '00~06' 
when to_char(t2.origin_std,'hh24')>='07' and to_char(t2.origin_std,'hh24')<='09' then '07~09' 
when to_char(t2.origin_std,'hh24')>='10' and to_char(t2.origin_std,'hh24')<='12' then '10~12' 
when to_char(t2.origin_std,'hh24')>='13' and to_char(t2.origin_std,'hh24')<='18' then '13~18' 
when to_char(t2.origin_std,'hh24')>='19' and to_char(t2.origin_std,'hh24')<='24' then '19~24'  end,
t2.nationflag,
t2.origincity_name,
t2.destcity_name,
sum(t1.book_num)
 from dw.fact_other_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join (select h1.flights_order_id,h1.segment_head_id,count(1) ticketnum
                        from dw.fact_order_detail h1
                        where h1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
 and h1.flights_date<to_date('2019-05-01','yyyy-mm-dd')
 and h1.company_id=0
 group by h1.flights_order_id,h1.segment_head_id)t3 on t1.flights_order_id=t3.flights_order_id
 and t1.segment_head_id=t3.segment_head_id
 left join dw.bi_order_region t4 on t1.flights_order_head_id=t4.flights_order_head_id  
 where t1.xtype_id=20
 and t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
 and t1.flights_date<to_date('2019-05-01','yyyy-mm-dd')
 and t1.company_id=0
 group by to_char(t1.flights_date,'yyyymm'), t4.AGE,t4.GENDER,t3.ticketnum,
case when to_char(t2.origin_std,'hh24')>='00' and to_char(t2.origin_std,'hh24')<='06' then '00~06' 
when to_char(t2.origin_std,'hh24')>='07' and to_char(t2.origin_std,'hh24')<='09' then '07~09' 
when to_char(t2.origin_std,'hh24')>='10' and to_char(t2.origin_std,'hh24')<='12' then '10~12' 
when to_char(t2.origin_std,'hh24')>='13' and to_char(t2.origin_std,'hh24')<='18' then '13~18' 
when to_char(t2.origin_std,'hh24')>='19' and to_char(t2.origin_std,'hh24')<='24' then '19~24'  end,
t2.nationflag,
t2.origincity_name,
t2.destcity_name;
 
 
 ==============================================20200703=======================================
 ------145、计算平均票价差异
 
 select to_char(t1.order_day,'yyyy'),count(1),sum(t1.ticket_price),sum(t1.ticket_price)/count(1)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.order_day>=trunc(sysdate)-7
   and t1.order_day< trunc(sysdate)
   and t1.nationflag='国内'
   and t1.sex=1
   and t2.flights_city_name like '%上海%'
   and t1.seats_name not in('B','G','G1','G2','O')
   and t1.company_id=0
   group by to_char(t1.order_day,'yyyy')
   
   
   union all 
   select to_char(t1.order_day,'yyyy'),count(1),sum(t1.ticket_price),sum(t1.ticket_price)/count(1)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.order_day>=add_months(trunc(sysdate)-7,-12)
   and t1.order_day< add_months(trunc(sysdate),-12)
   and t1.nationflag='国内'
   and t1.sex=1
   and t2.flights_city_name like '%上海%'
   and t1.seats_name not in('B','G','G1','G2','O')
   and t1.company_id=0
   group by to_char(t1.order_day,'yyyy');
 
==============================================20200706========================================
 ------146、各根据地平均票价变化
select /*+parallel(4) */
to_char(t1.flights_date,'yyyy'),
case when t1.flights_date>=to_date('2018-04-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2018-07-01','yyyy-mm-dd') then '04~07'
     when t1.flights_date>=to_date('2018-07-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2019-01-01','yyyy-mm-dd') then '07~12' end months,     
case when t2.flights_city_name like '%上海%' then '上海'
else '其他' end,
case when t2.flights_city_name like '%石家庄%' then '石家庄'
else '其他' end,
case when t2.flights_city_name like '%广州%' then '广州'
else '其他' end,
case when t2.flights_city_name like '%深圳%' then '深圳'
else '其他' end,
case when t2.flights_city_name like '%揭阳%' then '揭阳'
else '其他' end,
case when t2.flights_city_name like '%兰州%' then '兰州'
else '其他' end,
case when t2.flights_city_name like '%扬州%' then '扬州'
else '其他' end,
case when t2.flights_city_name like '%宁波%' then '宁波'
else '其他' end,
case when t2.flights_city_name like '%沈阳%' then '沈阳'
else '其他' end,
count(1),sum(t1.ticket_price),sum(t1.ticket_price)/count(1)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2018-04-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< trunc(sysdate)
   and t1.nationflag='国内'
   and t1.order_day< add_months(trunc(sysdate),-24)
   and t1.sex=1
      and t1.seats_name not in('B','G','G1','G2','O')
   and t1.company_id=0
   group by to_char(t1.flights_date,'yyyy'),
case when t1.flights_date>=to_date('2018-04-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2018-07-01','yyyy-mm-dd') then '04~07'
     when t1.flights_date>=to_date('2018-07-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2019-01-01','yyyy-mm-dd') then '07~12' end ,     
case when t2.flights_city_name like '%上海%' then '上海'
else '其他' end,
case when t2.flights_city_name like '%石家庄%' then '石家庄'
else '其他' end,
case when t2.flights_city_name like '%广州%' then '广州'
else '其他' end,
case when t2.flights_city_name like '%深圳%' then '深圳'
else '其他' end,
case when t2.flights_city_name like '%揭阳%' then '揭阳'
else '其他' end,
case when t2.flights_city_name like '%兰州%' then '兰州'
else '其他' end,
case when t2.flights_city_name like '%扬州%' then '扬州'
else '其他' end,
case when t2.flights_city_name like '%宁波%' then '宁波'
else '其他' end,
case when t2.flights_city_name like '%沈阳%' then '沈阳'
else '其他' end
 
union all


select to_char(t1.flights_date,'yyyy'),
case when t1.flights_date>=to_date('2019-04-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2019-07-01','yyyy-mm-dd') then '04~07'
     when t1.flights_date>=to_date('2019-07-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd') then '07~12' end months,     
case when t2.flights_city_name like '%上海%' then '上海'
else '其他' end,
case when t2.flights_city_name like '%石家庄%' then '石家庄'
else '其他' end,
case when t2.flights_city_name like '%广州%' then '广州'
else '其他' end,
case when t2.flights_city_name like '%深圳%' then '深圳'
else '其他' end,
case when t2.flights_city_name like '%揭阳%' then '揭阳'
else '其他' end,
case when t2.flights_city_name like '%兰州%' then '兰州'
else '其他' end,
case when t2.flights_city_name like '%扬州%' then '扬州'
else '其他' end,
case when t2.flights_city_name like '%宁波%' then '宁波'
else '其他' end,
case when t2.flights_city_name like '%沈阳%' then '沈阳'
else '其他' end,
count(1),sum(t1.ticket_price),sum(t1.ticket_price)/count(1)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2019-04-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
   and t1.order_day< trunc(sysdate)
   and t1.nationflag='国内'
   and t1.order_day< add_months(trunc(sysdate),-12)
   and t1.sex=1
      and t1.seats_name not in('B','G','G1','G2','O')
   and t1.company_id=0
   group by to_char(t1.flights_date,'yyyy'),
case when t1.flights_date>=to_date('2019-04-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2019-07-01','yyyy-mm-dd') then '04~07'
     when t1.flights_date>=to_date('2019-07-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd') then '07~12' end ,     
case when t2.flights_city_name like '%上海%' then '上海'
else '其他' end,
case when t2.flights_city_name like '%石家庄%' then '石家庄'
else '其他' end,
case when t2.flights_city_name like '%广州%' then '广州'
else '其他' end,
case when t2.flights_city_name like '%深圳%' then '深圳'
else '其他' end,
case when t2.flights_city_name like '%揭阳%' then '揭阳'
else '其他' end,
case when t2.flights_city_name like '%兰州%' then '兰州'
else '其他' end,
case when t2.flights_city_name like '%扬州%' then '扬州'
else '其他' end,
case when t2.flights_city_name like '%宁波%' then '宁波'
else '其他' end,
case when t2.flights_city_name like '%沈阳%' then '沈阳'
else '其他' end
   
 union all
 
select to_char(t1.flights_date,'yyyy'),
case when t1.flights_date>=to_date('2020-04-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2020-07-01','yyyy-mm-dd') then '04~07'
     when t1.flights_date>=to_date('2020-07-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd') then '07~12' end months,     
case when t2.flights_city_name like '%上海%' then '上海'
else '其他' end,
case when t2.flights_city_name like '%石家庄%' then '石家庄'
else '其他' end,
case when t2.flights_city_name like '%广州%' then '广州'
else '其他' end,
case when t2.flights_city_name like '%深圳%' then '深圳'
else '其他' end,
case when t2.flights_city_name like '%揭阳%' then '揭阳'
else '其他' end,
case when t2.flights_city_name like '%兰州%' then '兰州'
else '其他' end,
case when t2.flights_city_name like '%扬州%' then '扬州'
else '其他' end,
case when t2.flights_city_name like '%宁波%' then '宁波'
else '其他' end,
case when t2.flights_city_name like '%沈阳%' then '沈阳'
else '其他' end,
count(1),sum(t1.ticket_price),sum(t1.ticket_price)/count(1)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2020-04-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and t1.order_day< trunc(sysdate)
   and t1.nationflag='国内'
   and t1.order_day< trunc(sysdate)
   and t1.sex=1
      and t1.seats_name not in('B','G','G1','G2','O')
   and t1.company_id=0
   group by to_char(t1.flights_date,'yyyy'),
case when t1.flights_date>=to_date('2020-04-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2020-07-01','yyyy-mm-dd') then '04~07'
     when t1.flights_date>=to_date('2020-07-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd') then '07~12' end ,     
case when t2.flights_city_name like '%上海%' then '上海'
else '其他' end,
case when t2.flights_city_name like '%石家庄%' then '石家庄'
else '其他' end,
case when t2.flights_city_name like '%广州%' then '广州'
else '其他' end,
case when t2.flights_city_name like '%深圳%' then '深圳'
else '其他' end,
case when t2.flights_city_name like '%揭阳%' then '揭阳'
else '其他' end,
case when t2.flights_city_name like '%兰州%' then '兰州'
else '其他' end,
case when t2.flights_city_name like '%扬州%' then '扬州'
else '其他' end,
case when t2.flights_city_name like '%宁波%' then '宁波'
else '其他' end,
case when t2.flights_city_name like '%沈阳%' then '沈阳'
else '其他' end;
 
 ------147、
 请帮我提取些数据，上海～兰州～敦煌，帮我看下19年年航线的执行率，一共执行了多少班？运输总人数，
 上海～敦煌平均人数，兰州～敦煌平均每班多少人？另外，再帮我看下1～6月一共执行了多少班？执行率，运输总人数，上海～敦煌平均人数，兰州～敦煌平均人数
  select to_char(t2.flight_date, 'yyyy') 月份,
        replace(replace(t2.route_name,'浦东','上海'),'虹桥','上海') 航线,
        count(distinct t2.flights_id) 所有航班量,
        count(distinct case
                when t2.flag <> 2 then
                 t2.flights_id
                else
                 null
              end) 执行航班量,
        sum(t3.boardnum) 总运输人数,
        sum(case
              when t2.flights_city_name like '%上海%' and
                   t2.flights_city_name like '%兰州%' then
               t3.boardnum
              else
               0
            end) 上海兰州人数,
        sum(case
              when t2.flights_city_name like '%敦煌%' and
                   t2.flights_city_name like '%兰州%' then
               t3.boardnum
              else
               0
            end) 兰州敦煌人数,
        sum(case
              when t2.flights_city_name like '%上海%' and
                   t2.flights_city_name like '%敦煌%' then
               t3.boardnum
              else
               0
            end) 上海敦煌
   from dw.da_flight t2
   left join dw.da_main_order t3 on t2.segment_head_id = t3.segment_head_id
  where t2.flight_date >= to_date('2019-01-01', 'yyyy-mm-dd')
    and t2.flight_date < to_date('2020-07-01', 'yyyy-mm-dd')
    and t2.route_name like '%兰州%'
    and t2.route_name like '%敦煌%'
    and t2.route_name in ('虹桥－兰州－敦煌', '浦东－兰州－敦煌',
    '敦煌－兰州－虹桥', '敦煌－兰州－浦东')
  group by to_char(t2.flight_date, 'yyyy'),
        replace(replace(t2.route_name,'浦东','上海'),'虹桥','上海');

 
 ------148、

孙健让我看下今年1-6月期间国际和区域航线里定往返订单的人一共有几个人  国际多少人 区域多少人 能帮忙看下吗
区域、国际往返订单的对应人数分布

select num,nationflag,count(1)
from(
select  t1.flights_order_id,t2.nationflag,count(1) num
  from  dw.fact_recent_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id=t1.segment_head_id
  where t1.flights_date>=to_date('2020-01-01','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-07-01','yyyy-mm-dd')
    and t2.flag<>2
    and t2.nationflag <>'国内'
    and t1.flights_order_head_id<>t1.wf_lc_father_id
    group by t1.flights_order_id,t2.nationflag)
    group by num,nationflag;
  
  
  ---月份、航班性质、航段、间隔天数、订单量
  
  select flightmonth 去程月份,nationflag 航线性质,segmentcode 往返程航线,diffday 往返间隔,num1 往返订单对应人数,count(distinct flights_order_id1) 销售订单量
from(
select to_char(t1.origin_std1,'yyyymm') flightmonth,
t1.flights_order_id1,t3.nationflag,t1.origincity1||'-'||t1.destcity1||'-'||t1.destcity2 segmentcode,
trunc(t1.origin_std2)-trunc(t1.origin_std1) diffday,
count(1) num
 from dw.fact_wf_segment t1
 join dw.da_flight t2 on t1.segment_head_id1=t2.segment_head_id
 join dw.fact_recent_order_detail t3 on t1.flights_order_head_id1=t3.flights_order_head_id
 where exists(select 1
                  from dw.fact_recent_order_detail t4
                  where t4.flights_date>=to_date('2020-02-01','yyyy-mm-dd')
                    and t4.nationflag<>'国内'
                    and t4.seats_name not in('B','G','G','G1','O')
                    and t4.flights_order_head_id<>t4.wf_lc_father_id
                    and t4.flights_order_id=t1.flights_order_id1)
      and t1.flights_order_id1=t1.flights_order_id2
      and t3.nationflag<>'国内'
      and t1.origin_std1>=to_date('2020-02-01','yyyy-mm-dd')
      and t1.origin_std1< to_date('2020-07-01','yyyy-mm-dd')
      and t3.seats_name not in('B','G','G','G1','O')
      group by to_char(t1.origin_std1,'yyyymm'),t1.flights_order_id1,t3.nationflag,t1.origincity1||'-'||t1.destcity1||'-'||t1.destcity2,
      trunc(t1.origin_std2)-trunc(t1.origin_std1))
      group by flightmonth,nationflag,segmentcode,diffday,num1;
 

=================================================20200708=======================================
-------149、
 
   需要提取：航班日期在7月8日以后，销售已超过139（不含）名旅客以上的国际回程（金边、济州、曼谷、成田飞上海）的航班上所有旅客信息，
   信息包括（订单时间、航段、航班日期、订票人联系方式、乘机人联系方式、邮箱、是否变更、舱位、订单号、姓名、票面价），
   每个航班一个文件，命名为航班日期+航班号，文件以订单时间倒序安排。如：20200708航班9C6218*/
  

select h1.*
from(
select t.order_date 订单时间,t1.r_flights_date 航班日期,t1.whole_flight,t1.whole_segment,t.work_tel 订票人联系方式,t1.r_tel 乘机人联系方式,t.email 邮箱,
decode(t1.CHANGE_FLAG,'Y','是','N','否') 是否变更,t1.seats_name,
t1.flights_order_id,t1.name||' '||coalesce(t1.second_name,'') 姓名,t1.ticket_price 票面价,t1.r_com_rate 对应人民币汇率,
     count(1),sum(count(1))over(partition by t1.r_flights_date,t1.whole_flight,t1.whole_segment)  accnum
   from cqsale.cq_order@to_air t
   join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
   join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
   where t1.r_flights_date>=trunc(sysdate)+1
     --and t1.r_flights_date< to_date('2020-11-01','yyyy-mm-dd')
     and t2.flag<>2
     and t1.r_flights_date< to_date('2020-08-09','yyyy-mm-dd')
     and t2.originairport_name in('金边','曼谷','成田','济州岛')
     and t2.destairport_name ='浦东'
     and t1.seats_name is not null
     and t2.company_id=0
     and t1.flag_Id in(3,5,40,41)
   group by  t.order_date ,t1.r_flights_date ,t1.whole_flight,t1.whole_segment,t.work_tel ,t1.r_tel ,t.email ,
decode(t1.CHANGE_FLAG,'Y','是','N','否') ,t1.seats_name,
t1.flights_order_id,t1.name||' '||coalesce(t1.second_name,'') ,t1.ticket_price ,t1.r_com_rate
     )h1
   where  h1.accnum>139;

 ------150、
 
 select t1.r_flights_date 航班日期,t1.whole_flight,t1.whole_segment,count(1)
   from cqsale.cq_order@to_air t
   join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
  join cqsale.cq_flights_segment_head@to_air t2 on t1.segment_head_id=t2.segment_head_id
   where t1.r_flights_date>=trunc(sysdate)+1
     and t1.r_flights_date<=to_date('2020-10-31','yyyy-mm-dd')
     and t1.whole_flight like '9C%'
     and t1.whole_segment in('BKKPVG','CJUPVG','NRTPVG','PNHPVG')
     and t1.seats_name is not null
     and t1.flag_Id in(3,5,40,41)
     and t2.flag<>2
     group by  t1.r_flights_date ,t1.whole_flight,t1.whole_segment;

=========================================20200710=======================================================
 ------151、
 
单人套餐一：3次往返，包含10KG托运行李+7KG手提。
单人套餐二：4次往返，包含10KG托运行李+7KG手提。
双人套餐一：2人，每人3次往返，包含10KG托运行李+7KG手提。
双人套餐二：2人，每人4次往返，包含10KG托运行李+7KG手提

 相关数据已在报表中有更新
 
 
 
 ------152、支线航线的补贴申请数据
 
  create table dw.dim_segment_type_update as
select t1.route_id,t1.h_route_id,t1.route_type,t1.segment_type,t1.segment_code,
case when t1.route_type not like '%经停%' then t3.threecodeforcity||'－'||t4.threecodeforcity
else t3.threecodeforcity||'－'||t4.threecodeforcity||'－'||t5.threecodeforcity end ROOT_segment_code,
t1.flights_segment_name,t1.route_name,t1.nationflag root_nationflag,t1.nationflag,t1.segment_country,
'-' income_type,t1.originairport,t1.destairport,'-' wf_segment_name,'-' wf_city_name,'-' wf_segment,min(t1.flight_no) flight_no
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
 LEFT JOIN hdb.cq_airport T3 ON SPLIT_PART(T1.ROUTE_NAME,'－',1)=T3.airport_name and t3.threecodeforcity<>'SIA'
 LEFT JOIN hdb.cq_airport t4 on split_part(t1.route_name,'－',2)=t4.airport_name and t4.threecodeforcity<>'SIA'
 LEFT JOIN hdb.cq_airport t5 on split_part(t1.route_name,'－',3)=t5.airport_name and t5.threecodeforcity<>'SIA'
 where /*t1.flight_date>=to_date('2019-07-01','yyyy-mm-dd')
   and*/ --t1.flight_date< to_date('2020-07-01','yyyy-mm-dd')
    t2.root_segment_code  is null
   and t1.company_id=0
   and t2.h_route_id is  null
   group by t1.route_id,t1.h_route_id,t1.route_type,t1.segment_type,t1.segment_code,
case when t1.route_type not like '%经停%' then t3.threecodeforcity||'－'||t4.threecodeforcity
else t3.threecodeforcity||'－'||t4.threecodeforcity||'－'||t5.threecodeforcity end ,
t1.flights_segment_name,t1.route_name,t1.nationflag ,t1.nationflag,t1.segment_country,
'-' ,t1.originairport,t1.destairport,'-' ,'-' ,'-' 
 
 
 ------153、套票-航线数据
 
 
  select h1.segment_code,h1.flights_segment_name,h1.oversale/h1.tnum,case when h2.chplan/h2.snum=0 then 0.2125
 else  nvl(h2.chplan/h2.snum,0.2125) end,h1.flightnum,h3.plf
 from(
 select t1.segment_code,t1.flights_segment_name,sum(T1.OVERSALE) OVERSALE,SUM(sum(T1.OVERSALE))over(partition by 1) tnum,
        count(1) flightnum
  from dw.da_flight t1
  where t1.flight_date>=to_date('2020-07-19','yyyy-mm-dd')
    and t1.flight_date<=to_date('2020-10-24','yyyy-mm-dd')
    and t1.flag<>2
    and t1.nationflag='国内'
    and t1.company_id=0
    group by t1.segment_code,t1.flights_segment_name)h1
 left join (select ori||dst segment_code,sum(case when company='9C' then num else 0 end) chplan,sum(num) snum,
 sum(sum(case when company='9C' then num else 0 end))over(partition by 1) tnum1,
 sum(sum(num))over(partition by 1)  tnum2  
 from anl.fact_variflight_his@to_dds
 where company<>'执行航班总量'
 and sdate>=to_date('2020-05-03','yyyy-mm-dd')
 and sdate<=to_date('2020-06-27','yyyy-mm-dd')
 group by ori||dst)h2 on h1.segment_code=h2.segment_code
 left join(select tt2.segment_code,sum(tt1.boardnum)/suM(tt2.oversale) plf
             from dw.da_main_order tt1
             join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
             where tt1.flights_date>=to_date('2020-07-01','yyyy-mm-dd')
                and tt1.flights_date< to_date('2020-07-13','yyyy-mm-dd')
                and tt2.flag<>2
                and tt2.company_id=0
                group by tt2.segment_code)h3 on h1.segment_code=h3.segment_code
 
 
 ------154、
 
 
select sum(hh2.boardnum)
from(
select segment_head_id,flights_id,flag,route_name,route_id,h_route_id,segment_type
from(
select t1.segment_head_id,t1.flights_id,t1.flag,t1.route_name,t1.route_id,t1.h_route_id,t1.segment_type
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
 where t1.flight_date>=to_date('2019-07-01','yyyy-mm-dd')
   and t1.flight_date< to_date('2020-07-01','yyyy-mm-dd')   
   and t1.destairport in('LYG',
'XFN',
'CIF',
'LZO',
'DLU',
'AKU',
'YNJ',
'WMT',
'HTN',
'LZH',
'LYA',
'WDS',
'HSN',
'JNG',
'YIN',
'ENH',
'ACX',
'HYN',
'TCZ',
'DAT',
'BSD',
'BFJ',
'NNY',
'WXN',
'TGO',
'CGD',
'HNY',
'XIC',
'MDG',
'RIZ',
'NAO',
'YBP',
'HDG',
'TEN',
'FUG',
'DNH',
'DOY',
'FUO',
'JGS',
'TXN',
'KRY',
'CIH',
'DQA',
'HLH',
'JMU',
'YIC',
'LFQ',
'XIL',
'XAI',
'ENY',
'MXZ',
'HZG',
'WUS',
'SYM',
'DIG',
'HJJ',
'AQG',
'JDZ',
'JGN',
'DAX',
'BAR',
'LZY',
'YYA',
'PZI',
'JUH',
'WUA',
'NBS',
'BPE',
'TVS',
'SQD',
'AAT',
'JIQ',
'GYS',
'IQN',
'WUT',
'LNJ',
'WEF',
'LLV',
'JMJ',
'NDG',
'RLK',
'KCA',
'CDE',
'YKH',
'JUZ',
'WGN',
'JNZ',
'GYU',
'NZH',
'BPX',
'ZAT',
'AVA',
'TLQ',
'TCG',
'CWJ',
'LPF',
'QSZ',
'YUS',
'ZQZ',
'BPL',
'HMI',
'LNL',
'JXA',
'ZHY',
'DDG',
'SQJ',
'ERL',
'LCX',
'GOQ',
'WUZ',
'DCY',
'AEB',
'HEK',
'NLH',
'YZY',
'THQ',
'BZX',
'JIC',
'JGD',
'AOG',
'WNS',
'UCB',
'KJI',
'TWC',
'LDS',
'CHG',
'AXF',
'RKZ',
'LLB',
'YSQ',
'TNH',
'NZL',
'IQM',
'GMQ',
'RQA',
'JSJ',
'NLT',
'HXD',
'YIE',
'KJH',
'NGQ',
'GXH',
'OHE',
'HUO',
'HTT',
'XYI',
'LLF',
'DBC',
'FYN',
'DTU',
'GZG',
'FYJ',
'SHF',
'HPG',
'AHJ',
'HBQ',
'EJN',
'HCJ',
'JZH',
'HZH',
'RHT',
'WSK',
'GZG',
'CNI',
'AKA')

union 


select t1.segment_head_id,t1.flights_id,t1.flag,t1.route_name,t1.route_id,t1.h_route_id,t1.segment_type
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
 where t1.flight_date>=to_date('2019-07-01','yyyy-mm-dd')
   and t1.flight_date< to_date('2020-07-01','yyyy-mm-dd')
and t1.originairport in('LYG',
'XFN',
'CIF',
'LZO',
'DLU',
'AKU',
'YNJ',
'WMT',
'HTN',
'LZH',
'LYA',
'WDS',
'HSN',
'JNG',
'YIN',
'ENH',
'ACX',
'HYN',
'TCZ',
'DAT',
'BSD',
'BFJ',
'NNY',
'WXN',
'TGO',
'CGD',
'HNY',
'XIC',
'MDG',
'RIZ',
'NAO',
'YBP',
'HDG',
'TEN',
'FUG',
'DNH',
'DOY',
'FUO',
'JGS',
'TXN',
'KRY',
'CIH',
'DQA',
'HLH',
'JMU',
'YIC',
'LFQ',
'XIL',
'XAI',
'ENY',
'MXZ',
'HZG',
'WUS',
'SYM',
'DIG',
'HJJ',
'AQG',
'JDZ',
'JGN',
'DAX',
'BAR',
'LZY',
'YYA',
'PZI',
'JUH',
'WUA',
'NBS',
'BPE',
'TVS',
'SQD',
'AAT',
'JIQ',
'GYS',
'IQN',
'WUT',
'LNJ',
'WEF',
'LLV',
'JMJ',
'NDG',
'RLK',
'KCA',
'CDE',
'YKH',
'JUZ',
'WGN',
'JNZ',
'GYU',
'NZH',
'BPX',
'ZAT',
'AVA',
'TLQ',
'TCG',
'CWJ',
'LPF',
'QSZ',
'YUS',
'ZQZ',
'BPL',
'HMI',
'LNL',
'JXA',
'ZHY',
'DDG',
'SQJ',
'ERL',
'LCX',
'GOQ',
'WUZ',
'DCY',
'AEB',
'HEK',
'NLH',
'YZY',
'THQ',
'BZX',
'JIC',
'JGD',
'AOG',
'WNS',
'UCB',
'KJI',
'TWC',
'LDS',
'CHG',
'AXF',
'RKZ',
'LLB',
'YSQ',
'TNH',
'NZL',
'IQM',
'GMQ',
'RQA',
'JSJ',
'NLT',
'HXD',
'YIE',
'KJH',
'NGQ',
'GXH',
'OHE',
'HUO',
'HTT',
'XYI',
'LLF',
'DBC',
'FYN',
'DTU',
'GZG',
'FYJ',
'SHF',
'HPG',
'AHJ',
'HBQ',
'EJN',
'HCJ',
'JZH',
'HZH',
'RHT',
'WSK',
'GZG',
'CNI',
'AKA')


union 


select t1.segment_head_id,t1.flights_id,t1.flag,t1.route_name,t1.route_id,t1.h_route_id,t1.segment_type
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
 where t1.flight_date>=to_date('2019-07-01','yyyy-mm-dd')
   and t1.flight_date< to_date('2020-07-01','yyyy-mm-dd')
and t1.mid_airport in('LYG',
'XFN',
'CIF',
'LZO',
'DLU',
'AKU',
'YNJ',
'WMT',
'HTN',
'LZH',
'LYA',
'WDS',
'HSN',
'JNG',
'YIN',
'ENH',
'ACX',
'HYN',
'TCZ',
'DAT',
'BSD',
'BFJ',
'NNY',
'WXN',
'TGO',
'CGD',
'HNY',
'XIC',
'MDG',
'RIZ',
'NAO',
'YBP',
'HDG',
'TEN',
'FUG',
'DNH',
'DOY',
'FUO',
'JGS',
'TXN',
'KRY',
'CIH',
'DQA',
'HLH',
'JMU',
'YIC',
'LFQ',
'XIL',
'XAI',
'ENY',
'MXZ',
'HZG',
'WUS',
'SYM',
'DIG',
'HJJ',
'AQG',
'JDZ',
'JGN',
'DAX',
'BAR',
'LZY',
'YYA',
'PZI',
'JUH',
'WUA',
'NBS',
'BPE',
'TVS',
'SQD',
'AAT',
'JIQ',
'GYS',
'IQN',
'WUT',
'LNJ',
'WEF',
'LLV',
'JMJ',
'NDG',
'RLK',
'KCA',
'CDE',
'YKH',
'JUZ',
'WGN',
'JNZ',
'GYU',
'NZH',
'BPX',
'ZAT',
'AVA',
'TLQ',
'TCG',
'CWJ',
'LPF',
'QSZ',
'YUS',
'ZQZ',
'BPL',
'HMI',
'LNL',
'JXA',
'ZHY',
'DDG',
'SQJ',
'ERL',
'LCX',
'GOQ',
'WUZ',
'DCY',
'AEB',
'HEK',
'NLH',
'YZY',
'THQ',
'BZX',
'JIC',
'JGD',
'AOG',
'WNS',
'UCB',
'KJI',
'TWC',
'LDS',
'CHG',
'AXF',
'RKZ',
'LLB',
'YSQ',
'TNH',
'NZL',
'IQM',
'GMQ',
'RQA',
'JSJ',
'NLT',
'HXD',
'YIE',
'KJH',
'NGQ',
'GXH',
'OHE',
'HUO',
'HTT',
'XYI',
'LLF',
'DBC',
'FYN',
'DTU',
'GZG',
'FYJ',
'SHF',
'HPG',
'AHJ',
'HBQ',
'EJN',
'HCJ',
'JZH',
'HZH',
'RHT',
'WSK',
'GZG',
'CNI',
'AKA')
))hh1
left join dw.da_main_order hh2 on hh1.segment_head_id=hh2.segment_head_id;

-----客座率

select sum(tb1.checkin_mile)/sum(tb1.checkin_s_mile)
from hdb.recent_flights_cost tb1
left join(

select distinct route_name
from(
select segment_head_id,flights_id,flag,route_name,route_id,h_route_id,segment_Type
from(
select t1.segment_head_id,t1.flights_id,t1.flag,t1.route_name,t1.route_id,t1.h_route_id,t1.segment_Type
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
 where t1.flight_date>=to_date('2018-07-01','yyyy-mm-dd')
   and t1.flight_date< to_date('2019-07-01','yyyy-mm-dd')
   and t1.destairport in('LYG',
'XFN','CIF','LZO','DLU','AKU','YNJ','WMT','HTN','LZH','LYA','WDS','HSN','JNG','YIN','ENH','ACX','HYN','TCZ','DAT','BSD','BFJ','NNY','WXN','TGO','CGD','HNY','XIC',
'MDG','RIZ','NAO','YBP','HDG','TEN','FUG','DNH','DOY','FUO','JGS','TXN','KRY','CIH','DQA','HLH','JMU','YIC','LFQ','XIL','XAI','ENY','MXZ','HZG','WUS','SYM','DIG',
'HJJ','AQG','JDZ','JGN','DAX','BAR','LZY','YYA','PZI','JUH','WUA','NBS','BPE','TVS','SQD','AAT','JIQ','GYS','IQN','WUT','LNJ','WEF','LLV','JMJ','NDG','RLK','KCA','CDE',
'YKH','JUZ','WGN','JNZ','GYU','NZH','BPX','ZAT','AVA','TLQ','TCG','CWJ','LPF','QSZ','YUS','ZQZ','BPL','HMI','LNL','JXA','ZHY','DDG','SQJ','ERL','LCX','GOQ','WUZ','DCY',
'AEB','HEK','NLH','YZY','THQ','BZX','JIC','JGD','AOG','WNS','UCB','KJI','TWC','LDS','CHG','AXF','RKZ','LLB','YSQ','TNH','NZL','IQM','GMQ','RQA','JSJ','NLT','HXD','YIE','KJH',
'NGQ','GXH','OHE','HUO','HTT','XYI','LLF','DBC','FYN','DTU','GZG','FYJ','SHF','HPG','AHJ','HBQ','EJN','HCJ','JZH','HZH','RHT','WSK','GZG','CNI','AKA')

union 


select t1.segment_head_id,t1.flights_id,t1.flag,t1.route_name,t1.route_id,t1.h_route_id,t1.segment_Type
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
 where t1.flight_date>=to_date('2018-07-01','yyyy-mm-dd')
   and t1.flight_date< to_date('2019-07-01','yyyy-mm-dd')
and t1.originairport in('LYG',
'XFN',
'CIF',
'LZO',
'DLU',
'AKU',
'YNJ',
'WMT',
'HTN',
'LZH',
'LYA',
'WDS',
'HSN',
'JNG',
'YIN',
'ENH',
'ACX',
'HYN',
'TCZ',
'DAT',
'BSD',
'BFJ',
'NNY',
'WXN',
'TGO',
'CGD',
'HNY',
'XIC',
'MDG',
'RIZ',
'NAO',
'YBP',
'HDG',
'TEN',
'FUG',
'DNH',
'DOY',
'FUO',
'JGS',
'TXN',
'KRY',
'CIH',
'DQA',
'HLH',
'JMU',
'YIC',
'LFQ',
'XIL',
'XAI',
'ENY',
'MXZ',
'HZG',
'WUS',
'SYM',
'DIG',
'HJJ',
'AQG',
'JDZ',
'JGN',
'DAX',
'BAR',
'LZY',
'YYA',
'PZI',
'JUH',
'WUA',
'NBS',
'BPE',
'TVS',
'SQD',
'AAT',
'JIQ',
'GYS',
'IQN',
'WUT',
'LNJ',
'WEF',
'LLV',
'JMJ',
'NDG',
'RLK',
'KCA',
'CDE',
'YKH',
'JUZ',
'WGN',
'JNZ',
'GYU',
'NZH',
'BPX',
'ZAT',
'AVA',
'TLQ',
'TCG',
'CWJ',
'LPF',
'QSZ',
'YUS',
'ZQZ',
'BPL',
'HMI',
'LNL',
'JXA',
'ZHY',
'DDG',
'SQJ',
'ERL',
'LCX',
'GOQ',
'WUZ',
'DCY',
'AEB',
'HEK',
'NLH',
'YZY',
'THQ',
'BZX',
'JIC',
'JGD',
'AOG',
'WNS',
'UCB',
'KJI',
'TWC',
'LDS',
'CHG',
'AXF',
'RKZ',
'LLB',
'YSQ',
'TNH',
'NZL',
'IQM',
'GMQ',
'RQA',
'JSJ',
'NLT',
'HXD',
'YIE',
'KJH',
'NGQ',
'GXH',
'OHE',
'HUO',
'HTT',
'XYI',
'LLF',
'DBC',
'FYN',
'DTU',
'GZG',
'FYJ',
'SHF',
'HPG',
'AHJ',
'HBQ',
'EJN',
'HCJ',
'JZH',
'HZH',
'RHT',
'WSK',
'GZG',
'CNI',
'AKA')


union 


select t1.segment_head_id,t1.flights_id,t1.flag,t1.route_name,t1.route_id,t1.h_route_id,t1.segment_Type
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
 where t1.flight_date>=to_date('2018-07-01','yyyy-mm-dd')
   and t1.flight_date< to_date('2019-07-01','yyyy-mm-dd')
and t1.mid_airport in('LYG',
'XFN',
'CIF',
'LZO',
'DLU',
'AKU',
'YNJ',
'WMT',
'HTN',
'LZH',
'LYA',
'WDS',
'HSN',
'JNG',
'YIN',
'ENH',
'ACX',
'HYN',
'TCZ',
'DAT',
'BSD',
'BFJ',
'NNY',
'WXN',
'TGO',
'CGD',
'HNY',
'XIC',
'MDG',
'RIZ',
'NAO',
'YBP',
'HDG',
'TEN',
'FUG',
'DNH',
'DOY',
'FUO',
'JGS',
'TXN',
'KRY',
'CIH',
'DQA',
'HLH',
'JMU',
'YIC',
'LFQ',
'XIL',
'XAI',
'ENY',
'MXZ',
'HZG',
'WUS',
'SYM',
'DIG',
'HJJ',
'AQG',
'JDZ',
'JGN',
'DAX',
'BAR',
'LZY',
'YYA',
'PZI',
'JUH',
'WUA',
'NBS',
'BPE',
'TVS',
'SQD',
'AAT',
'JIQ',
'GYS',
'IQN',
'WUT',
'LNJ',
'WEF',
'LLV',
'JMJ',
'NDG',
'RLK',
'KCA',
'CDE',
'YKH',
'JUZ',
'WGN',
'JNZ',
'GYU',
'NZH',
'BPX',
'ZAT',
'AVA',
'TLQ',
'TCG',
'CWJ',
'LPF',
'QSZ',
'YUS',
'ZQZ',
'BPL',
'HMI',
'LNL',
'JXA',
'ZHY',
'DDG',
'SQJ',
'ERL',
'LCX',
'GOQ',
'WUZ',
'DCY',
'AEB',
'HEK',
'NLH',
'YZY',
'THQ',
'BZX',
'JIC',
'JGD',
'AOG',
'WNS',
'UCB',
'KJI',
'TWC',
'LDS',
'CHG',
'AXF',
'RKZ',
'LLB',
'YSQ',
'TNH',
'NZL',
'IQM',
'GMQ',
'RQA',
'JSJ',
'NLT',
'HXD',
'YIE',
'KJH',
'NGQ',
'GXH',
'OHE',
'HUO',
'HTT',
'XYI',
'LLF',
'DBC',
'FYN',
'DTU',
'GZG',
'FYJ',
'SHF',
'HPG',
'AHJ',
'HBQ',
'EJN',
'HCJ',
'JZH',
'HZH',
'RHT',
'WSK',
'GZG',
'CNI',
'AKA')
))hh1)tb2 on tb1.route_name=tb2.route_name
where tb1.flight_date>=to_date('2018-07-01','yyyy-mm-dd')
  and tb1.flight_date< to_date('2019-07-01','yyyy-mm-dd')
  and tb1.total_cost>0
  and tb1.checkin_s_mile>0
  and tb1.checkin_mile>0


============================================20200713=================================================
 
 ------155、航线网络数据
 
 select distinct case when t1.segment_type like '%实航班%' then '直飞' else
t1.segment_type end 航线类型,
case when t1.originairport_name='茅台' then t1.originairport_name
when t1.originairport_name='黔江' then '黔江(重庆)'
else t1.origincity_name end 始发城市,
t1.originairport 始发机场三字码,
case when t1.segment_type like '%经停AB%'  then null
when t1.segment_type like '%BC%' then null
when t1.segment_type like '%经停AC段%' then 
case when t1.midairport_name='茅台' then t1.midairport_name
when t1.midairport_name='黔江' then '黔江(重庆)'
else t1.midcity_name end
else null end 经停点城市,

case when t1.segment_type like '%经停AB%'  then null
when t1.segment_type like '%BC%' then null
when t1.segment_type like '%经停AC段%' then 
case when t1.midairport_name='茅台' then t1.mid_airport
when t1.midairport_name='黔江' then '黔江(重庆)'
else t1.mid_airport end
else null end 经停机场三字码,
case when t1.destairport_name='茅台' then t1.destairport_name
when t1.destairport_name='黔江' then '黔江(重庆)'
else t1.destcity_name end 抵达城市,t1.destairport 抵达机场三字码
from dw.da_flight t1
where t1.flight_date>=trunc(sysdate)
and t1.flight_date<=to_date('2020-12-31','yyyy-mm-dd')
and t1.flag<>2
and t1.company_id=0
--and t1.destairport_name<>t1.destcity_name;
 
 
 =============================================20200715=============================
 ------156、在售价格拉取
 
 select hb1.segment_head_id,hb1.flight_date,hb1.flights_segment,hb1.flight_no,hb1.flights_segment_name,min(cabin_price)
from(
select h1.segment_head_id,
       h1.seats_name ,
       h1.money ,
       h2.remnant ,
       trunc(h3.origin_std) flight_date ,
       h3.flights_segment ,
       h3.r_flights_no flight_no ,
       h4.flights_segment_name,
       h7.sub_cabin,
       case when h7.sub_cabin is not null then h7.sub_cabin
       else h1.money end cabin_price
  from (select *
          from (select segment_head_id,
                       MONEY_E,
MONEY_H,
MONEY_I,
MONEY_K,
MONEY_L,
MONEY_M,
MONEY_N,
MONEY_P,
MONEY_P1,
MONEY_P2,
MONEY_P3,
MONEY_P4,
MONEY_P5,
MONEY_Q,
MONEY_R1,
MONEY_R2,
MONEY_R3,
MONEY_R4,
MONEY_S,
MONEY_T,
MONEY_U,
MONEY_V,
MONEY_X,
MONEY_Y                       
from cqsale.cq_flights_segment_head@to_air) unpivot(money for seats_name in (MONEY_E as 'E',
MONEY_H as 'H',
MONEY_I as 'I',
MONEY_K as 'K',
MONEY_L as 'L',
MONEY_M as 'M',
MONEY_N as 'N',
MONEY_P as 'P',
MONEY_P1 as 'P1',
MONEY_P2 as 'P2',
MONEY_P3 as 'P3',
MONEY_P4 as 'P4',
MONEY_P5 as 'P5',
MONEY_Q as 'Q',
MONEY_R1 as 'R1',
MONEY_R2 as 'R2',
MONEY_R3 as 'R3',
MONEY_R4 as 'R4',
MONEY_S as 'S',
MONEY_T as 'T',
MONEY_U as 'U',
MONEY_V as 'V',
MONEY_X as 'X',
MONEY_Y as 'Y'
))
                  ) h1
  join (select *
          from (select segment_head_id,
                       REMNANT_E,
REMNANT_H,
REMNANT_I,
REMNANT_K,
REMNANT_L,
REMNANT_M,
REMNANT_N,
REMNANT_P,
REMNANT_P1,
REMNANT_P2,
REMNANT_P3,
REMNANT_P4,
REMNANT_P5,
REMNANT_Q,
REMNANT_R1,
REMNANT_R2,
REMNANT_R3,
REMNANT_R4,
REMNANT_S,
REMNANT_T,
REMNANT_U,
REMNANT_V,
REMNANT_X,
REMNANT_Y
from cqsale.cq_flights_seats_amount@to_air) unpivot(remnant for seats_name in (REMNANT_E AS 'E',
REMNANT_H AS 'H',
REMNANT_I AS 'I',
REMNANT_K AS 'K',
REMNANT_L AS 'L',
REMNANT_M AS 'M',
REMNANT_N AS 'N',
REMNANT_P AS 'P',
REMNANT_P1 AS 'P1',
REMNANT_P2 AS 'P2',
REMNANT_P3 AS 'P3',
REMNANT_P4 AS 'P4',
REMNANT_P5 AS 'P5',
REMNANT_Q AS 'Q',
REMNANT_R1 AS 'R1',
REMNANT_R2 AS 'R2',
REMNANT_R3 AS 'R3',
REMNANT_R4 AS 'R4',
REMNANT_S AS 'S',
REMNANT_T AS 'T',
REMNANT_U AS 'U',
REMNANT_V AS 'V',
REMNANT_X AS 'X',
REMNANT_Y AS 'Y'))) h2 on h1.segment_head_id =  h2.segment_head_id    and h1.seats_name = h2.seats_name
  join cqsale.cq_flights_segment_head@to_air h3 on h1.segment_head_id =  h3.segment_head_id
  join cqsale.cq_flights_seats_amount@to_air h5 on h1.segment_head_id=h5.segment_head_id
  left join dw.da_flight h4 on h1.segment_head_id = h4.segment_head_id
  left join (
  select h6.segment_head_id,h6.main_cabin,max(h6.sub_cabin_price) sub_cabin
from stg.s_CQ_SUB_CABIN_SEGMENT_HEAD h6
where h6.state=1
group by h6.segment_head_id,h6.main_cabin)h7 on h1.segment_head_id=h7.segment_head_id and h1.seats_name=h7.main_cabin
 where h3.origin_std >= trunc(sysdate)+1
   and h3.origin_std< to_date('2020-09-01','yyyy-mm-dd')
   and h2.remnant > 0
   and h3.flag <> 2
   --and h1.segment_head_id =1438884
   and h3.r_flights_no like '9C%'
   and h1.seats_name not in('P2','P5','P3','P4','A','D','Z','I','J','O'))hb1
   group by hb1.segment_head_id,hb1.flight_date,hb1.flights_segment,hb1.flight_no,hb1.flights_segment_name;
 
 ================================================20200716=====================================
 ------157、
 
 select distinct h1.*,h2.*
from(
select distinct case when t1.originairport_name='茅台' then t1.originairport_name
when t1.originairport_name='黔江' then '黔江(重庆)'
else t1.origincity_name end 始发城市,
t1.originairport 始发机场三字码,
case when t1.destairport_name='茅台' then t1.destairport_name
when t1.destairport_name='黔江' then '黔江(重庆)'
else t1.destcity_name end 抵达城市,t1.destairport 抵达机场三字码
from dw.da_flight t1
where t1.flight_date>=trunc(sysdate)
and t1.flight_date<=to_date('2020-12-31','yyyy-mm-dd')
and t1.flag<>2
and t1.company_id=0)h1
left join (select distinct case when t1.originairport_name='茅台' then t1.originairport_name
when t1.originairport_name='黔江' then '黔江(重庆)'
else t1.origincity_name end 始发城市,
t1.originairport 始发机场三字码,
case when t1.destairport_name='茅台' then t1.destairport_name
when t1.destairport_name='黔江' then '黔江(重庆)'
else t1.destcity_name end 抵达城市,t1.destairport 抵达机场三字码
from dw.da_flight t1
where t1.flight_date>=trunc(sysdate)
and t1.flight_date<=to_date('2020-12-31','yyyy-mm-dd')
and t1.flag<>2
and t1.company_id=0)h2 on h1.抵达城市=h2.始发城市
--and t1.destairport_name<>t1.destcity_name;
 
 ------158、贵阳机场修跑道
 
 select distinct t.flights_order_id,t1.whole_flight,t1.name||' '||coalesce(t1.second_name,'') 姓名,
t.work_tel,t1.r_tel
from cqsale.cq_order@to_air t
join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
where t1.r_flights_date=trunc(sysdate)
 and t1.whole_flight iN('9C8886','9C650','9C8794')
  and t1.flag_id in(3,5,40,41)
 
 ------159、套票辅收相关情况
 
 select seats_type,combo_name,fznum,xtype_name,count(1),sum(bookfee)
from(
select  trunc(t1.r_order_date) order_day,
             t1.r_flights_date,
       t1.segment_head_id,
       t1.whole_segment,
       h3.create_id,
       case when h3.create_id ='9971' then '3499礼包'
            when h3.create_id='10009' then '2999礼包'
            when h3.create_id ='10010' then '3999礼包' end combo_name,
             case when t1.flag_id in(3,5,40,41) then 1
              else 0 end payflag,     
        
       h5.yhq_money,
       t1.flights_order_head_id,
       t1.name||coalesce(t1.second_name,' ')||'-'||t1.codeno sname,
       t1.flag_id,
       h3.users_id,
       (t1.insurance_fee+t1.other_fee)*nvl(t1.r_com_rate,1) fzfee,
       case when t1.insurance_fee+t1.other_fee>0 then 1
       else 0 end fznum,
       case when t1.EX_CFD2='S' then '商务经济座'
       when t1.ex_cfd10 is not null then '经济座'
       else '普通座' end seats_type,
       t3.xtype_name,
       t2.book_price*t2.r_com_rate bookfee
       
        from yhq.cq_new_yhq_relation@to_air h3 
   join yhq.cq_new_yhq_history@to_air h4 on h4.yhq_id=h3.id
          join yhq.cq_new_yhq_history_detail@to_air h5 on h4.id = h5.history_id
          join cqsale.cq_order_head@to_air t1 on h5.order_head_id = t1.flights_order_head_id
         left  join cqsale.cq_other_order_head@to_air t2 on t1.flights_order_head_id=t2.order_head_id
          left join cqsale.cq_xtype@to_air t3 on t2.ex_nfd1=t3.xtype_id
              where t1.flag_id in (3, 5, 40, 41,7,11,12)
           and t1.r_order_date >=to_date('2020-07-15 18:00:00', 'yyyy-mm-dd hh24:mi:ss')
           and t1.r_flights_date >=to_date('2020-07-15 18:00:00', 'yyyy-mm-dd hh24:mi:ss')
           and h4.create_date >=to_date('2020-07-15 18:00:00', 'yyyy-mm-dd hh24:mi:ss')
   and t1.seats_name not in('O','D')
   and t1.ticket_price=0
   and h3.create_date>=to_date('2020-07-15 18:00:00', 'yyyy-mm-dd hh24:mi:ss')
   --and t1.time_stamp>=trunc(sysdate)
   and h3.create_id in('9971','10009','10010')
  )
  group by seats_type,combo_name,fznum,xtype_name;
  
  
  
  select
       case when t1.EX_CFD2='S' then '商务经济座'
       when t1.ex_cfd10 is not null then '经济座'
       else '普通座' end seats_type,
         case when t1.insurance_fee+t1.other_fee>0 then 1
       else 0 end fznum,count(1),sum((t1.insurance_fee+t1.other_fee)*t1.r_com_rate) bookfee
        from cqsale.cq_order@to_air t 
        join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_Order_id
                      where t1.flag_id in (3, 5, 40, 41,7,11,12)
              and t.order_date>=to_date('2020-07-15 18:00:00', 'yyyy-mm-dd hh24:mi:ss')
              and t.terminal_id<0
              and t.web_id=0
              and t.ex_nfd1>2              
           and t1.r_order_date >=to_date('2020-07-15 18:00:00', 'yyyy-mm-dd hh24:mi:ss')
           and t1.r_flights_date >=to_date('2020-07-15 18:00:00', 'yyyy-mm-dd hh24:mi:ss')
           group by  case when t1.EX_CFD2='S' then '商务经济座'
       when t1.ex_cfd10 is not null then '经济座'
       else '普通座' end ,
         case when t1.insurance_fee+t1.other_fee>0 then 1
       else 0 end ;
     
     
     
      select  case when t1.EX_CFD2='S' then '商务经济座'
       when t1.ex_cfd10 is not null then '经济座'
       else '普通座' end seats_type,
       t3.xtype_name, 
       count(distinct t2.other_order_head_id) 数量,
       sum(t2.book_price*t2.r_com_rate) bookfee       
        from cqsale.cq_order@to_air t 
        join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_Order_id
           join cqsale.cq_other_order_head@to_air t2 on t1.flights_order_head_id=t2.order_head_id
           join cqsale.cq_xtype@to_air t3 on t2.ex_nfd1=t3.xtype_id
              where t1.flag_id in (3, 5, 40, 41,7,11,12)
              and t.order_date>=to_date('2020-07-15 18:00:00', 'yyyy-mm-dd hh24:mi:ss')
              and t.terminal_id<0
              and t.web_id=0
              and t.ex_nfd1>2              
           and t1.r_order_date >=to_date('2020-07-15 18:00:00', 'yyyy-mm-dd hh24:mi:ss')
           and t1.r_flights_date >=to_date('2020-07-15 18:00:00', 'yyyy-mm-dd hh24:mi:ss')
           group by case when t1.EX_CFD2='S' then '商务经济座'
       when t1.ex_cfd10 is not null then '经济座'
       else '普通座' end,   t3.xtype_name;

 
 
 ------160、
--退套票相关用户的数据
 
drop table hdb.temp_feng_0718 purge;

create table hdb.temp_feng_07182 as
select t4.province ,t4.city,getgender(nvl(t3.IDNO,t2.IDNO)) gender,getage(trunc(t1.create_date),
nvl(getbirthday(nvl(t3.IDNO,t2.IDNO)),nvl(t3.birthday,t2.BIRTHDAY))) age,
t1.buy_user_id,t1.BUY_CONTACT_PHONE,t1.user_id,t1.YHQ_BATCH_ID,t2.reg_date,t1.ticket_id,
case when t1.user_id is not null and t1.yhq_batch_id is not null then '已激活'
when t1.user_id is null then '未激活' end status,
case when t1.user_id is not null 
then case when t1.buy_user_id =t1.user_ID then '本人激活'
when t1.buy_user_id<>t1.user_id then '赠送他人' end 
else null end status_type,
t5.reg_date status_date,
t1.combo_name,
t1.create_date
from yhq.cq_yhq_unlimited_combo@to_air t1
left join cust.cq_flights_users@to_air t2 on t1.BUY_USER_ID=t2.users_id
left join cust.cq_flights_users_huiyuan@to_air t3 on t1.BUY_USER_ID=t3.users_id_fk
left join dw.adt_mobile_list t4 on substr(t1.BUY_CONTACT_PHONE,1,7) =t4.mobilenumber
left join cust.cq_flights_users@to_air t5 on t1.user_id=t5.users_id
where t1.CREATE_DATE>=to_DATE('2020-07-15 18:00:00','yyyy-mm-dd hh24:mi:ss')
 and t1.combo_name in('想飞就飞惠选礼包','想飞就飞精选礼包','想飞就飞优选礼包')
 and t1.status<>2；
 
 select t1.*,t2.last_orderdate,t2.last_flightdate,t2.ordernum,t2.backnum
from hdb.temp_feng_0718 t1
left join dw.da_user_purchase t2 on t1.user_id=t2.users_id;
 
 
 select t1.province 省份,t1.city 城市,t1.gender 性别,t1.age 年龄,t1.buy_user_id,t1.buy_contact_phone 预订人手机号码,
t1.user_id 激活人账号,t1.yhq_batch_id 优惠批次号,t1.reg_date 预订人注册日期,
case when t1.reg_date>=to_date('2020-07-02','yyyy-mm-dd') then '新会员'
when t1.reg_date>=trunc(sysdate)-180 then '最近半年注册'
when t1.reg_date>=trunc(sysdate)-365 then '最近一年注册'
else '1年前注册' end 预订人注册类型,
1 套票量,
t1.status 激活状态,
t1.status_type 激活人类型,
t1.status_date 激活人注册日期,
t2.last_orderdate 预订人最近一次购票日期,
case when t2.last_orderdate>=t1.create_date then '购套票后有购票记录'
when t2.last_orderdate>=t1.create_date-180 then '购套票前半年有购票记录'
when t2.last_orderdate>=t1.create_date-365 then '购套票前一年内有购票记录'
when t2.last_orderdate is null then '无购票记录'
else '一年外有购票记录' end 购票记录类型,
t2.ordernum 总购票量,
t2.ordernum-t2.backnum 总成功购票量
from hdb.temp_feng_0718 t1
left join dw.da_user_purchase t2 on t1.user_id=t2.users_id;
 
 
 ------161、对比数据
 
   select '退票' 类型,t1.province 省份,t1.city 城市,t1.gender 性别,t1.age 年龄,t1.buy_user_id,t1.buy_contact_phone 预订人手机号码,
t1.user_id 激活人账号,t1.yhq_batch_id 优惠批次号,t1.reg_date 预订人注册日期,
case when t1.reg_date>=to_date('2020-07-02','yyyy-mm-dd') then '新会员'
when t1.reg_date>=trunc(sysdate)-180 then '最近半年注册'
when t1.reg_date>=trunc(sysdate)-365 then '最近一年注册'
else '1年前注册' end 预订人注册类型,
1 套票量,
t1.status 激活状态,
t1.status_type 激活人类型,
t1.status_date 激活人注册日期,
t2.last_orderdate 预订人最近一次购票日期,
case when t2.last_orderdate>=t1.create_date then '购套票后有购票记录'
when t2.last_orderdate>=t1.create_date-180 then '购套票前半年有购票记录'
when t2.last_orderdate>=t1.create_date-365 then '购套票前一年内有购票记录'
when t2.last_orderdate is null then '无购票记录'
else '一年外有购票记录' end 购票记录类型,
t2.ordernum 总购票量,
t2.ordernum-t2.backnum 总成功购票量
from hdb.temp_feng_0718 t1
left join dw.da_user_purchase t2 on t1.user_id=t2.users_id
 
 
 
 union all
 
 
 select '未退票',t1.province 省份,t1.city 城市,t1.gender 性别,t1.age 年龄,t1.buy_user_id,t1.buy_contact_phone 预订人手机号码,
t1.user_id 激活人账号,t1.yhq_batch_id 优惠批次号,t1.reg_date 预订人注册日期,
case when t1.reg_date>=to_date('2020-07-02','yyyy-mm-dd') then '新会员'
when t1.reg_date>=trunc(sysdate)-180 then '最近半年注册'
when t1.reg_date>=trunc(sysdate)-365 then '最近一年注册'
else '1年前注册' end 预订人注册类型,
1 套票量,
t1.status 激活状态,
t1.status_type 激活人类型,
t1.status_date 激活人注册日期,
t2.last_orderdate 预订人最近一次购票日期,
case when t2.last_orderdate>=t1.create_date then '购套票后有购票记录'
when t2.last_orderdate>=t1.create_date-180 then '购套票前半年有购票记录'
when t2.last_orderdate>=t1.create_date-365 then '购套票前一年内有购票记录'
when t2.last_orderdate is null then '无购票记录'
else '一年外有购票记录' end 购票记录类型,
t2.ordernum 总购票量,
t2.ordernum-t2.backnum 总成功购票量
from hdb.temp_feng_07182 t1
left join dw.da_user_purchase t2 on t1.user_id=t2.users_id;


  select '退票' 类型,t1.province 省份,t1.city 城市,t1.gender 性别,t1.age 年龄,t1.buy_user_id,t1.buy_contact_phone 预订人手机号码,
t1.user_id 激活人账号,t1.yhq_batch_id 优惠批次号,t1.reg_date 预订人注册日期,
case when t1.reg_date>=to_date('2020-07-02','yyyy-mm-dd') then '新会员'
when t1.reg_date>=trunc(sysdate)-180 then '最近半年注册'
when t1.reg_date>=trunc(sysdate)-365 then '最近一年注册'
else '1年前注册' end 预订人注册类型,
1 套票量,
t1.status 激活状态,
t1.status_type 激活人类型,
t1.status_date 激活人注册日期,
t2.last_orderdate 预订人最近一次购票日期,
case when t2.last_orderdate>=t1.create_date then '购套票后有购票记录'
when t2.last_orderdate>=t1.create_date-180 then '购套票前半年有购票记录'
when t2.last_orderdate>=t1.create_date-365 then '购套票前一年内有购票记录'
when t2.last_orderdate is null then '无购票记录'
else '一年外有购票记录' end 购票记录类型,
t2.ordernum 总购票量,
t2.ordernum-t2.backnum 总成功购票量,
case when t2.first_orderdate>=t1.create_date then '首购'
when t2.first_orderdate<=t1.create_date  then '以前购票过'
when t2.first_orderdate is null then '无购票记录'
 end 首购类型
from hdb.temp_feng_0718 t1
left join dw.da_user_purchase t2 on t1.user_id=t2.users_id
 
 
 
 union all
 
 
 select '未退票',t1.province 省份,t1.city 城市,t1.gender 性别,t1.age 年龄,t1.buy_user_id,t1.buy_contact_phone 预订人手机号码,
t1.user_id 激活人账号,t1.yhq_batch_id 优惠批次号,t1.reg_date 预订人注册日期,
case when t1.reg_date>=to_date('2020-07-02','yyyy-mm-dd') then '新会员'
when t1.reg_date>=trunc(sysdate)-180 then '最近半年注册'
when t1.reg_date>=trunc(sysdate)-365 then '最近一年注册'
else '1年前注册' end 预订人注册类型,
1 套票量,
t1.status 激活状态,
t1.status_type 激活人类型,
t1.status_date 激活人注册日期,
t2.last_orderdate 预订人最近一次购票日期,
case when t2.last_orderdate>=t1.create_date then '购套票后有购票记录'
when t2.last_orderdate>=t1.create_date-180 then '购套票前半年有购票记录'
when t2.last_orderdate>=t1.create_date-365 then '购套票前一年内有购票记录'
when t2.last_orderdate is null then '无购票记录'
else '一年外有购票记录' end 购票记录类型,
t2.ordernum 总购票量,
t2.ordernum-t2.backnum 总成功购票量,
case when t2.first_orderdate>=t1.create_date then '首购'
when t2.first_orderdate<=t1.create_date  then '以前购票过'
when t2.first_orderdate is null then '无购票记录'
 end 首购类型
from hdb.temp_feng_07182 t1
left join dw.da_user_purchase t2 on t1.user_id=t2.users_id;
 
 
 ===============================================20200720==================================================== 
 ------162、
 
 /*2020年7月30日起春秋航空南京禄口国际机场国内航班进出港的柜台、登机口从目前的T2航站楼搬迁至T1航站楼；
需要提取旅客名单：7月20日14:55分前，购买7月30日（含）后，南京机场国内航班进出港所有航线的旅客名单；
（订单号/航班号/航班日期/航段/姓名/紧急联系电话/联系电话/邮箱）*/


select distinct t.flights_order_id 订单号,t1.whole_flight 航班号,t1.r_flights_date 航班日期,
t1.whole_segment,t1.name||' '||coalesce(t1.second_name,'') 姓名,
t.work_tel 联系电话,t1.r_tel 紧急联系电话,t.email 邮箱
from cqsale.cq_order@to_air t
join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
where t1.r_flights_date>=trunc(sysdate)
and t.order_date< to_date('2020-07-20 14:55','yyyy-mm-dd hh24:mi')
and t1.r_nation_flag=1
 and t1.whole_segment like '%NKG%'
  and t1.flag_id in(3,5,40,41)
  
  

 
 ===========================================================20200722==========================================
 
 ------163、
 select h3.boardtype ,h3.pstype,count(1) 乘机人数
from(
select h1.*,h2.board_num,h2.min_flightdate,h2.max_flightdate,
case when h2.min_flightdate>=h1.create_date then '新增乘机人'
when h2.codeno is  null then '新增乘机人'
when h2.board_num< 5 then '5次以下老用户'
when h2.board_num< 10 then '10次以下老用户'
when h2.board_num>= 10 then '10次及以上老用户' end boardtype,
case when h2.max_flightdate>=trunc(sysdate)-180 then '最近半年有乘机记录'
when h2.max_flightdate>=trunc(sysdate)-365 
and h2.max_flightdate< trunc(sysdate)-180  then '180~365'
when h2.max_flightdate< trunc(sysdate)-365 then '1年前' end pstype
from(
select user_id,t2.idno,min(t1.create_date) create_date
 from yhq.cq_yhq_unlimited_combo@to_air t1
 left join cust.cq_flights_users_huiyuan@to_air t2 on t1.user_id=t2.users_id_fk
 where t1.create_date>=to_date('2020-07-15 18:00','yyyy-mm-dd hh24:mi')
 and user_id is not null
 group by user_id,t2.idno)h1
 left join dw.fact_idno_statistics h2 on h1.idno=h2.codeno
 )h3
 group by h3.boardtype ,h3.pstype；
 
 
 ------164、已飞航线销售进度以及对于收入的影响
 
 --横向对比、纵向对比 
select h3.flight_date,h3.route_name,sum(oversale) oversale,sum(h3.limit) limit,sum(h3.ticketnum) ticketnum,
sum(h3.ticketprice) ticketprice ,sum(h3.predict_num) predict_num,sum(h3.predict_price) predict_price,
sum(h3.sult_num) sult_num,sum(h3.yhq_money) yhq_money,
case when h4.route_name is not null then 1 else 0 end 是否兑换航线,
case when sum(h3.sult_num)>0 then 1 else 0 end  是否兑换机票
from(
select h1.flights_id,h1.flight_date,h1.route_name,sum(h1.oversale) oversale,h2.limit,sum(h1.ticketnum) ticketnum,
sum(nvl(tp1.CORR_PREDICT_TICKET_NUM,h1.ticketnum)) predict_num,
sum(h1.ticketprice) ticketprice,sum(nvl(tp1.corr_predict_ticket_price,h1.ticketprice)) predict_price,
sum(h1.sult_num) sult_num,sum(h1.yhq_money) yhq_money
from(
select t2.flights_id,t2.flight_date,t2.route_name,t1.segment_head_id,t2.oversale,count(1) ticketnum,
sum(t1.ticket_price*t1.r_com_rate) ticketprice,
count(t3.flights_order_head_id) sult_num,
sum(t3.yhq_money) yhq_money
from cqsale.cq_order_head@to_air t1
join dw.da_flight t2 on t2.segment_head_id=t1.segment_head_id
left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
where t1.r_flights_date>=to_date('2020-07-01','yyyy-mm-dd')
  and t1.r_flights_date<=to_date('2020-07-27','yyyy-mm-dd')
  and t2.nationflag='国内'
  and t1.whole_flight like '9C%'
  and t1.flag_id in(3,5,40,41)
  and t1.seats_name is not null
group by t2.flights_id,t2.flight_date,t2.route_name,t1.segment_head_id,t2.oversale)h1
left join YHQ.CQ_SUIT_TICKET_LIMIT_RULE@to_air h2 on h1.flight_date>=to_date(h2.flight_date_s,'yyyy-mm-dd') 
and h1.flight_date<=to_date(h2.flight_date_e,'yyyy-mm-dd')
left join dw.fr_segment_income_predict3 tp1 on tp1.segment_head_id=h1.segment_head_id
group by h1.flights_id,h1.flight_date,h1.route_name,h2.limit)h3
left join (select distinct tt2.route_name
              from dw.fact_combo_ticket tt1
              join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
              where tt2.flag<>2)h4 on h3.route_name=h4.route_name 
group by h3.flight_date,h3.route_name,case when h4.route_name is not null then 1 else 0 end;
 
 
 ------165、
 
 --了解一些关于回国航班数据：1、中外乘客比例；2、中转乘客占比；3、中转乘客主要始发地；4、每周航班总人数大致多少

--了解一些关于回国航班数据：1、中外乘客比例；2、中转乘客占比；3、中转乘客主要始发地；4、每周航班总人数大致多少

select /*+parallel(4) */
case when t2.origin_country_id=0 then '出境'
when t2.origin_country_id>0 then '入境' end ,
t3.nationality,t2.weeks,count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.bi_order_region t3 on t1.flights_order_head_id=t3.flights_order_head_id
/* left join(select distinct h1.sname,h1.code_no,h2.code_no codeno2
     from (
      select t3.user_id,t3.custid,t3.fam_name_en||coalesce(t3.per_name_en,'') sname,code_no
      from  stg.c_cq_cust_code t3 
      where t3.status =9
    )h1
      left join( select t3.user_id,t3.custid,t3.fam_name_en||coalesce(t3.per_name_en,'') sname,code_no
      from  stg.c_cq_cust_code t3 
      where t3.status in(1,9)
   )h2 on h1.user_id=h2.user_id and h1.custid=h2.custid and h1.sname=h2.sname)tb1 on t1.codeno=tb1.codeno2 */
 where t1.flights_date>=to_date('2020-06-22','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-07-20','yyyy-mm-dd')
   and t1.company_id=0
   and t2.segment_country='日本'
  
   and t1.seats_name is not null
  group by case when t2.origin_country_id=0 then '出境'
when t2.origin_country_id>0 then '入境' end ,
t3.nationality,t2.weeks;
 
 
 
 ------166、套票数据
 select h3.flight_date,h3.route_name,sum(oversale) oversale,sum(h3.limit) limit,sum(h3.ticketnum) ticketnum,
sum(h3.ticketprice) ticketprice ,sum(h3.predict_num) predict_num,sum(h3.predict_price) predict_price,
sum(h3.sult_num) sult_num,sum(h3.yhq_money) yhq_money,
case when h4.route_name is not null then 1 else 0 end 是否兑换航线,
case when sum(h3.sult_num)>0 then 1 else 0 end  是否兑换机票
from(
select h1.flights_id,h1.flight_date,h1.route_name,sum(h1.oversale) oversale,h2.limit,sum(h1.ticketnum) ticketnum,
sum(nvl(tp1.CORR_PREDICT_TICKET_NUM,h1.ticketnum)) predict_num,
sum(h1.ticketprice) ticketprice,sum(nvl(tp1.corr_predict_ticket_price,h1.ticketprice)) predict_price,
sum(h1.sult_num) sult_num,sum(h1.yhq_money) yhq_money
from(
select t2.flights_id,t2.flight_date,t2.route_name,t1.segment_head_id,t2.oversale,count(1) ticketnum,
sum(t1.ticket_price*t1.r_com_rate) ticketprice,
count(t3.flights_order_head_id) sult_num,
sum(t3.yhq_money) yhq_money
from cqsale.cq_order_head@to_air t1
join dw.da_flight t2 on t2.segment_head_id=t1.segment_head_id
left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
where t1.r_flights_date>=to_date('2020-07-01','yyyy-mm-dd')
  and t1.r_flights_date<=to_date('2020-07-27','yyyy-mm-dd')
  and t2.nationflag='国内'
  and t1.whole_flight like '9C%'
  and t1.flag_id in(3,5,40,41)
  and t1.seats_name is not null
group by t2.flights_id,t2.flight_date,t2.route_name,t1.segment_head_id,t2.oversale)h1
left join YHQ.CQ_SUIT_TICKET_LIMIT_RULE@to_air h2 on h1.flight_date>=to_date(h2.flight_date_s,'yyyy-mm-dd')
and h1.flight_date<=to_date(h2.flight_date_e,'yyyy-mm-dd')
left join dw.fr_segment_income_predict3 tp1 on tp1.segment_head_id=h1.segment_head_id
group by h1.flights_id,h1.flight_date,h1.route_name,h2.limit)h3
left join (select distinct tt2.route_name
              from dw.fact_combo_ticket tt1
              join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
              where tt2.flag<>2)h4 on h3.route_name=h4.route_name
group by h3.flight_date,h3.route_name,case when h4.route_name is not null then 1 else 0 end
 
 
 
 
 ------167、
 
 
select h1.flights_id,h1.flight_date,h1.route_name,h1.limit_type,sum(h1.oversale) oversale,
sum(h1.remant) remant,sum(h2.ticketnum) ticketnum
from (select t1.flights_id,t1.flight_date,t1.route_name,
case when t1.flight_date>=to_date('2020-09-28','yyyy-mm-dd') and t1.flight_date<=to_date('2020-10-10','yyyy-mm-dd') then 10
else 20 end limit_type,sum(t1.oversale) oversale,
sum((t3.remnant_Y + t3.remnant_H + t3.remnant_K + t3.remnant_L +
                       t3.remnant_M + t3.remnant_N + t3.remnant_Q + t3.remnant_T + t3.remnant_X + 
                       t3.remnant_U + t3.remnant_E + t3.remnant_W + t3.remnant_P +
                        t3.remnant_P1 + t3.remnant_P2 + t3.remnant_O +t3.remnant_R1 + t3.remnant_R2 + t3.remnant_R3 + t3.remnant_R4 +
                        NVL(t3.remnant_F, 0) + NVL(t3.remnant_F1, 0) + NVL(t3.remnant_F2, 0) +
                        NVL(t3.remnant_F3, 0) + NVL(t3.remnant_F4, 0) + NVL(t3.remnant_C, 0) +
                        NVL(t3.remnant_C1, 0) + NVL(t3.remnant_C2, 0) +
                        NVL(t3.remnant_C3, 0) + NVL(t3.remnant_C4, 0) + NVL(t3.remnant_S, 0) +
                        NVL(t3.remnant_V, 0) + NVL(t3.remnant_A, 0) + NVL(t3.remnant_D, 0) +
                        NVL(t3.remnant_I, 0) + NVL(t3.remnant_J, 0) + NVL(t3.remnant_Z, 0) +
                        NVL(t3.remnant_P3, 0) + NVL(t3.remnant_P4, 0) +
                        NVL(t3.remnant_P5, 0)+NVL(t3.remnant_B, 0)+ NVL(t3.remnant_G, 0)+ NVL(t3.remnant_G1, 0)+ NVL(t3.remnant_G2, 0)
                       )) remant
        from dw.da_flight t1
    join cqsale.cq_flights_seats_amount@to_air t3 on t1.segment_head_id=t3.segment_head_id
    where t1.flight_date>=to_date('2020-07-24','yyyy-mm-dd')
  and t1.flight_date<=to_date('2020-12-31','yyyy-mm-dd') 
  and t1.flag<>2
  and t1.nationflag<>'国际'
  and t1.company_id=0
  group by t1.flights_id,t1.flight_date,t1.route_name,case when t1.flight_date>=to_date('2020-09-28','yyyy-mm-dd') and t1.flight_date<=to_date('2020-10-10','yyyy-mm-dd') then 10
else 20 end)h1
        
left join(select t2.flights_id,t2.flight_date,t2.route_name,
count(1) ticketnum
 from dw.fact_combo_ticket t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.payflag=1
 group by t2.flights_id,t2.flight_date,t2.route_name)h2 on h1.flights_id=h2.flights_id and h1.flight_date=h2.flight_date and h1.route_name=h2.route_name
where h1.flight_date>=to_date('2020-07-24','yyyy-mm-dd')
  and h1.flight_date< to_date('2020-12-31','yyyy-mm-dd') 
  group by h1.flights_id,h1.flight_date,h1.route_name,h1.limit_type;

  
 
 ------168、识别套票漏洞
 
 select t1.create_date 退订套票购买时间,t1.ticket_id,t1.buy_user_id 购买人,t1.combo_price 购买套票金额,t1.user_id 绑定userid,
 t1.yhq_batch_id 退订套票优惠批次,t1.LAST_UPDATE_TIME 最后更新时间,t1.status 退订状态,
 t2.orderday 乘机机票订单日期,t2.minflightdate 乘机机票乘机时间,t2.combo_name 乘机对应套票名称,t2.create_id 乘机对应套票优惠批次,
 t3.create_date 已兑创建时间,t3.combo_price 已兑套票金额, t3.ticket_id 目前已兑套票id,t3.user_id 已兑套票usersid,
 t3.yhq_batch_id 已兑套票优惠批次,t3.status 已兑状态,
 case when t1.create_date>t3.create_date then '先购买退订'
 when t1.create_date<=t3.create_date then '后购买退订' end 购买时间类型,
 case when t1.combo_price>t3.combo_price then '前高后低'
 when t1.combo_price< t3.combo_price then '前低后高'
  when t1.combo_price= t3.combo_price then '前后一致' 
  end 前后套票类型
 
 from yhq.cq_yhq_unlimited_combo@to_air t1
 join(select t1.users_id,t1.combo_name,t1.create_id,min(t1.order_day) orderday,min(t1.r_flights_date) minflightdate
  from dw.fact_combo_ticket t1
  where t1.flag_id=40
  group by t1.users_id,t1.combo_name,t1.create_id
  )t2 on t1.user_id=t2.users_id 
  left join yhq.cq_yhq_unlimited_combo@to_air t3 on t2.users_id=t3.user_id and t3.yhq_batch_id=t2.create_id and t3.status=1
  where t1.status=2;
 
 ------169、套票绑定人有多少是金卡会员
 --金卡会员：122
 select t2.memberlevelid,count(distinct t1.user_id)
from yhq.CQ_YHQ_UNLIMITED_COMBO@to_air t1
join dw.da_user_level t2 on t1.user_id=t2.users_id
where t1.status=1
group by t2.memberlevelid;

 ===============================================20200804===============================================
 ------170、提前期分布
select case when t1.ahead_days<10 then  '0'||to_char(t1.ahead_days)
when t1.ahead_days<=14 then  to_char(t1.ahead_days)
WHEN T1.AHEAD_DAYS<=30 THEN '15~30'
WHEN T1.AHEAD_DAYS<=60 THEN '31~60'
ELSE '60+' END 提前期,
count(1) 票量,
sum(count(1))OVER(partition by 1) 合计票量,
sum(count(1))over(order by case when t1.ahead_days<10 then  '0'||to_char(t1.ahead_days)
when t1.ahead_days<=14 then  to_char(t1.ahead_days)
WHEN T1.AHEAD_DAYS<=30 THEN '15~30'
WHEN T1.AHEAD_DAYS<=60 THEN '31~60'
ELSE '60+' END) 累计票量
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.order_day>= trunc(sysdate)-7
   and t1.order_day<  trunc(sysdate)
   and t1.seats_name not in('B','G','G1','G2','O')
   and t1.company_id=0
   and t1.seats_name is not null
   group by  case when t1.ahead_days<10 then  '0'||to_char(t1.ahead_days)
when t1.ahead_days<=14 then  to_char(t1.ahead_days)
WHEN T1.AHEAD_DAYS<=30 THEN '15~30'
WHEN T1.AHEAD_DAYS<=60 THEN '31~60'
ELSE '60+' END；

 
 
 ------171、
 
 select h1.*,
row_number()over(partition by stype order by h1.originairport_name) 排序
from(
select distinct case when t1.origin_country_id>0 then '国际区域'
else '国内' end stype ,t1.originairport_name ,replace(t1.origincity_name,'黔江','重庆')  城市
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)
   and t1.flight_date< trunc(sysdate)+180
   and t1.company_id=0
   and t1.flag<>2)h1
   order by 1;

 ========================================================20200817=============================================
 ------172、
 
 select t1.flight_date,t1.route_name,sum(t1.checkin_mile)/sum(t1.checkin_s_mile)
 from hdb.recent_flights_cost t1
 where t1.flight_date>=trunc(sysdate)-28
 and t1.flight_date< trunc(sysdate)
 and t1.route_name like '虹桥%'
 and to_char(t1.flight_date,'day') in('星期六')
 and t1.checkin_num>0
 and t1.checkin_s_mile>0
 and t1.checkin_mile>0
 and t1.total_cost>0
 group by t1.flight_date,t1.route_name;
 
 
  select t1.flights_date,t2.flights_segment_name,t2.route_name,sum(t1.boardnum)/sum(t1.oversale)
   from dw.da_main_order t1
   join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
   where to_char(t2.origin_std,'hh24:mi')>='10:00'
   and to_char(t2.origin_std,'hh24:mi')<'16:00'
  and  t1.flights_date>=trunc(sysdate)-28
 and t1.flights_date< trunc(sysdate)
 and t2.route_name like '浦东%'
 and to_char(t1.flights_date,'day') in('星期六')
  group by t1.flights_date,t2.route_name,t2.flights_segment_name;
 
 
 ------173、北京航线数据
 
 select t1.flights_city_name 航段,min(t1.flight_date) 开始日期,max(t1.flight_date) 结束日期,count(1)
 from dw.da_flight t1
 where t1.flights_segment_name like '%北京%'
 and t1.flag<>2
 group by t1.flights_city_name;
 
 
 select min(t.order_date)
  from stg.s_cq_order t
  join stg.s_cq_order_head t1 on t.flights_order_id=t1.flights_order_id
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t2.flights_segment_name like '%北京%'
    and t2.flag<>2
    and t1.flag_id in(3,5,40,41,7,11,12)
 
 ------174、订单
 
 select /*+parallel(4) */
to_char(t1.order_DAY,'YYYY') SYEAR,to_char(t1.order_day,'mmdd') DAY,T2.AREA_TYPE,count(1),SUM(T1.TICKET_PRICE)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.order_day>=to_date('2020-08-01','yyyy-mm-dd')
   and t1.order_day< to_date('2020-08-22','yyyy-mm-dd')
   and t1.flights_date>=to_date('2020-08-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-11-01','yyyy-mm-dd')
   and t1.company_id=0
   and t2.flag<>2
   and t1.seats_name not in('B','G','G1','G2','O')
   GROUP BY to_char(t1.order_DAY,'YYYY') ,to_char(t1.order_day,'mmdd') ,T2.AREA_TYPE
   
   UNION ALL
   
   select to_char(t1.order_DAY,'YYYY') SYEAR,to_char(t1.order_day,'mmdd') DAY,T2.AREA_TYPE,count(1),SUM(T1.TICKET_PRICE)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.order_day>=to_date('2019-08-01','yyyy-mm-dd')
   and t1.order_day< to_date('2019-08-22','yyyy-mm-dd')
   and t1.flights_date>=to_date('2019-08-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2019-11-01','yyyy-mm-dd')
   and t1.company_id=0
   and t2.flag<>2
   and t1.seats_name not in('B','G','G1','G2','O')
   GROUP BY to_char(t1.order_DAY,'YYYY') ,to_char(t1.order_day,'mmdd') ,T2.AREA_TYPE
   
   union all
   
   select to_char(t1.order_DAY,'YYYY') SYEAR,to_char(t1.order_day,'mmdd') DAY,T2.AREA_TYPE,count(1),SUM(T1.TICKET_PRICE)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.order_day>=to_date('2018-08-01','yyyy-mm-dd')
   and t1.order_day< to_date('2018-08-22','yyyy-mm-dd')
   and t1.flights_date>=to_date('2018-08-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2018-11-01','yyyy-mm-dd')
   and t1.company_id=0
   and t2.flag<>2
   and t1.seats_name not in('B','G','G1','G2','O')
   GROUP BY to_char(t1.order_DAY,'YYYY') ,to_char(t1.order_day,'mmdd') ,T2.AREA_TYPE;
   
 
 ------175、
 
 好的，另外再出一份X轴是8月底10天，和9月上中下旬每个10天的，销售日期分别为今年的本周和上周和上上周动票量分布的柱形图，以及均价分布的柱形图。




select /*+parallel(4) */

case when  t1.order_day>=to_date('2020-08-01','yyyy-mm-dd') and t1.order_day<=to_date('2020-08-07','yyyy-mm-dd') then '上上周'
when  t1.order_day>=to_date('2020-08-08','yyyy-mm-dd') and t1.order_day<=to_date('2020-08-14','yyyy-mm-dd') then '上周'
when  t1.order_day>=to_date('2020-08-15','yyyy-mm-dd') and t1.order_day<=to_date('2020-08-21','yyyy-mm-dd') then '本周' end 销售日期,

case when  t1.flights_date>=to_date('2020-08-22','yyyy-mm-dd') and t1.flights_date<=to_date('2020-08-31','yyyy-mm-dd') then '0822~0831'
when  t1.flights_date>=to_date('2020-09-01','yyyy-mm-dd') and t1.flights_date<=to_date('2020-09-10','yyyy-mm-dd') then '0901~0910'
when  t1.flights_date>=to_date('2020-09-11','yyyy-mm-dd') and t1.flights_date<=to_date('2020-09-20','yyyy-mm-dd') then '0911~0920'
when  t1.flights_date>=to_date('2020-09-21','yyyy-mm-dd') and t1.flights_date<=to_date('2020-09-30','yyyy-mm-dd') then '0921~0930' end
航班日期类型,
count(1) ,sum(t1.ticket_price)
to_char(t1.order_day,'mmdd') DAY,T2.AREA_TYPE,count(1),SUM(T1.TICKET_PRICE)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.order_day>=to_date('2020-08-01','yyyy-mm-dd')
   and t1.order_day< to_date('2020-08-22','yyyy-mm-dd')
   and t1.flights_date>=to_date('2020-08-22','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-10-01','yyyy-mm-dd')
   and t1.company_id=0
   and t2.flag<>2
   and t1.seats_name not in('B','G','G1','G2','O')
   group by 
case when  t1.order_day>=to_date('2020-08-01','yyyy-mm-dd') and t1.order_day<=to_date('2020-08-07','yyyy-mm-dd') then '上上周'
when  t1.order_day>=to_date('2020-08-08','yyyy-mm-dd') and t1.order_day<=to_date('2020-08-14','yyyy-mm-dd') then '上周'
when  t1.order_day>=to_date('2020-08-15','yyyy-mm-dd') and t1.order_day<=to_date('2020-08-21','yyyy-mm-dd') then '本周' end ,

case when  t1.flights_date>=to_date('2020-08-22','yyyy-mm-dd') and t1.flights_date<=to_date('2020-08-31','yyyy-mm-dd') then '0822~0831'
when  t1.flights_date>=to_date('2020-09-01','yyyy-mm-dd') and t1.flights_date<=to_date('2020-09-10','yyyy-mm-dd') then '0901~0910'
when  t1.flights_date>=to_date('2020-09-11','yyyy-mm-dd') and t1.flights_date<=to_date('2020-09-20','yyyy-mm-dd') then '0911~0920'
when  t1.flights_date>=to_date('2020-09-21','yyyy-mm-dd') and t1.flights_date<=to_date('2020-09-30','yyyy-mm-dd') then '0921~0930' end；

 
 ------176、OTA购票呼叫中心退票
 
select to_char(t1.origin_std,'yyyymm'),t2.channel,count(1)
 from dw.da_order_drawback t1
 left join dw.da_channel_part t2 on t1.terminal_id=t2.terminal_id and t1.web_id=t2.web_id and t1.ex_nfd1=t2.station_id
 where t1.money_terminal in(300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505)
   and t1.origin_std>=to_date('2019-01-01','yyyy-mm-dd')
   and t2.channel in('OTA','旗舰店')
   group by to_char(t1.origin_std,'yyyymm'),t2.channel;
 
 ------177、短信数据统计
 
 select to_char(t1.PROCESS_TIME,'yyyymm') 日期,t3.name,decode(t1.SMS_PLATFORM,1,'东方般若',2,'满意通',5,'哈朵',6,'讯越',
7,'亿美',8,'佳讯',9,'大汉三通',t1.SMS_PLATFORM) 供应商,
sum(nvl(t1.fact_sms_count,1)) 发送条数
  from stg.s_tb_sms_down_his t1
  LEFT JOIN STG.S_TB_SMS_SYS_FLAG T2 ON T1.SYS_FLAG=T2.ID
  LEFT JOIN STG.S_TB_SMS_TYPE T3 ON T1.REF_ID1=T3.ID
  WHERE TRUNC(t1.PROCESS_TIME)>=to_date('2017-11-01','yyyy-mm-dd')
  and t3.name in('出行中-不正常航班提醒(SpringCrm)',
'出行中-截载提醒（CRM旅客消息）',
'出行中-值机截载（CRM旅客消息）',
'出行后-航班落地（CRM旅客消息）',
'出行中-登机截载（CRM旅客消息）',
'出行中-登机口变更（CRM旅客消息）',
'出行中-航班取消（CRM旅客消息）',
'出行中-航班延误（CRM旅客消息）',
'出行中-取消补班（CRM旅客消息）',
'服务-95524回复',
'服务-IP旅客')
  --and TRUNC(t1.PROCESS_TIME)< to_date('2019-07-26','yyyy-mm-dd')  and t1.STATUS=3
 
  group by to_char(t1.PROCESS_TIME,'yyyymm'),t3.name,decode(t1.SMS_PLATFORM,1,'东方般若',2,'满意通',5,'哈朵',6,'讯越',
7,'亿美',8,'佳讯',9,'大汉三通',t1.SMS_PLATFORM);
 
 
 =======================================================20200825=====================================
 
 ------178、
 
 select --t2.weeks/*t2.origincity_name,t2.destcity_name*/,count(distinct t2.segment_head_id),count(distinct t2.flights_id),
count(distinct t2.origincity_name),
sum(t1.boardnum)
 from dw.da_main_order t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
   and t2.segment_country ='日本'
and t2.dest_country_id>0
 and t2.flag<>2
   and t2.company_id=0
/*   and t2.flights_segment_name like '%普吉%'
   and t2.destairport_name  like '%普吉%'*/
  -- group by t2.weeks;
 
 
 ------179、B2T销售数据跟踪
 
 select to_char(t.order_date, 'yyyymm') 订单月,
       sum(case
             when t1.seats_name is not null then
              1
             else
              0
           end) 票数
  from cqsale.cq_cftr_order_relation@to_air r
  join stg.s_cq_order t on t.flights_order_id = r.order_no --r.order_no可能为空
  join stg.s_cq_order_head t1 on t1.flights_order_id = t.flights_order_id
 where t.order_date >= trunc(sysdate, 'mm')
   and t.order_date < trunc(sysdate)
   and t1.r_flights_date >= trunc(sysdate, 'mm') - 7
   and t1.flag_id in (3, 5, 40, 41)
 group by to_char(t.order_date, 'yyyymm')
 
 
 ------180、OTA日均销量
 
 select to_char(t1.order_day,'yyyymm'),t1.sub_channel,count(1)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.order_day>=to_date('2020-01-01','yyyy-mm-dd')
    and t1.order_day< to_date('2020-08-01','yyyy-mm-dd')
    and t2.flag<>2
    and t1.whole_flight like '9C%'
    and t1.seats_name is not null
    and t1.channel in('OTA','旗舰店')
    and t1.flag_id in(3,5,40,41)
    group by to_char(t1.order_day,'yyyymm'),t1.sub_channel
 
 ------181、noshow人数
 select t2.flight_date,t2.segment_code,t2.flight_no,count(1)
 from hdb.mid_noshow_data t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t2.flight_date>=to_date('2020-03-29','yyyy-mm-dd')
   and t2.flag<>2
   and t2.nationflag='国际'
   and t2.origin_country_id>0
   and t2.company_id=0
   group by t2.flight_date,t2.segment_code,t2.flight_no
 
 ------182、
 
 /*
字段：购买用户（套票乘机人）、是否购买上海=深圳航线、购买上海=深圳航线的频次、乘机人归属地（城市）、
年龄、性别、历史购票频次（购买套票前最近一年的乘机频次，总体乘机频次，购买套票前一年前的乘机频次，购买套票前购买航线列举，购买套票前购买早晚航班比例，
购买套票前购票渠道比例（OTA、自有、其他），购票套票前购买航线的性质比例，购买套票前购买机票退票率*/

drop table hdb.temp_feng_0827 purge;

create table hdb.temp_feng_0827 as 
select tb1.*,nvl(nvl(tb2.tel_province,tb2.card_province),tb2.reg_province)  province, 
nvl(nvl(tb2.tel_city,tb2.card_city),tb2.reg_city) city,tb2.gender,getage(sysdate,tb2.birthday) age
from (select t1.users_id,/*t3.cust_province,t3.cust_city,t3.age,t3.gender,*/sum(case when t2.flights_city_name like '%上海%'
 and t2.flights_city_name like '%深圳%' then 1
 else 0 end) ssnum,count(1) ttnum
 from dw.fact_combo_ticket t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 --left join dw.bi_order_region t3 on t1.flights_order_head_id=t3.flights_order_head_id
  where t1.flag_id in(3,5,40,41)
 /*and t2.flights_city_name like '%上海%'
 and t2.flights_city_name like '%深圳%'*/
 group by t1.users_id/*t3.cust_province,t3.cust_city,t3.age,t3.gender*/)tb1
 left join dw.da_lyuser tb2  on tb1.users_id=tb2.users_id_fk and tb2.cust_id<>'998601497574';
 --where tb1.ssnum>0;
 
 
 select t2.users_id,t2.ssnum,t2.ttnum,t2.province,t2.city,t2.gender,t2.age,replace(replace(t4.wf_segment,'浦东','上海'),'虹桥','上海') wf_city,
 count(1)
  from dw.fact_combo_ticket t1
  join hdb.temp_feng_0827 t2 on t1.users_id=t2.users_id
  join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
  join dw.dim_segment_type t4 on t3.h_route_id=t4.h_route_id and t3.route_id=t4.route_id
  where t1.flag_id in(3,5,40,41)
  and t2.ssnum>0
group by t2.users_id,t2.ssnum,t2.ttnum,t2.province,t2.city,t2.gender,t2.age,replace(replace(t4.wf_segment,'浦东','上海'),'虹桥','上海');



select /*+parallel(4) */
t1.users_id,t1.ssnum,t1.ttnum,t1.province,t1.city,t1.gender,t1.age,
 case when t4.terminal_id<0 and t4.web_id=0 then '自有渠道'
 when t4.terminal_id<0 and t4.web_id>0 then 'OTA'
 else '其他' end 渠道类型,
 case when t3.r_flights_date>=to_date('2019-07-23','yyyy-mm-dd') then '1年内'
 when t3.r_flights_date>=to_date('2018-07-23','yyyy-mm-dd') then '1年~2年间'
 when t3.r_flights_date< to_date('2018-07-23','yyyy-mm-dd') then '2年外'
 end  乘机日期类型,
 t5.area_type,
 replace(replace(t6.wf_segment,'浦东','上海'),'虹桥','上海') wf_city,
 case when to_char(t5.origin_std,'hh24:mi')< '08:00' then '早航班'
 when to_char(t5.origin_std,'hh24:mi')>= '20:00' then '晚航班'
 else '其他' end,count(1) 
  from hdb.temp_feng_0827 t1
  join stg.c_cq_cust_code t2 on t1.users_id=t2.user_id
  join stg.s_cq_order_head t3 on t2.code_no=t3.codeno
  join stg.s_cq_order t4 on t3.flights_order_id=t4.flights_order_id
  join dw.da_flight t5 on t3.segment_head_id=t5.segment_head_id
  join dw.dim_segment_type t6 on t5.h_route_id=t6.h_route_id and t5.route_id=t6.route_id
  where t3.flag_id=40
  and t3.r_flights_date< to_date('2020-07-23','yyyy-mm-dd')
  and t3.seats_name is not null
  and length(t3.codeno)>1
  and t3.whole_flight like '9C%'
  group by t1.users_id,t1.ssnum,t1.ttnum,t1.province,t1.city,t1.gender,t1.age,
 case when t4.terminal_id<0 and t4.web_id=0 then '自有渠道'
 when t4.terminal_id<0 and t4.web_id>0 then 'OTA'
 else '其他' end ,
 case when t3.r_flights_date>=to_date('2019-07-23','yyyy-mm-dd') then '1年内'
 when t3.r_flights_date>=to_date('2018-07-23','yyyy-mm-dd') then '1年~2年间'
 when t3.r_flights_date< to_date('2018-07-23','yyyy-mm-dd') then '2年外'
 end  ,
  t5.area_type,
 replace(replace(t6.wf_segment,'浦东','上海'),'虹桥','上海') ,
 case when to_char(t5.origin_std,'hh24:mi')< '08:00' then '早航班'
 when to_char(t5.origin_std,'hh24:mi')>= '20:00' then '晚航班'
 else '其他' end;
 
 
 select /*+parallel(4) */
t1.users_id,t1.ssnum,t1.ttnum,t1.province,t1.city,t1.gender,t1.age,
max(t3.r_flights_date),count(1),
sum( case when t3.r_flights_date>=to_date('2019-07-23','yyyy-mm-dd') then 1 else 0 end),
sum( case when t3.r_flights_date>=to_date('2018-07-23','yyyy-mm-dd')
and t3.r_flights_date< to_date('2019-07-23','yyyy-mm-dd') then 1 else 0 end),
sum( case when t3.r_flights_date< to_date('2018-07-23','yyyy-mm-dd')
 then 1 else 0 end)
 /*case when t4.terminal_id<0 and t4.web_id=0 then '自有渠道'
 when t4.terminal_id<0 and t4.web_id>0 then 'OTA'
 else '其他' end 渠道类型,
 case when t3.r_flights_date>=to_date('2019-07-23','yyyy-mm-dd') then '1年内'
 when t3.r_flights_date>=to_date('2018-07-23','yyyy-mm-dd') then '1年~2年间'
 when t3.r_flights_date< to_date('2018-07-23','yyyy-mm-dd') then '2年外'
 end  乘机日期类型,
 t5.area_type,
 replace(replace(t6.wf_segment,'浦东','上海'),'虹桥','上海') wf_city,
 case when to_char(t5.origin_std,'hh24:mi')< '08:00' then '早航班'
 when to_char(t5.origin_std,'hh24:mi')>= '20:00' then '晚航班'
 else '其他' end*/
  from hdb.temp_feng_0827 t1
  join stg.c_cq_cust_code t2 on t1.users_id=t2.user_id
  join stg.s_cq_order_head t3 on t2.code_no=t3.codeno
  join stg.s_cq_order t4 on t3.flights_order_id=t4.flights_order_id
  join dw.da_flight t5 on t3.segment_head_id=t5.segment_head_id
  join dw.dim_segment_type t6 on t5.h_route_id=t6.h_route_id and t5.route_id=t6.route_id
  where t3.flag_id=40
  and t3.r_flights_date< to_date('2020-07-23','yyyy-mm-dd')
  and t3.seats_name is not null
  and length(t3.codeno)>1
  and t3.whole_flight like '9C%'
  group by t1.users_id,t1.ssnum,t1.ttnum,t1.province,t1.city,t1.gender,t1.age；
 
  
 
 ------183、深圳上海用户数据
 
 drop table hdb.temp_feng_0828 purge;

create table hdb.temp_feng_0828 as 
select tb1.*,nvl(nvl(tb2.tel_province,tb2.card_province),tb2.reg_province)  province, 
nvl(nvl(tb2.tel_city,tb2.card_city),tb2.reg_city) city,tb2.gender,getage(sysdate,tb2.birthday) age
from (select t1.users_id,/*t3.cust_province,t3.cust_city,t3.age,t3.gender,*/sum(case when t2.flights_city_name like '%上海%'
 and t2.flights_city_name like '%深圳%' then 1
 else 0 end) ssnum,
 sum(case when t2.flights_city_name like '上海%'
 and t2.flights_city_name like '%深圳%' then 1
 else 0 end) ssnum1,
  sum(case when t2.flights_city_name like '%上海%'
 and t2.flights_city_name like '深圳%' then 1
 else 0 end) ssnum2,
 count(1) ttnum
 from dw.fact_combo_ticket t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 --left join dw.bi_order_region t3 on t1.flights_order_head_id=t3.flights_order_head_id
  where t1.flag_id in(3,5,40,41)
  and t1.order_day< trunc(sysdate)
  and t1.users_id=42451950
 group by t1.users_id/*t3.cust_province,t3.cust_city,t3.age,t3.gender*/)tb1
 left join dw.da_lyuser tb2  on tb1.users_id=tb2.users_id_fk and tb2.cust_id<>'998601497574';
 --where tb1.ssnum>0;



 drop table hdb.temp_feng_08282 purge;
 create table hdb.temp_feng_08282 as 
 select t1.*,t2.order_day,t2.r_flights_date,t2.segment_head_id,t2.whole_segment,
 t2.create_id,t2.combo_name,t2.payflag,t2.ticket_num,t2.yhq_money,t2.flights_order_head_id,
 t2.sname,t2.flag_id
 from hdb.temp_feng_0828 t1
 join dw.fact_combo_ticket t2 on t1.users_id=t2.users_id
 where t1.city like '%深圳%'
 and t2.flag_id in(3,5,40,41)
 and t1.users_id=42451950
 and t2.order_day< trunc(sysdate);
 
 
 
 select t1.users_id,
t1.ssnum,t1.ssnum1,t1.ssnum2,t1.ttnum,
case when t1.ssnum=0 then '完全非深圳上海'
when t1.ssnum=t1.ttnum then '仅深圳上海'
else '有深圳=上海又有其它航线' end 航线类型,
gender,
case when t1.age=-1 then '未识别'
when age<=17  then '12~17'
when age<=23  then '18~23'
when age<=29  then '24~29'
when age<=39  then '30~39'
when age<=49  then '40~49'
when age<=59  then '50~59'
when age>=60  then '60+' end 年龄层级,
1 用户数
 from hdb.temp_feng_0828 t1
 where t1.city like '%深圳%';
 
 
 
 =================================================20200831=======================================================
  ------184、呼叫中心退改签费用
 
   select sum(t1.money_fy)
 from dw.da_order_drawback t1
 where t1.money_terminal in(300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505)
   and t1.money_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.money_date< to_date('2020-01-01','yyyy-mm-dd')
   
  union all
   
    select sum(t2.money_fy*t2.RATE)
 from dw.da_order_change t2
 join stg.s_cq_user t3 on t2.users_id=t3.users_id
 where t3.terminal_id in(300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505)
   and t2.modify_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t2.modify_date< to_date('2020-01-01','yyyy-mm-dd');

 
 ==============================================20200903=========================================================
 
 ------185、国庆出行趋势分析
 
 
 select /*+parallel(2) */
flightdate,
h1.origincity_name,
       h1.destcity_name,
       h1.flights_city_name,
       h1.wf_city,
       sum(swnum + bgplan),
       sum(oversale)
  from (select t1.segment_head_id,
               to_char(t1.flights_date,'yyyymmdd') flightdate,
               t2.origincity_name,
               t2.destcity_name,
               t2.flights_city_name,
               replace(replace(t3.wf_segment, '浦东', '上海'),
                       '虹桥',
                       '上海') wf_city,
               t2.bgo_plan - t2.o_plan bgplan,
               t2.oversale,
               sum(case
                     when t1.seats_name not in ('B', 'G', 'G1', 'G2') then
                      1
                     else
                      0
                   end) swnum
          from dw.fact_order_detail t1
          join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
          left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id
                                          and t2.route_id = t3.route_id
         where t1.flights_date >= to_date('2020-10-01', 'yyyy-mm-dd')
           and t1.flights_date <= to_date('2020-10-08', 'yyyy-mm-dd')
           and t1.nationflag = '国内'
           and t1.company_id = 0
         group by t1.segment_head_id,
         to_char(t1.flights_date,'yyyymmdd'),
                  t2.origincity_name,
                  t2.destcity_name,
                  t2.flights_city_name,
                  replace(replace(t3.wf_segment, '浦东', '上海'),
                          '虹桥',
                          '上海'),
                  t2.bgo_plan - t2.o_plan ,
                  t2.oversale) h1
 group by
 flightdate, h1.origincity_name,
          h1.destcity_name,
          h1.flights_city_name,
          h1.wf_city

 
 
 ================================================20200907============================================
 ------186、审计-退改签审计
 
 select decode(t1.log_code,5,'订单退票',6,'航班变更',20,'订单退票-审计',22,'特殊情况变更-审计',21,'修改姓名证件号-审计') 日志类型 ,
       t1.order_id 订单号,
       t2.name 姓名,
       t2.r_order_date 订单日期,
       t2.seats_name 舱位,
       t3.flights_no 航班号,
       t9.flights_segment 航段,
       to_char(t9.origin_std, 'yyyy-mm-dd') 航班日期,
      to_char(t9.origin_std, 'hh24:mi') 计划起飞时间,
       t1.users_id 修改人,
       t4.terminal 终端,
       t1.modify_date 操作日期 ,
       nvl(t1.fy, 0)*nvl(t2.r_com_rate,1)  实际费用,
       nvl(t1.ys_fy, 0)*nvl(t2.r_com_rate,1)  规则费用,
       t1.modify_content 备注 ,
       t1.memo_for_user 操作备注
  from stg.s_cq_flights_head_history t1,
       stg.s_cq_order_head           t2,
       stg.s_cq_flights              t3,
       stg.s_cq_terminal             t4,
       stg.s_cq_user                 t5,
       stg.s_cq_order                t6,
       stg.s_cq_flights_segment_head t9
 where t1.flights_order_head_id = t2.flights_order_head_id
   and t2.flights_id = t3.flights_id
   and t1.users_id = t5.users_id
   and t5.terminal_id = t4.terminal_id
   and t6.flights_order_id = t2.flights_order_id
   and t5.company_id = t3.company_id
   and t5.company_id = 0
   and t2.segment_head_id = t9.segment_head_id
   and t9.origin_std >= to_date('2018-06-01', 'yyyy-mm-dd')
   and t9.origin_std < to_date('2019-01-01', 'yyyy-mm-dd')
   and to_char(t9.origin_std, 'mm') in ('06', '12')
   and t1.log_code in (20,21,22);
 
 
 ------187、外籍旅客人数
 
 select t2.nationality,count(1)
 from cqsale.cq_order_head@to_air t1
 left join cqsale.cq_traveller_info@to_air t2 on t1.flights_Order_head_id=t2.flights_order_head_id
 where t1.r_flights_date=to_date('2020-09-11','yyyy-mm-dd')
  and t1.whole_flight ='9C6396'
  and t1.flag_id in(3,5,40,41)
  group by t2.nationality
 
 ------188、各月出行目的
 select to_char(T1.flights_date,'yyyymm'),t.part,count(1)
 from dw.fact_orderhead_trippurpose@to_ods t
 join dw.fact_order_detail t1 on t.flights_order_head_id=t1.flights_order_head_Id
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flag_id=40
   and t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   AND T1.FLIGHTS_DATE< to_date('2020-09-01','yyyy-mm-dd')
   AND T1.COMPANY_ID=0
   GROUP BY to_char(T1.flights_date,'yyyymm'),t.part

 
 
 ------189、新增航线数据（新航线数据）
 
 select '2019', replace(replace(t2.wf_segment,'虹桥','上海'),'浦东','上海')
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=to_date('2019-05-10','yyyy-mm-dd')
 and t1.flight_date<=to_date('2019-12-31','yyyy-mm-dd')
 
 union 
 
 
 select '2020',replace(replace(t2.wf_segment,'虹桥','上海'),'浦东','上海')
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=to_date('2020-05-10','yyyy-mm-dd')

 
 ------190、空铁联运数据
 
 --空铁联运客群分析（提前期、年龄、性别以及出行目的）判断客群主要以旅行为主，在2019年的这个乘机人的出行频次


select t2.gender,case when t1.ahead_days<=14 then to_char(t1.ahead_days)
when t1.ahead_days<=30 then '15~30'
when t1.ahead_days<=60 then '31~60'
else '60+' end,
case when t2.age<12 then '0~11'
when t2.age<18 then '12~17'
when t2.age<24 then '18~23'
when t2.age<30 then '24~29'
when t2.age<40 then '30~39'
when t2.age<50 then '40~49'
when t2.age<60 then '50~59'
when t2.age>=60 then '60+' end,
t3.part,
count(1)
from dw.fact_order_detail t1
  left join dw.bi_order_region t2 on t1.flights_order_head_id=t2.flights_order_head_id
  left join dw.fact_orderhead_trippurpose@to_ods t3 on t1.flights_order_head_id=t3.flights_order_head_id
  where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
    and t1.EX_CFD2 like '%K%'
    group by t2.gender,case when t1.ahead_days<=14 then to_char(t1.ahead_days)
when t1.ahead_days<=30 then '15~30'
when t1.ahead_days<=60 then '31~60'
else '60+' end,
case when t2.age<12 then '0~11'
when t2.age<18 then '12~17'
when t2.age<24 then '18~23'
when t2.age<30 then '24~29'
when t2.age<40 then '30~39'
when t2.age<50 then '40~49'
when t2.age<60 then '50~59'
when t2.age>=60 then '60+' end,
t3.part；



--空铁联运客群分析（提前期、年龄、性别以及出行目的）判断客群主要以旅行为主，在2019年的这个乘机人的出行频次


select /*+parallel(4) */
h2.ticketnum,count(1)
from(
select tt1.codeno,count(1) ticketnum
from dw.fact_order_detail tt1
join (
select distinct  t1.codeno
from dw.fact_order_detail t1
   where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
    and t1.EX_CFD2 like '%K%'
   and t1.seats_name is not null
    and length(t1.codeno)>1)h1 on tt1.codeno=h1.codeno
    where tt1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
    and tt1.flights_date< to_date('2020-01-01','yyyy-mm-dd') 
    and tt1.seats_name is not null
    and tt1.seats_name <>'O'
    group by tt1.codeno)h2
    group by h2.ticketnum
    
 
 
 ------191、套票--错位兑换问题（行李问题）
 
 select /*+parallel(4) */
t1.r_flights_date,t1.combo_name,t3.seat_type,count(1)
 from dw.fact_combo_ticket t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.fact_recent_order_detail t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.r_flights_date>=trunc(sysdate)-90
 and t3.flights_date>=trunc(sysdate)-90
   and (case when t1.combo_name='想飞就飞惠选礼包' then '普通座'
            when t1.combo_name='想飞就飞精选礼包' then '经济座' 
            when t1.combo_name='想飞就飞优选礼包' then '商务经济座'
            when t1.combo_name='想飞就飞儿童礼包' then '儿童座' end)<>t3.seat_type
            group by t1.r_flights_date,t1.combo_name,t3.seat_type
 
 =========================================================20200916==================================================
 ------192、2019/2020年的年龄分布
 
select /*+parallel(4) */
TO_CHAR(T1.FLIGHTS_DATE,'YYYY'),
case when t2.age<12 then '0~11'
when t2.age<18 then '12~17'
when t2.age<24 then '18~23'
when t2.age<30 then '24~29'
when t2.age<40 then '30~39'
when t2.age<50 then '40~49'
when t2.age<60 then '50~59'
when t2.age<70 then '60~69'
when t2.age>=70 then '70+' end,
count(1)
from dw.fact_order_detail t1
  left join dw.bi_order_region t2 on t1.flights_order_head_id=t2.flights_order_head_id
    where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
    and t1.flights_date< to_date('2020-09-18','yyyy-mm-dd')
    AND t1.flag_id=40
    and t1.company_id=0
    and t1.seats_name is not null
   group by TO_CHAR(T1.FLIGHTS_DATE,'YYYY'),
case when t2.age<12 then '0~11'
when t2.age<18 then '12~17'
when t2.age<24 then '18~23'
when t2.age<30 then '24~29'
when t2.age<40 then '30~39'
when t2.age<50 then '40~49'
when t2.age<60 then '50~59'
when t2.age<70 then '60~69'
when t2.age>=70 then '70+' end
 
 
 ================================================20201009====================================================
  ------193、各航线销量及金额
 select to_char(t1.flights_date,'yyyymm') flightmonth,
case when t1.seats_name  in('B','G','G1','G2') then 'BG'
when t1.seats_name  in('P2','P3','P4','P5','A','D','Z','I','J') then '活动舱位'
else '普通座位' end cabin_type,
t1.seat_type,
replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海') wf_city,
replace(replace(t2.flights_segment_name,'虹桥','上海'),'浦东','上海') flights_city_name,
count(1) ticketnum,
sum(t1.ticket_price) ticketfee,
sum(case when t1.seat_type='经济座' then t1.ticket_price-nvl(t1.comb_fee,0)
         when t1.seat_type='商务经济座' then nvl(t1.min_seat_price*t1.rcd_rate,t1.ticket_price)
         else t1.ticket_price end) salefee,
sum(t1.comb_fee) comb_fee        
from dw.fact_recent_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and t2.flag<>2
   and t1.flag_id in(3,5,40,41)
   and t2.nationflag='国内'
   and t1.ticket_price>0
   and t1.seats_name is not null
   and t1.seats_name not in('O','D')
   
group by  to_char(t1.flights_date,'yyyymm') ,
case when t1.seats_name  in('B','G','G1','G2') then 'BG'
when t1.seats_name  in('P2','P3','P4','P5','A','D','Z','I','J') then '活动舱位'
else '普通座位' end ,
t1.seat_type,
replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海') ,
replace(replace(t2.flights_segment_name,'虹桥','上海'),'浦东','上海');
 
 
 
 
 
 
 ------194、各根据地票价水平
 
 
 select '石家庄' base, to_char(t1.flights_date,'yyyymm') flightmonth,count(1) ticketnum,sum(t1.ticket_price) ticketfee,
sum(case when t1.seat_type='经济座' then t1.ticket_price-nvl(t1.comb_fee,0)
         when t1.seat_type='商务经济座' then nvl(t1.min_seat_price*t1.rcd_rate,t1.ticket_price)
         else t1.ticket_price end) salefee,
sum(t1.comb_fee) comb_fee        
from dw.fact_recent_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and t2.flag<>2
   and t1.flag_id in(3,5,40,41)
   and t2.nationflag='国内'
   and t2.flights_city_name like '%石家庄%'
   and t1.ticket_price>0
   and t1.seats_name is not null
   and t1.seats_name not in('O','D','B','G','G1','G2')   
group by  to_char(t1.flights_date,'yyyymm') 

union  all


select '兰州' base, to_char(t1.flights_date,'yyyymm') flightmonth,count(1) ticketnum,sum(t1.ticket_price) ticketfee,
sum(case when t1.seat_type='经济座' then t1.ticket_price-nvl(t1.comb_fee,0)
         when t1.seat_type='商务经济座' then nvl(t1.min_seat_price*t1.rcd_rate,t1.ticket_price)
         else t1.ticket_price end) salefee,
sum(t1.comb_fee) comb_fee        
from dw.fact_recent_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and t2.flag<>2
   and t1.flag_id in(3,5,40,41)
   and t2.nationflag='国内'
   and t1.ticket_price>0
    and t2.flights_city_name like '%兰州%'
   and t1.seats_name is not null
   and t1.seats_name not in('O','D','B','G','G1','G2')   
group by  to_char(t1.flights_date,'yyyymm') 


union  all


select '沈阳' base, to_char(t1.flights_date,'yyyymm') flightmonth,count(1) ticketnum,sum(t1.ticket_price) ticketfee,
sum(case when t1.seat_type='经济座' then t1.ticket_price-nvl(t1.comb_fee,0)
         when t1.seat_type='商务经济座' then nvl(t1.min_seat_price*t1.rcd_rate,t1.ticket_price)
         else t1.ticket_price end) salefee,
sum(t1.comb_fee) comb_fee        
from dw.fact_recent_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and t2.flag<>2
   and t1.flag_id in(3,5,40,41)
   and t2.nationflag='国内'
   and t1.ticket_price>0
    and t2.flights_city_name like '%沈阳%'
   and t1.seats_name is not null
   and t1.seats_name not in('O','D','B','G','G1','G2')   
group by  to_char(t1.flights_date,'yyyymm') 

union  all


select '扬州' base, to_char(t1.flights_date,'yyyymm') flightmonth,count(1) ticketnum,sum(t1.ticket_price) ticketfee,
sum(case when t1.seat_type='经济座' then t1.ticket_price-nvl(t1.comb_fee,0)
         when t1.seat_type='商务经济座' then nvl(t1.min_seat_price*t1.rcd_rate,t1.ticket_price)
         else t1.ticket_price end) salefee,
sum(t1.comb_fee) comb_fee        
from dw.fact_recent_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and t2.flag<>2
   and t1.flag_id in(3,5,40,41)
   and t2.nationflag='国内'
   and t1.ticket_price>0
    and t2.flights_city_name like '%扬州%'
   and t1.seats_name is not null
   and t1.seats_name not in('O','D','B','G','G1','G2')   
group by  to_char(t1.flights_date,'yyyymm') 


union  all


select '宁波' base, to_char(t1.flights_date,'yyyymm') flightmonth,count(1) ticketnum,sum(t1.ticket_price) ticketfee,
sum(case when t1.seat_type='经济座' then t1.ticket_price-nvl(t1.comb_fee,0)
         when t1.seat_type='商务经济座' then nvl(t1.min_seat_price*t1.rcd_rate,t1.ticket_price)
         else t1.ticket_price end) salefee,
sum(t1.comb_fee) comb_fee        
from dw.fact_recent_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and t2.flag<>2
   and t1.flag_id in(3,5,40,41)
   and t2.nationflag='国内'
   and t1.ticket_price>0
    and t2.flights_city_name like '%宁波%'
   and t1.seats_name is not null
   and t1.seats_name not in('O','D','B','G','G1','G2')   
group by  to_char(t1.flights_date,'yyyymm');
 
 ------195、套票兑换的座位类型分布（普通座、经济座、商务经济座）
 
  select 
t1.r_flights_date,t1.combo_name,t3.seat_type,count(1)
 from dw.fact_combo_ticket t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.fact_recent_order_detail t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.r_flights_date>=to_date('2020-07-01','yyyy-mm-dd')
  and t1.r_flights_date< to_date('2020-10-01','yyyy-mm-dd')
  and t1.flag_id=40
  group by 
   t1.r_flights_date,t1.combo_name,t3.seat_type
 
 
 ------196、套票兑换比例
 
select h1.*,nvl(h2.ticketnum,0) ticketnum
from (select tb1.flights_id,tb1.flight_date,case when tb1.flight_date>=to_date('2020-09-28','yyyy-mm-dd') 
       and tb1.flight_date<=to_date('2020-10-10','yyyy-mm-dd') then 10
       else 20 end limit_num,
       replace(replace(tb1.route_name,'浦东','上海'),'虹桥','上海') route_name,tb2.wf_city_name,sum(tb1.oversale) oversale,
       sum(tb3.ticketnum) salenum
        from dw.da_flight tb1     
         join dw.dim_segment_type tb2 on tb1.h_route_id=tb2.h_route_id and tb1.route_id=tb2.route_id
          left   join dw.da_main_order tb3 on tb1.segment_head_id=tb3.segment_head_id
        where tb1.flight_date>=to_date('2020-07-23','yyyy-mm-dd')
          and tb1.flight_date< to_date('2021-01-01','yyyy-mm-dd')
          and tb1.nationflag in('国内','区域')
          and tb1.flag<>2
           and tb1.company_id=0
          group by tb1.flights_id,tb1.flight_date,case when tb1.flight_date>=to_date('2020-09-28','yyyy-mm-dd') 
       and tb1.flight_date<=to_date('2020-10-10','yyyy-mm-dd') then 10
       else 20 end,
       replace(replace(tb1.route_name,'浦东','上海'),'虹桥','上海') ,tb2.wf_city_name)h1
        
left join (
select t2.flights_id,t1.r_flights_date,
 replace(replace(t2.route_name,'浦东','上海'),'虹桥','上海') route_name,t3.wf_city_name,
 case when t1.r_flights_date>=to_date('2020-09-28','yyyy-mm-dd') 
       and t1.r_flights_date<=to_date('2020-10-10','yyyy-mm-dd') then 10
       else 20 end,
 count(1) ticketnum
 from dw.fact_combo_ticket t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.r_flights_date>=to_date('2020-07-01','yyyy-mm-dd')
  and t1.flag_id=40
  group by t2.flights_id,t1.r_flights_date,
 replace(replace(t2.route_name,'浦东','上海'),'虹桥','上海') ,t3.wf_city_name,
 case when t1.r_flights_date>=to_date('2020-09-28','yyyy-mm-dd') 
       and t1.r_flights_date<=to_date('2020-10-10','yyyy-mm-dd') then 10
       else 20 end)h2 on h1.flights_id=h2.flights_id;



 ===============================================20201010======================================
 ------197、查询通航航线
 
 select to_char(t2.flight_date,'yyyymm'),count(1)
  from hdb.Cq_Airport t1
  join dw.da_flight t2 on t1.threecodeforcity=t2.originairport
  where regexp_like(t2.flights_segment_name,'扬州')
  and t2.flight_date>=trunc(sysdate)-365*2
  and t2.flag<>2
  group by to_char(t2.flight_date,'yyyymm')
  
  
  
  select  distinct t2.flights_city_name
  from hdb.Cq_Airport t1
  join dw.da_flight t2 on t1.threecodeforcity=t2.originairport
  where regexp_like(t1.province,'江苏|浙江|上海')
  --and regexp_like(t2.flights_city_name,'上海')
  and t2.flight_date>=trunc(sysdate)
  and t2.flag<>2
  order by 1
  
  
  
  
    select  sum(t2.oversale)
  from dw.da_flight t2
  left join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
  left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where ((regexp_like(t1.province,'江苏|浙江|河北') or regexp_like(t3.province,'江苏|浙江|河北'))
  or regexp_like(t2.flights_city_name,'(沈阳)|(揭阳)|(兰州)'))
  and t2.flight_date>=trunc(sysdate)
  and t2.flag<>2
  and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0


union all


  select  sum(t2.oversale)
  from dw.da_flight t2
  left join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
  left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where  t2.flight_date>=trunc(sysdate)
  and t2.flag<>2
  and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0;
  
  
  
    select  
  case when regexp_like(t1.province,'江苏') or regexp_like(t3.province,'江苏') then '江苏'
  else null end,
    case when regexp_like(t1.province,'浙江') or regexp_like(t3.province,'浙江') then '浙江'
  else null end,
      case when regexp_like(t1.province,'河北')  or regexp_like(t3.province,'河北') then '河北'
  else null end,
        case when regexp_like(t2.flights_city_name,'沈阳') then '沈阳'
  else null end,
   case when regexp_like(t2.flights_city_name,'揭阳') then '揭阳'
  else null end,
  
     case when regexp_like(t2.flights_city_name,'兰州') then '兰州'
  else null end,
  count(distinct t2.flights_city_name),sum(t2.oversale)
  from dw.da_flight t2
  left join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
  left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where t2.flight_date>=trunc(sysdate)
  and t2.flag<>2
  and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0
group by case when regexp_like(t1.province,'江苏') or regexp_like(t3.province,'江苏') then '江苏'
  else null end,
    case when regexp_like(t1.province,'浙江') or regexp_like(t3.province,'浙江') then '浙江'
  else null end,
      case when regexp_like(t1.province,'河北')  or regexp_like(t3.province,'河北') then '河北'
  else null end,
        case when regexp_like(t2.flights_city_name,'沈阳') then '沈阳'
  else null end,
   case when regexp_like(t2.flights_city_name,'揭阳') then '揭阳'
  else null end,
  
     case when regexp_like(t2.flights_city_name,'兰州') then '兰州'
  else null end
  
  
  
  
  
    select  
/*  case when regexp_like(t1.province,'江苏') or regexp_like(t3.province,'江苏') then '江苏'
  else null end,*/
/*    case when regexp_like(t1.province,'浙江') or regexp_like(t3.province,'浙江') then '浙江'
  else null end,
      case when regexp_like(t1.province,'河北')  or regexp_like(t3.province,'河北') then '河北'
  else null end,
        case when regexp_like(t2.flights_city_name,'沈阳') then '沈阳'
  else null end,
   case when regexp_like(t2.flights_city_name,'揭阳') then '揭阳'
  else null end,  
     case when regexp_like(t2.flights_city_name,'兰州') then '兰州'
  else null end,*/
  count(distinct t2.flights_city_name),sum(t2.oversale)
  from dw.da_flight t2
  left join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
  left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where t2.flight_date>=trunc(sysdate)
  and t2.flag<>2
  --and (regexp_like(t1.province,'河北') or regexp_like(t3.province,'河北'))
  --and regexp_like(t2.flights_city_name,'兰州')
  and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0
  

  

  
 ================================================20201012=======================================================
 ------198、A321 航班商务经济座客座率
 
 select t2.segment_head_id,t2.flight_date,t2.flights_segment_name,t2.oversale,
       sum(case when t1.is_swj=1 then 1 else 0 end)
       ,sum(case when t1.seats_name is not null then 1 else 0 end)     
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=to_date('2020-09-27','yyyy-mm-dd')
   and t1.flights_date<=to_date('2020-10-11','yyyy-mm-dd')
   and t2.aircraft_type='A321'
   and t1.company_id=0
   and t1.flag_id=40
   and t2.flag<>2
   group by t2.segment_head_id,t2.flight_date,t2.flights_segment_name,t2.oversale;
   
   
=================================================20201013=================================
 ------199、查询相关手机号对应的机票量
 
 select t1.order_day,count(1)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.order_day>=trunc(sysdate)-30
    and t1.order_day< trunc(sysdate)
    and t1.channel in('手机','网站')
    and (t1.r_tel='13586715094' or t1.work_tel ='13586715094')
    group by t1.order_day;
 
 
 ====================================================20201016===============================================
 ------200、揭阳出港联系方式
 select distinct t.flights_order_id 订单号,
                t1.r_flights_date 航班日期,
                t1.whole_flight 航班号,
                t1.whole_segment 航段,
                t1.name || ' ' || coalesce(t1.second_name, '') 姓名,
                t.work_tel 联系电话,
                t1.r_tel 紧急联系电话,
                t.email 邮箱
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_AIR t1 on t.flights_order_id = t1.flights_order_id
  join cqsale.cq_flights_segment_head@TO_AIR t2 on t1.segment_head_id =
                                            t2.segment_head_id
 where  t1.r_flights_date >= trunc(sysdate)
   and t1.r_flights_date >=to_date('20201017','yyyymmdd')
   and t1.r_flights_date <=to_date('20201017','yyyymmdd')
        and t1.flag_id in (3, 5, 40, 41)
   and t1.whole_flight like '9C%'
   and t2.origin_airport = 'SWA';
 
 
================================================20201027=======================================================
 ------201、航班时刻
 select distinct t2.wf_segment 航线,t1.flights_segment_name 航段,t1.flight_no 航班号,to_char(t1.flight_date,'day'),
to_char(t1.flight_date-1,'d') 星期,to_char(t1.origin_std,'hh24:mi') 始发时刻,
to_char(t1.dest_sta,'hh24:mi') 抵达时刻
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
 where t1.flag<>2
   and t1.flight_date>=trunc(sysdate)-1
   and t1.flight_date< trunc(sysdate)+14-1
   and t1.flights_city_name like '%兰州'
   and t1.oversale>0
   and regexp_like(t1.flights_city_name,'(承德)|(张家口)|(石家庄)|(上海)|(合肥)|(郑州)|(西安)')
   and t1.nationflag='国内'
   and t1.company_id=0
   order by 1,3,2,5;
 
 
 
 
 
 =====================================================20201101===========================================
 ------202、套票根据地数据
 
 select distinct '河北' 类型, t2.origincity_name 始发地,t2.originairport,replace(t2.destcity_name,'黔江','重庆（黔江）') 目的地,t2.destairport
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where regexp_like(t1.province,'河北')
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
  and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0


  union all


select distinct '江苏',  t2.origincity_name 始发地,t2.originairport,replace(t2.destcity_name,'黔江','重庆（黔江）') 目的地,t2.destairport
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where regexp_like(t1.province,'江苏')
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
  and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0

  union all

  select distinct '浙江',  t2.origincity_name 始发地,t2.originairport,replace(t2.destcity_name,'黔江','重庆（黔江）') 目的地,t2.destairport
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where regexp_like(t1.province,'浙江')
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
    and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0


  union all


  select distinct '沈阳' , t2.origincity_name 始发地,t2.originairport,replace(t2.destcity_name,'黔江','重庆（黔江）') 目的地,t2.destairport
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where   regexp_like(t2.flights_city_name,'沈阳')
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
    and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0



    union all


  select distinct '揭阳',  t2.origincity_name 始发地,t2.originairport,replace(t2.destcity_name,'黔江','重庆（黔江）') 目的地,t2.destairport
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where   regexp_like(t2.flights_city_name,'揭阳')
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
   and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0

   union all


  select distinct '兰州',  t2.origincity_name 始发地,t2.originairport,replace(t2.destcity_name,'黔江','重庆（黔江）') 目的地,t2.destairport
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where   regexp_like(t2.flights_city_name,'兰州')
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
   and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0;
 
 ------203、
 
 select 
h1.flights_id,h1.flight_date,h1.wf_segment_name,h1.route_name,max(stype) stype,sum(swplan),sum(ticketnum),sum(snum),20 splan,
sum(snum1) snum1,sum(h1.sprice1) sprice1
from(
select t1.segment_head_id,t2.flights_id,t2.flight_date,t6.wf_segment_name,t2.route_name,t2.oversale-t2.bgo_plan swplan,
case when regexp_like(t4.province,'(江苏)|(浙江)|(河北)') or regexp_like(t2.flights_city_name,'(兰州)|(揭阳)|(沈阳)') then '根据地套票'
when regexp_like(t5.province,'(江苏)|(浙江)|(河北)') or regexp_like(t2.flights_city_name,'(兰州)|(揭阳)|(沈阳)') then '根据地套票'
else '其他' end stype,
sum(case when t3.flights_order_head_id is not null then 1 else 0 end) snum,
count(1) ticketnum,
sum(case when t1.ahead_days>=3 then 1 else 0 end) snum1,
sum(case when t1.ahead_days>=3 then t1.ticket_price else 0 end)  sprice1
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left  join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id and t3.flag_id in(3,5,40,41)
 left join hdb.cq_airport t4 on t2.originairport=t4.threecodeforcity
 left join hdb.cq_airport t5 on t2.destairport=t5.threecodeforcity
 left join dw.dim_segment_type t6 on t2.h_route_id=t6.h_route_id and t2.route_id=t6.route_id
 where t1.flights_date>=to_date('2020-10-25','yyyy-mm-dd')
   and t1.flights_date<=to_date('2020-12-31','yyyy-mm-dd')
   and t1.flag_id in(3,5,40)
   and t1.company_id=0
   and t1.seats_name not in('B','G','G1','G2','O')
   and t1.nationflag='国内'
   and t1.seats_name is not null
   group by t1.segment_head_id,t2.flights_id,t2.flight_date,t6.wf_segment_name,t2.route_name,t2.oversale-t2.bgo_plan,
   case when regexp_like(t4.province,'(江苏)|(浙江)|(河北)') or regexp_like(t2.flights_city_name,'(兰州)|(揭阳)|(沈阳)') then '根据地套票'
when regexp_like(t5.province,'(江苏)|(浙江)|(河北)') or regexp_like(t2.flights_city_name,'(兰州)|(揭阳)|(沈阳)') then '根据地套票'
else '其他' end)h1
   group by h1.flights_id,h1.flight_date,h1.wf_segment_name,h1.route_name;
 
 
===================================================20201111===============================================
 ------204、查询VIP旅客数据
 select *
 from cqsale.cq_order_head@to_air
 where r_flights_date>=to_date('2020-01-01','yyyy-mm-dd')
 --and r_flights_date< trunc(sysdate)+7
 --and whole_segment like 'SJW%'
 and lower(replace(convert_chn||coalesce(convert_chn2,''),' ','')) like '%wuguangsheng%'

 
 ==================================================20201117===================================================
 
 
 select '2020' flightmonth,
case when t1.seats_name in('B','G','G1','G2') then 'BG'
else '非BG' end,
  case when t1.channel in('手机','网站') and t3.users_id is null then '线上自有'
  when t1.channel in('手机','网站') and t3.users_id is not null then '黑代理'
    else '其他' end 渠道, 
   count(1) 机票数
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
 where t2.flag<>2
   and t1.flights_date>=to_date('2019-11-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-11-01','yyyy-mm-dd')
   and t1.flag_id=40
   AND T1.SEATS_NAME IS NOT NULL
   and t1.company_id=0
      group by '2020',
case when t1.seats_name in('B','G','G1','G2') then 'BG'
else '非BG' end,
  case when t1.channel in('手机','网站') and t3.users_id is null then '线上自有'
  when t1.channel in('手机','网站') and t3.users_id is not null then '黑代理'
    else '其他' end;


 ------205、乘坐超过100次的乘机人
 --剔除员工优惠票，剔除票价等于0的用户
 
select *
from( 
select t1.name||coalesce(t1.second_name,'') sname,t1.codeno,count(1) ticketnum,sum(t1.ticket_price*t1.r_com_rate) ticket_price,
max(t1.r_flights_date)-min(t1.r_flights_date) diffdate
 from stg.s_cq_order_head t1
 where t1.flag_id=40
   and t1.r_flights_date< trunc(sysdate)
   and t1.r_company_id=0
   and t1.seats_name is not null
   and t1.seats_name not in('O','D')
   and t1.ticket_price>0
   group by t1.name||coalesce(t1.second_name,''),t1.codeno
   having count(1)>=100
   )h1;
   
   
   
   select h1.*,h2.board_num,getage(sysdate,h2.birthday),h2.min_flightdate,h2.max_flightdate
from( 
select to_char(t1.r_flights_date,'yyyy'),t1.name||coalesce(t1.second_name,'') sname,t1.codeno,count(1) ticketnum,sum(t1.ticket_price*t1.r_com_rate) ticket_price
 from stg.s_cq_order_head t1
 where t1.flag_id=40
   and t1.r_flights_date>=to_date('2006-01-01','yyyy-mm-dd')
   and t1.r_flights_date< trunc(sysdate)
   and t1.r_company_id=0
   and t1.seats_name is not null
   and t1.seats_name not in('O','D')
   and t1.ticket_price>0
   group by to_char(t1.r_flights_date,'yyyy'),t1.name||coalesce(t1.second_name,''),t1.codeno
   having count(1)>=100
   )h1
   left join dw.fact_idno_statistics h2 on h1.codeno=h2.codeno;
   

  
   
 ------206、B2T --对应渠道为B2B代理
 
  
 select t1.flights_date,t1.seats_name,t1.channel,t1.sub_channel,count(1)
 from dw.fact_order_detail t1
 where t1.flights_date>=trunc(sysdate)-7
   and t1.flights_date< trunc(sysdate)
   and t1.sub_channel like '%B2T%'
   group by t1.flights_date,t1.seats_name,t1.channel,t1.sub_channel;
   
 
 
 ------207、机票的变动成本、固定成本、边际成本
 
 边际成本大致为50元
 
 select sum(t1.cao_fee)/sum(t1.checkin_num),sum(t1.CUST_SER+t1.SEC_CUST+t1.SEC_GOODS)/sum(t1.checkin_num),
sum(t1.cust_ser+t1.sec_cust)/sum(t1.checkin_num)
 from hdb.recent_flights_cost t1
 where t1.flight_date>=trunc(sysdate)-7
   and t1.flight_date< trunc(sysdate)
   and t1.checkin_s_mile>0
   and t1.total_cost>0
 
 
 ------208、中位数，四分位数
 
 
SELECT DRG,
       COUNT( 1 ) CASE_CNT,
       AVG( FEE ),
       DEDIAN (FEE ), 
       PERCENTILE_DISC(0.25) WITHIN GROUP(ORDER BY FEE ASC) P25,  -- Q1
       PERCENTILE_DISC(0.5) WITHIN GROUP( ORDER BY FEE ASC) P50,  -- Q2
       PERCENTILE_DISC(0.75) WITHIN GROUP( ORDER BY FEE ASC) P75  -- Q3
  FROM MEDICAL_RECORD
 WHERE YEAR_TIME = 2012
 GROUP BY DRG
 
 ------209、航线数
 
 select count(distinct replace(replace(replace(replace(t2.wf_segment,'浦东','上海'),'虹桥','上海'),'黔江','重庆'),'茅台','遵义'))
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id =t2.route_id
 where t1.flight_date>=trunc(sysdate)
 and t1.flag=0
 and t1.company_id=0；
 
 =======================================================20201121===============================================
 ------210、 套票--各根据地对应城市航点
 
 select distinct '河北' stype, t2.origincity_name,t2.originairport_name,replace(t2.destcity_name,'黔江','重庆（黔江）')  destcity,t2.destairport_name
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where regexp_like(t1.province,'河北') 
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
  and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0



union all

select distinct '江苏' stype, t2.origincity_name,t2.originairport_name,replace(t2.destcity_name,'黔江','重庆（黔江）')  destcity,t2.destairport_name
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where regexp_like(t1.province,'江苏') 
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
  and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0



union all


select distinct '浙江' stype, t2.origincity_name,t2.originairport_name,replace(t2.destcity_name,'黔江','重庆（黔江）')  destcity,t2.destairport_name
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where regexp_like(t1.province,'浙江') 
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
  and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0




union all

select distinct '辽宁' stype, t2.origincity_name,t2.originairport_name,replace(t2.destcity_name,'黔江','重庆（黔江）')  destcity,t2.destairport_name
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where  regexp_like(t1.province,'辽宁') 
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
  and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0



union all

select distinct '揭阳' stype, t2.origincity_name,t2.originairport_name,replace(t2.destcity_name,'黔江','重庆（黔江）')  destcity,t2.destairport_name
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where  t2.originairport_name='揭阳'
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
  and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0


union all


select distinct '甘肃' stype, t2.origincity_name,t2.originairport_name,replace(t2.destcity_name,'黔江','重庆（黔江）')  destcity,t2.destairport_name
  from dw.da_flight t2
  join hdb.Cq_Airport t1 on t1.threecodeforcity=t2.originairport
 -- left join  hdb.cq_airport t3 on t3.threecodeforcity=t2.destairport
  where regexp_like(t1.province,'甘肃') 
  and t2.flight_date>=trunc(sysdate)
  and t2.flag=0
  and t2.nationflag='国内'
  --and t2.flight_date< to_date('2021-03-31','yyyy-mm-dd')
  and t2.company_id=0;
 
 
 ------211、
 
 select distinct t2.wf_segment,t1.origincity_name||'＝'||t1.destcity_name
  from dw.da_flight t1
  join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
  where t1.flight_date>=trunc(sysdate)
    and t1.flag=0
    and t1.flights_segment_name like '石家庄%'
    and t1.company_id=0
    
 union all
 
 
 select distinct t2.wf_segment,t1.origincity_name||'＝'||t1.destcity_name
  from dw.da_flight t1
  join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
  where t1.flight_date>=trunc(sysdate)
    and t1.flag=0
    and t1.flights_segment_name like '兰州%'
    and t1.company_id=0;
 
 ------212、日期、渠道(线上自有、易宝商旅卡、其他)、立减（绿翼立减、受益人立减、普通购买）、套票&非套票、销量
 
 select /*+parallel(4) */
t1.order_day 日期,
       case when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%春秋商旅%' then '易宝商旅卡'
 when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%易宝%' then '易宝商旅卡'
 when t1.channel in('网站','手机') then '线上自有'
else '其他' end,
          case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end 立减类型,
       case when t7.flights_order_head_id is not null then '套票'
       else '非套票' end ,
       count(1) 票量
  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.fact_combo_ticket t7 on t1.flights_order_head_id=t7.flights_order_head_id
  left join (select flights_order_head_id,
                    nvl(is_beneficiary, 0) is_beneficiary,
                    youhui_result
               from stg.c_cq_order_youhui_detail
              where product_type = 0
                and yh_ret_time is null
                and youhui_result is not null
                and youhui_id in (1129,1130, 1137,1138)
                and trunc(create_date) >= to_date('2020-07-01','yyyy-mm-dd')) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id
 where t1.order_day >= to_date('2020-07-01','yyyy-mm-dd')
   and t1.order_day < trunc(sysdate)
   and t1.seats_name not in('B','G','G1','G2','O')
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
 group by t1.order_day ,
       case when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%春秋商旅%' then '易宝商旅卡'
 when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%易宝%' then '易宝商旅卡'
 when t1.channel in('网站','手机') then '线上自有'
else '其他' end,
          case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end ,
       case when t7.flights_order_head_id is not null then '套票'
       else '非套票' end;
 
 
 
 ------213、
 
 select h1.wf_city,sum(h1.oversale) plan_num,sum(h1.ticketnum) ticketnum,
sum(h1.swnum) swnum
froM(
select replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义') wf_city,t2.segment_head_id,
t2.oversale, sum(case when t1.ticket_price/t1.price>=0.9 then 1 else 0 end) ticketnum,
t2.bgo_plan-t2.o_plan+sum(case when t1.seats_name not in('B','G','G1','G2') then 1 else 0 end) swnum
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2020-10-25','yyyy-mm-dd')
   and t1.flights_date< trunc(sysdate)
   and t1.ticket_price/t1.price>=0.9
   and t2.flag=0
   and t2.company_id=0
   --and t1.nationflag='国内'
   group by replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义'),t2.segment_head_id,
t2.oversale,t2.bgo_plan-t2.o_plan)h1
group by h1.wf_city;
 
 
 ------214、全价航线排序
 
 select h1.wf_city,h1.oversale,h3.ticketnum,h2.plf
froM(
select replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义') wf_city,
sum(t2.oversale) oversale
 from dw.da_flight t2 
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t2.flight_date>=to_date('2020-10-25','yyyy-mm-dd')
   and t2.flight_date<=to_date('2021-03-27','yyyy-mm-dd')
   and t2.flag=0
   and t2.company_id=0
group by replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义'))h1
left join( 
select replace(replace(replace(tb3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义') wf_city,
       sum(tb1.boardnum)/sum(tb2.oversale) plf
 from dw.da_main_order tb1
 join dw.da_flight tb2 on tb1.segment_head_id=tb2.segment_head_id
 left join dw.dim_segment_type tb3 on tb2.h_route_id=tb3.h_route_id and tb2.route_id =tb3.route_id
 where tb1.flights_date>=to_date('2020-01-01','yyyy-mm-dd')
   and tb1.flights_date<=to_date('2020-11-30','yyyy-mm-dd')
   and tb2.flag=0
   and tb2.company_id=0
  group by  replace(replace(replace(tb3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义'))h2 on h1.wf_city=h2.wf_city

left join(
select replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义') wf_city,
count(1) ticketnum
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-10-27','yyyy-mm-dd')
   and t1.flights_date<=to_date('2020-05-02','yyyy-mm-dd')
   and t1.ticket_price/t1.price>=0.9
   and t2.flag=0
   and t2.company_id=0
   group by replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义'))h3 on h1.wf_city=h3.wf_city;

   
   ==========================================================20201202=========================
 ------215、
 
  select to_char(t1.flights_date,'yyyymm'),t1.flights_date,t2.part,count(1)
 from dw.fact_order_detail t1
 join dw.fact_orderhead_trippurpose@to_ods t2 on t1.flights_order_head_id=t2.flights_order_head_id
 join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 join dw.dim_segment_type t4 on t3.h_route_id=t4.h_route_id and t3.route_id=t4.route_id
 where t1.flights_date>=to_date('2020-10-01','yyyy-mm-dd')
 and t1.flights_date< to_date('2020-12-01','yyyy-mm-dd')
 and t1.company_id=0
 and t3.flag=0
 and t1.flag_id=40
 group by to_char(t1.flights_date,'yyyymm'),t1.flights_date,t2.part;
 
 
 ====================================================20201208=======================================================
 ------216、出行目的
  select to_char(t1.flights_date,'yyyymm'),t1.flights_date,t2.part,count(1)
 from dw.fact_order_detail t1
 join dw.fact_orderhead_trippurpose@to_ods t2 on t1.flights_order_head_id=t2.flights_order_head_id
 join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 join dw.dim_segment_type t4 on t3.h_route_id=t4.h_route_id and t3.route_id=t4.route_id
 where t1.flights_date>=to_date('2020-10-01','yyyy-mm-dd')
 and t1.flights_date< to_date('2020-12-01','yyyy-mm-dd')
 and t1.company_id=0
 and t3.flag=0
 and t1.flag_id=40
 group by to_char(t1.flights_date,'yyyymm'),t1.flights_date,t2.part
 
 
 
 
 ------217、全价航线排序
 
 select h1.wf_city,h1.oversale,h3.ticketnum,h2.plf
froM(
select replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义') wf_city,
sum(t2.oversale) oversale
 from dw.da_flight t2 
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t2.flight_date>=to_date('2020-10-25','yyyy-mm-dd')
   and t2.flight_date<=to_date('2021-03-27','yyyy-mm-dd')
   and t2.flag=0
   and t2.company_id=0
group by replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义'))h1
left join( 
select replace(replace(replace(tb3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义') wf_city,
       sum(tb1.boardnum)/sum(tb2.oversale) plf
 from dw.da_main_order tb1
 join dw.da_flight tb2 on tb1.segment_head_id=tb2.segment_head_id
 left join dw.dim_segment_type tb3 on tb2.h_route_id=tb3.h_route_id and tb2.route_id =tb3.route_id
 where tb1.flights_date>=to_date('2020-01-01','yyyy-mm-dd')
   and tb1.flights_date<=to_date('2020-11-30','yyyy-mm-dd')
   and tb2.flag=0
   and tb2.company_id=0
  group by  replace(replace(replace(tb3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义'))h2 on h1.wf_city=h2.wf_city

left join(
select replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义') wf_city,
count(1) ticketnum
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-10-27','yyyy-mm-dd')
   and t1.flights_date<=to_date('2020-05-02','yyyy-mm-dd')
   and t1.ticket_price/t1.price>=0.9
   and t2.flag=0
   and t2.company_id=0
   group by replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义'))h3 on h1.wf_city=h3.wf_city

 ------218、
 
 select /*+parallel(4) */
to_char(t1.order_day,'yyyymm') 日期,
       case when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%春秋商旅%' then '易宝商旅卡'
 when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%易宝%' then '易宝商旅卡'
 when t1.channel in('网站','手机') then '线上自有'
else '其他' end,
 case when t1.channel in('网站','手机') AND t8.users_id is not null  then '代理识别'
 when t1.channel in('网站','手机') then '线上自有'
else '其他' end,
case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end 立减类型,
       case when t7.flights_order_head_id is not null then '套票'
       else '非套票' end ,
       count(1) 票量,
     sum(t1.ticket_price) 票价
  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.fact_combo_ticket t7 on t1.flights_order_head_id=t7.flights_order_head_id
  left join dw.da_restrict_userinfo t8 on t1.client_id=t8.users_id
  left join (select flights_order_head_id,
                    nvl(is_beneficiary, 0) is_beneficiary,
                    youhui_result
               from stg.c_cq_order_youhui_detail
              where product_type = 0
                and yh_ret_time is null
                and youhui_result is not null
                and youhui_id in (1129,1130, 1137,1138)
                and trunc(create_date) >= to_date('2018-11-01','yyyy-mm-dd')) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id
 where t1.order_day >= to_date('2018-11-01','yyyy-mm-dd')
   and t1.order_day < trunc(sysdate)
   and t1.seats_name not in('B','G','G1','G2','O')
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
 group by to_char(t1.order_day,'yyyymm') ,
       case when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%春秋商旅%' then '易宝商旅卡'
 when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%易宝%' then '易宝商旅卡'
 when t1.channel in('网站','手机') then '线上自有'
else '其他' end,
          case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end ,
       case when t7.flights_order_head_id is not null then '套票'
       else '非套票' end,
              case when t1.channel in('网站','手机') AND t8.users_id is not null  then '代理识别'
 when t1.channel in('网站','手机') then '线上自有'
else '其他' end;

 
=========================================20201214===================================================
 ------219、虹桥、浦东均飞的航线
 select replace(replace(t5.wf_segment,'虹桥','上海'),'浦东','上海'),t2.flights_city_name,case when t2.flights_segment_name like '%虹桥%' then '虹桥'
when t2.flights_segment_name like '%浦东%' then '浦东' end,
sum(t1.ticketnum),sum(t1.ticketprice),sum(t1.ticketnum)/sum(t1.oversale)
 from dw.da_main_order t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id

  join(select t3.flights_city_name,count(distinct t3.flights_segment_name)
              from dw.da_flight t3 
              where t3.flight_date>=to_date('2019-01-01','yyyy-mm-dd')
                 and t3.flight_date< to_date('2020-01-01','yyyy-mm-dd')
                 and t3.flag=0
                 and t3.company_id=0
                 and t3.flights_city_name like '%上海%'
                 group by t3.flights_city_name 
                 having count(distinct t3.flights_segment_name)>1)t4 on t2.flights_city_name=t4.flights_city_name    
  left join dw.dim_segment_type t5 on t2.h_route_id=t5.h_route_id and t2.route_id=t5.route_id             
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd') 
 and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
 and t2.flag=0
 and t2.company_id=0
 group by replace(replace(t5.wf_segment,'虹桥','上海'),'浦东','上海'),t2.flights_city_name,case when t2.flights_segment_name like '%虹桥%' then '虹桥'
when t2.flights_segment_name like '%浦东%' then '浦东' end
 
 ------220、套票对应机票销售数据（每个套票对应的销售数据） 
 
 select h1.*,h2.order_day,h2.r_flights_date,h2.whole_segment,h3.flag_name,h2.flights_order_id
from( 
 select t1.combo_order_no,decode(t1.STATUS,0,'未兑换',1,'已兑换',2,'已退',3,'后台取消') 套票状态,user_id,yhq_batch_id,t1.COMBO_ID
  from yhq.cq_yhq_unlimited_combo@to_air t1
  where combo_order_no in('2020112413828723',
'2020112413827961',
'2020112413828276',
'2020112413829044',
'2020112213823026',
'20201123138261806',
'2020112313827452',
'2020112413829284',
'2020112313825358',
'2020112313826015',
'2020112413829112',
'2020112313825809',
'2020112313826033',
'2020112413829093',
'2020112313826706',
'2020112313826725',
'2020112313826324',
'2020112313825597',
'2020112313825039',
'2020112313825141',
'2020112313825659',
'2020112313827687',
'2020112313825059',
'2020112313825081',
'2020112313826166',
'2020112313825036',
'2020112313825146',
'2020112313825085'))h1
left join dw.fact_combo_ticket h2 on h1.user_id=h2.users_id and h1.yhq_batch_id=h2.create_id
left join stg.s_cq_order_head_flag h3 on h2.flag_id=h3.flag
 
 ===================================================20201222=============================================
 ------221、 农行applypay的支付对账
 select t1.flights_order_id,t2.gate_name,t1.pay_money,t1.real_pay_money,t1.create_date,t1.yingda_date,t1.money_class_id,
t.pay_flag,t.receive_money,t.back_money,t.fact_money,t.rate
from stg.p_cq_ips_order_id t1
left join stg.s_cq_order t on t1.flights_order_id=t.flights_order_id
left join stg.p_cq_pay_gate t2 on t1.pay_gate=t2.id
where t1.PAY_GATE in(57,60)
/*and flights_order_id='LUKSWB'
and t1.ips_order_id='201812070000214513'*/
and t1.pay_flag in(1,2)
and nvl(t1.company_id,0)=0
and t1.create_date>=to_date('2020-01-01','yyyy-mm-dd')
and t1.create_date< to_date('2021-01-01','yyyy-mm-dd')
and regexp_like(t1.flights_order_id,'[a-zA-Z]')
order by create_date
 
 
 
 
 ------222、套票1.0直接数据评估：套票金额-提前7天外套票兑换航班的平均票价*套票兑换均价
 
 select /*+parallel(4) */
 count(distinct t1.users_id||t1.combo_name),sum(nvl(t2.avgprice,t1.yhq_money)),count(1)
 from dw.fact_combo_ticket t1
 left join (select  tt1.segment_head_id,sum(tt1.ticket_price)/count(1) avgprice
          from dw.fact_order_detail tt1
          where tt1.ahead_days>7
           and tt1.ticket_price>0   
           and tt1.flag_id=40       
           and tt1.seats_name not in('B','G','G1','G2','O')
           and tt1.flights_date>=to_date('2020-07-18','yyyy-mm-dd')
           and tt1.order_day>=to_date('2020-07-18','yyyy-mm-dd')
           group by tt1.segment_head_id)t2 on t1.segment_head_id=t2.segment_head_id 
 where t1.combo_vision='套票1.0'
 and t1.flag_id=40;
 
 
 ---最低20张机票销量
 
  select /*+parallel(4) */
 count(distinct t1.users_id||t1.combo_name),sum(nvl(t2.avgprice,t1.yhq_money)),count(1)
 from dw.fact_combo_ticket t1
 left join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 left join (
  select flights_id,avg(ticket_price) avgprice
 from(
 select  tt2.flights_id,tt1.ticket_price,row_Number()over(partition by tt2.flights_id order by tt1.ticket_price) xid
          from dw.fact_order_detail tt1
          join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
          where/* tt1.ahead_days>7
           and*/ tt1.ticket_price>0   
           and tt1.flag_id=40       
           and tt1.seats_name not in('B','G','G1','G2','O')
           and tt1.flights_date>=to_date('2020-07-18','yyyy-mm-dd')
           and tt1.order_day>=to_date('2020-07-18','yyyy-mm-dd')
            
          )
          where xid<=20
          group by flights_id )t2 on t3.flights_id=t2.flights_id 
 where t1.combo_vision='套票1.0'
 and t1.flag_id=40;
 
 销售 49393套，退票 22675，兑换：22675，使用：26124
 销售总金额：163613607，退款75264825，目前已售未退金额：88348782
 
 套票人数：25774  
 套票兑换对应最低20张机票票面金额：80048683
涉及机票量：230106
 
 收益：88348782-80048683=8300099

 
 ------223、套票对于客座率的作用及影响
 
 select t1.flights_date,t1.segment_head_id,t3.oversale,sum(case when t2.segment_head_id is not null then 1 else 0 end),
count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 left join dw.fact_combo_ticket t2 on t1.flights_order_head_id=t2.flights_order_head_id
 where t1.flights_date>=to_date('2020-07-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and t1.company_id=0
   and t1.flag_id=40
   group by t1.flights_date,t1.segment_head_id,t3.oversale;
   
   
  ------224、年度系统联、自连数据
  
  --联程方式标记：1——联程(系统联程标记)；
--2——自连A(客户自连，按照姓名证件关联)； 
--3——自连B(客户自连，按照下单id、姓名年龄性别关联) ；
 -- -1——三个联程方式的交集

select to_char(t1.flights_date_1,'yyyy'),case when t1.FLAG_ID<=1 then '系统联'
else '自连' end,count(1)
 from dw.bi_connect_segment t1
 where t1.flights_date_1>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date_1< to_date('2021-01-01','yyyy-mm-dd')
   group by to_char(t1.flights_date_1,'yyyy'),case when t1.FLAG_ID<=1 then '系统联'
else '自连' end
  
 ------225、
 
 1、找差距补短板；
分处室；找差距要有对标，同时简要的说明一下解决方案
2、2021年重点工作；
分处室；
3、未来3年方向；
整合主题
1、优化人员结构，加强培训，提升人效；
2、强化数据化基础建设，提升数据洞察能力，和数据运用；
3、加强产品创新，优化监控，提升收益；
4、强化运营，提升复购，加强营销和产品创新；
5、提升服务能力，加强外部渠道管理；
 
 
 ------226、
 
 /*喜欢，今年支付宝总是搞活动，帮忙做一个Excel统计一下上周的份额，
份额这么计算 支付宝的和支付宝无线的、微信支付的合计在一起算100%，然后看支付宝合计的占总体的比率*/
--喜欢，7.27-8.9和8.10-8.23的支付宝份 发一下

select t1.order_day 订单日期,case when t1.gate_name like '%微信%' then '微信'
when t1.gate_name like '%支付宝%' then '支付宝' end 支付方式,t1.gate_name 支付渠道,
sum(t1.ticket_price+t1.port_pay+t1.ad_fy+t1.other_fy+t1.insurce_fee+t1.other_fee) 支付金额,
count(1) 机票量 ,count(distinct t1.flights_Order_id) 订单号
 from dw.fact_order_detail t1
 where t1.order_day>=to_date('2020-12-01','yyyy-mm-dd')
   and t1.order_day< to_date('2020-01-05','yyyy-mm-dd')
   and t1.gate_name in('微信小程序','财付通微信','支付宝','支付宝无线')
   and t1.channel in('网站','手机')
   and t1.whole_flight like '9C%'
   group by t1.order_day,case when t1.gate_name like '%微信%' then '微信'
when t1.gate_name like '%支付宝%' then '支付宝' end,t1.gate_name
 
 ------227、智能客服销量
 
 select t1.order_day,count(1)
 from dw.fact_order_detail t1
 where t1.station_id=6
 and t1.order_day>=trunc(sysdate)-7
 group by t1.order_day;
 
 
 
======================================================20210112===================================================
 ------228、河北省政府交通厅又要疫情数据：1.6日-1.11日退票数和损失的金额
 
 退票数据（含0元和非0元），损失金额包含所有的（票面价、燃油、机建、辅收等所有支付费用）、河北省 
 退票日期、河北省涉及到的机场数据 
 select trunc(t1.money_date),t2.flights_segment_name,count(1),
sum((t3.ticket_price+t3.ad_fy+t3.port_pay+t3.other_fy+t3.insurance_fee+t3.other_fee)*nvl(t3.r_rate,1))
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join stg.s_cq_order_head t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.money_date>=to_date('2021-01-06','yyyy-mm-dd')
   and t1.money_date< to_date('2021-01-12','yyyy-mm-dd')
   and regexp_like(t2.segment_code,'SHP|SJW|TVS|HDG|ZQZ|XJB|CDE|BAD|HSU|BPE|DZB|AGB|XNT')
   group by trunc(t1.money_date),t2.flights_segment_name
   
  
 ------229、 套票限额/套票兑换的计划量
 
套票1.0：7月23日~12月31日，航班日期、星期、往返航线（A =B) 、根据地类型（全部、上海、深圳、兰州、石家庄、沈阳、揭阳、宁波、扬州）、投放座位数、兑换量、销售人数、总体仓位计划数；
类似：提供套票2.0的数据(从11月)


 select p.flight_date 航班日期,
       p.flight_no 航班号,
       p.route_name 航线,
       (case
         when p.flight_date < to_date('2020-11-11', 'yyyy-mm-dd') then
          least(p.limit_num + p.tktnum, 20)
         when p.flight_date < to_date('2020-11-20', 'yyyy-mm-dd') then
          least(p.limit_num + p.tktnum, 30)
         else
          p.limit_num + p.tktnum
       end) - p.tktnum 剩余可兑换量,
       greatest((case
                  when p.flight_date < to_date('2020-11-11', 'yyyy-mm-dd') then
                   least(p.limit_num_v1 + p.tktnum1, 20)
                  when p.flight_date < to_date('2020-11-20', 'yyyy-mm-dd') then
                   least(p.limit_num_v1 + p.tktnum1, 20)
                  else
                   p.limit_num_v1 + p.tktnum1
                end) - p.tktnum1,
                0) "套票1.0剩余可兑换量",
       greatest((case
                  when p.flight_date < to_date('2020-11-11', 'yyyy-mm-dd') then
                   0
                  when p.flight_date < to_date('2020-11-20', 'yyyy-mm-dd') then
                   least(p.limit_num_v2 + p.tktnum2 + p.tktnum3, 10)
                  else
                   p.limit_num_v2 + p.tktnum2 + p.tktnum3
                end) - (p.tktnum2 + p.tktnum3),
                0) "套票2.0剩余可兑换量",
       nvl(p.tktnum, 0) 兑换量,
       nvl(p.tktnum2, 0) "套票2.0兑换量",
       nvl(p.tktnum1, 0) "套票1.0兑换量",
       nvl(p.tktnum3, 0) "让爱飞翔套票兑换量",
       case
         when p.flight_date < to_date('2020-11-11', 'yyyy-mm-dd') then
          least(p.limit_num + p.tktnum, 20)
         when p.flight_date < to_date('2020-11-20', 'yyyy-mm-dd') then
          least(p.limit_num + p.tktnum, 30)
         else
          p.limit_num + p.tktnum
       end 总限额,
       p.ticket_num,
       p.oversale,
       nvl(p.predict_ticket_num, p.total_ticket_num) predict_ticket_num,
       p.total_oversale
  from (select h.flight_date,
               h.flight_no,
               h.route_name,
               h.oversale,
               h.total_oversale,
               h.ticket_num,
               h.total_ticket_num,
               h1.limit_num_v1 + h1.limit_num_v2 limit_num,
               h1.limit_num_v1,
               h1.limit_num_v2,
               nvl(h2.tktnum, 0) tktnum,
               nvl(h2.tktnum2, 0) tktnum2,
               nvl(h2.tktnum1, 0) tktnum1,
               nvl(h2.tktnum3, 0) tktnum3,
               h3.predict_ticket_num
          from (select t2.flight_date,
                       t2.flight_no,
                       t2.route_name,
                       t2.flights_id,
                       sum(t2.oversale - t2.bgo_plan) oversale,
                       sum(t2.oversale) total_oversale,
                       sum(nvl(t1.ticket_num, 0)) ticket_num,
                       sum(nvl(t1.total_ticket_num, 0)) total_ticket_num
                  from dw.da_flight t2
                  left join (select segment_head_id,
                                   sum(case
                                         when seats_name not in
                                              ('B', 'G', 'G1', 'G2', 'O') then
                                          1
                                         else
                                          0
                                       end) ticket_num,
                                   count(1) total_ticket_num
                              from cqsale.cq_order_head@to_air
                             where whole_flight like '9C%'
                               and r_flights_date >= trunc(sysdate) - 31
                               and r_flights_date >=
                                   to_date('${sdate}', 'yyyy-mm-dd')
                               and r_flights_date <=
                                   to_date('${edate}', 'yyyy-mm-dd')
                               and flag_id in (3, 5, 40, 41)
                               and seats_name is not null
                             group by segment_head_id) t1 on t1.segment_head_id =
                                                             t2.segment_head_id
                  left join hdb.cq_airport ap3 on ap3.threecodeforcity =
                                                  t2.originairport
                  left join hdb.cq_airport ap4 on ap4.threecodeforcity =
                                                  t2.destairport
                 where t2.flag = 0
                   and t2.company_id = 0
                   and t2.oversale - t2.bgo_plan > 0
                   and t2.flight_date >= trunc(sysdate) - 31
                   and t2.flight_date >= to_date('${sdate}', 'yyyy-mm-dd')
                   and t2.flight_date <= to_date('${edate}', 'yyyy-mm-dd')
                 ${if(city_name == '',"","and t2.route_name in ('" + city_name + "')")}
                 ${if(flg_no == '',"","and t2.flight_no in ('" + flg_no + "')")}
                 ${if(origin == '',"","and t2.origincity_name in ('" + origin + "')")}
                 ${if(dest == '',"","and t2.destcity_name in ('" + dest + "')")}
                   and t2.nationflag <> '国际'
                   and (case when nvl(length('${region}'), 0) = 0 then 1 when
                        '${region}' like '%冀%' and
                        regexp_like(ap3.province, '河北') then 1 when
                        '${region}' like '%冀%' and
                        regexp_like(ap4.province, '河北') then 1 when
                        '${region}' like '%沈%' and
                        t2.flights_city_name like '%沈阳%' then 1 when
                        '${region}' like '%苏%' and
                        regexp_like(ap3.province, '江苏') then 1 when
                        '${region}' like '%苏%' and
                        regexp_like(ap4.province, '江苏') then 1 when
                        '${region}' like '%浙%' and
                        regexp_like(ap3.province, '浙江') then 1 when
                        '${region}' like '%浙%' and
                        regexp_like(ap4.province, '浙江') then 1 when
                        '${region}' like '%兰%' and
                        t2.flights_city_name like '%兰州%' then 1 when
                        '${region}' like '%潮汕%' and
                        t2.flights_city_name like '%揭阳%' then 1 else 0 end) = 1
                 group by t2.flight_date,
                          t2.flight_no,
                          t2.route_name,
                          t2.flights_id) h
          left join (select *
                      from (select t2.flights_id,
                                   case
                                     when t2.flight_date >=
                                          to_date('2021-01-01', 'yyyy-mm-dd') then
                                      0
                                     else
                                      nvl(nvl(l.limit_num_v1, s.limit), 20)
                                   end limit_num_v1,
                                   case
                                     when t2.flight_date <
                                          to_date('2020-11-11', 'yyyy-mm-dd') then
                                      0
                                     else
                                      nvl(l.limit_num_v2, s2.limit)
                                   end limit_num_v2,
                                   row_number() over(partition by t2.flights_id order by s.flight_no, s.ori_airport, s.dest_airport, s2.flight_no, s2.ori_airport, s2.dest_airport) rid
                              from dw.da_flight t2
                              left join stg.y_cq_new_yhq_flights_limit l on l.segment_head_id =
                                                                            t2.segment_head_id
                              left join yhq.cq_suit_ticket_limit_rule@to_air s on s.batch_nos_id = 1
                                                                              and s.status = 1
                                                                              and t2.flight_date >=
                                                                                  to_date(s.flight_date_s,
                                                                                          'yyyy-mm-dd')
                                                                              and t2.flight_date <=
                                                                                  to_date(s.flight_date_e,
                                                                                          'yyyy-mm-dd')
                                                                              and (case when
                                                                                   s.ori_airport is null then 1 when
                                                                                   s.ori_airport =
                                                                                   t2.originairport then 1 else 0 end) = 1
                                                                              and (case when
                                                                                   s.dest_airport is null then 1 when
                                                                                   s.dest_airport =
                                                                                   t2.destairport then 1 else 0 end) = 1
                                                                              and (case when
                                                                                   s.flight_no is null then 1 when
                                                                                   s.flight_no =
                                                                                   t2.flight_no then 1 else 0 end) = 1
                              left join yhq.cq_suit_ticket_limit_rule@to_air s2 on s2.batch_nos_id = 1000
                                                                               and s2.status = 1
                                                                               and t2.flight_date >=
                                                                                   to_date(s2.flight_date_s,
                                                                                           'yyyy-mm-dd')
                                                                               and t2.flight_date <=
                                                                                   to_date(s2.flight_date_e,
                                                                                           'yyyy-mm-dd')
                                                                               and (case when
                                                                                    s2.ori_airport is null then 1 when
                                                                                    s2.ori_airport =
                                                                                    t2.originairport then 1 else 0 end) = 1
                                                                               and (case when
                                                                                    s2.dest_airport is null then 1 when
                                                                                    s2.dest_airport =
                                                                                    t2.destairport then 1 else 0 end) = 1
                                                                               and (case when
                                                                                    s2.flight_no is null then 1 when
                                                                                    s2.flight_no =
                                                                                    t2.flight_no then 1 else 0 end) = 1
                             where t2.flag = 0
                               and t2.company_id = 0
                               and t2.flight_date >= trunc(sysdate) - 31
                               and t2.flight_date >=
                                   to_date('${sdate}', 'yyyy-mm-dd')
                               and t2.flight_date <=
                                   to_date('${edate}', 'yyyy-mm-dd')
                               and t2.oversale - t2.bgo_plan > 0)
                     where rid = 1) h1 on h.flights_id = h1.flights_id
          left join (select t2.flights_id,
                           count(1) tktnum,
                           sum(case
                                 when combo_vision = '套票2.1' then
                                  1
                                 else
                                  0
                               end) tktnum3,
                           sum(case
                                 when combo_vision = '套票2.0' then
                                  1
                                 else
                                  0
                               end) tktnum2,
                           sum(case
                                 when combo_vision = '套票1.0' then
                                  1
                                 else
                                  0
                               end) tktnum1
                      from dw.fact_combo_ticket c
                      join dw.da_flight t2 on c.segment_head_id =
                                              t2.segment_head_id
                     where c.payflag = 1
                     group by t2.flights_id) h2 on h1.flights_id =
                                                   h2.flights_id
          left join (select t2.flights_id,
                           sum(t1.predict_ticket_num) predict_ticket_num
                      from dw.fr_segment_income_predict3 t1
                      join dw.da_flight t2 on t1.segment_head_id =
                                              t2.segment_head_id
                     where t2.flag = 0
                       and t2.company_id = 0
                       and t2.oversale - t2.bgo_plan > 0
                     group by t2.flights_id) h3 on h1.flights_id =
                                                   h3.flights_id) p
 order by 1, 3;

--================================================================2021年SQL保存=================================================================

--================================================================20210115=================================================================

---------230、最近一段时间新用户量购票激增（以前没有购买行为的用户占比激增，从14%上升至40%）

select t1.order_day,case when t1.order_DAY-t2.reg_day <=0 then '00'
when t1.order_day-t2.reg_day<=7 then '01~07'
when t1.order_day-t2.reg_day<=15 then '08~15'
when t1.order_day-t2.reg_day<=30 then '16~30'
when t1.order_day-t2.reg_day<=90 then '31~90'
when t1.order_day-t2.reg_day<=180 then '91~180'
when t1.order_day-t2.reg_day<=365 then '181~365'
else '365+' end,case when t1.order_day=nvl(trunc(t3.first_orderdate),t1.order_day) then '首次下单'
when t1.order_day> nvl(trunc(t3.first_orderdate),t1.order_day+1) then '复购' end,
case when t1.gate_name like '%商旅卡%' then '春秋商旅卡'
when t1.gate_name like '%易宝%' then '易宝'
else '其他' end 支付方式,
count(1)
 from dw.fact_order_detail t1
 join dw.da_b2c_user t2 on t1.client_Id=t2.users_id
 left join dw.da_user_purchase t3 on t1.client_Id=t3.users_id
  where t1.order_day>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.order_day< trunc(sysdate)
   and t1.company_id=0
   and t1.channel in('网站','手机')
   group by t1.order_day,case when t1.order_DAY-t2.reg_day <=0 then '00'
when t1.order_day-t2.reg_day<=7 then '01~07'
when t1.order_day-t2.reg_day<=15 then '08~15'
when t1.order_day-t2.reg_day<=30 then '16~30'
when t1.order_day-t2.reg_day<=90 then '31~90'
when t1.order_day-t2.reg_day<=180 then '91~180'
when t1.order_day-t2.reg_day<=365 then '181~365'
else '365+' end,case when t1.order_day=nvl(trunc(t3.first_orderdate),t1.order_day) then '首次下单'
when t1.order_day> nvl(trunc(t3.first_orderdate),t1.order_day+1) then '复购' end,case when t1.gate_name like '%商旅卡%' then '春秋商旅卡'
when t1.gate_name like '%易宝%' then '易宝'
else '其他' end;

--结论：10号以后以前注册的代理账号大量被启动

---============================================================20210118=======================================================================
 ------231、针对短信限制误杀的情况进行处理并解除疑似没有问题的手机号码

SELECT t1.mobile,t2.ticketnum,t3.ticket_num2,t4.ticket_num3
  from cqsale.CQ_MOBILE_NO_SMS@to_air  t1
  left join dw.fact_mobile_statistics t2  on t1.mobile=t2.mobile
  left join(select getmobile(tt1.work_tel) worktel,count(1) ticket_num2
              from stg.s_cq_order tt1
              join stg.s_cq_order_head tt2 on tt1.flights_order_id=tt2.flights_order_id
              where tt1.order_date>=trunc(sysdate)-365
                and tt1.order_date< trunc(sysdate)
                and tt2.flag_id in(3,5,40,7,11,12)
                and tt1.r_company_id=0
                and getmobile(tt1.work_tel)<>'-'
                group by getmobile(tt1.work_tel)              
              )t3 on t1.mobile=t3.worktel
  left join (select getmobile(tt2.r_tel) r_tel,count(1) ticket_num3
              from stg.s_cq_order tt1
              join stg.s_cq_order_head tt2 on tt1.flights_order_id=tt2.flights_order_id
              where tt1.order_date>=trunc(sysdate)-365
                and tt1.order_date< trunc(sysdate)
                and tt2.flag_id in(3,5,40,7,11,12)
                and tt1.r_company_id=0
                and getmobile(tt2.r_tel)<>'-'
                group by getmobile(tt2.r_tel)) t4 on t4.r_tel=t1.mobile;


SELECT t1.mobile,t1.memo,t2.cust_id,t2.reg_date,t3.feature_value
  from cqsale.CQ_MOBILE_NO_SMS@to_air  t1
  left join dw.da_lyuser t2 on t1.mobile=t2.login_id
  left join dw.da_restrict_userinfo t3 on t1.mobile=t3.mobile;


---=========================================================20210120============================================================================
 ------232、航班日期-线上渠道占比(不剔除BGO)

select to_char(t1.flights_date,'yyyymm'),
case when t1.channel in('手机','网站') then '线上自有平台'
     when t1.channel in('OTA','旗舰店') then 'OTA'
     else '其他' end,count(1)   
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.dim_segment_type t4 on t2.route_Id = t4.route_Id and t2.h_route_id = t4.h_route_id
 where t2.flag <> 2
   and t1.flights_date >= to_date('2018-11-01','yyyy-mm-dd')
   and t1.flights_date <  to_date('2021-01-01','yyyy-mm-dd')
   and t1.seats_name is not NULL
   and t1.company_id=0
   and t1.flag_id =40
   group by to_char(t1.flights_date,'yyyymm'),case when t1.channel in('手机','网站') then '线上自有平台'
     when t1.channel in('OTA','旗舰店') then 'OTA'
     else '其他' end;


 ------233、退票分析
 
---1、针对退票本身数据而言

select trunc(t1.money_date),case when t2.flag=2 then '取消航班'
when t2.flag=0 then '正常航班'
else '保护航班' end 航班类型,
case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '非BGO' end 舱位类型,
case when t3.flights_order_id is not null then '套票'
when t1.money_fy = 0 then '0元退票'
when t1.money_fy > 0 then '正常退票' end 退票类型,
case when t4.province||t5.province  like '%河北%' then '河北'
when t4.province||t5.province  like '%辽宁%' then '辽宁'
when t4.province||t5.province  like '%黑龙江%' then '黑龙江'
when t4.province||t5.province  like '%山西%' then '山西'
else '其他地区' end 地区,
case when  trunc(t1.origin_std) < to_date('2021-01-28','yyyy-mm-dd') then '春运前'
when trunc(t1.origin_std) >=to_date('2021-02-09','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-02-19','yyyy-mm-dd') then '春节0209~0219'
when trunc(t1.origin_std) >=to_date('2021-01-28','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-03-08','yyyy-mm-dd') then '春运其他日期'
when trunc(t1.origin_std) > to_date('2021-03-08','yyyy-mm-dd')
and trunc(t1.origin_std) <=to_date('2021-03-31','yyyy-mm-dd')
then '春运后3月'
when trunc(t1.origin_std) >=to_date('2021-04-01','yyyy-mm-dd')
and trunc(t1.origin_std) < =to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月'
when trunc(t1.origin_std) > to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月以后' end 航班日期类型,
case when t1.origin_std-t1.money_date < =0 then '离站后'
when t1.origin_std-t1.money_date <=0.5 then '（0,12H]'
when t1.origin_std-t1.money_date <=1 then '（12,24H]'
when t1.origin_std-t1.money_date <=3 then '（1,3D]'
when t1.origin_std-t1.money_date <=7 then '（3,7D]'
when t1.origin_std-t1.money_date <=15 then '（7,15D]'
when t1.origin_std-t1.money_date <=30 then '（15,30D]'
when t1.origin_std-t1.money_date <=60 then '（30,60D]'
when t1.origin_std-t1.money_date > 60 then '60+' end 退票提前期分布,
count(1) 退票量,
sum(t1.money_fy) 退票金额
  from dw.da_order_drawback t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.fact_combo_ticket t3 on t1.flights_order_head_Id=t3.flights_order_head_Id
  left join hdb.cq_airport t4 on t2.originairport=t4.threecodeforcity
  left join hdb.cq_airport t5 on t2.destairport=t5.threecodeforcity
  where t1.money_date>=to_date('2020-12-01','yyyy-mm-dd')
    and t1.money_date< to_date('2021-01-21','yyyy-mm-dd')
    and t1.seats_name is not null
  group by trunc(t1.money_date),case when t2.flag=2 then '取消航班'
when t2.flag=0 then '正常航班'
else '保护航班' end ,
case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '非BGO' end ,
case when t3.flights_order_id is not null then '套票'
when t1.money_fy = 0 then '0元退票'
when t1.money_fy > 0 then '正常退票' end ,
case when t4.province||t5.province  like '%河北%' then '河北'
when t4.province||t5.province  like '%辽宁%' then '辽宁'
when t4.province||t5.province  like '%黑龙江%' then '黑龙江'
when t4.province||t5.province  like '%山西%' then '山西'
else '其他地区' end ,
case when  trunc(t1.origin_std) < to_date('2021-01-28','yyyy-mm-dd') then '春运前'
when trunc(t1.origin_std) >=to_date('2021-02-09','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-02-19','yyyy-mm-dd') then '春节0209~0219'
when trunc(t1.origin_std) >=to_date('2021-01-28','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-03-08','yyyy-mm-dd') then '春运其他日期'
when trunc(t1.origin_std) > to_date('2021-03-08','yyyy-mm-dd')
and trunc(t1.origin_std) <=to_date('2021-03-31','yyyy-mm-dd')
then '春运后3月'
when trunc(t1.origin_std) >=to_date('2021-04-01','yyyy-mm-dd')
and trunc(t1.origin_std) < =to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月'
when trunc(t1.origin_std) > to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月以后' end ,
case when t1.origin_std-t1.money_date < =0 then '离站后'
when t1.origin_std-t1.money_date <=0.5 then '（0,12H]'
when t1.origin_std-t1.money_date <=1 then '（12,24H]'
when t1.origin_std-t1.money_date <=3 then '（1,3D]'
when t1.origin_std-t1.money_date <=7 then '（3,7D]'
when t1.origin_std-t1.money_date <=15 then '（7,15D]'
when t1.origin_std-t1.money_date <=30 then '（15,30D]'
when t1.origin_std-t1.money_date <=60 then '（30,60D]'
when t1.origin_std-t1.money_date > 60 then '60+' end;

----2、按照航班日期进行分析

select /*+parallel(2) */
h1.flights_date,case when h1.flag_id in(3,5,40,41) then '已支付'
when h1.flag_id in(7,11,12) then '已退票' end 机票状态,
case when h2.flag in(1,2) then '取消航班'
when h2.flag=0 then '正常航班'
 end flighttype,
case when h1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '非BGO' end seattype,
case when h4.flights_order_id is not null then '套票'
else '其他'  end tickettype,
case when h5.province||h6.province  like '%河北%' then '疫情地区'
when h5.province||h6.province  like '%辽宁%' then '疫情地区'
when h5.province||h6.province  like '%黑龙江%' then '疫情地区'
when h5.province||h6.province  like '%吉林%' then '疫情地区'
when h5.province||h6.province  like '%上海%' then '疫情地区'
else '其他地区' end region,
replace(replace(h3.wf_segment,'浦东','上海'),'虹桥','上海') 往返航线,
case when  h1.flights_date< to_date('2021-01-28','yyyy-mm-dd') then '春运前'
when h1.flights_date>=to_date('2021-02-09','yyyy-mm-dd')
      and h1.flights_date<=to_date('2021-02-19','yyyy-mm-dd') then '春节0209~0219'
when h1.flights_date>=to_date('2021-01-28','yyyy-mm-dd')
      and h1.flights_date<=to_date('2021-03-08','yyyy-mm-dd') then '春运其他日期'
when h1.flights_date> to_date('2021-03-08','yyyy-mm-dd')
and h1.flights_date<=to_date('2021-03-31','yyyy-mm-dd')
then '春运后3月'
when h1.flights_date>=to_date('2021-04-01','yyyy-mm-dd')
and h1.flights_date< =to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月'
when h1.flights_date> to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月以后' end datetype,
case when h1.ahead_days<=0 then '00'
when h1.ahead_days<=3 then '01~03'
when h1.ahead_days<=7 then '04~07'
when h1.ahead_days<=15 then '08~15'
when h1.ahead_days<=30 then '16~30' 
when h1.ahead_days<=60 then '31~60' 
when h1.ahead_days> 60 then '60+' end aheadys,
h7.flighttype flighttype2,
h7.tuitype,
h7.datetype datetype2,
h7.priodtype,
case when h8.flights_order_head_id is not null then '重购机票'
else '非重购机票' end 是否重购机票,
count(1) ticketnum,
sum(h1.ticket_price) ticket_price,
sum(h7.tuinum) tuinum,
sum(h7.tuiprice) tuiprice
  from dw.fact_recent_order_detail h1
  join dw.da_flight h2 on h1.segment_head_id=h2.segment_Head_id
  left join dw.dim_segment_type h3 on h2.route_Id=h3.route_Id and h2.h_route_id=h3.h_route_id
  left join dw.fact_combo_ticket h4 on h1.flights_order_head_Id=h4.flights_order_head_Id
  left join hdb.cq_airport h5 on h2.originairport=h5.threecodeforcity
  left join hdb.cq_airport h6 on h2.destairport=h6.threecodeforcity
  left join(
select t1.flights_order_head_id,
trunc(t1.money_date),case when t2.flag in(1,2) then '取消航班'
when t2.flag=0 then '正常航班'
end flighttype,
case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '非BGO' end seattype,
case when t3.flights_order_id is not null then '套票'
when t1.money_fy = 0 then '0元退票'
when t1.money_fy > 0 then '正常退票' end tuitype,
case when  trunc(t1.origin_std) < to_date('2021-01-28','yyyy-mm-dd') then '春运前'
when trunc(t1.origin_std) >=to_date('2021-02-09','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-02-19','yyyy-mm-dd') then '春节0209~0219'
when trunc(t1.origin_std) >=to_date('2021-01-28','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-03-08','yyyy-mm-dd') then '春运其他日期'
when trunc(t1.origin_std) > to_date('2021-03-08','yyyy-mm-dd')
and trunc(t1.origin_std) <=to_date('2021-03-31','yyyy-mm-dd')
then '春运后3月'
when trunc(t1.origin_std) >=to_date('2021-04-01','yyyy-mm-dd')
and trunc(t1.origin_std) < =to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月'
when trunc(t1.origin_std) > to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月以后' end datetype,
case when t1.origin_std-t1.money_date < =0 then '离站后'
when t1.origin_std-t1.money_date <=0.5 then '（0,12H]'
when t1.origin_std-t1.money_date <=1 then '（12,24H]'
when t1.origin_std-t1.money_date <=3 then '（1,3D]'
when t1.origin_std-t1.money_date <=7 then '（3,7D]'
when t1.origin_std-t1.money_date <=15 then '（7,15D]'
when t1.origin_std-t1.money_date <=30 then '（15,30D]'
when t1.origin_std-t1.money_date <=60 then '（30,60D]'
when t1.origin_std-t1.money_date > 60 then '60+' end priodtype,
count(1) tuinum,
sum(t1.money_fy) tuiprice
  from dw.da_order_drawback t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.fact_combo_ticket t3 on t1.flights_order_head_Id=t3.flights_order_head_Id
  left join hdb.cq_airport t4 on t2.originairport=t4.threecodeforcity
  left join hdb.cq_airport t5 on t2.destairport=t5.threecodeforcity
  where t1.money_date>=to_date('2020-12-01','yyyy-mm-dd')
    and t1.money_date< to_date('2021-01-22','yyyy-mm-dd')
    and t1.seats_name is not null
  group by t1.flights_order_head_id,trunc(t1.money_date),case when t2.flag in(1,2) then '取消航班'
when t2.flag=0 then '正常航班'
 end ,
case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '非BGO' end ,
case when t3.flights_order_id is not null then '套票'
when t1.money_fy = 0 then '0元退票'
when t1.money_fy > 0 then '正常退票' end ,
case when  trunc(t1.origin_std) < to_date('2021-01-28','yyyy-mm-dd') then '春运前'
when trunc(t1.origin_std) >=to_date('2021-02-09','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-02-19','yyyy-mm-dd') then '春节0209~0219'
when trunc(t1.origin_std) >=to_date('2021-01-28','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-03-08','yyyy-mm-dd') then '春运其他日期'
when trunc(t1.origin_std) > to_date('2021-03-08','yyyy-mm-dd')
and trunc(t1.origin_std) <=to_date('2021-03-31','yyyy-mm-dd')
then '春运后3月'
when trunc(t1.origin_std) >=to_date('2021-04-01','yyyy-mm-dd')
and trunc(t1.origin_std) < =to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月'
when trunc(t1.origin_std) > to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月以后' end ,
case when t1.origin_std-t1.money_date < =0 then '离站后'
when t1.origin_std-t1.money_date <=0.5 then '（0,12H]'
when t1.origin_std-t1.money_date <=1 then '（12,24H]'
when t1.origin_std-t1.money_date <=3 then '（1,3D]'
when t1.origin_std-t1.money_date <=7 then '（3,7D]'
when t1.origin_std-t1.money_date <=15 then '（7,15D]'
when t1.origin_std-t1.money_date <=30 then '（15,30D]'
when t1.origin_std-t1.money_date <=60 then '（30,60D]'
when t1.origin_std-t1.money_date > 60 then '60+' end)h7 on h1.flights_order_head_id=h7.flights_order_head_id
left  join(SELECT t1.flights_order_head_id,count(1)
  from dw.fact_order_detail t1,
   dw.da_order_drawback t2,
   dw.da_flight t3
   where t1.codeno=t2.codeno
   and t1.traveller_name=t2.sname
   and t2.segment_head_id=t3.segment_head_id
   and t1.whole_segment=t3.segment_code
   and t1.order_date>=t2.money_date
   and t1.flights_date>=trunc(t2.origin_std)-7
   and t1.flights_date<=trunc(t2.origin_std)+7
   and t1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-04-30','yyyy-mm-dd')
   group by t1.flights_order_head_id)h8 on h1.flights_order_head_id=h8.flights_order_head_id
where h1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
 and h1.flights_date<=to_date('2021-04-30','yyyy-mm-dd')
 and h1.seats_name is not null
 and h1.whole_flight like '9C%'
 group by h1.flights_date,case when h2.flag in(1,2) then '取消航班'
when h2.flag=0 then '正常航班'
 end ,
case when h1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '非BGO' end ,
case when h4.flights_order_id is not null then '套票'
else '其他'  end ,
case when h5.province||h6.province  like '%河北%' then '疫情地区'
when h5.province||h6.province  like '%辽宁%' then '疫情地区'
when h5.province||h6.province  like '%黑龙江%' then '疫情地区'
when h5.province||h6.province  like '%吉林%' then '疫情地区'
when h5.province||h6.province  like '%上海%' then '疫情地区'
else '其他地区' end ,
case when  h1.flights_date< to_date('2021-01-28','yyyy-mm-dd') then '春运前'
when h1.flights_date>=to_date('2021-02-09','yyyy-mm-dd')
      and h1.flights_date<=to_date('2021-02-19','yyyy-mm-dd') then '春节0209~0219'
when h1.flights_date>=to_date('2021-01-28','yyyy-mm-dd')
      and h1.flights_date<=to_date('2021-03-08','yyyy-mm-dd') then '春运其他日期'
when h1.flights_date> to_date('2021-03-08','yyyy-mm-dd')
and h1.flights_date<=to_date('2021-03-31','yyyy-mm-dd')
then '春运后3月'
when h1.flights_date>=to_date('2021-04-01','yyyy-mm-dd')
and h1.flights_date< =to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月'
when h1.flights_date> to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月以后' end ,
case when h1.ahead_days<=0 then '00'
when h1.ahead_days<=3 then '01~03'
when h1.ahead_days<=7 then '04~07'
when h1.ahead_days<=15 then '08~15'
when h1.ahead_days<=30 then '16~30' 
when h1.ahead_days<=60 then '31~60' 
when h1.ahead_days> 60 then '60+' end ,
h7.flighttype ,
h7.tuitype,
h7.datetype ,
h7.priodtype,
case when h1.flag_id in(3,5,40,41) then '已支付'
when h1.flag_id in(7,11,12) then '已退票' end,
replace(replace(h3.wf_segment,'浦东','上海'),'虹桥','上海'),
case when h8.flights_order_head_id is not null then '重购机票'
else '非重购机票' end;

-----退票重购的数量
---按照订单日期计算的数据

SELECT t1.order_day,count(distinct t1.flights_order_head_id)
  from dw.fact_order_detail t1,
   dw.da_order_drawback t2,
   dw.da_flight t3
   where t1.codeno=t2.codeno
   and t1.traveller_name=t2.sname
   and t2.segment_head_id=t3.segment_head_id
   and t1.whole_segment=t3.segment_code
   and t1.order_date>=t2.money_date
   and t1.flights_date=trunc(t2.origin_std)
   --and t1.flights_date<=trunc(t2.origin_std)+30
   and t1.order_day>=trunc(sysdate)-60
   group by t1.order_day;

SELECT t1.order_day,count(distinct t1.flights_order_head_id)
  from dw.fact_order_detail t1,
   dw.da_order_drawback t2,
   dw.da_flight t3
   where t1.codeno=t2.codeno
   and t1.traveller_name=t2.sname
   and t2.segment_head_id=t3.segment_head_id
   and t1.whole_segment=t3.segment_code
   and t1.order_date>=t2.money_date
   and t1.flights_date>=trunc(t2.origin_std)-7
   and t1.flights_date<=trunc(t2.origin_std)+7
   and t1.order_day>=trunc(sysdate)-60
   group by t1.order_day;
   
SELECT t1.order_day,count(distinct t1.flights_order_head_id)
  from dw.fact_order_detail t1,
   dw.da_order_drawback t2,
   dw.da_flight t3
   where t1.codeno=t2.codeno
   and t1.traveller_name=t2.sname
   and t2.segment_head_id=t3.segment_head_id
   and t1.whole_segment=t3.segment_code
   and t1.order_date>=t2.money_date
   and t1.flights_date>=trunc(t2.origin_std)-30
   and t1.flights_date<=trunc(t2.origin_std)+30
   and t1.order_day>=trunc(sysdate)-60
   group by t1.order_day;
   
----判断是否重购

SELECT t1.flights_order_head_id,count(1)
  from dw.fact_order_detail t1,
   dw.da_order_drawback t2,
   dw.da_flight t3
   where t1.codeno=t2.codeno
   and t1.traveller_name=t2.sname
   and t2.segment_head_id=t3.segment_head_id
   and t1.whole_segment=t3.segment_code
   and t1.order_date>=t2.money_date
   and t1.flights_date>=trunc(t2.origin_std)-7
   and t1.flights_date<=trunc(t2.origin_std)+7
   and t1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-04-30','yyyy-mm-dd')
   group by t1.flights_order_head_id;




 ------234、退票分析

 1、退票趋势分析
 1） 从2020年12月1日~2021年1月20日 每日退票量、每日订票量、每日订票中退订重购量、每日计划座位数（有支付机票航班)、每日计划座位数（剔除取消航班）
 2） 退票量激增的各原因占比（分成三块：大连沈阳疫情之前（相对正常）、大连沈阳疫情（偶有复发)、石家庄疫情(本土激增）、现在（各地均有））
 3） 退票提前期分布（7~30天退票量占比激增，远期退票；特别是昨天因为春节的政策，增量明显）
 4） 航线退票率分布（确定哪些航线退票率较高，按照退票率排序)
 
 2、航班日期退票量变化
 1） 退票量、退票率变化、每日销售客座率变化
 2） 航班日期销售进度、日退票量、预估客座率、退票量影响占比、计划量
 
 3、策略及规划（针对可能出现的大面积退票）


select trunc(t1.money_date),case when t2.flag in(1,2) then '取消航班'
when t2.flag=0 then '正常航班' end 航班类型,
case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '非BGO' end 舱位类型,
case when t3.flights_order_id is not null then '套票'
when t1.money_fy = 0 then '0元退票'
when t1.money_fy > 0 then '正常退票' end 退票类型,
case when t4.province||t5.province  like '%辽宁%' then '疫情地区'
when  t4.province||t5.province  like '%黑龙江%' then '疫情地区'
when   t4.province||t5.province  like '%河北%' then '疫情地区'
when   t4.province||t5.province  like '%吉林%' then '疫情地区'
when   t4.province||t5.province  like '%上海%' then '疫情地区'
else '其他地区' end ,
replace(replace(t6.wf_segment,'浦东','上海'),'虹桥','上海') 往返航线,
case when  trunc(t1.origin_std) < to_date('2021-01-28','yyyy-mm-dd') then '春运前'
when trunc(t1.origin_std) >=to_date('2021-02-09','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-02-19','yyyy-mm-dd') then '春节0209~0219'
when trunc(t1.origin_std) >=to_date('2021-01-28','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-03-08','yyyy-mm-dd') then '春运其他日期'
when trunc(t1.origin_std) > to_date('2021-03-08','yyyy-mm-dd')
and trunc(t1.origin_std) <=to_date('2021-03-31','yyyy-mm-dd')
then '春运后3月'
when trunc(t1.origin_std) >=to_date('2021-04-01','yyyy-mm-dd')
and trunc(t1.origin_std) < =to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月'
when trunc(t1.origin_std) > to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月以后' end 航班日期类型,
case when t1.origin_std-t1.money_date < =0 then '离站后'
when t1.origin_std-t1.money_date <=0.5 then '（0,12H]'
when t1.origin_std-t1.money_date <=1 then '（12,24H]'
when t1.origin_std-t1.money_date <=3 then '（1,3D]'
when t1.origin_std-t1.money_date <=7 then '（3,7D]'
when t1.origin_std-t1.money_date <=15 then '（7,15D]'
when t1.origin_std-t1.money_date <=30 then '（15,30D]'
when t1.origin_std-t1.money_date <=60 then '（30,60D]'
when t1.origin_std-t1.money_date > 60 then '60+' end 退票提前期分布,
count(1) 退票量,
sum(t1.money_fy) 退票金额
  from dw.da_order_drawback t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.fact_combo_ticket t3 on t1.flights_order_head_Id=t3.flights_order_head_Id
  left join hdb.cq_airport t4 on t2.originairport=t4.threecodeforcity
  left join hdb.cq_airport t5 on t2.destairport=t5.threecodeforcity
  left join dw.dim_segment_type t6 on t2.h_route_id=t6.h_route_id and t2.route_id=t6.route_id
  where t1.money_date>=to_date('2020-12-01','yyyy-mm-dd')
    and t1.money_date< to_date('2021-01-22','yyyy-mm-dd')
    and t1.seats_name is not null
  group by trunc(t1.money_date),case when t2.flag in(1,2) then '取消航班'
when t2.flag=0 then '正常航班'
 end ,
case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '非BGO' end ,
case when t3.flights_order_id is not null then '套票'
when t1.money_fy = 0 then '0元退票'
when t1.money_fy > 0 then '正常退票' end ,
case when t4.province||t5.province  like '%辽宁%' then '疫情地区'
when  t4.province||t5.province  like '%黑龙江%' then '疫情地区'
when   t4.province||t5.province  like '%河北%' then '疫情地区'
when   t4.province||t5.province  like '%吉林%' then '疫情地区'
when   t4.province||t5.province  like '%上海%' then '疫情地区'
else '其他地区' end ,

case when  trunc(t1.origin_std) < to_date('2021-01-28','yyyy-mm-dd') then '春运前'
when trunc(t1.origin_std) >=to_date('2021-02-09','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-02-19','yyyy-mm-dd') then '春节0209~0219'
when trunc(t1.origin_std) >=to_date('2021-01-28','yyyy-mm-dd')
      and trunc(t1.origin_std) <=to_date('2021-03-08','yyyy-mm-dd') then '春运其他日期'
when trunc(t1.origin_std) > to_date('2021-03-08','yyyy-mm-dd')
and trunc(t1.origin_std) <=to_date('2021-03-31','yyyy-mm-dd')
then '春运后3月'
when trunc(t1.origin_std) >=to_date('2021-04-01','yyyy-mm-dd')
and trunc(t1.origin_std) < =to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月'
when trunc(t1.origin_std) > to_date('2021-04-30','yyyy-mm-dd')
then '2021年4月以后' end ,
replace(replace(t6.wf_segment,'浦东','上海'),'虹桥','上海'),
case when t1.origin_std-t1.money_date < =0 then '离站后'
when t1.origin_std-t1.money_date <=0.5 then '（0,12H]'
when t1.origin_std-t1.money_date <=1 then '（12,24H]'
when t1.origin_std-t1.money_date <=3 then '（1,3D]'
when t1.origin_std-t1.money_date <=7 then '（3,7D]'
when t1.origin_std-t1.money_date <=15 then '（7,15D]'
when t1.origin_std-t1.money_date <=30 then '（15,30D]'
when t1.origin_std-t1.money_date <=60 then '（30,60D]'
when t1.origin_std-t1.money_date > 60 then '60+' end;




--------=============================================================20210122======================================================
 ------235、上海进出港航线数据
--帮忙提取下1月22日到2月28日的上海进出航班的人数及涉及金额的数据。目前已售票和已出票状态的

select t1.r_flights_date,count(1),suM((t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurance_fee+t1.other_fee+t1.other_fy)*t1.r_com_rate)
 from stg.s_cq_order_head t1
 where t1.r_flights_date>=to_date('2021-01-22','yyyy-mm-dd')
   and t1.r_flights_date<=to_date('2021-02-28','yyyy-mm-dd')
   and regexp_like(t1.whole_segment,'(PVG)|(SHA)')
   and t1.flag_id in(3,5,40,41)
   and t1.whole_flight like '9C%'
   and t1.seats_name is not null 
   group by t1.r_flights_date;

 ------236、短信限制

SELECT t1.mobile,t1.memo,t2.cust_id,t2.reg_date,t3.feature_value
  from cqsale.CQ_MOBILE_NO_SMS@to_air  t1
  left join dw.da_lyuser t2 on t1.mobile=t2.login_id
  left join dw.da_restrict_userinfo t3 on t1.mobile=t3.mobile;


---手机号、总订票量、订票人联系方式订票量、乘机人联系方式订票量

  SELECT t1.mobile,t2.ticketnum,t3.ticket_num2,t4.ticket_num3
  from cqsale.CQ_MOBILE_NO_SMS@to_air  t1
  left join dw.fact_mobile_statistics t2  on t1.mobile=t2.mobile
  left join(select getmobile(tt1.work_tel) worktel,count(1) ticket_num2
              from stg.s_cq_order tt1
              join stg.s_cq_order_head tt2 on tt1.flights_order_id=tt2.flights_order_id
              where tt1.order_date>=trunc(sysdate)-365
                and tt1.order_date< trunc(sysdate)
                and tt2.flag_id in(3,5,40,7,11,12)
                and tt1.r_company_id=0
                and getmobile(tt1.work_tel)<>'-'
                group by getmobile(tt1.work_tel)              
              )t3 on t1.mobile=t3.worktel
  left join (select getmobile(tt2.r_tel) r_tel,count(1) ticket_num3
              from stg.s_cq_order tt1
              join stg.s_cq_order_head tt2 on tt1.flights_order_id=tt2.flights_order_id
              where tt1.order_date>=trunc(sysdate)-365
                and tt1.order_date< trunc(sysdate)
                and tt2.flag_id in(3,5,40,7,11,12)
                and tt1.r_company_id=0
                and getmobile(tt2.r_tel)<>'-'
                group by getmobile(tt2.r_tel)) t4 on t4.r_tel=t1.mobile;

 ------237、河北省退票损失

select trunc(t1.money_date),t2.flights_segment_name,count(1),
sum((t3.ticket_price+t3.ad_fy+t3.port_pay+t3.other_fy+t3.insurance_fee+t3.other_fee)*nvl(t3.r_rate,1))
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join stg.s_cq_order_head t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.money_date>=to_date('2021-01-06','yyyy-mm-dd')
   and t1.money_date< to_date('2021-01-12','yyyy-mm-dd')
   and regexp_like(t2.segment_code,'SHP|SJW|TVS|HDG|ZQZ|XJB|CDE|BAD|HSU|BPE|DZB|AGB|XNT')
   group by trunc(t1.money_date),t2.flights_segment_name;

 
 ------238、


select T1.FLIGHT_DATE,SUM(T1.OVERSALE),SUM(CASE WHEN T1.FLAG IN(1,2) THEN T1.OVERSALE ELSE 0 END)
 from dw.da_flight t1 
 where t1.flight_date>=to_date('2021-01-01','yyyy-mm-dd')
 and t1.flight_date< trunc(sysdate)+7
 and exists(select 1
 from dw.fact_recent_order_detail t2
 where t2.segment_head_id=t1.segment_head_id
 and t2.flights_date>=to_date('2021-01-01','yyyy-mm-dd'))
 AND T1.COMPANY_ID=0
 GROUP BY T1.FLIGHT_DATE
 
 UNION ALL
 
 select T1.FLIGHT_DATE,SUM(T1.OVERSALE),SUM(CASE WHEN T1.FLAG IN(1,2) THEN T1.OVERSALE ELSE 0 END)
 from dw.da_flight t1 
 where t1.flight_date>=trunc(sysdate)+7
 and t1.flight_date< TO_DATE('2021-05-01','YYYY-MM-DD')
 and exists(select 1
 from dw.fact_recent_order_detail t2
 where t2.segment_head_id=t1.segment_head_id
 and t2.flights_date>=to_date('2021-01-01','yyyy-mm-dd'))
 AND T1.COMPANY_ID=0
 GROUP BY T1.FLIGHT_DATE
 


---计算正常情况下退票、重购、预订的过程


select hb1.flights_date,hb1.aheads,sum(ticketnum),sum(zgnum),suM(tuinum),
sum(sum(ticketnum))over(partition by hb1.flights_date order by hb1.aheads desc),
sum(sum(zgnum))over(partition by hb1.flights_date order by hb1.aheads desc),
sum(sum(tuinum))over(partition by hb1.flights_date order by hb1.aheads desc)
from(
select h1.flights_date,/*h1.segment_head_id,h2.oversale,*/
case when h1.flights_date-h1.order_day<=0 then '00'
  when  h1.flights_date-h1.order_day<=60 then trim(to_char(h1.flights_date-h1.order_day,'00'))
  else '60+' end aheads,count(1) ticketnum,count(distinct h4.flights_order_head_id) zgnum
  from dw.fact_order_detail h1
  join dw.da_flight h2 on h1.segment_head_id=h2.segment_Head_id
  left join dw.dim_segment_type h3 on h2.route_Id=h3.route_Id and h2.h_route_id=h3.h_route_id
  left join (SELECT t1.flights_order_head_id,count(1)
  from dw.fact_order_detail t1,
   dw.da_order_drawback t2,
   dw.da_flight t3
   where t1.codeno=t2.codeno
   and t1.traveller_name=t2.sname
   and t2.segment_head_id=t3.segment_head_id
   and t1.whole_segment=t3.segment_code
   and t1.order_date>=t2.money_date
   and t1.flights_date>=trunc(t2.origin_std)-7
   and t1.flights_date<=trunc(t2.origin_std)+7
   and t1.flights_date>=to_date('2020-12-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   group by t1.flights_order_head_id)h4 on h1.flights_order_head_id=h4.flights_order_head_id
 where h1.flights_date>=to_date('2020-12-01','yyyy-mm-dd')
   and h1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and h1.seats_name is not null
   group by h1.flights_date,/*h1.segment_head_id,h2.oversale,*/
case when h1.flights_date-h1.order_day<=0 then '00'
  when  h1.flights_date-h1.order_day<=60 then trim(to_char(h1.flights_date-h1.order_day,'00'))
  else '60+' end)hb1
  left join (select trunc(t1.origin_std) flightsdate,/*t1.segment_head_id,*/
  case when trunc(t1.origin_std)-trunc(t1.money_date)<=0 then '00'
  when  trunc(t1.origin_std)-trunc(t1.money_date)<=60 then trim(to_char(trunc(t1.origin_std)-trunc(t1.money_date),'00'))
  else '60+' end aheads,count(1) tuinum
  from dw.da_order_drawback t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
   where trunc(t1.origin_std)>=to_date('2020-12-01','yyyy-mm-dd')
    and t1.money_date< to_date('2021-01-01','yyyy-mm-dd')
    and t1.seats_name is not null
  group by trunc(t1.origin_std) ,/*t1.segment_head_id,*/
  case when trunc(t1.origin_std)-trunc(t1.money_date)<=0 then '00'
  when  trunc(t1.origin_std)-trunc(t1.money_date)<=60 then trim(to_char(trunc(t1.origin_std)-trunc(t1.money_date),'00'))
  else '60+' end )hb2 on /*hb1.segment_head_id=hb2.segment_head_id and */hb1.flights_date=hb2.flightsdate and hb1.aheads=hb2.aheads
  group by  hb1.flights_date,hb1.aheads;
  
 
 ---========================================================20210125========================================================================
 ------239、2018~2020年商务经济座均价

select to_char(flight_date,'yyyy'),avg(t1.ticket_price)
from dw.bi_superseat_detail t1
where flight_date>=to_date('2018-01-01','yyyy-mm-dd')
  and flight_date< to_date('2021-01-01','yyyy-mm-dd')
group by to_char(flight_date,'yyyy');

---2019年:843;2020年：713；2021年603

------240、民航局1月26日免费退改规则政策影响


select /*+leading(t1)*/
'退票' 类型,trunc(t1.money_date) 申请日期,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.money_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end 申请日期类型,
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd')
             and t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.money_date>=7 then '符合规则' 
             else '不符合规则' end 是否符合免退改规则,
           case when t1.money_fy=0 then '免费'
           else '付费' end 是否免费,
           count(1) 机票量,
           sum(t1.money_fy) 手续费,
           sum((t3.ticket_price+t3.ad_fy+t3.port_pay+t3.other_fy+t3.other_fee+t3.insurance_fee)*t3.r_com_rate)  票款            
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join stg.s_cq_order_head t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.money_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.money_date< to_date('2021-01-26','yyyy-mm-dd')
   and t2.company_id=0
   group by trunc(t1.money_date) ,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.money_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end ,
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd')
             and t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.money_date>=7 then '符合规则' 
             else '不符合规则' end,
           case when t1.money_fy=0 then '免费'
           else '付费' end
  
 union all
 
 
 select /*+leading(t1)*/
'改签' 类型,trunc(t1.modify_date) 申请日期,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.modify_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end 申请日期类型,
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.modify_date>=7 then '符合规则' 
             else '不符合规则' end,
           case when t1.money_fy=0 then '免费'
           else '付费' end,
           count(1),
           sum(t1.money_fy*t1.rate),
           sum((t3.ticket_price+t3.ad_fy+t3.port_pay+t3.other_fy+t3.other_fee+t3.insurance_fee)*t3.r_com_rate)              
 from dw.da_order_change t1
 join dw.da_flight t2 on t1.old_segment_id=t2.segment_head_id
 left join stg.s_cq_order_head t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.modify_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.modify_date< to_date('2021-01-26','yyyy-mm-dd')
   and t2.company_id=0
   group by trunc(t1.modify_date) ,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.modify_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end ,
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.modify_date>=7 then '符合规则' 
             else '不符合规则' end,
           case when t1.money_fy=0 then '免费'
           else '付费' end;

--使用dw.fact_recent_order_detail表
--- 当日退票统计

select /*+leading(t1)*/
'退票' 类型,trunc(t1.money_date) 申请日期,case when t1.money_terminal<0 then 'B2C'
else 'B2B' end 退票渠道,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end 是否春运,
       case when t1.money_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end 申请日期类型,
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd')
             and t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.money_date>=7 then '符合规则' 
             else '不符合规则' end 是否符合免退改规则,
           case when t1.money_fy=0 then '免费'
           else '付费' end 是否免费,
           count(1) 机票量,
           sum(t1.money_fy) 手续费,
           sum((t3.ticket_price+t3.ad_fy+t3.port_pay+t3.other_fy+t3.other_fee+t3.insurance_fee)*t3.r_com_rate)  票款            
 from dw.da_order_drawback_today t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join stg.s_cq_order_head t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.money_date>=trunc(sysdate)
   and t2.company_id=0
   group by trunc(t1.money_date) ,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.money_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end ,
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd')
             and t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.money_date>=7 then '符合规则' 
             else '不符合规则' end,
           case when t1.money_fy=0 then '免费'
           else '付费' end,
           case when t1.money_terminal<0 then 'B2C'
else 'B2B' end
  
 union all
 
 
 select /*+leading(t1)*/
'改签' 类型,trunc(t1.modify_date) 申请日期,case when t1.users_id<=0 then 'B2C'
else 'B2B' end,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.modify_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end 申请日期类型,
      case when t4.flights_order_head_id is null then 
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.modify_date>=7 then '符合规则' 
             else '不符合规则' end
           else '不符合规则' end,
           case when t1.money_fy=0 then '免费'
           else '付费' end,
           count(1),
           sum(t1.money_fy*t1.rate),
           sum((t3.ticket_price+t3.ad_fy+t3.port_pay+t3.other_fy+t3.other_fee+t3.insurance_fee)*t3.r_com_rate)              
 from dw.da_order_change_today t1
 join dw.da_flight t2 on t1.old_segment_id=t2.segment_head_id
 left join stg.s_cq_order_head t3 on t1.flights_order_head_id=t3.flights_order_head_id
 left join(select h1.flights_order_head_id,count(1)
from(
select *
 from dw.da_order_change_today t1
 where t1.old_origin_std>=to_date('2021-01-28','yyyy-mm-dd')
   and t1.old_origin_std< to_date('2021-03-09','yyyy-mm-dd')
 union all
 select *
 from dw.da_order_change t1
  where t1.old_origin_std>=to_date('2021-01-28','yyyy-mm-dd')
   and t1.old_origin_std< to_date('2021-03-09','yyyy-mm-dd')
 )h1
 group by h1.flights_order_head_id
 having count(1)>1) t4 on t1.flights_order_head_id=t4.flights_order_head_id
 where t1.modify_date>=trunc(sysdate)
   and t2.company_id=0
   group by trunc(t1.modify_date) ,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.modify_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end ,
       case when t4.flights_order_head_id is null then 
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.modify_date>=7 then '符合规则' 
             else '不符合规则' end
           else '不符合规则' end,
           case when t1.money_fy=0 then '免费'
           else '付费' end,case when t1.users_id<=0 then 'B2C'
else 'B2B' end;
   
   
  -------------当日退改签明细数据

select /*+leading(t1)*/
t3.r_flights_date,t3.r_order_date,t1.money_date,t1.flights_order_id,
'退票' 类型,trunc(t1.money_date) 申请日期,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.money_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end 申请日期类型,
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd')
             and t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.money_date>=7 then '符合规则' 
             else '不符合规则' end 是否符合免退改规则,
           case when t1.money_fy=0 then '免费'
           else '付费' end 是否免费,
           count(1) 机票量,
           sum(t1.money_fy) 手续费,
           sum((t3.ticket_price+t3.ad_fy+t3.port_pay+t3.other_fy+t3.other_fee+t3.insurance_fee)*t3.r_com_rate)  票款            
 from dw.da_order_drawback_today t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join stg.s_cq_order_head t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.money_date>=trunc(sysdate)
   and t2.company_id=0
   group by trunc(t1.money_date) ,t3.r_flights_date,t3.r_order_date,t1.money_date,t1.flights_order_id,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.money_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end ,
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd')
             and t1.money_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.money_date>=7 then '符合规则' 
             else '不符合规则' end,
           case when t1.money_fy=0 then '免费'
           else '付费' end
  
 union all
 
 
 select /*+leading(t1)*/
 t3.r_flights_date,t3.r_order_date,t1.modify_date,t1.flights_order_id,
'改签' 类型,trunc(t1.modify_date) 申请日期,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.modify_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end 申请日期类型,
      case when t4.flights_order_head_id is null then 
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.modify_date>=7 then '符合规则' 
             else '不符合规则' end
           else '不符合规则' end,
           case when t1.money_fy=0 then '免费'
           else '付费' end,
           count(1),
           sum(t1.money_fy*t1.rate),
           sum((t3.ticket_price+t3.ad_fy+t3.port_pay+t3.other_fy+t3.other_fee+t3.insurance_fee)*t3.r_com_rate)              
 from dw.da_order_change_today t1
 join dw.da_flight t2 on t1.old_segment_id=t2.segment_head_id
 left join stg.s_cq_order_head t3 on t1.flights_order_head_id=t3.flights_order_head_id
 left join(select h1.flights_order_head_id,count(1)
from(
select *
 from dw.da_order_change_today t1
 where t1.old_origin_std>=to_date('2021-01-28','yyyy-mm-dd')
   and t1.old_origin_std< to_date('2021-03-09','yyyy-mm-dd')
 union all
 select *
 from dw.da_order_change t1
  where t1.old_origin_std>=to_date('2021-01-28','yyyy-mm-dd')
   and t1.old_origin_std< to_date('2021-03-09','yyyy-mm-dd')
 )h1
 group by h1.flights_order_head_id
 having count(1)>1) t4 on t1.flights_order_head_id=t4.flights_order_head_id
 where t1.modify_date>=trunc(sysdate)
   and t2.company_id=0
   group by trunc(t1.modify_date) , t3.r_flights_date,t3.r_order_date,t1.modify_date,t1.flights_order_id,
       case when t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') then '0128~0308'
             else '其他航班日期' end,
       case when t1.modify_date< to_date('2021-01-27','yyyy-mm-dd') then '0127前提出'
            when t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '0127后提出' end ,
       case when t4.flights_order_head_id is null then 
       case when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-01-28','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-02-03','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') then '符合规则'
            when t3.r_order_date< to_date('2021-01-27','yyyy-mm-dd')
             and t2.flight_date>=to_date('2021-02-04','yyyy-mm-dd')
             and t2.flight_date<=to_date('2021-03-08','yyyy-mm-dd') and 
             t1.modify_date>= to_date('2021-01-27','yyyy-mm-dd') 
             and t2.origin_std-t1.modify_date>=7 then '符合规则' 
             else '不符合规则' end
           else '不符合规则' end,
           case when t1.money_fy=0 then '免费'
           else '付费' end;

----=====================================================20210128========================================================
 ------241、2019年春运上海进出港人数

 --2019年1月21日-3月1日
select t1.flights_date,case when t2.flights_city_name like '上海%' then '上海出港'
when t2.flights_city_name like '%上海' then '上海进港' end,
count(1)
 from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
 where t2.flag <> 2
   and t1.flights_date >= to_date('2019-01-21', 'yyyy-mm-dd')
   and t1.flights_date <= to_date('2019-03-01', 'yyyy-mm-dd')
   and t1.company_id = 0
   and t1.seats_name is not NULL
   and t1.flag_id=40
   and t2.flights_city_name like '%上海%'
   group by t1.flights_date,case when t2.flights_city_name like '上海%' then '上海出港'
when t2.flights_city_name like '%上海' then '上海进港' end;

 ------242、

--1. 退票率 2. 退票场景下 有损和无损退票的比例（无损是指给旅客未收手续费的部分） 3. 有损退票场景下，旅客平均退票损失金额\

select to_char(t1.r_flights_date,'yyyy') 航班年,to_char(t1.r_flights_date,'yyyymm') 航班年月,
       count(1) ticketnum,
       count(t3.flights_order_head_id) tuinum,
       sum(case when t2.flag=2 and t3.money_fy=0 then 1 else 0 end) canclenum,
       sum(case when t3.money_fy=0 then 1 else 0 end) zeronum,
       sum(t3.money_fy)
from stg.s_cq_order_head t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
left join dw.da_order_drawback t3 on t1.flights_order_head_id=t3.flights_order_head_id
where t1.r_flights_date>=to_date('2018-01-01','yyyy-mm-dd')
  and t1.r_flights_date< to_date('2021-01-01','yyyy-mm-dd')
  and t1.flag_id in(3,5,40,41,7,11,12)
  and t1.seats_name is not null
  and t1.whole_flight like '9C%'
  group by to_char(t1.r_flights_date,'yyyy') ,to_char(t1.r_flights_date,'yyyymm');
  
----===========================================================================20210129=====================================================
 ------243、 航班日期、航段、当前在售最低价格、计划数、散客计划数、散客销量
 
 select t1.segment_head_id,t1.flight_date,t1.flight_no,t1.segment_code,t1.flights_segment_name,t3.wf_segment,
t5.min_price,t1.oversale,t1.oversale-t1.bgo_plan+t1.o_plan,t4.ticketnum
 from dw.da_flight t1
 left join dw.dim_segment_type t3 on t1.h_route_id=t3.h_route_id and t1.route_id=t3.route_id
 left join(select t2.segment_head_id,count(1) ticketnum
              from cqsale.cq_order_head@to_air t2 
              where t2.r_flights_date >= to_date('2021-02-01','yyyy-mm-dd')
                 and t2.r_flights_date<   to_date('2021-03-28','yyyy-mm-dd')
                 and t2.flag_id in(3,5,40)
                 and t2.seats_name is not null
                 and t2.seats_name not in('B','G','G1','G2')
                 group by t2.segment_head_id) t4 on t1.segment_head_id=t4.segment_head_id
  left join (select hb1.segment_head_id,hb1.flight_date,hb1.flights_segment,hb1.flight_no,hb1.flights_segment_name,min(cabin_price) min_price
from(
select h1.segment_head_id,
       h1.seats_name ,
       h1.money ,
       h2.remnant ,
       trunc(h3.origin_std) flight_date ,
       h3.flights_segment ,
       h3.r_flights_no flight_no ,
       h4.flights_segment_name,
       h7.sub_cabin,
       case when h7.sub_cabin is not null then h7.sub_cabin
       else h1.money end cabin_price
  from (select *
          from (select segment_head_id,
                       MONEY_E,
MONEY_H,
MONEY_I,
MONEY_K,
MONEY_L,
MONEY_M,
MONEY_N,
MONEY_P,
MONEY_P1,
MONEY_P2,
MONEY_P3,
MONEY_P4,
MONEY_P5,
MONEY_Q,
MONEY_R1,
MONEY_R2,
MONEY_R3,
MONEY_R4,
MONEY_S,
MONEY_T,
MONEY_U,
MONEY_V,
MONEY_X,
MONEY_Y                       
from cqsale.cq_flights_segment_head@to_air) unpivot(money for seats_name in (MONEY_E as 'E',
MONEY_H as 'H',
MONEY_I as 'I',
MONEY_K as 'K',
MONEY_L as 'L',
MONEY_M as 'M',
MONEY_N as 'N',
MONEY_P as 'P',
MONEY_P1 as 'P1',
MONEY_P2 as 'P2',
MONEY_P3 as 'P3',
MONEY_P4 as 'P4',
MONEY_P5 as 'P5',
MONEY_Q as 'Q',
MONEY_R1 as 'R1',
MONEY_R2 as 'R2',
MONEY_R3 as 'R3',
MONEY_R4 as 'R4',
MONEY_S as 'S',
MONEY_T as 'T',
MONEY_U as 'U',
MONEY_V as 'V',
MONEY_X as 'X',
MONEY_Y as 'Y'
))
                  ) h1
  join (select *
          from (select segment_head_id,
                       REMNANT_E,
REMNANT_H,
REMNANT_I,
REMNANT_K,
REMNANT_L,
REMNANT_M,
REMNANT_N,
REMNANT_P,
REMNANT_P1,
REMNANT_P2,
REMNANT_P3,
REMNANT_P4,
REMNANT_P5,
REMNANT_Q,
REMNANT_R1,
REMNANT_R2,
REMNANT_R3,
REMNANT_R4,
REMNANT_S,
REMNANT_T,
REMNANT_U,
REMNANT_V,
REMNANT_X,
REMNANT_Y
from cqsale.cq_flights_seats_amount@to_air) unpivot(remnant for seats_name in (REMNANT_E AS 'E',
REMNANT_H AS 'H',
REMNANT_I AS 'I',
REMNANT_K AS 'K',
REMNANT_L AS 'L',
REMNANT_M AS 'M',
REMNANT_N AS 'N',
REMNANT_P AS 'P',
REMNANT_P1 AS 'P1',
REMNANT_P2 AS 'P2',
REMNANT_P3 AS 'P3',
REMNANT_P4 AS 'P4',
REMNANT_P5 AS 'P5',
REMNANT_Q AS 'Q',
REMNANT_R1 AS 'R1',
REMNANT_R2 AS 'R2',
REMNANT_R3 AS 'R3',
REMNANT_R4 AS 'R4',
REMNANT_S AS 'S',
REMNANT_T AS 'T',
REMNANT_U AS 'U',
REMNANT_V AS 'V',
REMNANT_X AS 'X',
REMNANT_Y AS 'Y'))) h2 on h1.segment_head_id =  h2.segment_head_id    and h1.seats_name = h2.seats_name
  join cqsale.cq_flights_segment_head@to_air h3 on h1.segment_head_id =  h3.segment_head_id
  join cqsale.cq_flights_seats_amount@to_air h5 on h1.segment_head_id=h5.segment_head_id
  left join dw.da_flight h4 on h1.segment_head_id = h4.segment_head_id
  left join (
  select h6.segment_head_id,h6.main_cabin,max(h6.sub_cabin_price) sub_cabin
from stg.s_CQ_SUB_CABIN_SEGMENT_HEAD h6
where h6.state=1
group by h6.segment_head_id,h6.main_cabin)h7 on h1.segment_head_id=h7.segment_head_id and h1.seats_name=h7.main_cabin
 where h3.origin_std >= to_date('2021-02-01','yyyy-mm-dd')
   and h3.origin_std<   to_date('2021-03-28','yyyy-mm-dd')
   and h2.remnant > 0
   and h3.flag <> 2
   and h3.nation_flag=1
   and h3.r_flights_no like '9C%'
   and h1.seats_name not in('P2','P5','P3','P4','A','D','Z','I','J','O'))hb1
   group by hb1.segment_head_id,hb1.flight_date,hb1.flights_segment,hb1.flight_no,hb1.flights_segment_name 
   
) t5 on t1.segment_head_id=t5.segment_head_id
 where t1.flag=0
 and t1.flight_date>=to_date('2021-02-01','yyyy-mm-dd')
 and t1.flight_date<= to_date('2021-03-27','yyyy-mm-dd')
 and t1.company_id=0
 and t1.nationflag='国内';


----==================================================================20210201========================================================
 ------244、退票重购数据

 select order_day,sum(t1.tkt_num_between3),sum(t1.tkt_num_between7),suM(t1.tkt_num_between14),sum(t1.tkt_num_between30)
 from dw.tw_back_rebuy t1
 where t1.order_day>=trunc(sysdate)-30
  and IS_SAME_SEGMENT=1
 group by order_day;


 ------245、人员数据查询

 select t1.r_flights_date,t1.ticket_price,t1.ad_fy,t1.port_pay,t1.name,t.web_id,t1.other_fy,t1.other_fee,t1.insurance_fee
 from stg.s_cq_order_head t1
 join cqsale.cq_order@to_air t on t1.flights_order_id=t.flights_order_id
 where t1.name||coalesce(t1.second_name,'') in('张小霞','罗玉楼')
 and t1.flag_id in(7,11,12)
 and t1.r_flights_date>=trunc(sysdate)-7
 and t1.flights_order_id='WXVYCJ';



 ------246、退票数据监控

select trunc(t1.money_date) 退票日期,
case when trunc(t1.money_date)<=to_date('2020-12-21','yyyy-mm-dd') then '12月21日之前'
            when trunc(t1.money_date)>=to_date('2020-12-22','yyyy-mm-dd')  
            and trunc(t1.money_date)<=to_date('2021-01-03','yyyy-mm-dd') then '1222~0103'
            when trunc(t1.money_date)>=to_date('2021-01-04','yyyy-mm-dd')  
            and trunc(t1.money_date)<=to_date('2021-01-20','yyyy-mm-dd') then '0104~0120'
            when trunc(t1.money_date)>=to_date('2021-01-21','yyyy-mm-dd')  
            and trunc(t1.money_date)<=to_date('2021-01-31','yyyy-mm-dd') then '0121~0131' end 日期类型,
case when t2.flag in(1,2) and t1.money_fy=0 then '取消航班'
when t1.money_fy=0 then '特殊情况退票'
else  '正常退票' end 退票类型,
case when t1.origin_std-t1.money_date < =0 then '离站后'
when t1.origin_std-t1.money_date <=0.5 then '（0,12H]'
when t1.origin_std-t1.money_date <=1 then '（12,24H]'
when t1.origin_std-t1.money_date <=3 then '（1,3D]'
when t1.origin_std-t1.money_date <=7 then '（3,7D]'
when t1.origin_std-t1.money_date <=15 then '（7,15D]'
when t1.origin_std-t1.money_date <=30 then '（15,30D]'
when t1.origin_std-t1.money_date <=60 then '（30,60D]'
when t1.origin_std-t1.money_date > 60 then '60+' end 退票提前期分布,
case when trunc(t1.origin_std)>=to_date('2021-01-28','yyyy-mm-dd')
       and trunc(t1.origin_std)<=to_date('2021-03-08','yyyy-mm-dd') then '春运'
 when trunc(t1.origin_std)< to_date('2021-01-28','yyyy-mm-dd') then '春运前'
  when trunc(t1.origin_std)> to_date('2021-03-08','yyyy-mm-dd') then '春运后' end 航班日期分类,  

sum(case when t2.flights_city_name like '%上海%' then 1 else 0 end) shanum,
sum(case when t2.flights_city_name like '%石家庄%' then 1 else 0 end) swjnum,
sum(case when t2.flights_city_name like '%沈阳%' then 1 else 0 end) shenum,
sum(case when t2.flights_city_name like '%揭阳%' then 1 else 0 end) swanum,
sum(case when t2.flights_city_name like '%扬州%' then 1 else 0 end) ytynum,
sum(case when t2.flights_city_name like '%深圳%' then 1 else 0 end) szxnum,
sum(case when t2.flights_city_name like '%兰州%' then 1 else 0 end) lhwnum,
sum(case when t2.flights_city_name like '%宁波%' then 1 else 0 end) ngonum,
count(1) 退票量,
sum(t1.money_fy) 退票金额
  from dw.da_order_drawback t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.fact_combo_ticket t3 on t1.flights_order_head_Id=t3.flights_order_head_Id
  left join dw.dim_segment_type t6 on t2.h_route_id=t6.h_route_id and t2.route_id=t6.route_id
  left join dw.bi_order_region t7 on t1.flights_order_head_id=t7.flights_order_head_id
  --left join dw.fact_orderhead_trippurpose@to_ods t8 on t1.flights_order_head_id=t8.flights_order_head_id
  where t1.money_date>=to_date('2020-12-01','yyyy-mm-dd')
    and t1.money_date< to_date('2021-02-01','yyyy-mm-dd')
    and t1.seats_name is not null
    group by trunc(t1.money_date) ,
case when trunc(t1.money_date)<=to_date('2020-12-21','yyyy-mm-dd') then '12月21日之前'
            when trunc(t1.money_date)>=to_date('2020-12-22','yyyy-mm-dd')  
            and trunc(t1.money_date)<=to_date('2021-01-03','yyyy-mm-dd') then '1222~0103'
            when trunc(t1.money_date)>=to_date('2021-01-04','yyyy-mm-dd')  
            and trunc(t1.money_date)<=to_date('2021-01-20','yyyy-mm-dd') then '0104~0120'
            when trunc(t1.money_date)>=to_date('2021-01-21','yyyy-mm-dd')  
            and trunc(t1.money_date)<=to_date('2021-01-31','yyyy-mm-dd') then '0121~0131' end,
case when t2.flag in(1,2) and t1.money_fy=0 then '取消航班'
when t1.money_fy=0 then '特殊情况退票'
else  '正常退票' end ,
case when t1.origin_std-t1.money_date < =0 then '离站后'
when t1.origin_std-t1.money_date <=0.5 then '（0,12H]'
when t1.origin_std-t1.money_date <=1 then '（12,24H]'
when t1.origin_std-t1.money_date <=3 then '（1,3D]'
when t1.origin_std-t1.money_date <=7 then '（3,7D]'
when t1.origin_std-t1.money_date <=15 then '（7,15D]'
when t1.origin_std-t1.money_date <=30 then '（15,30D]'
when t1.origin_std-t1.money_date <=60 then '（30,60D]'
when t1.origin_std-t1.money_date > 60 then '60+' end,
case when trunc(t1.origin_std)>=to_date('2021-01-28','yyyy-mm-dd')
       and trunc(t1.origin_std)<=to_date('2021-03-08','yyyy-mm-dd') then '春运'
 when trunc(t1.origin_std)< to_date('2021-01-28','yyyy-mm-dd') then '春运前'
  when trunc(t1.origin_std)> to_date('2021-03-08','yyyy-mm-dd') then '春运后' end;


 ------247、

--联系不到旅客的用户屏蔽数据

create table anl.temp_feng_0203 
(flightdate varchar2(100),
 flightno varchar2(100),
 order_id varchar2(100)
);


select t1.order_id,t1.flightdate,t1.flightno,t2.flights_date,t2.whole_flight,t2.channel,t2.sub_channel,
t2.work_tel,t2.r_tel,t4.flag_name,t2.traveller_name,t2.change_flag,
case when getmobile(t2.work_tel)='-' and getmobile(t2.r_tel)='-' then '填写非手机号码'
when t5.id is not null and t6.id is not null then '手机号屏蔽短信'
when substr(getmobile(t2.work_tel), 1, 3) NOT in ('133', '149', '153', '173', '174', '177', '180', '181', '189', 
 '199', '130', '131', '132', '145', '146', '155', '156', '166', '171', '175', '176', '185', '186', '134', '135',
  '136', '137', '138', '139', '147', '148', '150', '151', '152', '157', '158', '159', '172', '178', '182', '183', 
  '184', '187', '188', '198', '170', '141', '144') and  
 substr(getmobile(t2.r_tel), 1, 3) NOT in ('133', '149', '153', '173', '174', '177', '180', '181', '189', 
 '199', '130', '131', '132', '145', '146', '155', '156', '166', '171', '175', '176', '185', '186', '134', '135',
  '136', '137', '138', '139', '147', '148', '150', '151', '152', '157', '158', '159', '172', '178', '182', '183', 
  '184', '187', '188', '198', '170', '141', '144') then '非手机号'
  else '可联系' end
 from anl.temp_feng_0203@to_dds t1
 left join dw.fact_recent_order_detail t2 on t1.order_id=t2.flights_order_id /*and to_date(t1.flightdate,'yyyy-mm-dd')=t2.flights_date*/
 left join dw.da_restrict_userinfo t3 on t2.client_id=t3.users_id
 left join stg.s_cq_order_head_flag t4 on t2.flag_id=t4.flag
 left join stg.s_CQ_MOBILE_NO_SMS t5 on getmobile(t2.work_tel)=t5.mobile
 left join stg.s_cq_mobile_no_sms t6 on getmobile(t2.r_tel)=t6.mobile;


 ------248、柬埔寨航班-2020年是否有

select distinct t1.flight_date,t1.segment_country,t1.flights_segment_name,t2.boardnum
 from dw.da_flight t1
 join dw.da_main_order t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flight_date>=to_date('20190101','yyyymmdd')
 and t1.flag=0
 and t1.segment_country='柬埔寨'
 and t1.flight_date< to_date('20210101','yyyymmdd');

------------------=================================================20210218=================================================================================
-------249、


select trunc(t.order_date) 日期,
       case
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 <= 1 then
          '网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 = 2 then
          'm网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (3, 8) then
          'IOS'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (4, 9) then
          '安卓'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (5, 10) then
          '微信'
         else
          '其他'
       end,
       case
         when t.terminal_id < 0 and t.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'
          when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate =15 then
          '商旅卡'
         when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate in ( 29, 31) then
          '易宝支付'
         when t.terminal_id < 0 and t.web_id = 0 then
          '线上纯量'
         else
          '其他'
       end,
       case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end,
       count(1) 票量
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_air t1 on t.flights_order_id =t1.flights_order_id
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo t5 on t.client_id = t5.users_id
  left join (select flights_order_head_id,
                    nvl(is_beneficiary, 0) is_beneficiary,
                    youhui_result
               from cust.cq_order_youhui_detail@to_air
              where product_type = 0
                and yh_ret_time is null
                and youhui_result is not null
                and youhui_id in (1129, 1137)
                and create_date >= trunc(sysdate) - 30) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id
 where t.order_date >= trunc(sysdate) - 7
   and t.order_date < sysdate
   and t1.r_flights_date >= trunc(sysdate - 7) - 7
   and t2.flag <> 2
   and trunc(t.order_date) in(trunc(sysdate),trunc(sysdate)-1)
   and to_char(t.order_date,'hh24:mi')<='16:14'
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9c%'
 group by trunc(t.order_date) ,
       case
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 <= 1 then
          '网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 = 2 then
          'm网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (3, 8) then
          'IOS'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (4, 9) then
          '安卓'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (5, 10) then
          '微信'
         else
          '其他'
       end,
       case
         when t.terminal_id < 0 and t.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'
          when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate =15 then
          '商旅卡'
         when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate in ( 29, 31) then
          '易宝支付'
         when t.terminal_id < 0 and t.web_id = 0 then
          '线上纯量'
         else
          '其他'
       end,
       case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end
      
 --=====================================================20210220=====================================================================================================
 ------250、通过姓名查找相应的乘机记录

select *
 from cqsale.cq_order_head t1
 where upper(replace(t1.name||coalesce(t1.second_name,''),' ','')) in('WANGFUCUN','LEQUYNHNHU')
 and t1.r_flights_date>=trunc(sysdate)-365*3


 ------251、删除相应的代理账号

 select /*t1.*,t2.status,t3.feature_name,t3.feature_memo */ count(1）
   from cqsale.CQ_BLACK_FEATURE_RULE_DETAIL@to_air t1
   left join cqsale.CQ_BLACK_FEATURE_RULE@to_air t2 on t1.feature_rule_id=t2.id
   left join cqsale.CQ_BLACK_FEATURE@to_air t3 on t1.feature_id=t3.id
   where t1.feature_id=5;

--================================================================================20210224======================================================
-------252、每日已乘机人数

select t1.r_flights_date,count(1)
 from cqsale.cq_order_head t1
 where t1.r_flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.r_flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and t1.flag_id =40
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
   group by t1.r_flights_date;


 ------253、4个OTA乘机人联系方式是否有问题

select t1.order_day,t1.sub_channel,
         case when t1.r_tel is null then '空值' 
         when getmobile(t1.r_tel) = '-' then '非手机号' 
         when substr(getmobile(t1.r_tel), 1, 3) not in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '非正常手机号'
        when  t2.r_tel is not null then '联系方式对应机票超过300张'
        else '正常' end type1,
          count(1)          
    from dw.fact_order_detail t1
    left join (select t2.r_tel,count(1) tonum
                 from dw.fact_order_detail t2
                 where t2.order_day >= trunc(sysdate)-30
                     and t2.company_id=0
                     and t2.r_tel is not null
                     and t2.whole_flight like '9C%'
                     group by t2.r_tel
                     having count(1)>=300                 
                 )t2 on t1.r_tel=t2.r_tel
    
   where t1.order_day >= trunc(sysdate)-30
   and t1.company_id=0
   and t1.sub_channel in('携程','同程','去哪儿','淘宝')
   and t1.whole_flight like '9C%'
   group by t1.order_day,t1.sub_channel,
         case when t1.r_tel is null then '空值' 
         when getmobile(t1.r_tel) = '-' then '非手机号' 
         when substr(getmobile(t1.r_tel), 1, 3) not in ('134', '135', '136', '137', '138', '139', '147', '150', '151', '152', 
         '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '198', '130', '131', '132', '140', '145', '146',
          '155', '156', '166', '167', '185', '186', '175', '176', '133', '149', '153', '177', '173', '180', '181', '189', 
          '191', '199', '162', '165', '170', '171') then '非正常手机号'
        when  t2.r_tel is not null then '联系方式对应机票超过300张'
        else '正常' end;

-----------------------------------------------------------------20210225--------------------------------------------------------------
 ------254、泰国相关数据

select to_char(t1.flights_date,'yyyy'),t2.segment_country,t2.dest_country,
count(1),sum(case when t2.origin_country_id=0 and t2.segment_country='泰国' then 1 else 0 end)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
   and t1.company_id=0
   and t1.seats_name is not null
   and t1.flag_id=40
   group by to_char(t1.flights_date,'yyyy'),t2.segment_country,t2.dest_country;

 ------255、志刚总要求的数据展示

--1、连续3周，销售2月、3月、4月的机票量及均价
--2、最近两周，周对比，销售航班日期3月1日~5月5日的票量及均价


select case when t1.order_day>=to_date('2021-02-04','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-10','yyyy-mm-dd') then '0204~0210'
when t1.order_day>=to_date('2021-02-11','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-17','yyyy-mm-dd') then '0211~0217'
when t1.order_day>=to_date('2021-02-18','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-24','yyyy-mm-dd') then '0218~0224' end 周,
to_char(t1.flights_date,'yyyymm'),
count(1),
sum(t1.ticket_price)    
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo t4 on t1.client_id = t4.users_id
  left join hdb.an_termianl_classify t3 on t1.sub_channel=t3.terminal
 where t1.flights_date >= to_date('2021-02-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2021-05-01', 'yyyy-mm-dd')
   and t1.order_day>=to_date('2021-02-04','yyyy-mm-dd')
   and t1.order_day<=to_date('2021-02-24','yyyy-mm-dd')
   and t1.company_id = 0
   and t1.flag_id in (3, 5, 40, 41)
   and t2.flag <> 2
   and t2.nationflag='国内'
 group by case when t1.order_day>=to_date('2021-02-04','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-10','yyyy-mm-dd') then '0204~0210'
when t1.order_day>=to_date('2021-02-11','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-17','yyyy-mm-dd') then '0211~0217'
when t1.order_day>=to_date('2021-02-18','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-24','yyyy-mm-dd') then '0218~0224' end ,
to_char(t1.flights_date,'yyyymm');


select case when t1.order_day>=to_date('2021-02-04','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-10','yyyy-mm-dd') then '0204~0210'
when t1.order_day>=to_date('2021-02-11','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-17','yyyy-mm-dd') then '0211~0217'
when t1.order_day>=to_date('2021-02-18','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-24','yyyy-mm-dd') then '0218~0224' end 周,
t1.flights_date,
count(1),
sum(t1.ticket_price)    
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo t4 on t1.client_id = t4.users_id
  left join hdb.an_termianl_classify t3 on t1.sub_channel=t3.terminal
 where t1.flights_date >= to_date('2021-03-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2021-05-06', 'yyyy-mm-dd')
   and t1.order_day>=to_date('2021-02-04','yyyy-mm-dd')
   and t1.order_day<=to_date('2021-02-24','yyyy-mm-dd')
   and t1.company_id = 0
   and t1.flag_id in (3, 5, 40, 41)
   and t2.flag <> 2
   and t2.nationflag='国内'
 group by case when t1.order_day>=to_date('2021-02-04','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-10','yyyy-mm-dd') then '0204~0210'
when t1.order_day>=to_date('2021-02-11','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-17','yyyy-mm-dd') then '0211~0217'
when t1.order_day>=to_date('2021-02-18','yyyy-mm-dd') and t1.order_day<=to_date('2021-02-24','yyyy-mm-dd') then '0218~0224' end,
t1.flights_date;

----------------------------------------------------------------20210226----------------------------------------------------------------------
-------256、新疆各个机场进出港乘机人数

--延展：日、月、航班、航线性质、航线国家、始发国家、到达国家、始发城市、始发省份、到达城市、到达省份、往返航线城市、往返航线、航段、乘机人数、机票票价

select nvl(case when t3.province like '%新疆%'  then t3.airport_name
else null end,case when t4.province like '%新疆%'  then t4.airport_name
else null end) 城市,sum(t1.boardnum) 乘机人数
 from dw.da_main_order t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join hdb.cq_airport t3 on t2.origincity=t3.threecodeforcity
 left join hdb.cq_airport t4 on t2.destcity=t4.threecodeforcity
 where (t3.province like '%新疆%'
 or  t4.province like '%新疆%')
 and t1.flights_date>=to_date('2020-01-01','yyyy-mm-dd')
 and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
 group by nvl(case when t3.province like '%新疆%'  then t3.airport_name
else null end,case when t4.province like '%新疆%'  then t4.airport_name
else null end);


-------257、渠道占比、立减数据

select trunc(t.order_date) 日期,
       case
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 <= 1 then
          '网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 = 2 then
          'm网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (3, 8) then
          'IOS'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (4, 9) then
          '安卓'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (5, 10) then
          '微信'
         else
          '其他'
       end,
       case
         when t.terminal_id < 0 and t.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'
          when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate =15 then
          '商旅卡'
         when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate in ( 29, 31) then
          '易宝支付'
         when t.terminal_id < 0 and t.web_id = 0 then
          '线上纯量'
         else
          '其他'
       end,
       case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end,
       count(1) 票量
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_air t1 on t.flights_order_id =t1.flights_order_id
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo t5 on t.client_id = t5.users_id
  left join (select flights_order_head_id,
                    nvl(is_beneficiary, 0) is_beneficiary,
                    youhui_result
               from cust.cq_order_youhui_detail@to_air
              where product_type = 0
                and yh_ret_time is null
                and youhui_result is not null
                and youhui_id in (1129, 1137)
                and create_date >= trunc(sysdate) - 2) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id
 where t.order_date >= trunc(sysdate) - 1
   and t.order_date < sysdate
   and t1.r_flights_date >= trunc(sysdate - 1) - 7
   and t2.flag <> 2
   and trunc(t.order_date) in(trunc(sysdate),trunc(sysdate)-1)
   and to_char(t.order_date,'hh24:mi')<='16:14'
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
 group by trunc(t.order_date) ,
       case
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 <= 1 then
          '网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 = 2 then
          'm网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (3, 8) then
          'IOS'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (4, 9) then
          '安卓'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (5, 10) then
          '微信'
         else
          '其他'
       end,
       case
         when t.terminal_id < 0 and t.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'
          when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate =15 then
          '商旅卡'
         when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate in ( 29, 31) then
          '易宝支付'
         when t.terminal_id < 0 and t.web_id = 0 then
          '线上纯量'
         else
          '其他'
       end,
       case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end;



-------258、优惠券异常监控


select distinct t.flights_Order_id,t1.channel,t1.sub_channel,t2.gate_name,t1.work_tel,t1.remote_ip,t1.r_tel,t1.email,
case when t3.users_id is not null then 1 else 0 end,t4.login_id,t4.register_ip,t4.login_times
from anl.temp_feng_0301@to_dds t
left join dw.fact_recent_order_detail t1 on t.flights_Order_id=t1.flights_order_id
left join stg.p_cq_pay_gate t2 on t1.pay_gate=t2.id
left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
left join dw.da_b2c_user t4 on t1.client_id=t4.users_id;



select t1.*,t2.tnum
 from dw.bi_yhq_batch t1
 left join(select batch_id,count(distinct yhq_id) tnum
 from dw.bi_yhq_use
 where FLAG=1
 group by batch_id)t2 on t1.batch_id=t2.batch_id 
 where t1.batch_id in('7248',
'6808','6788','9289','9290','8095','8169','8093','7749','8328','7910','7908','7752','7754','8090','7868','8317',
'8168','8312','8529','8311','8313','8637','8643','8494','8710','8813','8599','8590','8530','8308','8309','8315',
'8316','8489','8491','8508','8510','8511','8513','8514','8515','8528','8531','8534','8600','8644');


---------------------------------------------------------------------20210303-----------------------------------------------------------------------------
 ------259、

select trunc(t.order_date) 日期,
case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '非BGO' end isbgo,
       case
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 <= 1 then
          '网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 = 2 then
          'm网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (3, 8) then
          'IOS'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (4, 9) then
          '安卓'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (5, 10) then
          '微信'
     when t.web_id>0 and  t4.abrv like '%TMC%' then 'B2G机构客户'
     when t.web_id>0 and  t4.abrv like '%航信%' then 'B2B代理'
     when t.terminal_id=3714 then 'B2B代理'
      when t.order_date >= to_date('2017-09-26', 'yyyy-mm-dd') and
                t.terminal_id < 0 and
                t.web_id in (240, 242, 312, 375, 1810, 2505, 3334) then
            'B2B代理'        
           when decode(t3.terminal_id,
                       1473,
                       257,
                       1869,
                       849,
                       2905,
                       2361,
                       t3.agent_id) = t4.agent_id and
                regexp_like(t4.abrv,
                            'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2G机构客户'
           when decode(t3.terminal_id,
                       1473,
                       257,
                       1869,
                       849,
                       2905,
                       2361,
                       t3.agent_id) = t4.agent_id and t4.agent_type is not null then
            decode(t4.agent_type,
                   1,
                   'OTA',
                   2,
                   'B2B代理',
                   4,
                   'CPS',
                   5,
                   'B2G机构客户')
           when t34.agent_id is not null and
                regexp_like(t34.abrv,
                            'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2G机构客户'
           when t34.agent_id is not null then
            decode(t34.agent_type,
                   1,
                   'OTA',
                   2,
                   'B2B代理',
                   4,
                   'CPS',
                   5,
                   'B2G机构客户')
           when t.web_id > 0 and
                regexp_like(t4.abrv,
                            'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2G机构客户'
           when a.agent_type = 3 then
            'B2G机构客户'
           when nvl(t.web_id, 0) > 0 and t4.agent_type is not null then
            decode(t4.agent_type,
                   1,
                   'OTA',
                   2,
                   'B2B代理',
                   4,
                   'CPS',
                   5,
                   'B2G机构客户')
           when nvl(t.web_id, 0) > 0 and t4.agent_type is null then
            'B2B'
           when t.terminal_id in
                (300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'
           when t.terminal_id not in
                (-1, -11, 300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) and
                not regexp_like(t3.terminal,
                                'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2B'
           when t.terminal_id > 0 and
                regexp_like(t3.terminal,
                            'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2G机构客户'
         end channel,

      case
         when t.terminal_id < 0 and t.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'
          when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate =15 then
          '商旅卡'
         when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate in ( 29, 31) then
          '易宝支付'
         when t.terminal_id < 0 and t.web_id = 0 then
          '线上纯量'
          when t.web_id in(128,146,435,150) then decode(t.web_id,128,'携程',146,'同程',435,'淘宝',150,'去哪儿') 
          when t.terminal_id in
                (300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'
         else '其他' end,
           case
         when t44.flights_order_head_id is not null and t44.is_beneficiary = 1 then
          '受益人立减'
         when t44.flights_order_head_id is not null and t44.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end,
       count(1) 票量
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_air t1 on t.flights_order_id =t1.flights_order_id
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo t5 on t.client_id = t5.users_id

 LEFT JOIN stg.s_cq_terminal t3 ON t.terminal_id = t3.terminal_id
          left join stg.s_cq_area a on a.area_id = t3.area_id
          LEFT JOIN stg.s_cq_agent_info t4 ON t.web_id = t4.agent_id
          left join stg.s_cq_agent_info t34 on t34.agent_type is not null
                                           and t34.agent_id =
                                               decode(t3.terminal_id,
                                                      1473,
                                                      257,
                                                      1869,
                                                      849,
                                                      2905,
                                                      2361,
                                                      t3.agent_id)


  left join (select flights_order_head_id,
                    nvl(is_beneficiary, 0) is_beneficiary,
                    youhui_result
               from cust.cq_order_youhui_detail@to_air
              where product_type = 0
                and yh_ret_time is null
                and youhui_result is not null
                and youhui_id in (1129, 1137)
                and create_date >= trunc(sysdate) - 8) t44 on t1.flights_order_head_id =
                                                              t44.flights_order_head_id
 where t.order_date>= trunc(sysdate)-8
   and t.order_date < sysdate
   and to_char(t.order_date,'hh24:mi')< '15:11'
   and t1.r_flights_date >= trunc(sysdate)-7-7
   and t2.flag <> 2
   and trunc(t.order_date) in(trunc(sysdate),trunc(sysdate)-7,trunc(sysdate)-1)
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
 group by trunc(t.order_date) ,
case when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '非BGO' end ,
       case
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 <= 1 then
          '网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 = 2 then
          'm网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (3, 8) then
          'IOS'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (4, 9) then
          '安卓'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (5, 10) then
          '微信'
     when t.web_id>0 and  t4.abrv like '%TMC%' then 'B2G机构客户'
     when t.web_id>0 and  t4.abrv like '%航信%' then 'B2B代理'
     when t.terminal_id=3714 then 'B2B代理'
     when t.order_date >= to_date('2017-09-26', 'yyyy-mm-dd') and
                t.terminal_id < 0 and
                t.web_id in (240, 242, 312, 375, 1810, 2505, 3334) then
            'B2B代理'        
           when decode(t3.terminal_id,
                       1473,
                       257,
                       1869,
                       849,
                       2905,
                       2361,
                       t3.agent_id) = t4.agent_id and
                regexp_like(t4.abrv,
                            'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2G机构客户'
           when decode(t3.terminal_id,
                       1473,
                       257,
                       1869,
                       849,
                       2905,
                       2361,
                       t3.agent_id) = t4.agent_id and t4.agent_type is not null then
            decode(t4.agent_type,
                   1,
                   'OTA',
                   2,
                   'B2B代理',
                   4,
                   'CPS',
                   5,
                   'B2G机构客户')
           when t34.agent_id is not null and
                regexp_like(t34.abrv,
                            'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2G机构客户'
           when t34.agent_id is not null then
            decode(t34.agent_type,
                   1,
                   'OTA',
                   2,
                   'B2B代理',
                   4,
                   'CPS',
                   5,
                   'B2G机构客户')
           when t.web_id > 0 and
                regexp_like(t4.abrv,
                            'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2G机构客户'
           when a.agent_type = 3 then
            'B2G机构客户'
           when nvl(t.web_id, 0) > 0 and t4.agent_type is not null then
            decode(t4.agent_type,
                   1,
                   'OTA',
                   2,
                   'B2B代理',
                   4,
                   'CPS',
                   5,
                   'B2G机构客户')
           when nvl(t.web_id, 0) > 0 and t4.agent_type is null then
            'B2B'
           when t.terminal_id in
                (300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'
           when t.terminal_id not in
                (-1, -11, 300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) and
                not regexp_like(t3.terminal,
                                'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2B'
           when t.terminal_id > 0 and
                regexp_like(t3.terminal,
                            'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2G机构客户'
         end ,
      case
         when t.terminal_id < 0 and t.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'
          when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate =15 then
          '商旅卡'
         when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate in ( 29, 31) then
          '易宝支付'
         when t.terminal_id < 0 and t.web_id = 0 then
          '线上纯量'
          when t.web_id in(128,146,435,150) then decode(t.web_id,128,'携程',146,'同程',435,'淘宝',150,'去哪儿') 
          when t.terminal_id in
                (300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'
         else '其他' end,
           case
         when t44.flights_order_head_id is not null and t44.is_beneficiary = 1 then
          '受益人立减'
         when t44.flights_order_head_id is not null and t44.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end;

-------260、线上自有渠道占比

select t1.order_day, case when t1.channel in('手机','网站') and t1.station_id<=1 then '网站'
  when t1.channel in('手机','网站') and t1.station_id=2 then 'M网站'
  when t1.channel in('手机','网站') and t1.station_id in(3,8) then 'IOS'
  when t1.channel in('手机','网站') and t1.station_id in(4,9) then '安卓'
  when t1.channel in('手机','网站') and t1.station_id =6 then '智能客服'
  when t1.channel in('手机','网站')  then '微信' 
  when t1.channel in('OTA','旗舰店') then 'OTA'
  else t1.channel end 渠道,  
  case when t1.channel in('手机','网站')  then '线上自有'
  when t1.channel in('OTA','旗舰店') then 'OTA'
  else 'B2B' end 渠道大类,  
  case when t1.channel in('手机','网站')  and t5.users_id is not null then '黑代'
  else  '非黑代' end 代理与否,
case when t1.gate_name like '%商旅卡%' then '易宝商旅卡'
when t1.gate_name like '%易宝%' then '易宝商旅卡'
when t1.gate_name like '%支付宝%' then '支付宝'
when t1.gate_name like '%微信%' then '微信'
when t1.gate_name like '%财付通%' then '微信'
else '其他' end 支付渠道,
case when t4.flights_order_head_id is not null and t4.IS_BENEFICIARY=1 then '受益人立减'
when t4.flights_order_head_id is not null and t4.IS_BENEFICIARY=0 then '绿翼立减'
else '普通购买' end 购票优惠 ,
count(1) 票量
  FROM dw.fact_order_detail t1
  JOIN dw.da_flight t2 ON t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo t5 on t1.client_id = t5.users_id
  left join (select flights_order_head_id, nvl(IS_BENEFICIARY,0) IS_BENEFICIARY,youhui_result
 from cust.cq_order_youhui_detail@to_air
 where PRODUCT_TYPE=0
 and YH_RET_TIME is null
 and youhui_result is not null
 and youhui_id in(1129,1137)
 and create_date>=to_date('2021-01-01', 'yyyy-mm-dd')
 )t4 on t1.flights_order_head_id=t4.flights_order_head_id
 left join dw.da_lyuser t7 on t1.client_Id=t7.users_id_fk
 left join (select t1.users_id,t2.code_no,min(t1.create_time) create_date
      from cust.cq_flights_benefic_users@to_air t1
      left join cust.cq_benefic_users_codes@to_air t2 on t2.benefic_users_id = t1.crm_favoree_id
      where t1.status = 1
      and t2.flag = 1
      and trunc(t1.create_time) >= to_date('2021-01-01', 'yyyy-mm-dd')
      and trunc(t1.create_time) < trunc(sysdate)
      group by t1.users_id,t2.code_no)t8 on t1.client_Id=t8.users_id  and t1.codeno=t8.code_no 
 WHERE t1.order_day >= to_date('2021-01-01', 'yyyy-mm-dd')
   and t1.order_day < trunc(sysdate)
   and t1.flights_date>=to_date('2021-01-01', 'yyyy-mm-dd')-7
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
   and t1.seats_name not in('B','G','G1','G2','O')
   group by t1.order_day, case when t1.channel in('手机','网站') and t1.station_id<=1 then '网站'
  when t1.channel in('手机','网站') and t1.station_id=2 then 'M网站'
  when t1.channel in('手机','网站') and t1.station_id in(3,8) then 'IOS'
  when t1.channel in('手机','网站') and t1.station_id in(4,9) then '安卓'
  when t1.channel in('手机','网站') and t1.station_id =6 then '智能客服'
  when t1.channel in('手机','网站')  then '微信' 
  when t1.channel in('OTA','旗舰店') then 'OTA'
  else t1.channel end ,  
  case when t1.channel in('手机','网站')  then '线上自有'
  when t1.channel in('OTA','旗舰店') then 'OTA'
  else 'B2B' end ,  
  case when t1.channel in('手机','网站')  and t5.users_id is not null then '黑代'
  else  '非黑代' end ,
case when t1.gate_name like '%商旅卡%' then '易宝商旅卡'
when t1.gate_name like '%易宝%' then '易宝商旅卡'
when t1.gate_name like '%支付宝%' then '支付宝'
when t1.gate_name like '%微信%' then '微信'
when t1.gate_name like '%财付通%' then '微信'
else '其他' end ,
case when t4.flights_order_head_id is not null and t4.IS_BENEFICIARY=1 then '受益人立减'
when t4.flights_order_head_id is not null and t4.IS_BENEFICIARY=0 then '绿翼立减'
else '普通购买' end;

------------------------------------------------------20210311-------------------------------------------------------------------
 ------261、南昌基地相关数据

select t1.cust_province,t1.cust_city,count(1)
 from dw.bi_order_region t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t2.flight_date>=trunc(sysdate)
   and t2.flight_date< trunc(sysdate)+60
   and t2.flights_segment_name like '%南昌%'
   group by t1.cust_province,t1.cust_city;


------------------------------------------------------20210312---------------------------------------------------------------------
 ------262、

select to_char(t1.order_day,'yyyymm'),t1.pay_together+1,case when t2.users_id is not null and t1.channel in('网站','手机') then '代理'
else '非代理' end,suM(t1.book_num),suM(t1.book_price)
 from dw.fact_other_order_detail t1
 left join dw.da_restrict_userinfo t2 on t1.client_id=t2.users_id
 where t1.order_day>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-03-01','yyyy-mm-dd')
   and t1.xtype_id=16
   and regexp_like(t1.xproduct_name,'(送机)|(接机)|(接送机)')
   group by to_char(t1.order_day,'yyyymm'),t1.pay_together+1,case when t2.users_id is not null and t1.channel in('网站','手机') then '代理'
else '非代理' end;

--------------------------------------------------20210313-----------------------------------------------------------------------------
 ------263、

--批次状态 0-未审核 1-已审核 2-已作废

select t1.batch_id,decode(t1.status,0,'未审核',1,'已审核',2,'已作废') 券状态,t1.total_num 发放量,t1.out_date 生效时间 ,
count(distinct t2.yhq_id) 已使用数量
 from dw.bi_yhq_batch t1
 left join dw.bi_yhq_use t2 on t1.batch_id=t2.batch_id
 where t1.batch_id in('4688',
'4091',
'3875',
'4710',
'4151',
'3870',
'4709',
'4094',
'4430',
'5603',
'4690',
'4050',
'4150',
'3889',
'4051',
'4110',
'4250',
'3928',
'4052',
'4063',
'4130',
'5668',
'4506',
'4490',
'4909',
'4208',
'4505',
'4834',
'5192',
'5088',
'5177',
'5142',
'4348',
'4751',
'4817',
'4836',
'4837',
'4893',
'4894',
'4835',
'4870',
'6408',
'6410',
'6411',
'6412',
'6421',
'6428',
'5592',
'5594',
'4589',
'5597',
'5614',
'5684',
'5685',
'5728',
'5729',
'5753',
'5754',
'5772',
'5773',
'6631',
'6509',
'6671',
'6670',
'6669',
'6668',
'6732',
'6731',
'6730',
'6729',
'6728',
'6710',
'6708',
'6709',
'6148',
'6190',
'7289',
'7288',
'7108',
'7248',
'6948',
'6808',
'6788',
'7928',
'8468',
'5674',
'9289',
'9290',
'8095',
'8169',
'8093',
'7749',
'8328',
'7910',
'7908',
'7752',
'7754',
'8090',
'7868',
'8317',
'8618',
'8168',
'8312',
'8529',
'8311',
'8313',
'8637',
'8643',
'8494',
'8710',
'8813',
'8599',
'8590',
'8530',
'8308',
'8309',
'8315',
'8316',
'8489',
'8491',
'8508',
'8510',
'8511',
'8513',
'8514',
'8515',
'8528',
'8531',
'8534',
'8600',
'8644',
'8720',
'8721',
'8940',
'8711',
'8814',
'8933',
'8936',
'8935',
'8708',
'8934')
group by t1.batch_id,decode(t1.status,0,'未审核',1,'已审核',2,'已作废'),t1.total_num,t1.out_date

 ------264、

select /*+parallel(4) */
to_char(t1.flights_date, 'yyyy') 航班年,
to_char(t1.flights_date, 'yyyymm') 航班月,
       t.channel 机票购买渠道,
       t.SUB_CHANNEL 机票子渠道,
       t1.nationflag,
       t2.flights_segment_name,
       t1.book_price,
       t1.luggage_weight,
       sum(t1.book_num) bookunum,
       sum(t1.book_fee) book_fee,
       0
  from dw.fact_recent_order_detail t 
  join dw.fact_other_order_detail t1 on t.flights_order_head_id=t1.flights_order_head_id
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
 where t1.company_id = 0
   and t1.xtype_id in(6,10,17)
   and t1.seats_name  in('B','G','G1','G2')
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2021-03-01', 'yyyy-mm-dd')
   group by to_char(t1.flights_date, 'yyyy') ,
to_char(t1.flights_date, 'yyyymm') ,
       t.channel ,
       t.SUB_CHANNEL ,
       t1.nationflag,
       t2.flights_segment_name,
       t1.book_price,
       t1.luggage_weight

 union all
 
 
 
 select to_char(t.flights_date, 'yyyy') 航班年,
to_char(t.flights_date, 'yyyymm') 航班月,
       t.channel 机票购买渠道,
       t.SUB_CHANNEL 机票子渠道,
       t.nationflag,
       t2.flights_segment_name,
       null,
       null,
       0 bookunum,
       0 book_fee,
       count(1) ticketnum
  from dw.fact_recent_order_detail t 
  join dw.da_flight t2 on t2.segment_head_id = t.segment_head_id
 where t2.company_id = 0
   and t.seats_name  in('B','G','G1','G2')
   and t.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t.flights_date <  to_date('2021-03-01', 'yyyy-mm-dd')
   and t.flag_id in(3,5,40,41)
   group by to_char(t.flights_date, 'yyyy') ,
to_char(t.flights_date, 'yyyymm') ,
       t.channel ,
       t.SUB_CHANNEL ,
       t.nationflag,
       t2.flights_segment_name;



select /*+parallel(4) */
to_char(t.flights_date, 'yyyy') 航班年,
to_char(t.flights_date, 'yyyymm') 航班月,
       t.channel 机票购买渠道,
       t.SUB_CHANNEL 机票子渠道,
       t.nationflag,
       t2.flights_segment_name,
       count(distinct case when t1.xtype_id in(6,10,17) then t1.flights_Order_head_id else null end) 行李购买人数,
       count(distinct case when t1.xtype_id in(6,10,17) and t1.book_fee=0 then t1.flights_Order_head_id else null end) 赠送行李人数,
       count(distinct case when t1.xtype_id in(6,10,17) and t1.luggage_weight=10 and t1.book_fee=45 
       then t1.flights_Order_head_id else null end) 二次团队购买行李人数,
       count(distinct t.flights_order_head_id) 机票量
  from dw.fact_recent_order_detail t 
  left join dw.fact_other_order_detail t1 on t.flights_order_head_id=t1.flights_order_head_id
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
 where 
   --and t1.xtype_id in(6,10,17)
 t.seats_name  in('B','G','G1','G2')
   and t.flag_id in(3,5,40)
   and t.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t.flights_date <  to_date('2021-03-01', 'yyyy-mm-dd')
   group by to_char(t.flights_date, 'yyyy') ,
to_char(t.flights_date, 'yyyymm') ,
       t.channel ,
       t.SUB_CHANNEL ,
       t.nationflag,
       t2.flights_segment_name;


-------------------------------------------------20210315--------------------------------------------------------------------------------
 ------265、行李购买率


select /*+parallel(4) */
to_char(t.flights_date, 'yyyy') 航班年,
to_char(t.flights_date, 'yyyymm') 航班月,
       t.channel 机票购买渠道,
       t.SUB_CHANNEL 机票子渠道,
       t.nationflag,
       t2.flights_segment_name,
       count(distinct case when t1.xtype_id in(6,10,17) then t1.flights_Order_head_id else null end) 行李购买人数,
       count(distinct case when t1.xtype_id in(6,10,17) and t1.book_fee=0 then t1.flights_Order_head_id else null end) 赠送行李人数,
       count(distinct case when t1.xtype_id in(6,10,17) and t1.luggage_weight=10 and t1.book_fee=45 
       then t1.flights_Order_head_id else null end) 二次团队购买行李人数,
       count(distinct t.flights_order_head_id) 机票量
  from dw.fact_recent_order_detail t 
  left join dw.fact_other_order_detail t1 on t.flights_order_head_id=t1.flights_order_head_id and t1.xtype_id in(6,10,17)
  left join dw.da_flight t2 on t.segment_head_id=t2.segment_head_id
 where 
   --and t1.xtype_id in(6,10,17)
 t.seats_name  in('B','G','G1','G2')
   and t.flag_id in(3,5,40)
   and t.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t.flights_date <  to_date('2021-03-01', 'yyyy-mm-dd')
   group by to_char(t.flights_date, 'yyyy') ,
to_char(t.flights_date, 'yyyymm') ,
       t.channel ,
       t.SUB_CHANNEL ,
       t.nationflag,
       t2.flights_segment_name;

------------------------------------------------------------20210317------------------------------------------------------------------------------------------
 ------266、2020年发送的手机号量

select sum(t1.fact_sms_count)
  from cqsale.tb_sms_down_his@to_air t1
  LEFT JOIN STG.S_TB_SMS_SYS_FLAG T2 ON T1.SYS_FLAG=T2.ID
  LEFT JOIN STG.S_TB_SMS_TYPE T3 ON T1.REF_ID1=T3.ID
  WHERE t1.CREATE_TIME>=to_date('2020-01-01','yyyy-mm-dd')
    and t1.CREATE_TIME< to_date('2021-01-01','yyyy-mm-dd')
    and t1.SUPPLIERID=2
    and t1.STATUS=3;

select /*+parallel(4) */
to_char(t1.CREATE_TIME,'yyyymm'),
count(distinct t1.mobile)
  from cqsale.tb_sms_down_his@to_air t1
  LEFT JOIN STG.S_TB_SMS_SYS_FLAG T2 ON T1.SYS_FLAG=T2.ID
  LEFT JOIN STG.S_TB_SMS_TYPE T3 ON T1.REF_ID1=T3.ID
  WHERE t1.CREATE_TIME>=to_date('2020-01-01','yyyy-mm-dd')
    and t1.CREATE_TIME< to_date('2021-01-01','yyyy-mm-dd')
    and t1.SUPPLIERID=2
    and t1.STATUS=3
 group by to_char(t1.CREATE_TIME,'yyyymm');


 ------267、南昌套票数据统计
select t1.buy_contact_phone,t1.status,t2.realname||t2.SECOND_NAME 姓名,t1.combo_name 名称,decode(t2.sex,0,'女士',1,'男士') 性别,count(1) 数量
 from yhq.cq_yhq_unlimited_combo@to_air t1
 join cust.cq_flights_users_huiyuan@to_air t2 on t1.BUY_USER_ID=t2.users_id_fk
where t1.create_date>=trunc(sysdate)
and t1.combo_name like '%爱在南昌%'
--and t1.combo_name like '%儿童%'
group by t1.buy_contact_phone,t1.status,t2.realname||t2.SECOND_NAME,t1.combo_name,decode(t2.sex,0,'女士',1,'男士');

-----------------------------------------------------20210319---------------------------------------------------------------------------------------
 ------268、CMS创建的券号量

select t1.activity_name,
       t1.batch_no,
       t2.batch_id,
       t2.create_date,
       t2.act_name,
       t2.if_same_name,
       t2.money_type,
       t2.money_var,
       t2.create_user,
       count(1)
  from hdb.cms_yhq_create t1
  left join dw.bi_yhq_batch t2 on to_char(t1.batch_no) = t2.batch_id
 group by t1.activity_name,
          t1.batch_no,
          t2.batch_id,
          t2.create_date,
          t2.act_name,
          t2.if_same_name,
          t2.money_type,
          t2.money_var,
          t2.create_user;


 ------269、虹桥浦东始发乘机人数


select t2.originairport_name 始发,sum(t1.boardnum) 乘机人数
 from dw.da_main_order t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t2.origincity_name='上海'
   and t1.flights_date>=to_date('20201201','yyyymmdd')
   and t1.flights_date< to_date('20210101','yyyymmdd')
   group by t2.originairport_name

 ------270、南昌儿童套票数据

select t1.buy_contact_phone,t1.status,t2.realname||t2.SECOND_NAME 姓名,t1.combo_name 名称,count(1) 数量
 from yhq.cq_yhq_unlimited_combo@to_air t1
 join cust.cq_flights_users_huiyuan@to_air t2 on t1.BUY_USER_ID=t2.users_id_fk
where t1.create_date>=trunc(sysdate)-1
and t1.combo_name like '%爱在南昌%'
and t1.combo_name like '%儿童%'
and t1.status in(0,1)
group by t1.buy_contact_phone,t1.status,t2.realname||t2.SECOND_NAME,t1.combo_name
order by 5 desc

-----------------------------------------------------------------------20210322------------------------------------------------------
 ------271、优惠券数据

 select p1.batch_no 批次号, listagg(p1.activity_name, '|') within
 group(
 order by p1.activity_name) cms名称, p1.act_name gds名称,p1.if_same_name,p1.money_var,p1.status, sum(p1.num1) cms使用, sum(p1.num2) cms作废, sum(p1.num3) cms过期, p1.atv_num gds领取, p1.usenum gds使用
  from (select t1.batch_no,
               t1.activity_name,
               t2.act_name,
               t2.if_same_name,
               t2.money_var,
               t2.status,
               sum(case
                     when t1.quan_status = 1 then
1
                     else
0
                   end) num1,
               sum(case
                     when t1.quan_status = 2 then
1
                     else
0
                   end) num2,
               sum(case
                     when t1.quan_status = 3 then
1
                     else
0
                   end) num3,
               p.atv_num,
               u.usenum
          from hdb.cms_yhq_create t1
          left join dw.bi_yhq_batch t2 on t2.batch_id = to_char(t1.batch_no)
          left join (select batch_id, sum(atv_num) atv_num
                      from dw.bi_yhq_atv
                     group by batch_id) p on p.batch_id =
                                             to_char(t1.batch_no)
          left join (select batch_id, count(distinct yhq_id) usenum
                      from dw.bi_yhq_use
                     where flag = 1
                     group by batch_id) u on u.batch_id =
                                             to_char(t1.batch_no)
         group by t1.batch_no,
                  t1.activity_name,
                  t2.act_name,
                  p.atv_num,
                  u.usenum,    t2.if_same_name,
               t2.money_var,
               t2.status
                  ) p1
 group by p1.batch_no, p1.act_name, p1.atv_num, p1.usenum,p1.if_same_name,p1.money_var,p1.status
 order by 1;


 ------272、扬州泰州/扬泰老人出港优惠政策

select /*+parallel(4)*/ to_char(h1.flight_date,'yyyymm'),sum(h1.oversale),sum(h1.agenum1),sum(h1.ageprice1),
sum(h1.agenum2),sum(h1.ageprice2)
 from (
select 
t1.flight_date,t2.segment_head_id,t2.oversale,
sum(case when t1.age>=75 and t1.age< 80 then 1 else 0 end) agenum1,
sum(case when t1.age>=75 and t1.age< 80 then t3.ticket_price else 0 end) ageprice1,
sum(case when t1.age>=80  then 1 else 0 end) agenum2,
sum(case when t1.age>=80 then t3.ticket_price else 0 end) ageprice2
 from dw.bi_order_region t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.fact_order_detail t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t2.flights_segment_name like '扬州%'
 and t1.flight_date>=to_date('2019-01-01','yyyy-mm-dd')
 and t1.flight_date< to_date('2021-04-01','yyyy-mm-dd')
 --and t1.age>=75
 and t1.flag_id=40
 group by t1.flight_date,t2.segment_head_id,t2.oversale)h1
 group by to_char(h1.flight_date,'yyyymm');
 
 

 ------273、扬州泰州/扬泰老人出港优惠政策

select t1.flight_date,count(1) agenum,sum(t3.ticket_price)
 from dw.bi_order_region t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.fact_order_detail t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t2.flights_segment_name like '扬州%'
 and t1.flight_date>=to_date('2019-08-20','yyyy-mm-dd')
 and t1.flight_date<=to_date('2019-09-20','yyyy-mm-dd')
 and t1.age>=18
 and t1.age<=23
 and t1.flag_id=40
 group by t1.flight_date;


---学生群体的行李购买金额

select t1.flight_date,case when t4.bagw>10 then '10+'
when t4.bagw>0 and t4.bagw<=10 then '(0,10]' 
when t4.bagw=0 then '0'
 end,
count(distinct t1.flights_order_head_id) agenum,sum(t3.ticket_price),sum(t4.bagw),
sum(t4.fee_gt+t4.fee_zz+t4.fee_web+t4.fee_xc),
sum(case when t4.bagw>10 then case when t4.fee_gt+t4.fee_zz+t4.fee_web+t4.fee_xc-107<0 then 0
else t4.fee_gt+t4.fee_zz+t4.fee_web+t4.fee_xc-107 end 
when t4.bagw<=10 then 0 end)
 from dw.bi_order_region t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.fact_order_detail t3 on t1.flights_order_head_id=t3.flights_order_head_id
 left join dw.fact_luggage_detail t4 on t1.flights_order_head_id=t4.flights_order_head_id
 where t2.flights_segment_name like '扬州%'
 and t1.flight_date>=to_date('2019-08-20','yyyy-mm-dd')
 and t1.flight_date<=to_date('2019-09-20','yyyy-mm-dd')
 and t1.age>=18
 and t1.age<=23
 and t1.flag_id=40
 group by t1.flight_date,case when t4.bagw>10 then '10+'
when t4.bagw>0 and t4.bagw<=10 then '(0,10]' 
when t4.bagw=0 then '0' end;



select avg(t5.book_fee) bookfee
              from dw.fact_other_order_detail t5
              where t5.flight_date>=to_date('2019-08-20','yyyy-mm-dd')
 and t5.flight_date<=to_date('2019-09-20','yyyy-mm-dd')
 and t5.xtype_id in(6,10,17)
 and t5.luggage_weight=10
 and t5.whole_segment like 'YTY%'
 and t5.book_fee>0
 and t5.seats_name not in('B','G1','G2','G','O');


 select to_char(t2.flight_date,'yyyymmdd'),count(distinct t2.flights_id)
 from  dw.da_flight t2 
 where t2.flight_date>=to_date('2021-04-01','yyyy-mm-dd')
   --and t2.flight_date< to_date('2021-03-23','yyyy-mm-dd')
   and t2.segment_code like 'YTY%'
   and t2.flag<>2
   group by to_char(t2.flight_date,'yyyymmdd');

--回程、往返的金额
select  t3.is_qu_hui,count(1)
 from dw.bi_order_region t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.fact_recent_order_detail t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t2.flights_segment_name like '扬州%'
 and t1.flight_date>=to_date('2019-01-01','yyyy-mm-dd')
 and t1.flight_date< to_date('2021-04-01','yyyy-mm-dd')
 and t1.age>=75
 and t1.flag_id=40
group by t3.is_qu_hui;

--10公斤行李购买金额

select avg(t5.book_fee) bookfee
              from dw.fact_other_order_detail t5
              where t5.flights_date>=to_date('2019-08-20','yyyy-mm-dd')
 and t5.flights_date<=to_date('2019-09-20','yyyy-mm-dd')
 and t5.xtype_id in(6,10,17)
 and t5.luggage_weight=10
 and t5.whole_segment like 'YTY%'
 and t5.book_fee>0
 and t5.seats_name not in('B','G1','G2','G','O');

 ------274、

--------------------各航段的组合产品价差--------------------------------------------------------------
select *
from(
select h1.segment_code,h1.comb_fee,h1.num,row_number()over(partition by h1.segment_code order by h1.num desc) xid
from(
select t2.segment_code,t1.comb_fee,count(1) num
 from dw.fact_recent_order_detail t1
 join dw.da_flight t2 on t2.segment_head_id=t1.segment_head_id
 where t1.flights_date>=to_date('2021-03-28','yyyy-mm-dd')
 and t1.flights_date< to_date('2021-10-24','yyyy-mm-dd')
 and t1.comb_fee is not null
 and t1.comb_fee>0
 group by t2.segment_code,t1.comb_fee)h1
 )
 where xid=1;
 
 
----------------------------------------------------20210324---------------------------------------------------------------
 ------275、

select /*+paralle(4) */
t1.segment_head_id,t1.r_flights_date,t2.flag,t2.oversale,t2.bgo_plan-t2.o_plan,count(1)
from cqsale.cq_order_head@to_air  t1
join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
where t2.flights_segment_name like '张家界%浦东'
and t1.r_flights_date>=to_date('2021-03-28','yyyy-mm-dd')
and t1.r_flights_date<=to_date('2021-04-23','yyyy-mm-dd')
and t1.seats_name is not null
and t1.flag_id in(3,5,40,41)
and t1.seats_name not in('B','G','G1','G2')
group by t1.segment_head_id,t1.r_flights_date,t2.flag,t2.oversale,t2.bgo_plan-t2.o_plan


------------------------------------------------------------------20210325------------------------------------------------
 ------276、市场调节价航线数据

select case when t2.segment_code is not null then 1
else 0 end ,sum(t4.boardnum),count(distinct t3.wf_segment)
 from dw.da_flight t1
 left join anl.temp_feng_0325@to_dds t2 on t1.segment_code=t2.segment_code  --市场调节价航线列表
 left join dw.dim_segment_type t3 on t1.h_route_id=t3.h_route_id and t1.route_id=t3.route_id
 left join dw.da_main_order t4 on t1.segment_head_id=t4.segment_head_id
 where t1.flight_date>=to_date('2021-03-01','yyyy-mm-dd')
   and t1.flight_date<=to_date('2021-03-24','yyyy-mm-dd')
   and t1.flag=0
   and t1.company_id=0
   --group by t3.wf_segment
   --having count(distinct t1.segment_code)>2
group by case when t2.segment_code is not null then 1;


select case when t2.segment_code is not null then 1
else 0 end ,t6.part,count(1)
 from dw.da_flight t1
  join dw.fact_order_detail t5 on t1.segment_head_id=t5.segment_head_id
  join dw.fact_orderhead_trippurpose@to_ods t6 on t5.flights_order_head_id=t6.flights_order_head_id
 left join hdb.temp_feng_0325 t2 on t1.segment_code=t2.segment_code
 where t1.flight_date>=to_date('2021-03-01','yyyy-mm-dd')
   and t1.flight_date<=to_date('2021-03-24','yyyy-mm-dd')
   and t1.flag=0
   and t1.company_id=0
   --group by t3.wf_segment
   --having count(distinct t1.segment_code)>2
group by case when t2.segment_code is not null then 1
else 0 end ,t6.part
else 0 end;


-------------------------------------------------------------20210330----------------------------------------------
 ------277、 各月各航线的出行目的数据

select /*+parallel(4) */
to_char(t1.flights_date,'yyyy'),
to_char(t1.flights_date,'yyyymm'),
t4.part,
t2.wf_segment,
count(1)
 from dw.fact_order_detail t1
 left join dw.fact_orderhead_trippurpose@to_ods t4 on t1.flights_order_head_id=t4.flights_order_head_id
 left join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 left join dw.dim_segment_type t2 on t3.h_route_id=t2.h_route_id and t3.route_id=t2.route_id
  where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date<  to_date('2021-03-30','yyyy-mm-dd')
   and t1.flag_id in(3,5,40,41)
   and t1.seats_name is not null 
   and t3.flag=0
   and t3.company_id=0
   group by to_char(t1.flights_date,'yyyy'),
to_char(t1.flights_date,'yyyymm'),
t4.part,
t2.wf_segment;

 ------278、

--1月7至3月26 盐城-石家庄 取消航班前后的退票量

select t1.r_flights_date,t1.whole_flight,t2.flights_segment_name,t2.flag,
       case when t1.flag_id in(3,5,41) then '已支付未退票'
       when t1.flag_id in(7,11,12) and t3.origin_std< =t3.money_date then '航班起飞时间后退票'
       when t1.flag_id in(7,11,12) and t3.origin_std> t3.money_date then '航班起飞时间前退票'
       when t1.flag_id =40 then '已乘机' end ,
       
            case when t1.flag_id in(3,5,41) then '已支付未退票'
       when t1.flag_id in(7,11,12) and t4.mindate< =t3.money_date then '取消航班时间后退票'
       when t1.flag_id in(7,11,12) and t4.mindate>  t3.money_date then '取消航班时间前退票'
       
       when t1.flag_id =40 then '已乘机' end ,
       
       count(1)
 from cqsale.cq_order_head@to_air t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_order_drawback t3 on t1.flights_order_head_id=t3.flights_order_head_id
 left join(select flights_no,to_date(flights_date,'yyyy-mm-dd') flights_date,flights_segment,min(cancel_date) mindate
  from stg.s_cq_flights_reception
  where flights_segment='YNZSJW'
  and recept_memo like '%取消%'
  group by flights_no,flights_date,flights_segment) t4 on t2.flight_no=t4.flights_no and t2.flight_date=t4.flights_date and t2.segment_code=
  t4.flights_segment
 where t1.r_flights_date>=to_date('2021-01-07','yyyy-mm-dd')
   and t1.r_flights_date<=to_date('2021-03-26','yyyy-mm-dd')
   and t2.flights_segment_name like '盐城%石家庄'
   and t1.flag_id in(3,5,40,41,7,11,12)
   group by t1.r_flights_date,t1.whole_flight,t2.flights_segment_name,t2.flag,
       case when t1.flag_id in(3,5,41) then '已支付未退票'
       when t1.flag_id in(7,11,12) and t3.origin_std< =t3.money_date then '航班起飞时间后退票'
       when t1.flag_id in(7,11,12) and t3.origin_std> t3.money_date then '航班起飞时间前退票'
       when t1.flag_id =40 then '已乘机' end ,       
            case when t1.flag_id in(3,5,41) then '已支付未退票'
       when t1.flag_id in(7,11,12) and t4.mindate< =t3.money_date then '取消航班时间后退票'
       when t1.flag_id in(7,11,12) and t4.mindate> t3.money_date then '取消航班时间前退票'       
       when t1.flag_id =40 then '已乘机' end;


 ------279、出行目的

select /*+parallel(4) */
to_char(t1.flights_date,'yyyy'),
to_char(t1.flights_date,'yyyymmdd'),
case when t4.part in('散客团队','旅行','团队旅行') then '旅行'
when t4.part  is null  then '旅行'
else t4.part end,count(1)
 from dw.fact_order_detail t1
 left join dw.fact_orderhead_trippurpose@to_ods t4 on t1.flights_order_head_id=t4.flights_order_head_id
 left join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 left join dw.dim_segment_type t2 on t3.h_route_id=t2.h_route_id and t3.route_id=t2.route_id
  where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date<  to_date('2021-03-30','yyyy-mm-dd')
   and t1.flag_id in(3,5,40,41)
   and t1.seats_name is not null 
   and t3.flag=0
   and t3.company_id=0
   group by to_char(t1.flights_date,'yyyy'),
to_char(t1.flights_date,'yyyymmdd'),
case when t4.part in('散客团队','旅行','团队旅行') then '旅行'
when t4.part  is null  then '旅行'
else t4.part end;


 ------280、计划取消航班数据

--20210101~20210331 航班日期 提前24小时以上~3天以内取消  航班量、取消前已销售人数




select h3.*,h2.ticketnum
from(
select h1.*,h2.flights_segment_name,h2.oversale,round((h2.origin_std-h1.mindate),0) shour
from (select flights_no,to_date(flights_date,'yyyy-mm-dd') flights_date,flights_segment,min(recept_memo) recept_memo,min(cancel_date) mindate
  from stg.s_cq_flights_reception
  where  recept_memo like '%计划取消%'
   group by flights_no,flights_date,flights_segment)h1
 join dw.da_flight h2 on h1.flights_no=h2.flight_no and h1.flights_date=h2.flight_date and h1.flights_segment=h2.segment_code
 where h2.flight_date>=to_date('2021-01-01','yyyy-mm-dd')
   and h2.flight_date<=to_date('2021-03-31','yyyy-mm-dd'))h3 
  
  left join 
(
select t1.r_flights_date,t1.whole_flight,t2.segment_code,t2.flights_segment_name,t2.flag,t4.recept_memo,
   sum(case when t1.flag_id in(3,5,41) then 1
       when t1.flag_id in(7,11,12) and t4.mindate< =t3.money_date then 1
        else 
       0 end) ticketnum
 from cqsale.cq_order_head@to_air t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join(select flights_no,to_date(flights_date,'yyyy-mm-dd') flights_date,flights_segment,min(recept_memo) recept_memo,min(cancel_date) mindate
  from stg.s_cq_flights_reception
  where  recept_memo like '%计划取消%'
  group by flights_no,flights_date,flights_segment) t4 on t2.flight_no=t4.flights_no and t2.flight_date=t4.flights_date and t2.segment_code=
  t4.flights_segment
   left join dw.da_order_drawback t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.r_flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.r_flights_date<=to_date('2021-03-31','yyyy-mm-dd')
   and t1.flag_id in(3,5,40,41,7,11,12)
     group by t1.r_flights_date,t1.whole_flight,t2.segment_code,t2.flights_segment_name,t2.flag,t4.recept_memo
)h2 on h3.flights_no=h2.whole_flight and h3.flights_date=h2.r_flights_date 
       and h3.flights_segment=h2.segment_code;
 
  
 ------281、

select /*+parallel(4) */
h3.*,h2.ticketnum
from(
select h1.*,h2.flights_segment_name,h2.oversale,round((h2.origin_std-h1.mindate),0) shour
from (select flights_no,to_date(flights_date,'yyyy-mm-dd') flights_date,flights_segment,min(recept_memo) recept_memo,min(cancel_date) mindate
  from stg.s_cq_flights_reception
  where  recept_memo like '%取消%'
   group by flights_no,flights_date,flights_segment)h1
 join dw.da_flight h2 on h1.flights_no=h2.flight_no and h1.flights_date=h2.flight_date and h1.flights_segment=h2.segment_code
 where h2.flight_date>=to_date('2021-01-01','yyyy-mm-dd')
   and h2.flight_date<=to_date('2021-03-31','yyyy-mm-dd'))h3 
  
  left join 
(
select t1.r_flights_date,t1.whole_flight,t2.segment_code,t2.flights_segment_name,t2.flag,t4.recept_memo,
   sum(case when t1.flag_id in(3,5,41) then 1
       when t1.flag_id in(7,11,12) and t4.mindate< =t3.money_date then 1
        else 
       0 end) ticketnum
 from stg.s_cq_order_head t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join(select flights_no,to_date(flights_date,'yyyy-mm-dd') flights_date,flights_segment,min(recept_memo) recept_memo,min(cancel_date) mindate
  from stg.s_cq_flights_reception
  where  recept_memo like '%取消%'
  group by flights_no,flights_date,flights_segment) t4 on t2.flight_no=t4.flights_no and t2.flight_date=t4.flights_date and t2.segment_code=
  t4.flights_segment
   left join dw.da_order_drawback t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.r_flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.r_flights_date<=to_date('2021-03-31','yyyy-mm-dd')
   and t1.flag_id in(3,5,40,41,7,11,12)
     group by t1.r_flights_date,t1.whole_flight,t2.segment_code,t2.flights_segment_name,t2.flag,t4.recept_memo
)h2 on h3.flights_no=h2.whole_flight and h3.flights_date=h2.r_flights_date 
       and h3.flights_segment=h2.segment_code;


-----------------------------------------------------20210407-----------------------------------------------

 ------282、航线对应航距

select t1.*,case when mileage< 1000 then '0~1000'
when mileage< 2000 then '1000~2000'
when mileage< 3000 then '2000~3000'
when mileage>= 3000 then '3000+' end
from(
select t2.flights_segment_name,t1.mileage,t1.last_update_time,
row_number()over(partition by t2.flights_segment_name order by t1.last_update_time desc) xid
 from stg.s_cq_flights_pub_mileage  t1
 join dw.da_flight t2 on t1.start_city||t1.end_city=t2.segment_code
 group by t2.flights_segment_name,t1.mileage,t1.last_update_time)t1
 where xid=1;

--------------------------------------------------------------20210408-------------------------------------------------------------------------------------
-------283、绿翼会员复购率

select count(distinct t1.client_id)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.da_lyuser t3 on t1.client_id=t3.users_id_fk
 where t1.order_day>=to_date('2018-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2019-01-01','yyyy-mm-dd')
   and t2.flag=0
   and t1.nationflag<>'国内'
   and t1.client_id>0
   and t1.channel in('网站','手机')
   and exists(
   select 1
 from dw.fact_order_detail tt1
 join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
 join dw.da_lyuser tt3 on tt1.client_id=tt3.users_id_fk
 where tt1.order_day>=to_date('2017-01-01','yyyy-mm-dd')
   and tt1.order_day< to_date('2018-01-01','yyyy-mm-dd')
   and tt2.flag=0
   and tt1.nationflag<>'国内'
   and tt1.client_id>0
   and tt1.channel in('网站','手机')
   and t1.client_id=tt1.client_id);
   
    
   select count(distinct t1.client_id)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.da_lyuser t3 on t1.client_id=t3.users_id_fk
 where t1.order_day>=to_date('2018-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2019-01-01','yyyy-mm-dd')
   and t2.flag=0
   and t1.client_id>0
   and t1.nationflag<>'国内'
   and t1.channel in('网站','手机')
   and exists(
   select 1
 from dw.fact_order_detail tt1
 join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
 join dw.da_lyuser tt3 on tt1.client_id=tt3.users_id_fk
 where tt1.order_day>=to_date('2017-01-01','yyyy-mm-dd')
   and tt1.order_day< to_date('2018-01-01','yyyy-mm-dd')
   and tt2.flag=0
   and tt1.nationflag='国内'
   and tt1.client_id>0
   and tt1.channel in('网站','手机')
   and t1.client_id=tt1.client_id);
   

      
select count(distinct tt1.client_id)
 from dw.fact_order_detail tt1
 join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
 join dw.da_lyuser tt3 on tt1.client_id=tt3.users_id_fk
 where tt1.order_day>=to_date('2017-01-01','yyyy-mm-dd')
   and tt1.order_day< to_date('2018-01-01','yyyy-mm-dd')
   and tt2.flag=0
   and tt1.nationflag<>'国内'
   and tt1.client_id>0
   and tt1.channel in('网站','手机');



 ------284、周航班量

 --航站、航班量    以周为单位   现在执行的航班量
 
 
 select t1.originairport_name,count(distinct t1.flights_id)
  from dw.da_flight t1
  where t1.flight_date>=to_date('2021-04-19','yyyy-mm-dd')
    and t1.flight_date<=to_date('2021-04-25','yyyy-mm-dd')
    and t1.flag=0
    and t1.company_id=0
    group by t1.originairport_name



 ------285、失信人员/暂无服务能力旅客


select *
 from CUST.CQ_CREDIT_PENALTY_INFO@to_air
 --where users_name='姬智'
  where card_num='210106196801244938';
 
select * from dba_tab_comments@to_air t1
 where t1.comments like '%法%';
 
-------------------------------------------------------------------20210412-------------------------------------------------------------------------
 ------286、
select count(distinct t1.originairport_name) 航点       
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)
 and t1.flag=0
 and t1.company_id=0
 
 
  select t2.wf_segment,t2.flights_segment_name,avg(t1.mile)      
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=trunc(sysdate)
   and t1.company_id=0
   and t1.flag<>2
   group by t2.wf_segment,t2.flights_segment_name;




 ------287、查询旅客


select t1.flights_order_id 订单号,t1.flights_date 航班日期,t1.whole_flight 航班号,t2.flights_segment_name 航段
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=trunc(sysdate)-60
 and t1.traveller_name ='陈爱平'
 and t1.flights_order_head_id iN(285904354,285904356);


-----------------------------------------------------20210419---------------------------------------------------------------
 ------288、新加坡数据

select to_char(t1.flight_date,'yyyymm'),t1.flight_date,t1.route_name,count(1),sum(t1.checkin_num),sum(t1.checkin_mile),suM(t1.checkin_s_mile)
 from hdb.recent_flights_cost t1
 where t1.flight_date>=to_date('2017-01-01','yyyy-mm-dd')
   and t1.flight_date< to_date('2020-02-03','yyyy-mm-dd')
   and t1.route_name like '%新加坡%'
   group by to_char(t1.flight_date,'yyyymm'),t1.flight_date,t1.route_name
   
   
   select to_char(t2.flights_date,'yyyy'),t3.segment_country,count(distinct t3.flights_id),suM(t2.boardnum)
    from dw.da_main_order  t2
    join dw.da_flight t3 on t2.segment_head_id=t3.segment_head_id
    where t3.nationflag='国际'
      and t2.flights_date>=to_date('2017-01-01','yyyy-mm-dd')
      and t2.flights_date< to_date('2020-01-01','yyyy-mm-dd')
      and t3.flag=0
      group by t3.segment_country,to_char(t2.flights_date,'yyyy');


 ------289、数字人民币

 select t1.flights_date 航班日期,t3.flights_segment_name 航段,
  case when t1.flights_order_id ='XLXJMH' then '深圳'
       when  t1.flights_order_id ='XNYNXC' then '苏州' end  城市,t2.age 年龄,'已乘机' 机票状态
   from dw.fact_recent_order_detail t1
   join dw.bi_order_region t2 on t1.flights_order_head_id=t2.flights_order_head_id
   join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
   where t1.flights_order_id in('XOSSJL','XOJQPV','XNYNXC','XLXJMH');


 ------290、市场调节价

 select 
t4.wf_segment,t.part,count(1)
 from dw.fact_orderhead_trippurpose@to_ods t
 join dw.fact_order_detail t1 on t.flights_order_head_id=t1.flights_order_head_Id
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join hdb.temp_feng_04202 t4 on t2.origincity||t2.destcity =t4.segment1
 where t1.flag_id=40
   and t1.flights_date>=to_date('2021-03-01','yyyy-mm-dd')
   and t1.flights_date< trunc(sysdate)
   and t1.whole_flight like '9C%'
   group by t4.wf_segment,t.part;


---------------------------------------------20210420-------------------------------------------------------------------
 ------291、

select part,count(1)
 from dw.fact_orderhead_trippurpose
 group by part;

 ------292、黑名单联系方式提取（联系方式提醒）

select t1.r_tel
  from cqsale.cq_order t
  join cqsale.cq_order_head t1 on t.flights_order_id=t1.flights_Order_id
  where t1.r_order_date>=trunc(sysdate)-180
    and t1.r_order_date< trunc(sysdate)
    and t1.whole_flight like '9C%'
    and t1.flag_id in(3,5,40,41)
    and t.terminal_id<0
    and length(t1.r_tel)>=11
    and t1.seats_name not in('B','G','G1','G2','O')
    and t.web_id=0
    and not exists(select 1
     from cqsale.cq_agent_info t2
     where t2.tel2=t1.r_tel
     and t2.tel2 is not null)
     and not exists( 
     select 1
  from cqsale.cq_black_agent_phone t3
  where t3.tel=t1.r_tel
  and t3.flag=1)
  group by t1.r_tel
  having count(1)>=200;

-----------------------------------------------------------------20210425-------------------------------------------------------
 ------293、兰州计划量

select t1.origincity||t1.destcity,sum(t1.oversale)
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)-7
   and t1.flight_date< trunc(sysdate)
   and t1.segment_code like '%LHW%'
   and t1.flag=0
group by t1.origincity||t1.destcity;


 ------294、日销售机票量

select t1.order_day,sum(case when t1.seats_name in('B','G1','G','G2') then 1 else 0 end),
count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.order_day>=to_date('2018-01-01','yyyy-mm-dd')
  and t1.order_day< trunc(sysdate)
  and t1.company_id=0
  and t1.seats_name is not null
  group by t1.order_day;
  

 ------295、查询目前机票的优惠政策（优惠规则、优惠券）

select t1.flights_order_id,t1.flights_Order_head_id,t1.change_flag,t1.order_day,case when t4.users_id is not null then '黑代'
else '非代理' end 代理与否,t1.sub_channel,t1.flights_date,
t2.flights_segment_name 航段,t1.flag_id,t1.seat_type,t1.ticket_price,t1.min_seat_price,
t1.insurce_fee+t1.other_fee 辅收,t3.youhui_id,t3.youhui_result,tt3.memo,t5.batch_id,t6.act_name,t5.yhq_id,t5.use_money,t4.feature,t4.feature_value
from dw.Fact_recent_Order_Detail t1
join dw.da_flight t2 on t2.segment_head_id=t1.segment_head_id
left join stg.c_cq_order_youhui_detail t3 on t1.flights_order_head_id=t3.flights_order_head_id
left join stg.c_cq_youhui_policy_main tt3 on t3.youhui_id=tt3.id
left join dw.bi_yhq_use t5 on t5.flights_order_head_id=t1.flights_order_head_id
left join dw.bi_yhq_batch t6 on t5.batch_id=t6.batch_id
left join dw.da_restrict_userinfo t4 on t1.client_id=t4.users_id
where t1.flights_Order_id='XPNJFE';


 ------296、


--------服务优惠券中有多少是代理使用

select 
case
         when t1.start_time >= to_date('2018-11-01', 'yyyy-mm-dd') and
              t1.start_time < to_date('2019-04-17', 'yyyy-mm-dd') then
          1
         when t1.start_time >= to_date('2019-04-17', 'yyyy-mm-dd') and
              t1.start_time < to_date('2019-11-15', 'yyyy-mm-dd') then
          2
       
         when t1.start_time >= to_date('2019-11-15', 'yyyy-mm-dd') then
          3
       end 时间,       
       t1.batch_no,
       t2.act_name,
       t1.activity_name,
       t2.total_num,
       t2.create_user,
       t2.create_date,
       t2.money_var,
       t1.id,
       case when t3.users_id is not null then '代理'
          else '非代理' end
  from hdb.cms_yhq_create t1
  left join dw.bi_yhq_batch t2 on to_char(t1.batch_no) = to_char(t2.batch_id)
  left join dw.da_restrict_userinfo@to_ods t3 on t1.quan_user=t3.users_id or t1.quan_user=t3.mobile
 where t1.start_time >= to_date('2018-11-01', 'yyyy-mm-dd')
   and nvl(t2.act_name, '-') like '%服务%'
   and (t1.expand_feild is not null or t1.quan_status = '1'); 


 ------297、--优惠券状态 0 未兑换 1 已兑换 2 已作废 3 已过期

select tb1.*,tb2.crm_succ,tb2.crm_fail,tb2.crm_canc
from(
select 
case
         when t1.start_time >= to_date('2018-11-01', 'yyyy-mm-dd') and
              t1.start_time < to_date('2019-04-17', 'yyyy-mm-dd') then
          1
         when t1.start_time >= to_date('2019-04-17', 'yyyy-mm-dd') and
              t1.start_time < to_date('2019-11-15', 'yyyy-mm-dd') then
          2
       
         when t1.start_time >= to_date('2019-11-15', 'yyyy-mm-dd') then
          3
       end 时间,
       
       t1.batch_no,
       t2.act_name,
       t1.activity_name,
       t2.total_num,
       t2.create_user,
       t2.create_date,
       t2.money_var,
       count(1) 生成量,
       sum(case
             when t1.expand_feild is not null then
              1
             when t1.quan_status = '1' then
              1
             else
              0
           end) 兑换量,
       t2.money_var * sum(case
                            when t1.expand_feild is not null then
                             1
                            when t1.quan_status = '1' then
                             1
                            else
                             0
                          end) 优惠金额
  from hdb.cms_yhq_create t1
  left join dw.bi_yhq_batch t2 on to_char(t1.batch_no) = to_char(t2.batch_id)
 where t1.start_time >= to_date('2018-11-01', 'yyyy-mm-dd')
   and nvl(t2.act_name, '-') like '%服务%'
 group by case
            when t1.start_time >= to_date('2018-11-01', 'yyyy-mm-dd') and
                 t1.start_time < to_date('2019-04-17', 'yyyy-mm-dd') then
             1
            when t1.start_time >= to_date('2019-04-17', 'yyyy-mm-dd') and
                 t1.start_time < to_date('2019-11-15', 'yyyy-mm-dd') then
             2
          
            when t1.start_time >= to_date('2019-11-15', 'yyyy-mm-dd') then
             3
          end,
          t1.batch_no,
          t2.act_name,
          t1.activity_name,
          t2.money_var,
              t2.total_num,
       t2.create_user,
       t2.create_date)tb1
       left join(select --trunc(sd.sendtime) dd,
              -- b.serve_depart,
               b.batch_id,
               sum(case
                     when sd.sendstatus = 'SendSuccess' then
                      1
                     else
                      0
                   end) crm_succ,
               sum(case
                     when sd.sendstatus = 'SendFail' then
                      1
                     else
                      0
                   end) crm_fail,
               sum(case
                     when sd.sendstatus = 'Cancle' then
                      1
                     else
                      0
                   end) crm_canc,
               0 gds,
               0 use1,
               0 fee1,
               0 use2,
               0 fee2
          from dw.bi_yhq_batch b
          join hdb.crm_ts_send_coupon_detail sd on sd.couponno = b.batch_id
         where b.serve_depart is not null --服务类优惠券          
         group by /*trunc(sd.sendtime), b.serve_depart, */b.batch_id)tb2 on tb1.batch_no=tb2.batch_id;




 ------298、优惠券ID

select t1.*,tb2.*,tb3.*
from dw.bi_yhq_batch t1
left join (select t2.batch_id,count(distinct yhq_id) usenum,suM(t2.use_money) use_money
from dw.bi_yhq_use t2 
group by t2.batch_id) tb2 on t1.batch_id=tb2.batch_id
left join (select t3.batch_id,suM(t3.atv_num) atv_num
from dw.bi_yhq_atv t3
group by t3.batch_id)tb3 on t1.batch_id=tb3.batch_id;


 ------299、 非本人使用的已领取未使用的优惠券的数据

select t1.batch_id,t1.act_name,t1.total_num,t1.out_date,t1.flights_date_b1,t1.flights_date_e1,t1.status,t1.create_user,
t1.if_same_name,t1.money_var,t1.serve_depart,tb2.usenum,tb2.use_money,tb3.atv_num,(tb3.atv_num-tb2.usenum)*t1.money_var
from dw.bi_yhq_batch t1
left join (select t2.batch_id,count(distinct yhq_id) usenum,suM(t2.use_money) use_money
from dw.bi_yhq_use t2 
group by t2.batch_id) tb2 on t1.batch_id=tb2.batch_id
left join (select t3.batch_id,suM(t3.atv_num) atv_num
from dw.bi_yhq_atv t3
group by t3.batch_id)tb3 on t1.batch_id=tb3.batch_id
where t1.if_same_name like '%非本人%'
and t1.act_name like '%服务%'
and t1.flights_date_e1>=trunc(sysdate);



select t4.batch_id,t4.act_name,t4.total_num,t4.out_date,t4.flights_date_b1,t4.flights_date_e1,t4.status,t4.create_user,
t4.if_same_name,t4.money_var,t4.serve_depart,t1.users_id,t1.id yhq_id,t1.status,t1.create_date,
t3.totaluse,t3.usemoney
 from YHQ.CQ_NEW_YHQ_RELATION@to_air  t1
 join dw.bi_yhq_batch t4 on t1.create_id=t4.batch_id
 left join (select yhq_id,sum(t2.use_money) totaluse,sum(case when t2.flag=1 then t2.use_money else 0 end) usemoney
 from dw.bi_yhq_use t2 
 where t2.version='2'
 group by yhq_id)t3 on t1.id=t3.yhq_id
 where t4.if_same_name like '%非本人%'
and t4.act_name like '%服务%'
and t4.flights_date_e1>=trunc(sysdate);



 ------300、服务优惠券发送的每张券的原因


select tb1.*,tb2.*
from(
select t4.batch_id,t4.act_name,t4.total_num,t4.out_date,t4.flights_date_b1,t4.flights_date_e1,t4.status batch_status,t4.create_user,
t4.if_same_name,t4.money_var,t4.serve_depart,t1.users_id,t1.id yhq_id,t1.status,t1.create_date,
t3.totaluse,t3.usemoney
 from YHQ.CQ_NEW_YHQ_RELATION@to_air  t1
 join dw.bi_yhq_batch t4 on t1.create_id=t4.batch_id
 left join (select yhq_id,sum(t2.use_money) totaluse,sum(case when t2.flag=1 then t2.use_money else 0 end) usemoney
 from dw.bi_yhq_use t2 
 where t2.version='2'
 group by yhq_id)t3 on t1.id=t3.yhq_id
 where t4.if_same_name like '%非本人%'
and t4.act_name like '%服务%'
and t4.flights_date_e1>=trunc(sysdate))tb1
left join hdb.crm_yhq_reason tb2 on tb1.batch_id=tb2.couponno and tb1.yhq_id=tb2.couponid and tb2.couponid is not null;

 ------301、各城市往返国际的航班量、吞吐量

select t1.other_segment_country,t1.weeks,count(distinct t1.flights_id),sum(t2.boardnum)
 from dw.da_flight t1
 join dw.da_main_order t2 on t1.segment_head_id=t2.segment_head_id
 where/* t1.nationflag='国际'
 and*/ t1.flight_date>=to_date('2019-01-01','yyyy-mm-dd')
 and t1.flight_date< to_date('2020-01-01','yyyy-mm-dd')
 and t1.weeks<>'2019-01'
 and t1.weeks='2019-52'
 group by t1.other_segment_country,t1.weeks


 ------302、


/*
延误发布后（15分钟以上），旅客自愿退改每天的退票量、退票金额
延误未发布，旅客noshow/减客 航班起飞后的得知延误15分钟以上旅客自愿退票的数据
黑代理通过大数据系统预判航班延误，截留旅客自愿退票信息，自行到航司进行非自愿退票，从中赚取差价（ 黑代理当日退票）
*/



select t2.flight_date,case when t5.publish_date is not null and  delaytime>=15/60 and delaytime<=1 then '发布延误1小时'
when t5.publish_date is not null and  delaytime>=1 and delaytime<3 then '发布延误1~3小时'
when t5.publish_date is not null and  delaytime>=3  then '发布延误3小时以上'
when t6.dep_time-t2.origin_std>=15/(60*24) or t6.land_time-t2.dest_sta>=15/(60*24) then '未发布实际起飞及降落超过15分钟'
else '其他' end,
case when t5.publish_date is not null and  delaytime>=15/60 and t1.money_fy>0 and t1.money_date>=t5.publish_date 
then '发布延误后自愿退改'
when t6.dep_time-t2.origin_std>=15/(60*24) and t1.money_fy>0 and t1.money_date>=t2.origin_std then '未发布起飞延误自愿退改'
when t6.land_time-t2.dest_sta>=15/(60*24) and t1.money_fy>0 and t1.money_date>=t2.dest_sta then '未发布落地延误自愿退改'
else '正常' end,
count(1),
sum(t1.money_fy)
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join ( 
 select *
 from(
 select flight_date,flight_no,oriairport||destairport segment_code,to_number(t3.delaytime) delaytime, t3.publish_date,
 row_number()over(partition by flight_date,flight_no,oriairport||destairport order by t3.publish_date) xid
 from stg.s_cq_unnormal_flights t3
 where UNNORMALTYPE=1
 and t3.publish_date is not null )t4
 where t4.xid=1)t5 on t2.flight_date=t5.flight_date and t2.flight_no=t5.flight_no and t2.segment_code=t5.segment_code
 left join dw.da_foc_flight t6 on t2.segment_head_id=t6.segment_head_id
 where t2.flight_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t2.flight_date< to_date('2021-04-29','yyyy-mm-dd')
   group by t2.flight_date,case when t5.publish_date is not null and  delaytime>=15/60 and delaytime<=1 then '发布延误1小时'
when t5.publish_date is not null and  delaytime>=1 and delaytime<3 then '发布延误1~3小时'
when t5.publish_date is not null and  delaytime>=3  then '发布延误3小时以上'
when t6.dep_time-t2.origin_std>=15/(60*24) or t6.land_time-t2.dest_sta>=15/(60*24) then '未发布实际起飞及降落超过15分钟'
else '其他' end,
case when t5.publish_date is not null and  delaytime>=15/60 and t1.money_fy>0 and t1.money_date>=t5.publish_date 
then '发布延误后自愿退改'
when t6.dep_time-t2.origin_std>=15/(60*24) and t1.money_fy>0 and t1.money_date>=t2.origin_std then '未发布起飞延误自愿退改'
when t6.land_time-t2.dest_sta>=15/(60*24) and t1.money_fy>0 and t1.money_date>=t2.dest_sta then '未发布落地延误自愿退改'
else '正常' end;
   

--------------------------------------------------------------------------20210430-----------------------------------------------------------

 ------303、开航以来航线

select distinct split_part(replace(replace(t2.wf_segment,'虹桥','上海'),'浦东','上海'),'＝',1)||
split_part(replace(replace(t2.wf_segment,'虹桥','上海'),'浦东','上海'),'＝',2),
split_part(replace(replace(t2.wf_segment,'虹桥','上海'),'浦东','上海'),'＝',2)||
split_part(replace(replace(t2.wf_segment,'虹桥','上海'),'浦东','上海'),'＝',1)
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.company_id=0
 and t1.flag=0
 and t1.nationflag='国内'
 and t1.flight_no like '9C%';


 ------304、空铁数据
select to_char(t1.ori_date,'yyyy'),t2.producer_name,t3.province,t3.city,
case when t1.id<0 then '团队'
else '非团队' end,count(1)
 from dw.fact_ly_flight_train t1
 join cqsale.cq_traffic_producer@to_air t2 on t1.producer_id=t2.id
left join dw.adt_region_code t3 on substr(t1.code_no,1,6)=t3.regioncode
 where t1.ori_date>=to_date('2015-01-01','yyyy-mm-dd')
  and t1.ori_date<  to_date('2021-04-30','yyyy-mm-dd')
  --and t3.id is null
 group by to_char(t1.ori_date,'yyyy'),t2.producer_name,t3.province,t3.city,
case when t1.id<0 then '团队'
else '非团队' end

-------------------------------------------------------------20210506-----------------------------------------------------------------------------
 ------305、五一销售数据分析


select '2021' 年,to_char(h1.flight_date,'mmdd') 日,h1.*,h2.backnum,h2.combo_num,h2.unnormal_num
from(
select t1.flight_date,t1.route_name,decode(t1.nation_flag,1,'国内',2,'区域',3,'国际')  nationflag,
sum(t1.bax_num) bax_num,sum(t1.plan) plan,sum(t1.checkin_num) checkin_num,sum(T1.CHECKIN_MILE) CHECKIN_MILE,SUM(T1.CHECKIN_S_MILE) CHECKIN_S_MILE,
sum(t1.total_income) totalincome,sum(t1.it_ticket_income) 散客收入,sum(t1.it_num) 散客量,count(1)
 from hdb.recent_flights_cost t1
 where t1.flight_date>=to_date('2021-04-29','yyyy-mm-dd')
   and t1.flight_date< to_date('2021-05-06','yyyy-mm-dd')
   group by t1.flight_date,t1.route_name,t1.nation_flag)h1
   left join(
 select trunc(t1.origin_std) flightdate,t2.route_name,t2.nationflag,count(1) backnum,
 sum(case when t3.flights_order_head_id is not null then 1 else 0 end) combo_num,
  sum(case when t3.flights_order_head_id is  null and t1.money_fy=0 then 1 else 0 end) unnormal_num 
  from dw.da_order_drawback t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
  where t1.origin_std>=to_date('2021-04-29','yyyy-mm-dd')
    and t1.origin_std< to_date('2021-05-06','yyyy-mm-dd')
   group by trunc(t1.origin_std),t2.route_name,t2.nationflag)h2 on h1.flight_date=h2.flightdate and h1.route_name=h2.route_name
   
   
union all

select '2019' 年,to_char(h1.flight_date,'mmdd') 日,h1.*,h2.backnum,h2.combo_num,h2.unnormal_num
from(
select t1.flight_date,t1.route_name,decode(t1.nation_flag,1,'国内',2,'区域',3,'国际')  nationflag,
sum(t1.bax_num) bax_num,sum(t1.plan) plan,sum(t1.checkin_num) checkin_num,sum(T1.CHECKIN_MILE) CHECKIN_MILE,SUM(T1.CHECKIN_S_MILE) CHECKIN_S_MILE,
sum(t1.total_income) totalincome,sum(t1.it_ticket_income) 散客收入,sum(t1.it_num) 散客量,count(1)
 from hdb.recent_flights_cost t1
 where t1.flight_date>=to_date('2019-04-29','yyyy-mm-dd')
   and t1.flight_date< to_date('2019-05-06','yyyy-mm-dd')
   group by t1.flight_date,t1.route_name,t1.nation_flag)h1
   left join(
 select trunc(t1.origin_std) flightdate,t2.route_name,t2.nationflag,count(1) backnum,
 sum(case when t3.flights_order_head_id is not null then 1 else 0 end) combo_num,
  sum(case when t3.flights_order_head_id is  null and t1.money_fy=0 then 1 else 0 end) unnormal_num 
  from dw.da_order_drawback t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
  where t1.origin_std>=to_date('2019-04-29','yyyy-mm-dd')
    and t1.origin_std< to_date('2019-05-06','yyyy-mm-dd')
   group by trunc(t1.origin_std),t2.route_name,t2.nationflag)h2 on h1.flight_date=h2.flightdate and h1.route_name=h2.route_name;





select '2019',to_char(t1.flights_date,'mmdd') flightdate,t1.flights_date,case when t1.ahead_days<=30 then to_char(t1.ahead_days,'00')
 else '30+' end,count(1),sum(t1.ticket_price)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2019-04-29','yyyy-mm-dd')
   and  t1.flights_date< to_date('2019-05-06','yyyy-mm-dd')
   and  t1.nationflag='国内'
   and  t2.flag<>2
   and t1.company_id=0
   and t1.seats_name not in('B','G','G1','G2','O')
   and t1.ticket_price>0
   group by  to_char(t1.flights_date,'mmdd'),t1.flights_date,case when t1.ahead_days<=30 then to_char(t1.ahead_days,'00')
 else '30+' end
   
  union all
  
  
   select '2021',to_char(t1.flights_date,'mmdd'),t1.flights_date,case when t1.ahead_days<=30 then to_char(t1.ahead_days,'00')
 else '30+' end,count(1),sum(t1.ticket_price)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2021-04-29','yyyy-mm-dd')
   and  t1.flights_date< to_date('2021-05-06','yyyy-mm-dd')
   and  t1.nationflag='国内'
   and  t2.flag<>2
   and t1.company_id=0
   and t1.seats_name not in('B','G','G1','G2','O')
   and t1.ticket_price>0
   group by  to_char(t1.flights_date,'mmdd'),t1.flights_date,case when t1.ahead_days<=30 then to_char(t1.ahead_days,'00')
 else '30+' end



-----------------------------------------------------------------20210507------------------------------------------------------------------

 ------306、昆明-上海购票、退票、改签历史记录

select p.*,
sum(p.票数) over(partition by p.航班号, p.航班日期, p.航段 order by p.操作时间, p.机票流水号) 当时总数
from (
--订票非改签入
select '订票' 分类,
--t1.r_order_date 订单日期,
t2.flight_no 航班号,
t2.flight_date 航班日期,
t2.segment_code 航段,
t1.flights_order_id 订单号,
t1.flights_order_head_id 机票流水号,
t1.r_order_date 操作时间,
t1.name || '****' 旅客姓名,
substr(t1.r_tel, -4, 4) 紧急联系电话尾数,
decode(t1.sex, 1, '成人', 2, '儿童', 3, '婴儿') 类型,
f.flag_name 状态,
t1.ticket_price * nvl(t1.r_com_rate, 1) 票价,
t1.ad_fy * nvl(t1.r_com_rate, 1) 燃油,
nvl(t1.ex_cfd2, replace(t1.ex_cfd10, '1', 'PC')) 座位类型,
case when t1.flag_id in (3,5,41) then 0 else 1 end 票数,
t2.oversale 计划量
from dw.da_flight t2
join stg.s_cq_order_head t1 on t1.segment_head_id =
t2.segment_head_id
join stg.s_cq_order_head_flag f on f.flag = t1.flag_id
where t2.company_id = 0
and t1.seats_name is not null
and t2.flights_city_name in('昆明－上海','昆明－南京')
and t2.flight_date>=to_date('2018-12-01', 'yyyy-mm-dd')
and t2.flight_date<=to_date('2018-12-03', 'yyyy-mm-dd')
and t1.flag_id in (3, 5, 40, 41,7,11,12)
and not exists
(select 1
from (select flights_order_head_id,
modify_date,
old_segment_id,
nvl(lead(old_segment_id, 1)
over(partition by flights_order_head_id
order by modify_date),
new_segment_id) new_segment_id
from dw.da_order_change) c
where c.flights_order_head_id = t1.flights_order_head_id
and c.new_segment_id = t1.segment_head_id)

union all

--改签入
select '改签入' 分类,
--t1.r_order_date 订单日期,
t2.flight_no 航班号,
t2.flight_date 航班日期,
t2.segment_code 航段,
t1.flights_order_id 订单号,
t1.flights_order_head_id 机票流水号,
c.modify_date 操作时间,
t1.name || '****' 旅客姓名,
substr(t1.r_tel, -4, 4) 紧急联系电话尾数,
decode(t1.sex, 1, '成人', 2, '儿童', 3, '婴儿') 类型,
f.flag_name 状态,
t1.ticket_price * nvl(t1.r_com_rate, 1) 票价,
t1.ad_fy * nvl(t1.r_com_rate, 1) 燃油,
nvl(t1.ex_cfd2, replace(t1.ex_cfd10, '1', 'PC')) 座位类型,
1 票数,
t2.oversale 计划量
from dw.da_flight t2
join (select flights_order_head_id,
modify_date,
old_segment_id,
nvl(lead(old_segment_id, 1)
over(partition by flights_order_head_id order by
modify_date),
new_segment_id) new_segment_id
from dw.da_order_change) c on c.new_segment_id =
t2.segment_head_id
join stg.s_cq_order_head t1 on t1.flights_order_head_id =
c.flights_order_head_id
join stg.s_cq_order_head_flag f on f.flag = t1.flag_id
where t2.company_id = 0
and t1.seats_name is not null
and t2.flights_city_name in('昆明－上海','昆明－南京')
and t2.flight_date>=to_date('2018-12-01', 'yyyy-mm-dd')
and t2.flight_date<=to_date('2018-12-03', 'yyyy-mm-dd')
and t1.flag_id in (3, 5, 40, 41, 7, 11, 12)

union all

--改签出
select '改签出' 分类,
--t1.r_order_date,
t2.flight_no 航班号,
t2.flight_date 航班日期,
t2.segment_code 航段,
t1.flights_order_id 订单号,
t1.flights_order_head_id 机票流水号,
c.modify_date 操作时间,
t1.name || '****' 旅客姓名,
substr(t1.r_tel, -4, 4) 紧急联系电话尾数,
decode(t1.sex, 1, '成人', 2, '儿童', 3, '婴儿') 类型,
f.flag_name 状态,
t1.ticket_price * nvl(t1.r_com_rate, 1) 票价,
t1.ad_fy * nvl(t1.r_com_rate, 1) 燃油,
nvl(t1.ex_cfd2, replace(t1.ex_cfd10, '1', 'PC')) 座位类型,
-1 票数,
t2.oversale 计划量
from dw.da_flight t2
join dw.da_order_change c on c.old_segment_id = t2.segment_head_id
join stg.s_cq_order_head t1 on t1.flights_order_head_id =
c.flights_order_head_id
join stg.s_cq_order_head_flag f on f.flag = t1.flag_id
where t2.company_id = 0
and t1.seats_name is not null
and t2.flights_city_name in('昆明－上海','昆明－南京')
and t2.flight_date>=to_date('2018-12-01', 'yyyy-mm-dd')
and t2.flight_date<=to_date('2018-12-03', 'yyyy-mm-dd')
and t1.flag_id in (3, 5, 40, 41, 7, 11, 12)

union all



select '订票' 分类,
--t1.r_order_date,
t2.flight_no 航班号,
t2.flight_date 航班日期,
t2.segment_code 航段,
t1.flights_order_id 订单号,
t1.flights_order_head_id 机票流水号,
t1.r_order_date 操作时间,
t1.name || '****' 旅客姓名,
substr(t1.r_tel, -4, 4) 紧急联系电话尾数,
decode(t1.sex, 1, '成人', 2, '儿童', 3, '婴儿') 类型,
f.flag_name 状态,
t1.ticket_price * nvl(t1.r_com_rate, 1) 票价,
t1.ad_fy * nvl(t1.r_com_rate, 1) 燃油,
nvl(t1.ex_cfd2, replace(t1.ex_cfd10, '1', 'PC')) 座位类型,
1 票数,
t2.oversale 计划量
from dw.da_flight t2
join dw.da_order_change c on c.old_segment_id = t2.segment_head_id
join stg.s_cq_order_head t1 on t1.flights_order_head_id =
c.flights_order_head_id
join stg.s_cq_order_head_flag f on f.flag = t1.flag_id
where t2.company_id = 0
and t1.seats_name is not null
and t2.flights_city_name in('昆明－上海','昆明－南京')
and t2.flight_date>=to_date('2018-12-01', 'yyyy-mm-dd')
and t2.flight_date<=to_date('2018-12-03', 'yyyy-mm-dd')
and t1.flag_id in (3, 5, 40, 41, 7, 11, 12)
and not exists
(select 1
from (select flights_order_head_id,
modify_date,
old_segment_id,
nvl(lead(old_segment_id, 1)
over(partition by flights_order_head_id
order by modify_date),
new_segment_id) new_segment_id
from dw.da_order_change) c1
where c1.flights_order_head_id = t1.flights_order_head_id
and c1.new_segment_id = t2.segment_head_id)


union all


--退票
select '退票' 分类,
--t1.r_order_date 订单日期,
t2.flight_no 航班号,
t2.flight_date 航班日期,
t2.segment_code 航段,
t1.flights_order_id 订单号,
t1.flights_order_head_id 机票流水号,
d.money_date 操作时间,
t1.name || '****' 旅客姓名,
substr(t1.r_tel, -4, 4) 紧急联系电话尾数,
decode(t1.sex, 1, '成人', 2, '儿童', 3, '婴儿') 类型,
f.flag_name 状态,
t1.ticket_price * nvl(t1.r_com_rate, 1) 票价,
t1.ad_fy * nvl(t1.r_com_rate, 1) 燃油,
nvl(t1.ex_cfd2, replace(t1.ex_cfd10, '1', 'PC')) 座位类型,
-1 票数,
t2.oversale 计划量
from dw.da_flight t2
join dw.da_order_drawback d on d.segment_head_id =
t2.segment_head_id
join stg.s_cq_order_head t1 on t1.flights_order_head_id =
d.flights_order_head_id
join stg.s_cq_order_head_flag f on f.flag = t1.flag_id
where t2.company_id = 0
and t2.flights_city_name in('昆明－上海','昆明－南京')
and t2.flight_date>=to_date('2018-12-01', 'yyyy-mm-dd')
and t2.flight_date<=to_date('2018-12-03', 'yyyy-mm-dd')
and t1.flag_id in (7, 11, 12)) p;


---------------------------------------------------------20210511----------------------------------------------------------------------
 ------307、

----新航线销售分析

select t2.wf_segment_name 往返航线,t1.route_name 航线,sum(t1.bax_num)/suM(t1.totalnum) 包销比例,
suM(t1.checkin_mile)/suM(t1.checkin_s_mile) 客座率,suM(t1.total_income)/suM(t1.totalnum) 均价,
suM(t1.it_ticket_income+t1.it_ad_fy_income)/suM(t1.it_num) 散客均价,count(1) 航班量
 from hdb.recent_flights_cost t1
 left join(
select distinct route_name,wf_segment_name
 from dw.dim_segment_type) t2 on t1.route_name=t2.route_name
 where t1.route_name in ('扬州泰州－榆林',  '榆林－扬州泰州',
'舟山－西安',  '西安－舟山',
'南昌－桂林',  '桂林－南昌',
'揭阳－三明－青岛',  '青岛－三明－揭阳',
'兰州－常州',  '常州－兰州',
'揭阳－合肥－银川',  '银川－合肥－揭阳',
'呼和浩特－温州',  '温州－呼和浩特',
'扬州泰州－南昌－北海',  '北海－南昌－扬州泰州',
'石家庄－广元－贵阳',  '贵阳－广元－石家庄',
'扬州泰州－银川',  '银川－扬州泰州',
'南昌－盐城－呼和浩特',  '呼和浩特－盐城－南昌',
'深圳－石家庄－通辽',  '通辽－石家庄－深圳',
'宁波－盐城－银川',  '银川－盐城－宁波',
'虹桥－延安',  '延安－虹桥',
'浦东－延安',  '延安－浦东'
)
and t1.flight_date>=to_date('2021-04-01','yyyy-mm-dd')
and t1.flight_date< to_date('2021-05-01','yyyy-mm-dd')
and t1.checkin_s_mile>0
and t1.checkin_mile>0
group by t2.wf_segment_name,t1.route_name;



 ------308、5.9秒杀分析


select to_char(t.order_date,'yyyymmdd') 日期,
to_char(t.order_date,'hh24') 时刻, 
trunc(to_number(to_char(t.order_date,'mi'))/10)*10||'~'||(trunc(to_number(to_char(t.order_date,'mi'))/10)+1)*10 时刻2,

       count(1) 票量,
       sum(case when t.terminal_id=-1 and t.web_id=0 then 1 else 0 end) 线上自有销量,
       sum(case when t1.seats_name='P2' then 1 else 0 end) P2舱销量       
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_air t1 on t.flights_order_id =t1.flights_order_id
  --join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  /*left join dw.da_restrict_userinfo t5 on t.client_id = t5.users_id
  left join (select flights_order_head_id,
                    nvl(is_beneficiary, 0) is_beneficiary,
                    youhui_result
               from cust.cq_order_youhui_detail@to_air
              where product_type = 0
                and yh_ret_time is null
                and youhui_result is not null
                and youhui_id in (1129,1130, 1137,1138)
                and create_date >= trunc(sysdate)) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id*/
 where t.order_date>= to_date('20210509','yyyymmdd')
   and t.order_date < sysdate
  and t1.seats_name is not null
   and t1.whole_flight like '9C%'   
   and t.order_date< to_date('2021-05-11 13:30','yyyy-mm-dd hh24:mi')
   and t1.flag_id in(3,5,40,2)
   --and t.flights_order_id='XSDWKI'
 group by to_char(t.order_date,'yyyymmdd') ,to_char(t.order_date,'hh24') , 
trunc(to_number(to_char(t.order_date,'mi'))/10)*10||'~'||(trunc(to_number(to_char(t.order_date,'mi'))/10)+1)*10
order by 2,3;


select trunc(t.order_date) 日期,
to_char(t.order_date,'hh24') 时刻, 

       case
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 <= 1 then
          '网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 = 2 then
          'm网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (3, 8) then
          'IOS'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (4, 9) then
          '安卓'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (5, 10) then
          '微信'
         when t.web_id in(128,146,435,150) then decode(t.web_id,128,'携程',146,'同程',435,'淘宝',150,'去哪儿') 
           when t.terminal_id in
                (300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'
         else '其他' end,
       case
         when t.terminal_id < 0 and t.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'
          when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate =15 then
          '商旅卡'
         when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate in ( 29, 31) then
          '易宝支付'
         when t.terminal_id < 0 and t.web_id = 0 then
          '线上纯量'
          when t.web_id in(128,146,435,150) then decode(t.web_id,128,'携程',146,'同程',435,'淘宝',150,'去哪儿') 
            when t.terminal_id in
                (300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'
         else '其他' end,
           case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end,
       count(1) 票量
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_air t1 on t.flights_order_id =t1.flights_order_id
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo t5 on t.client_id = t5.users_id
  left join (select flights_order_head_id,
                    nvl(is_beneficiary, 0) is_beneficiary,
                    youhui_result
               from cust.cq_order_youhui_detail@to_air
              where product_type = 0
                and yh_ret_time is null
                and youhui_result is not null
                and youhui_id in (1129,1130, 1137,1138)
                and create_date >= to_date('2021-05-09','yyyy-mm-dd')) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id
 where t.order_date>=to_date('2021-05-09','yyyy-mm-dd')
   and t.order_date < sysdate
    and t.order_date< to_date('2021-05-11 13:30','yyyy-mm-dd hh24:mi')
   and t1.r_flights_date >= trunc(sysdate)-8-7
   and t2.flag <> 2
   --and trunc(t.order_date) in(trunc(sysdate),trunc(sysdate)-7,trunc(sysdate)-1)
   and t1.flag_id in (2,3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
   and t.terminal_id< 0
   and t.web_id=0
   and t1.seats_name ='P2'
 group by trunc(t.order_date) ,
to_char(t.order_date,'hh24'), 
       case
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 <= 1 then
          '网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 = 2 then
          'm网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (3, 8) then
          'IOS'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (4, 9) then
          '安卓'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (5, 10) then
          '微信'
        when t.web_id in(128,146,435,150) then decode(t.web_id,128,'携程',146,'同程',435,'淘宝',150,'去哪儿') 
          when t.terminal_id in
                (300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'
         else '其他' end,
       case
         when t.terminal_id < 0 and t.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'
          when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate =15 then
          '商旅卡'
         when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate in ( 29, 31) then
          '易宝支付'
         when t.terminal_id < 0 and t.web_id = 0 then
          '线上纯量'
         when t.web_id in(128,146,435,150) then decode(t.web_id,128,'携程',146,'同程',435,'淘宝',150,'去哪儿') 
           when t.terminal_id in
                (300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'
         else '其他' end,
       case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end;


select h1.orderday,h1.r_flights_date,
case when h1.aheads<=7 then to_char(h1.aheads)
when h1.aheads<=15 then '8~15'
when h1.aheads<=30 then '15~30'
when h1.aheads<=45 then '31~45'
when h1.aheads<=60 then '45~60'
ELSE '60+' END aheads,h1.flights_segment_name,h1.origincity_name,h1.destcity_name,
case when age<12 then '<12'
            when age<18 then '12~17'
            when age<25 then '18~24'
            when age<30 then '25~29'
            when age<40 then '30~39'
            when age<50 then '40~49'
            when age<60 then '50~59'
            when age< 70 then '60~69'
            when age>=70 then '70+' end age,
            h1.gender,h1.nation,h1.province,h1.city,sum(ticketnum),
            sum(ticketprice)
from(
select trunc(t.order_date) orderday,
t1.r_flights_date-trunc(t.order_date) aheads,
t1.r_flights_date,
t2.flights_segment_name,
t2.origincity_name,
t2.destcity_name,
            case WHEN t1.codetype<>1 THEN 
            CASE WHEN t1.birthday IS NOT NULL THEN 
                              floor((trunc(t.order_date)-t1.birthday)/365)
                              ELSE NULL END 
              else getage(t.order_date,t1.birthday)
                              END age ,
     t3.gender ,
     CASE WHEN t3.nationality='CHN' THEN '中国'
          WHEN t3.nationality IS NULL THEN '中国'
          ELSE t6.country_name END nation,
     CASE WHEN (CASE WHEN t3.nationality ='CHN' THEN '中国'
          WHEN t3.nationality IS NULL THEN '中国'
          ELSE t6.country_name END)='中国' THEN 
          CASE WHEN tt1.province IS NOT NULL THEN tt1.province
               WHEN tt1.province IS NULL AND t8.province IS NOT NULL THEN t8.province
               ELSE NULL END 
          ELSE NULL END province,
      CASE WHEN (CASE WHEN t3.nationality ='CHN' THEN '中国'
          WHEN t3.nationality IS NULL THEN '中国'
          ELSE t6.country_name END)='中国' THEN 
          CASE WHEN tt1.province IS NOT NULL THEN tt1.city
               WHEN tt1.province IS NULL AND t8.province IS NOT NULL THEN t8.city
               ELSE NULL END 
          ELSE NULL END city,
                      count(1) ticketnum,
            sum(t1.ticket_price) ticketprice
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_HEAD@TO_AIR t1 on t.flights_order_id=t1.flights_order_id
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.da_restrict_userinfo t5 on t.client_id=t5.users_id
  left join dw.adt_mobile_list t8 on regexp_like(t1.r_tel, '^1[0-9]{10}$')
                              and substr(t1.r_tel, 1, 7) = t8.mobilenumber
  left join dw.adt_region_code tt1 on t1.codetype = 1
                            and tt1.regioncode=substr(t1.codeno, 1, 6)
   left join cqsale.cq_traveller_info@to_air t3 on t1.flights_order_head_id=t3.flights_order_head_id
   left join stg.s_cq_country_area t6 on t3.nationality=t6.country_code
   
    where t.order_date>=to_date('2021-05-09','yyyy-mm-dd')
    and t.order_date< sysdate
    and t.order_date< to_date('2021-05-11 13:30','yyyy-mm-dd hh24:mi')
    and t2.flag<>2
    and t1.whole_flight like '9C%'
      and t1.seats_name is not null
    and t1.seats_name not in('B','G','G1','G2','O')
    and t1.seats_name ='P2'
    and t1.flag_id in(3,5,40,2)
    group by trunc(t.order_date) ,
t1.r_flights_date-trunc(t.order_date) ,
t2.flights_segment_name,
t2.origincity_name,
t2.destcity_name,
            case WHEN t1.codetype<>1 THEN 
            CASE WHEN t1.birthday IS NOT NULL THEN 
                              floor((trunc(t.order_date)-t1.birthday)/365)
                              ELSE NULL END 
              else getage(t.order_date,t1.birthday)
                              END  ,
     t3.gender ,
     CASE WHEN t3.nationality='CHN' THEN '中国'
          WHEN t3.nationality IS NULL THEN '中国'
          ELSE t6.country_name END ,
      CASE WHEN (CASE WHEN t3.nationality ='CHN' THEN '中国'
          WHEN t3.nationality IS NULL THEN '中国'
          ELSE t6.country_name END)='中国' THEN 
          CASE WHEN tt1.province IS NOT NULL THEN tt1.province
               WHEN tt1.province IS NULL AND t8.province IS NOT NULL THEN t8.province
               ELSE NULL END 
          ELSE NULL END ,
      CASE WHEN (CASE WHEN t3.nationality ='CHN' THEN '中国'
          WHEN t3.nationality IS NULL THEN '中国'
          ELSE t6.country_name END)='中国' THEN 
          CASE WHEN tt1.province IS NOT NULL THEN tt1.city
               WHEN tt1.province IS NULL AND t8.province IS NOT NULL THEN t8.city
               ELSE NULL END 
          ELSE NULL END ,t1.r_flights_date)h1
          group by h1.orderday,case when h1.aheads<=7 then to_char(h1.aheads)
when h1.aheads<=15 then '8~15'
when h1.aheads<=30 then '15~30'
when h1.aheads<=45 then '31~45'
when h1.aheads<=60 then '45~60'
ELSE '60+' END,h1.flights_segment_name,h1.origincity_name,h1.destcity_name,
case when age<12 then '<12'
            when age<18 then '12~17'
            when age<25 then '18~24'
            when age<30 then '25~29'
            when age<40 then '30~39'
            when age<50 then '40~49'
            when age<60 then '50~59'
            when age< 70 then '60~69'
            when age>=70 then '70+' end ,
            h1.gender,h1.nation,h1.province,h1.city,h1.r_flights_date

-----------------------------------------------------------20210512--------------------------------------------------------------------------------
-------309、


/*
延误发布后（15分钟以上），旅客自愿退改每天的退票量、退票金额
延误未发布，旅客noshow/减客 航班起飞后的得知延误15分钟以上旅客自愿退票的数据
黑代理通过大数据系统预判航班延误，截留旅客自愿退票信息，自行到航司进行非自愿退票，从中赚取差价（ 黑代理当日退票）
*/



select t1.*
 from dw.da_order_change t1
 join dw.da_flight t2 on t1.old_segment_id=t2.segment_head_id
 left join ( 
 select *
 from(
 select flight_date,flight_no,oriairport||destairport segment_code,to_number(t3.delaytime) delaytime, t3.publish_date,
 row_number()over(partition by flight_date,flight_no,oriairport||destairport order by t3.publish_date) xid
 from stg.s_cq_unnormal_flights t3
 where UNNORMALTYPE=1
 and regexp_like(t3.delaytime,'^[0-9]*(.)?[0-9]+$')
 and t3.publish_date is not null )t4
 where t4.xid=1)t5 on t2.flight_date=t5.flight_date and t2.flight_no=t5.flight_no and t2.segment_code=t5.segment_code
 left join dw.da_foc_flight t6 on t2.segment_head_id=t6.segment_head_id
 where t2.flight_date>=to_date('2021-04-01','yyyy-mm-dd')
   and t2.flight_date< to_date('2021-05-01','yyyy-mm-dd')
   and t2.company_id=0
   and (case when t5.publish_date is not null and  delaytime>=15/60 and t1.money_fy>0 and t1.modify_date>=t5.publish_date 
then '发布延误后自愿退改'
when t6.dep_time-t2.origin_std>=15/(60*24) and t1.money_fy>0 and t1.modify_date>=t2.origin_std then '未发布起飞延误自愿退改'
else '正常' end)='未发布起飞延误自愿退改'
   
   group by t2.flight_date,case when t5.publish_date is not null and  delaytime>=15/60 and delaytime<=1 then '发布延误1小时'
when t5.publish_date is not null and  delaytime>=1 and delaytime<3 then '发布延误1~3小时'
when t5.publish_date is not null and  delaytime>=3  then '发布延误3小时以上'
when t6.dep_time-t2.origin_std>=15/(60*24) then '未发布实际起飞延误超过15分钟'
else '其他' end,
case when t5.publish_date is not null and  delaytime>=15/60 and t1.money_fy>0 and t1.modify_date>=t5.publish_date 
then '发布延误后自愿退改'
when t6.dep_time-t2.origin_std>=15/(60*24) and t1.money_fy>0 and t1.modify_date>=t2.origin_std then '未发布起飞延误自愿退改'
else '正常' end;

------------------------------------------------------------20210512------------------------------------------------------------------
 ------310、 0元退改量异常

select *
 from stg.s_cq_unnormal_flights t1
  join(
select  distinct trunc(t1.origin_std) flightdate,t3.flights_segment_name,t3.flight_no
 from dw.da_order_drawback t1
 left join dw.fact_combo_ticket t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 where t1.money_date>=trunc(sysdate)-1
 and t1.money_fy=0
 and t3.flag=2
 and trunc(t1.origin_std)=trunc(sysdate)-1
)t2 on t1.flight_date=t2.flightdate and t1.flight_no=t2.flight_no


 ------311、出港城市运力占比


select t1.origincity_name,count(1),sum(count(1))over(partition by 1)
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)
 and t1.flight_date< to_date('20211101','yyyymmdd')
 and t1.flag=0
 and t1.nationflag='国内'
 group by t1.origincity_name;

-------------------------------------------------------20210514---------------------------------------------------------------------------------
 ------312、

 select t1.order_day,count( distinct case when t1.flag_id in(3,5,40,41) then t1.flights_order_id else null end),
sum(case when t1.flag_id in(3,5,40,41) then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.other_fee+t1.insurce_fee else 0 end),
 count( distinct case when t1.flag_id in(7,11,12) then t1.flights_order_id else null end),
sum(case when t1.flag_id in(7,11,12) then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.other_fee+t1.insurce_fee else 0 end),
sum(case when t1.flag_id in(7,11,12) then t3.money_fy else 0 end)
 from dw.fact_recent_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_order_drawback t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.order_day>=to_date('2021-03-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-05-01','yyyy-mm-dd')
   and t1.channel in('网站','手机')
   and t1.pay_gate in(72,75)
   group by t1.order_day;




select to_char(t1.order_day,'yyyymm'),
sum(case when t1.pay_gate in(58,72,75) then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.other_fee+t1.insurce_fee else 0 end),
sum(t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.other_fee+t1.insurce_fee) fee
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_order_drawback t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.order_day>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-05-01','yyyy-mm-dd')
   and t1.channel in('网站','手机')
   and t1.station_id >=3
   and t1.company_id=0
   and t1.station_id not in(5,10)
   group by to_char(t1.order_day,'yyyymm');
   


-----------------------------------------------------------20210517-------------------------------------------------------------------
 ------313、疫情退票数据分析

 select trunc(t1.money_date) 退票日期,case when t2.flag=2 then '取消航班'
when t3.province like '%辽宁%' or t4.province like '%辽宁%' then '辽宁'
when t3.province like '%安徽%' or t4.province like '%安徽%' then '安徽'
   else '其他' end 航班类型 ,
   case when  t3.province like '%辽宁%' or t4.province like '%辽宁%' then '辽宁'
   when t3.province like '%安徽%' or t4.province like '%安徽%' then '安徽'
   else '其他' end 疫情航线,
   t2.flights_segment_name 航线,count(1) 票量
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join hdb.cq_airport t3 on t2.originairport=t3.threecodeforcity
 left join hdb.cq_airport t4 on t2.destairport=t4.threecodeforcity
 where t1.money_date>=trunc(sysdate)-8
   and trunc(t1.money_date) in(trunc(sysdate)-1-7,trunc(sysdate)-1)
   and t2.flight_no like '9C%'
   group by trunc(t1.money_date),case when t2.flag=2 then '取消航班'
when t3.province like '%辽宁%' or t4.province like '%辽宁%' then '辽宁'
when t3.province like '%安徽%' or t4.province like '%安徽%' then '安徽'
   else '其他' end ,
   case when  t3.province like '%辽宁%' or t4.province like '%辽宁%' then '辽宁'
   when t3.province like '%安徽%' or t4.province like '%安徽%' then '安徽'
   else '其他' end ,
   t2.flights_segment_name;



   select trunc(t1.money_date) 退票日期,case when t2.flag=2 then '取消航班'
else '正常航班' end 航班类型,case when t5.flights_order_head_id is not null then '套票0元'
when t1.money_fy=0 and t1.seats_name in('O','D') then 'O舱0元'
when t1.money_fy=0 then '正常0元'
else '非0元' end 退票手续费类型,count(1) 退票量
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.fact_combo_ticket t5 on t1.flights_order_head_id=t5.flights_order_head_id
 left join hdb.cq_airport t3 on t2.originairport=t3.threecodeforcity
 left join hdb.cq_airport t4 on t2.destairport=t4.threecodeforcity
 where t1.money_date>=trunc(sysdate)-8
     and t2.flight_no like '9C%'
   group by trunc(t1.money_date),case when t2.flag=2 then '取消航班'
else '正常航班' end,case when t5.flights_order_head_id is not null then '套票0元'
when t1.money_fy=0 and t1.seats_name in('O','D') then 'O舱0元'
when t1.money_fy=0 then '正常0元'
else '非0元' end;




 ------314、各运营商手机在我司的活跃程度

select case when substr(t2.login_id,1,4) in('1700','1701','1702','1410') then '电信'
when substr(t2.login_id,1,4) in('1704','1707','1708','1709') then '联通'
when substr(t2.login_id,1,4) in('1703','1705','1706','1440') then '移动'
when substr(t2.login_id,1,3) in('133','149','153','173','174','177','180','181','189','199') then '电信' 
when substr(t2.login_id,1,3) in('130','131','132','145','146','155','156','166','171','175','176','185',
'186') then '联通'
when substr(t2.login_id,1,3) in('134','135','136','137','138','139','147',
'148','150','151','152','157','158','159','172','178','182','183','184','187','188','198') then '移动'
end, case when t3.province like '%上海%' then '上海'
else '非上海' end ,
case when t1.users_id is not null then '代理'
when t.gate_name like '%易宝%' then '易宝'
when t.gate_name like '%商旅卡%' then '商旅卡'
 else '其他' end,

count(distinct t2.login_id)
 from dw.fact_order_detail t
 left join dw.da_restrict_userinfo t1 on t.client_id=t1.users_id
 left join dw.da_b2c_user t2 on t.client_id=t2.users_id
 left join dw.adt_mobile_list t3 on substr(t2.login_id,1,7)=t3.mobilenumber
where t.order_day>=trunc(sysdate)-30
  and t.order_day< trunc(sysdate)
  and t.channel in('手机')
  and t.station_id not in(5,10,6)
  group by case when substr(t2.login_id,1,4) in('1700','1701','1702','1410') then '电信'
when substr(t2.login_id,1,4) in('1704','1707','1708','1709') then '联通'
when substr(t2.login_id,1,4) in('1703','1705','1706','1440') then '移动'
when substr(t2.login_id,1,3) in('133','149','153','173','174','177','180','181','189','199') then '电信' 
when substr(t2.login_id,1,3) in('130','131','132','145','146','155','156','166','171','175','176','185',
'186') then '联通'
when substr(t2.login_id,1,3) in('134','135','136','137','138','139','147',
'148','150','151','152','157','158','159','172','178','182','183','184','187','188','198') then '移动'
end, case when t3.province like '%上海%' then '上海'
else '非上海' end ,
case when t1.users_id is not null then '代理'
when t.gate_name like '%易宝%' then '易宝'
when t.gate_name like '%商旅卡%' then '商旅卡'
 else '其他' end
  
---------------------------------------------------------------------20210518-----------------------------------------------------------
 ------315、线上实时销售监控

select order_day,
       hour,
       is_beneficiary,
       channel,
       has_zj,
       is_zj,
       sum(ticket_num) ticket_num,
              flagid,subchannel
  from (select trunc(t.order_date) order_day,
               to_char(t.order_date, 'hh24') hour,
               case
                 when tt.flights_order_head_id is not null and
                      tt.is_beneficiary = 1 then
                  '亲友立减'
                 when tt.flights_order_head_id is not null then
                  '绿翼立减'
                 else
                  '非立减'
               end is_beneficiary,
               case
                 when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
                      b.users_id is not null then
                  '代理'
                 when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
                      t.pay_gate in (15, 29, 31, 64, 71, 74) then
                  '易宝商旅卡'
                 when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 then
                  '纯量'
                 when t4.agent_type = 1 and
                      t4.abrv in ('淘宝', '携程', '去哪儿', '同程') then
                  t4.abrv
                 when t4.agent_type = 1 and not
                       regexp_like(t4.abrv,
                                                         'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
                  'OTA其他'
                 else
                  '其他'
               end channel,
               max(case
                     when u.users_id_fk is not null then
                      1
                     else
                      0
                   end) over(partition by t.flights_order_id) has_zj,
               case
                 when u.users_id_fk is not null then
                  1
                 else
                  0
               end is_zj,
               count(distinct t1.codeno) over(partition by t.flights_order_id) person_num,
               1 ticket_num,
               case when t1.flag_id in(3,5,40) then '已支付'
                    when t1.flag_id in(7,11,12) then '已退票' end flagid,
               case when t.terminal_id=-1 and t.web_id=0 and t.ex_nfd1<=1 then '网站'
                    when t.terminal_id=-1 and t.web_id=0 and t.ex_nfd1 in(3,8) then 'IOS'
                    when t.terminal_id=-1 and t.web_id=0 and t.ex_nfd1 in(4,9) then '安卓'
                    when t.terminal_id=-1 and t.web_id=0 and t.ex_nfd1 in(2,5,10) then 'M/微信'
                    else '其他' end subchannel
          from cqsale.cq_order@to_air t
          join cqsale.cq_order_head@to_air t1 on t.flights_order_id =
                                         t1.flights_order_id
          left join cust.cq_order_youhui_detail@to_air tt on tt.flights_order_head_id =
                                                       t1.flights_order_head_id
                                                   and trunc(tt.create_date) >=
                                                       to_date('2019-04-30',
                                                               'yyyy-mm-dd')
                                                   and tt.youhui_id in
                                                       (1127, 1128, 1129, 1130, 1134, 1135, 1136, 1137, 1138, 1156,1177,1178)
          left join dw.da_restrict_userinfo b on t.client_id = b.users_id
          left join cqsale.cq_agent_info@to_air t4 on t.web_id = t4.agent_id
          left join (select distinct u.users_id_fk, u.idno
                      from cust.cq_flights_users_huiyuan@to_air u
                     where u.status = 1
                       and u.codetype = 1
                       and length(u.idno) in (15, 18)) u on t1.codeno =
                                                            u.idno
                                                        and t.client_id =
                                                            u.users_id_fk
         where t.order_date >= trunc(sysdate) - 9
           and t.order_date <  trunc(sysdate)
           and trunc(t.order_date) in(trunc(sysdate-9),trunc(sysdate-8),trunc(sysdate-2),trunc(sysdate)-1)
           and t1.r_flights_date >= trunc(sysdate) - 30 - 7
           and t1.seats_name not in ('B', 'G', 'G1', 'G2', 'O')
           and t1.seats_name is not null
         /*  and to_char(t.order_date, 'hh24:mi:ss') <
               to_char(sysdate, 'hh24:mi:ss')*/
           and t1.flag_id in (3, 5, 40, 41,7,11,12)
           and t1.whole_flight like '9C%')
 group by order_day, hour, is_beneficiary, channel, has_zj, is_zj,flagid,subchannel;


-------316、航线条数

select  t1.nationflag,count(distinct
replace(replace(t2.flights_segment_name,'虹桥','上海'),'浦东','上海')) 航段数,
count(distinct t2.wf_city_name)
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.company_id=0
 and t1.flag=0
 and t1.flight_date>=trunc(sysdate)
 --and t1.nationflag='国内'
 and t1.flight_no like '9C%'
 group by t1.nationflag;

 ------317、筛选客座率差航线--时间段航线特征明显的航线、航班日期

select *
from(
select h2.flight_date,h2.route_name,h2.plf,h2.avgprice,h2.namecount,h2.xid,sum(count(distinct h2.flight_date))over(partition by h2.route_name) xid2
from(
select h1.flight_date,h1.route_name,h1.plf,h1.avgprice,count(distinct h1.route_name) namecount,
sum(count(distinct h1.route_name))over(partition by h1.flight_date) xid
from(
select *
from(
select t1.route_name,t1.flight_date,to_char(t1.flight_date,'yyyymm') months,suM(t1.checkin_mile)/sum(t1.checkin_s_mile) plf,
sum(t1.total_income)/suM(t1.totalnum) avgprice,sum(sum(t1.total_income))over(partition by 1)/
sum(suM(t1.totalnum))over(partition by 1) totalavg
 from hdb.recent_flights_cost t1
 where t1.flight_date>=to_date('2019-05-20','yyyy-mm-dd')
   and t1.flight_date< to_date('2020-01-01','yyyy-mm-dd')
   and t1.nation_flag=1
   and t1.totalnum>0
   and t1.checkin_s_mile>0
     /* and to_char(t1.flight_date,'mmdd')>='0520'
   and to_char(t1.flight_date,'mmdd')<='1231'
   and not ( to_char(t1.flight_date,'mmdd')>='0625'
   and to_char(t1.flight_date,'mmdd')<='0901')   
   and not (to_char(t1.flight_date,'mmdd')>='0928'
   and to_char(t1.flight_date,'mmdd')<='1010')
   and not (to_char(t1.flight_date,'mmdd')>='1230'
   and to_char(t1.flight_date,'mmdd')<='1231')
   and not (to_char(t1.flight_date,'mmdd')>='0610'
   and to_char(t1.flight_date,'mmdd')<='0616')*/
   group by t1.route_name,t1.flight_date,to_char(t1.flight_date,'yyyymm'))t1
 join (select distinct route_name route_name2 from dw.da_flight  
 where flight_date>=trunc(sysdate) and flight_date<=to_date('2021-12-31','yyyy-mm-dd')
 and flag=0
 and company_id=0)t2 on t1.route_name=t2.route_name2
 where t1.plf<=0.8
 and regexp_like(t1.route_name,'(浦东)|(虹桥)')
 and t1.avgprice<=t1.totalavg
 /*and t1.avgprice< 400*/)h1
 group by h1.flight_date,h1.route_name,h1.plf,h1.avgprice)h2
 where h2.xid>=4
 group by h2.flight_date,h2.route_name,h2.plf,h2.avgprice,h2.namecount,h2.xid)h3
 where h3.xid2>=4

 


 ------318、绿翼立减新政上线后数据变化

select order_day,
       hour,
       is_beneficiary,
       channel,
       has_zj,
       is_zj,
        case when channel in('代理','易宝商旅卡','纯量') then '线上自有'
            when channel in('淘宝', '携程', '去哪儿', '同程','OTA其他') then 'OTA'
            else 'B2B' end ,
         case when is_beneficiarY ='绿翼立减' AND channel in('代理','易宝商旅卡','纯量') THEN 
           CASE WHEn channel='代理' then   '立减-线上自有黑代'
           WHEn channel='易宝商旅卡' then   '立减-线上自有易宝商旅卡'
           WHEn channel='纯量' then   '立减-线上自有纯量'
            end 
           when is_beneficiarY ='亲友立减' AND channel in('代理') THEN '亲友立减-黑代'
           when is_beneficiarY ='亲友立减' AND channel in('易宝商旅卡') THEN '亲友立减-易宝商旅卡'
           when is_beneficiarY ='亲友立减' AND channel in('纯量') THEN '亲友立减-纯量'
           when is_beneficiarY ='非立减' AND channel in('代理','易宝商旅卡','纯量') THEN 
           CASE WHEn channel='代理' then   '非立减-线上自有黑代'
           WHEn channel='易宝商旅卡' then   '非立减-线上自有易宝商旅卡'
           WHEn channel='纯量' then   '非立减-线上自有纯量'
            end 
            when channel in('淘宝', '携程', '去哪儿', '同程','OTA其他') then 'OTA'
            else 'B2B' end ,
       sum(ticket_num) ticket_num,
              flagid,subchannel
  from (select trunc(t.order_date) order_day,
               to_char(t.order_date, 'hh24') hour,
               case
                 when tt.flights_order_head_id is not null and
                      tt.is_beneficiary = 1 then
                  '亲友立减'
                 when tt.flights_order_head_id is not null then
                  '绿翼立减'
                 else
                  '非立减'
               end is_beneficiary,
               case
                 when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
                      b.users_id is not null then
                  '代理'
                 when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
                      t.pay_gate in (15, 29, 31, 64, 71, 74) then
                  '易宝商旅卡'
                 when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 then
                  '纯量'
                 when t4.agent_type = 1 and
                      t4.abrv in ('淘宝', '携程', '去哪儿', '同程') then
                  t4.abrv
                 when t4.agent_type = 1 and not
                       regexp_like(t4.abrv,
                                                         'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
                  'OTA其他'
                 else
                  '其他'
               end channel,
               max(case
                     when u.users_id_fk is not null then
1
                     else
0
                   end) over(partition by t.flights_order_id) has_zj,
               case
                 when u.users_id_fk is not null then
1
                 else
0
               end is_zj,
               count(distinct t1.codeno) over(partition by t.flights_order_id) person_num,
               1 ticket_num,
               case when t1.flag_id in(3,5,40) then '已支付'
                    when t1.flag_id in(7,11,12) then '已退票' end flagid,
               case when t.terminal_id=-1 and t.web_id=0 and t.ex_nfd1<=1 then '网站'
                    when t.terminal_id=-1 and t.web_id=0 and t.ex_nfd1 in(3,8) then 'IOS'
                    when t.terminal_id=-1 and t.web_id=0 and t.ex_nfd1 in(4,9) then '安卓'
                    when t.terminal_id=-1 and t.web_id=0 and t.ex_nfd1 in(2,5,10) then 'M/微信'
                    else '其他' end subchannel
          from cqsale.cq_order@to_air t
          join cqsale.cq_order_head@to_air t1 on t.flights_order_id =
                                         t1.flights_order_id
          left join cust.cq_order_youhui_detail@to_air tt on tt.flights_order_head_id =
                                                       t1.flights_order_head_id
                                                   and trunc(tt.create_date) >=
                                                       to_date('2019-04-30',
                                                               'yyyy-mm-dd')
                                                   and tt.youhui_id in
                                                       (1127, 1128, 1129, 1130, 1134, 1135, 1136, 1137, 1138, 1156,1177,1178)
          left join dw.da_restrict_userinfo b on t.client_id = b.users_id
          left join cqsale.cq_agent_info@to_air t4 on t.web_id = t4.agent_id
          left join (select distinct u.users_id_fk, u.idno
                      from cust.cq_flights_users_huiyuan@to_air u
                     where u.status = 1
                       and u.codetype = 1
                       and length(u.idno) in (15, 18)) u on t1.codeno =
                                                            u.idno
                                                        and t.client_id =
                                                            u.users_id_fk
         where t.order_date >=to_date('2021-05-17','yyyy-mm-dd')
           --and t.order_date <  trunc(sysdate)
           --and trunc(t.order_date) in(trunc(sysdate-9),trunc(sysdate-8),trunc(sysdate-2),trunc(sysdate)-1)
           and t1.r_flights_date >= trunc(sysdate) - 30 - 7          
           and t1.seats_name not in ('B', 'G', 'G1', 'G2', 'O')
           and t1.seats_name is not null
         /*  and to_char(t.order_date, 'hh24:mi:ss') <
               to_char(sysdate, 'hh24:mi:ss')*/
           and t1.flag_id in (3, 5, 40, 41,7,11,12)
           and t1.whole_flight like '9C%')
 group by order_day, hour, is_beneficiary, channel, has_zj, is_zj,flagid,subchannel, case when channel in('代理','易宝商旅卡','纯量') then '线上自有'
            when channel in('淘宝', '携程', '去哪儿', '同程','OTA其他') then 'OTA'
            else 'B2B' end ,
         case when is_beneficiarY ='绿翼立减' AND channel in('代理','易宝商旅卡','纯量') THEN 
           CASE WHEn channel='代理' then   '立减-线上自有黑代'
           WHEn channel='易宝商旅卡' then   '立减-线上自有易宝商旅卡'
           WHEn channel='纯量' then   '立减-线上自有纯量'
            end 
            when is_beneficiarY ='亲友立减' AND channel in('代理') THEN '亲友立减-黑代'
           when is_beneficiarY ='亲友立减' AND channel in('易宝商旅卡') THEN '亲友立减-易宝商旅卡'
           when is_beneficiarY ='亲友立减' AND channel in('纯量') THEN '亲友立减-纯量'
           when is_beneficiarY ='非立减' AND channel in('代理','易宝商旅卡','纯量') THEN 
           CASE WHEn channel='代理' then   '非立减-线上自有黑代'
           WHEn channel='易宝商旅卡' then   '非立减-线上自有易宝商旅卡'
           WHEn channel='纯量' then   '非立减-线上自有纯量'
            end 
            when channel in('淘宝', '携程', '去哪儿', '同程','OTA其他') then 'OTA'
            else 'B2B' end;

-----------------------------------------------------------------20210525-------------------------------------------------------------------
-------319、经停AB段\经停BC段 拆分计算客座率

select flights_segment,suM(oversale),suM(t1.ticketnum)
 from dw.da_foc_order t1
 where t1.flights_date>=to_date('20210510','yyyymmdd')
   and t1.flights_date< to_date('20210524','yyyymmdd')
   and t1.BOARDNUM>0
   group by flights_segment;



-------320、账号对应是否有问题

select case when t4.login_id is not null and t4.login_id<>'-' then md5(t4.login_id)
when t4.is_mobile_reg in(3,5) then md5(t4.email)
else t4.login_id end,
 t4.login_id,
 t4.email,
 t.order_date,
 t.flights_order_id,
 t.client_id,
 case when t2.users_id is not null then '黑代'
when t3.gate_name like '%易宝%' then '易宝商旅卡'
when t3.gate_name like '%春秋商旅卡%' then '易宝商旅卡'
else '直销' end 是否代理,
case when t.ex_nfd1<=1 then '网站'
when t.ex_nfd1=2 then 'M网站'
when t.ex_nfd1 in(3,8) then 'IOS'
when t.ex_nfd1 in(4,9) then '安卓'
when t.ex_nfd1 =6 then '智能客服'
when t.ex_nfd1  iN(5,10) then '小程序' end 渠道,t.pay_flag
from stg.s_cq_order t
left join dw.da_restrict_userinfo t2 on t.client_id=t2.users_id
left join stg.p_cq_pay_gate t3 on t.pay_gate=t3.id
left join dw.da_b2c_user t4 on t.client_id=t4.users_id
where t.order_date>=trunc(sysdate)-1
and t.order_date<trunc(sysdate)
and t.client_id>0
and t.terminal_id<0
and t.web_id=0;



-------321、退改签数据

select t2.flight_date,to_char(t2.flight_date,'yyyy') syear,to_char(t2.flight_date,'mm') smonth,
case when t5.publish_date is not null and  delaytime>=15/60 and delaytime<=1 then '发布延误1小时'
when t5.publish_date is not null and  delaytime>=1 and delaytime<3 then '发布延误1~3小时'
when t5.publish_date is not null and  delaytime>=3  then '发布延误3小时以上'
when t6.dep_time-t2.origin_std>=15/(60*24) then '未发布实际起飞及降落超过15分钟'
else '其他' end,
case when t5.publish_date is not null and  delaytime>=15/60 and delaytime<=1 then '延误15分钟~1小时'
when t5.publish_date is not null and  delaytime>=1 and delaytime<1.5 then '延误1~1.5小时'
when t5.publish_date is not null and  delaytime>=1.5 and delaytime<2 then '延误1.5~2小时'
when t5.publish_date is not null and  delaytime>=2 and delaytime<3 then '延误2~3小时'
when t5.publish_date is not null and  delaytime>=3  then '延误3小时以上'
when t6.dep_time-t2.origin_std>=15/(60*24) and t6.dep_time-t2.origin_std< 1/24 then '延误15分钟~1小时'
when t6.dep_time-t2.origin_std>=1/24 and t6.dep_time-t2.origin_std< 1.5/24 then '延误1~1.5小时'
when t6.dep_time-t2.origin_std>=1.5/24 and t6.dep_time-t2.origin_std< 2/24 then '延误1.5~2小时'
when t6.dep_time-t2.origin_std>=2/24 and t6.dep_time-t2.origin_std< 3/24 then '延误2~3小时'
when t6.dep_time-t2.origin_std>=3/24  then '延误3小时以上' 
else '其他' end,
case when t5.publish_date is not null and  delaytime>=15/60 and t1.money_fy>0 and t1.money_date>=t5.publish_date 
then '发布延误后自愿退改'
when t6.dep_time-t2.origin_std>=15/(60*24) and t1.money_fy>0 and t1.money_date>=t2.origin_std then '未发布起飞后延误自愿退改'
when t6.dep_time-t2.origin_std>=15/(60*24) and t1.money_fy>0 and t1.money_date<=t2.origin_std then '未发布起飞前延误自愿退改'
else '正常' end,
case when tb3.flights_order_head_id is not null then 'noshow'
else '非noshow' end,
case when tb4.channel in('手机','网站') and tb5.users_id is not null then '疑似代理'
when tb4.channel in('手机','网站') and  tb4.pay_gate in(15,29,31) then '疑似代理'
when tb4.channel in('OTA','旗舰店') then 'OTA'
when tb4.channel in('手机','网站') then '线上自有'
else  '线下' end,
count(1),
sum(t1.money_fy)
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join hdb.mid_noshow_data tb3 on t1.flights_order_head_id=tb3.flights_order_head_id
 left join dw.fact_recent_order_detail tb4 on t1.flights_order_head_id=tb4.flights_order_head_id
 left join dw.da_restrict_userinfo tb5 on tb4.client_id=tb5.users_id
 left join ( 
 select *
 from(
 select flight_date,flight_no,oriairport||destairport segment_code,to_number(t3.delaytime) delaytime, t3.publish_date,
 row_number()over(partition by flight_date,flight_no,oriairport||destairport order by t3.publish_date) xid
 from stg.s_cq_unnormal_flights t3
 where UNNORMALTYPE=1
 and t3.publish_date is not null )t4
 where t4.xid=1)t5 on t2.flight_date=t5.flight_date and t2.flight_no=t5.flight_no and t2.segment_code=t5.segment_code
 left join dw.da_foc_flight t6 on t2.segment_head_id=t6.segment_head_id
 where t2.flight_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t2.flight_date< to_date('2021-05-01','yyyy-mm-dd')
   group by t2.flight_date,case when t5.publish_date is not null and  delaytime>=15/60 and delaytime<=1 then '发布延误1小时'
when t5.publish_date is not null and  delaytime>=1 and delaytime<3 then '发布延误1~3小时'
when t5.publish_date is not null and  delaytime>=3  then '发布延误3小时以上'
when t6.dep_time-t2.origin_std>=15/(60*24) then '未发布实际起飞及降落超过15分钟'
else '其他' end,
case when t5.publish_date is not null and  delaytime>=15/60 and t1.money_fy>0 and t1.money_date>=t5.publish_date 
then '发布延误后自愿退改'
when t6.dep_time-t2.origin_std>=15/(60*24) and t1.money_fy>0 and t1.money_date>=t2.origin_std then '未发布起飞后延误自愿退改'
when t6.dep_time-t2.origin_std>=15/(60*24) and t1.money_fy>0 and t1.money_date<=t2.origin_std then '未发布起飞前延误自愿退改'
else '正常' end,case when tb3.flights_order_head_id is not null then 'noshow'
else '非noshow' end,case when tb4.channel in('手机','网站') and tb5.users_id is not null then '疑似代理'
when tb4.channel in('手机','网站') and  tb4.pay_gate in(15,29,31) then '疑似代理'
when tb4.channel in('OTA','旗舰店') then 'OTA'
when tb4.channel in('手机','网站') then '线上自有'
else  '线下' end,
case when t5.publish_date is not null and  delaytime>=15/60 and delaytime<=1 then '延误15分钟~1小时'
when t5.publish_date is not null and  delaytime>=1 and delaytime<1.5 then '延误1~1.5小时'
when t5.publish_date is not null and  delaytime>=1.5 and delaytime<2 then '延误1.5~2小时'
when t5.publish_date is not null and  delaytime>=2 and delaytime<3 then '延误2~3小时'
when t5.publish_date is not null and  delaytime>=3  then '延误3小时以上'
when t6.dep_time-t2.origin_std>=15/(60*24) and t6.dep_time-t2.origin_std< 1/24 then '延误15分钟~1小时'
when t6.dep_time-t2.origin_std>=1/24 and t6.dep_time-t2.origin_std< 1.5/24 then '延误1~1.5小时'
when t6.dep_time-t2.origin_std>=1.5/24 and t6.dep_time-t2.origin_std< 2/24 then '延误1.5~2小时'
when t6.dep_time-t2.origin_std>=2/24 and t6.dep_time-t2.origin_std< 3/24 then '延误2~3小时'
when t6.dep_time-t2.origin_std>=3/24  then '延误3小时以上' 
else '其他' end,t2.flight_date,to_char(t2.flight_date,'yyyy') ,to_char(t2.flight_date,'mm');



 ------322、不正常航班数据

select t.fligtnos,t2.*
from anl.temp_feng_0524@to_dds t
left join (
select distinct  t1.flight_no||t1.segment_code segmentcode,min(to_char(t1.origin_std,'hh24//mi')) originstd,
t1.flights_segment_name,t1.origincity_name,t1.destcity_name,avg(t1.mile) mile,avg(t1.dest_sta-t1.origin_std)*24 shour
from dw.da_flight t1
where t1.flight_date>=to_date('20210325','yyyymmdd')
group by t1.flight_no||t1.segment_code ,
t1.flights_segment_name,t1.origincity_name,t1.destcity_name
)t2 on t.fligtnos=t2.segmentcode;

 ------323、特定航线的航班量、计划量及退票量

select h1.flights_date 航班日期,count(distinct h1.flights_id) 航班量,suM(h1.oversale) 计划量,sum(swplan) 散客计划量,suM(ticketnum) 散客销量
from(
select t1.flights_date,t1.segment_head_id,t1.flights_id,t2.oversale,t2.oversale-t2.bgo_plan+t2.o_plan swplan,
suM(case when t1.seats_name not in('B','G','G1','G2') then 1 else 0 end) ticketnum
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=trunc(sysdate)-14
   and t1.flights_date< trunc(sysdate)+14
   and t1.seats_name is not null
   and (t2.originairport IN('ZAT',
'LNJ',
'SYM',
'WNH',
'JMJ',
'BSD',
'DLU',
'CWJ',
'NLH',
'LUM',
'DIG',
'JHG',
'KMG',
'LJG',
'TCZ') or t2.destairport in('ZAT',
'LNJ',
'SYM',
'WNH',
'JMJ',
'BSD',
'DLU',
'CWJ',
'NLH',
'LUM',
'DIG',
'JHG',
'KMG',
'LJG',
'TCZ')) 
and t2.flag=0
group by t1.flights_date,t1.segment_head_id,t1.flights_id,t2.oversale,t2.oversale-t2.bgo_plan+t2.o_plan)h1
group by h1.flights_date;


select trunc(t1.money_date) 退票日期,t3.wf_segment 往返航线,count(1) 退票量
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where (t2.originairport IN('ZAT',
'LNJ',
'SYM',
'WNH',
'JMJ',
'BSD',
'DLU',
'CWJ',
'NLH',
'LUM',
'DIG',
'JHG',
'KMG',
'LJG',
'TCZ') or t2.destairport in('ZAT',
'LNJ',
'SYM',
'WNH',
'JMJ',
'BSD',
'DLU',
'CWJ',
'NLH',
'LUM',
'DIG',
'JHG',
'KMG',
'LJG',
'TCZ')) 
and t1.money_date>=trunc(sysdate)-14
and t1.money_date< trunc(sysdate)+14
group by trunc(t1.money_date),t3.wf_segment;





select trunc(t2.flight_date) 航班日期,t3.wf_segment 往返航线,count(1) 退票量
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where (t2.originairport IN('ZAT',
'LNJ',
'SYM',
'WNH',
'JMJ',
'BSD',
'DLU',
'CWJ',
'NLH',
'LUM',
'DIG',
'JHG',
'KMG',
'LJG',
'TCZ') or t2.destairport in('ZAT',
'LNJ',
'SYM',
'WNH',
'JMJ',
'BSD',
'DLU',
'CWJ',
'NLH',
'LUM',
'DIG',
'JHG',
'KMG',
'LJG',
'TCZ')) 
and t2.flight_date>=trunc(sysdate)-14
and t2.flight_date< trunc(sysdate)+14
group by trunc(t2.flight_date),t3.wf_segment;


 ------324、各航班计划量、布局数、限座数、销量 （疫情锁座位）


select flight_date 航班日期,route_name 航段,flight_no 航班号, root_route_type 航班类型,layout 布局数,oversale 计划量,limit_num 限制量,
tktnum 销量
from(
select flight_date,route_name,flight_no, root_route_type,layout,sum(oversale) oversale,suM(limit_num) limit_num,sum(tktnum) tktnum
from(
select f.segment_head_id,       
       f.flight_date,
       f.flights_segment_name,
       nvl(t3.limitnum, 0) limit_num,
       f.segment_code,
       f.root_route_type,
       f.route_type,
       f.route_name route_name,
       f.flight_no,
       f.origin_std,
       f.dest_sta,
       f.oversale,
       f.layout,
/*     
       f.bgo_plan - f.o_plan bgo_plan,
       f.oversale - f.bgo_plan + f.o_plan busi_plan,
       nvl(t.businum, 0) businum,
       nvl(t.bgonum, 0) bgonum,*/
       nvl(tktnum, 0) tktnum
  from dw.da_flight f
  left join (select t.segment_head_id,
                     sum(case
                          when t.seats_name not in ('B', 'G', 'G1', 'G2') then
                           1
                          else
                           0
                        end) businum,
                    sum(case
                          when t.seats_name in ('B', 'G', 'G1', 'G2') then
                           1
                          else
                           0
                        end) bgonum,
                    count(1) tktnum
               from cqsale.cq_order_head@to_air t
               join dw.da_flight f on t.segment_head_id = f.segment_head_id
              where t.seats_name is not null
                and t.flag_id in (3, 5, 40, 41)
                and t.whole_flight like '9C%'
                and t.r_flights_date >= trunc(sysdate)
              group by t.segment_head_id) t on f.segment_head_id =
                                               t.segment_head_id
  left join dw.dim_segment_type t1 on f.route_id = t1.route_id
                                  and f.h_route_id = t1.h_route_id
  left join (SELECT segment_head_id, COUNT(1) limitnum
               FROM cqsale.CQ_AIRCREW@to_air T
              WHERE T.STATUS IN (1, 2)
                and t.flights_date >= trunc(sysdate)
              group by segment_head_id) t3 on f.segment_head_id =
                                              t3.segment_head_id
 where f.flight_date >  trunc(sysdate)
   --and f.flight_date< =trunc(sysdate)+2
   and f.flag <> 2
   --and f.flight_no='9C8649'
   and f.company_id = 0
   and f.originairport_name in('广州','深圳','珠海','揭阳','湛江','昆明','西双版纳')
   )
   group by flight_date,route_name,flight_no,layout,root_route_type
   )h1
   where  tktnum+9> layout
/*   
   (case when root_route_type='经停' then tktnum+18
   else  tktnum+9 end)>layout*/
   ;

 ----------------------------------------------------------20210531-------------------------------------------------------
 ------325、

select t1.flight_date,
       count(distinct case
               when regexp_like(t2.city||t3.city, '广州|深圳') then
                t1.flights_id
               else
                null
             end) 涉疫情地区航班量,
       count(distinct t1.flights_id) 总体航班量
  from dw.da_flight t1
  left join hdb.cq_airport t2 on t1.originairport = t2.threecodeforcity
  left join hdb.cq_airport t3 on t1.destairport = t3.threecodeforcity
 where t1.flight_date >= trunc(sysdate) - 1
   and t1.flight_date < trunc(sysdate) + 30
   and t1.company_id = 0
   and t1.flag = 0
 group by t1.flight_date；

-------------------------------------------------20210601----------------------------------------------------------------------------
-------326、飞机机型对应的占比

select t1.layout,sum(t1.oversale),count(distinct t1.flights_id)
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)
   and t1.flight_date< trunc(sysdate)+30
   and t1.flag=0
   and t1.company_id=0
   group by t1.layout;


-------------------------------------------------20210602---------------------------------------------------------------------------------
 ------327、
/*1.1、性别：区分根据地，并增加同2019全年平均值对比
1.2、年龄段占比：区分根据地，并增加2019年全年平均值对比
1.3、出行目的：区分根据地，并增加2019年全年平均值对比
1.4、是否带儿童：区分根据地，并增加2019年全年平均值对比
1.5、儿童：17岁及以下，人群绝对值、及占比，区分根据地，并增加2019年全年平均值对比
1.8、提前期：按0-3,4-7,8-14,15+，区分根据地，并增加2019年全年平均值对比
1.10、本科生：18-22岁，人群绝对值、及占比，区分根据地，并增加2019年全年平均值对比
1.13、出行目的：商务、旅行、探亲、其他，区分根据地，并增加2019年全年平均值对比*/


select /*+parallel(2) */
'全部' type,
 case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end 航班日期分类,
 T1.GENDER 性别,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end 年龄,
 p.part 出行目的,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end 提前期,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end 是否带儿童,
 count(1) 机票数
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
  left join (select t1.flights_order_id,
                    max(case
                          when t1.sex > 1 then
                           1
                          else
                           0
                        end) has_child
               from dw.fact_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
                and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
                AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
              group by t1.flights_order_id) c on t1.flights_order_id =
                                                 c.flights_order_id
  left join dw.fact_orderhead_trippurpose@to_ods p on t1.flights_order_head_id =
                                                      p.flights_order_head_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
   AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
   and t1.nationflag='国内'
  group by  case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end ,

 T1.GENDER ,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end ,
 p.part ,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end ,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end
 
 union all
 
 
 select '上海' type,
 case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end 航班日期分类,
 T1.GENDER 性别,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end 年龄,
 p.part 出行目的,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end 提前期,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end 是否带儿童,
 count(1) 机票数
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
  left join (select t1.flights_order_id,
                    max(case
                          when t1.sex > 1 then
                           1
                          else
                           0
                        end) has_child
               from dw.fact_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
                and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
                AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
              group by t1.flights_order_id) c on t1.flights_order_id =
                                                 c.flights_order_id
  left join dw.fact_orderhead_trippurpose@to_ods p on t1.flights_order_head_id =
                                                      p.flights_order_head_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
   AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
   and t1.nationflag='国内'
   and t2.flights_city_name like '%上海%'
  group by  case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end ,

 T1.GENDER ,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end ,
 p.part ,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end ,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end
  
  union all
 
 
 select '石家庄' type,
 case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end 航班日期分类,
 T1.GENDER 性别,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end 年龄,
 p.part 出行目的,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end 提前期,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end 是否带儿童,
 count(1) 机票数
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
  left join (select t1.flights_order_id,
                    max(case
                          when t1.sex > 1 then
                           1
                          else
                           0
                        end) has_child
               from dw.fact_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
                and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
                AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
              group by t1.flights_order_id) c on t1.flights_order_id =
                                                 c.flights_order_id
  left join dw.fact_orderhead_trippurpose@to_ods p on t1.flights_order_head_id =
                                                      p.flights_order_head_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
   AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
   and t1.nationflag='国内'
   and t2.flights_city_name like '%石家庄%'
  group by  case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end ,

 T1.GENDER ,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end ,
 p.part ,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end ,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end
  
    union all
 
 
 select '沈阳' type,
 case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end 航班日期分类,
 T1.GENDER 性别,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end 年龄,
 p.part 出行目的,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end 提前期,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end 是否带儿童,
 count(1) 机票数
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
  left join (select t1.flights_order_id,
                    max(case
                          when t1.sex > 1 then
                           1
                          else
                           0
                        end) has_child
               from dw.fact_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
                and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
                AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
              group by t1.flights_order_id) c on t1.flights_order_id =
                                                 c.flights_order_id
  left join dw.fact_orderhead_trippurpose@to_ods p on t1.flights_order_head_id =
                                                      p.flights_order_head_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
   AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
   and t1.nationflag='国内'
   and t2.flights_city_name like '%沈阳%'
  group by  case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end ,

 T1.GENDER ,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end ,
 p.part ,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end ,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end
   
     union all
 
 
 select '扬州' type,
 case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end 航班日期分类,
 T1.GENDER 性别,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end 年龄,
 p.part 出行目的,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end 提前期,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end 是否带儿童,
 count(1) 机票数
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
  left join (select t1.flights_order_id,
                    max(case
                          when t1.sex > 1 then
                           1
                          else
                           0
                        end) has_child
               from dw.fact_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
                and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
                AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
              group by t1.flights_order_id) c on t1.flights_order_id =
                                                 c.flights_order_id
  left join dw.fact_orderhead_trippurpose@to_ods p on t1.flights_order_head_id =
                                                      p.flights_order_head_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
   AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
   and t1.nationflag='国内'
   and t2.flights_city_name like '%扬州%'
  group by  case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end ,

 T1.GENDER ,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end ,
 p.part ,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end ,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end
   
     union all
 
 
 select '揭阳' type,
 case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end 航班日期分类,
 T1.GENDER 性别,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end 年龄,
 p.part 出行目的,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end 提前期,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end 是否带儿童,
 count(1) 机票数
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
  left join (select t1.flights_order_id,
                    max(case
                          when t1.sex > 1 then
                           1
                          else
                           0
                        end) has_child
               from dw.fact_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
                and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
                AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
              group by t1.flights_order_id) c on t1.flights_order_id =
                                                 c.flights_order_id
  left join dw.fact_orderhead_trippurpose@to_ods p on t1.flights_order_head_id =
                                                      p.flights_order_head_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
   AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
   and t1.nationflag='国内'
   and t2.flights_city_name like '%揭阳%'
  group by  case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end ,

 T1.GENDER ,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end ,
 p.part ,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end ,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end
 
   union all
 
 
 select '兰州' type,
 case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end 航班日期分类,
 T1.GENDER 性别,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end 年龄,
 p.part 出行目的,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end 提前期,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end 是否带儿童,
 count(1) 机票数
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
  left join (select t1.flights_order_id,
                    max(case
                          when t1.sex > 1 then
                           1
                          else
                           0
                        end) has_child
               from dw.fact_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
                and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
                AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
              group by t1.flights_order_id) c on t1.flights_order_id =
                                                 c.flights_order_id
  left join dw.fact_orderhead_trippurpose@to_ods p on t1.flights_order_head_id =
                                                      p.flights_order_head_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
   AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
   and t1.nationflag='国内'
   and t2.flights_city_name like '%兰州%'
  group by  case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end ,

 T1.GENDER ,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end ,
 p.part ,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end ,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end
 
   union all
 
 
 select '深圳' type,
 case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end 航班日期分类,
 T1.GENDER 性别,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end 年龄,
 p.part 出行目的,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end 提前期,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end 是否带儿童,
 count(1) 机票数
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
  left join (select t1.flights_order_id,
                    max(case
                          when t1.sex > 1 then
                           1
                          else
                           0
                        end) has_child
               from dw.fact_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
                and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
                AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
              group by t1.flights_order_id) c on t1.flights_order_id =
                                                 c.flights_order_id
  left join dw.fact_orderhead_trippurpose@to_ods p on t1.flights_order_head_id =
                                                      p.flights_order_head_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
   AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
   and t1.nationflag='国内'
   and t2.flights_city_name like '%深圳%'
  group by  case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end ,

 T1.GENDER ,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end ,
 p.part ,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end ,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end
 
 
   union all
 
 
 select '南昌' type,
 case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end 航班日期分类,
 T1.GENDER 性别,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end 年龄,
 p.part 出行目的,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end 提前期,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end 是否带儿童,
 count(1) 机票数
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
  left join (select t1.flights_order_id,
                    max(case
                          when t1.sex > 1 then
                           1
                          else
                           0
                        end) has_child
               from dw.fact_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
                and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
                AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
              group by t1.flights_order_id) c on t1.flights_order_id =
                                                 c.flights_order_id
  left join dw.fact_orderhead_trippurpose@to_ods p on t1.flights_order_head_id =
                                                      p.flights_order_head_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
   AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
   and t1.nationflag='国内'
   and t2.flights_city_name like '%南昌%'
  group by  case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end ,

 T1.GENDER ,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end ,
 p.part ,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end ,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end
 
  union all
 
  select '宁波' type,
 case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end 航班日期分类,
 T1.GENDER 性别,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end 年龄,
 p.part 出行目的,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end 提前期,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end 是否带儿童,
 count(1) 机票数
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t2.segment_head_id = t1.segment_head_id
  left join (select t1.flights_order_id,
                    max(case
                          when t1.sex > 1 then
                           1
                          else
                           0
                        end) has_child
               from dw.fact_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
                and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
                AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
              group by t1.flights_order_id) c on t1.flights_order_id =
                                                 c.flights_order_id
  left join dw.fact_orderhead_trippurpose@to_ods p on t1.flights_order_head_id =
                                                      p.flights_order_head_id
 where t1.company_id = 0
   and t1.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
   and t1.flights_date <  to_date('2020-01-01', 'yyyy-mm-dd')
   AND T1.SEATS_NAME NOT IN ('B', 'G', 'G1', 'G2', 'O')
   and t1.nationflag='国内'
   and t2.flights_city_name like '%宁波%'
  group by  case
   when t1.flights_date >= to_date('2019-06-25', 'yyyy-mm-dd') and
        t1.flights_date <= to_date('2019-09-15', 'yyyy-mm-dd') then
    '2019暑期'
   else
    '2019其他'
 end ,

 T1.GENDER ,
 case
   when getage(t1.flights_date, t1.birthday) < 0 then
    '无法判断'
   when getage(t1.flights_date, t1.birthday) <= 12 then
    '00~12'
   when getage(t1.flights_date, t1.birthday) <= 17 then
    '13~17'
   when getage(t1.flights_date, t1.birthday) <= 22 then
    '18~22'
   when getage(t1.flights_date, t1.birthday) <= 30 then
    '23~30'
   when getage(t1.flights_date, t1.birthday) <= 40 then
    '31~40'
   when getage(t1.flights_date, t1.birthday) <= 50 then
    '41~50'
   when getage(t1.flights_date, t1.birthday) <= 60 then
    '51~60'
   when getage(t1.flights_date, t1.birthday) <= 70 then
    '61~70'
   else
    '70+'
 end ,
 p.part ,
 case
   when t1.ahead_days <= 3 then
    '0~3'
   when t1.ahead_days <= 7 then
    '4~7'
   when t1.ahead_days <= 14 then
    '8~14'
   when t1.ahead_days > 15 then
    '15+'
 end ,
 case
   when c.has_child = 1 then
    '带儿童'
   else
    '不带儿童'
 end;


------328、江浙沪数据

select to_char(t1.flight_date,'yyyymm'), count(distinct case when t2.province||t3.province like '%浙江%' then t1.segment_head_id
else null end),count(distinct case when t2.city||t3.city like '%南京%' then t1.segment_head_id
else null end),
count(distinct case when t2.city||t3.city like '%苏州%' then t1.segment_head_id
else null end),
count(distinct case when t2.city||t3.city like '%无锡%' then t1.segment_head_id
else null end),
count(distinct case when t2.city||t3.city like '%深圳%' then t1.segment_head_id
else null end),
count(distinct case when t1.flights_city_name like '%上海%' then t1.segment_head_id
else null end)
 from dw.da_flight t1
 left join hdb.cq_airport t2 on t1.originairport=t2.threecodeforcity
 left join hdb.cq_airport t3 on t1.destairport=t3.threecodeforcity
 where t1.flight_date>=to_date('2021-04-01','yyyy-mm-dd')
   and t1.flight_date< to_date('2021-07-01','yyyy-mm-dd')
   and t1.flag=0
   and t1.company_id=0
   group by to_char(t1.flight_date,'yyyymm');


 ------329、 积分多充数据监控

select t1.*,t2.flights_order_id,t2.flights_date,t2.flag_id,t3.flights_segment_name,t2.seat_type,
       case when t4.segment_head_id is not null then '套票' else '非套票' end,t4.yhq_money
 from anl.event_risk_points@to_dds t1
 left join dw.fact_recent_order_detail t2 on t1.users_id=t2.client_id and t1.flights
 left join dw.da_flight t3 on t2.segment_head_id=t3.segment_head_id
 left join dw.fact_combo_ticket t4 on t2.flights_order_head_id=t4.flights_order_head_id
 where t2.flights_date>=to_date('2021-05-01','yyyy-mm-dd');


---------------------------------------------------------------------------20210616-------------------------------------------------------------------------------------

 ------330、数字人民币--目前仅在商旅通数据库有记录，GDS未进行相应记录

 select t4.*   
   from cqsale.cq_order@to_air t1
   join pay.cq_ips_order_id@to_air t4 on t1.flights_order_id=t4.flights_order_id
   where t1.flights_order_id in('XOSSJL','XOJQPV','XNYNXC','XLXJMH')
   and t4.flights_order_id in('XOSSJL','XOJQPV','XNYNXC','XLXJMH');
   


 ------331、

--针对2018年11~2020年优惠券被盗用的情况进行分析，找到真实被盗用的数量

select /*+parallel(4) */
tb1.*,tb2.yhqnum,tb2.useyhq,tb2.usemoney,tb3.tkt,tb3.tktuse,tb3.ntktuse
  from (select case
                 when t1.batch_no in
                      (4688, 4091, 3875, 4710, 4151, 3870, 4709, 4094, 4430, 5603, 4690, 4050, 4150, 3889, 4051, 4110, 4250, 3928, 4052, 4063, 4130, 5668, 4506, 4490, 4909, 4208, 4505, 4834, 5192) then
                  'admin'
                 when t1.batch_no in
                      (5088, 5177, 5142, 4348, 4751, 4817, 4836, 4837, 4893, 4894, 4835, 4870, 6408, 6410, 6411, 6412, 6421, 6428, 5592, 5594, 4589, 5597, 5614, 5684, 5685, 5728, 5729, 5753, 5754, 5772, 5773, 6631, 6509, 6671, 6670, 6669, 6668, 6732, 6731, 6730, 6729, 6728, 6710, 6708, 6709, 6148, 6190, 7289, 7288, 7108, 7248, 6948, 6808, 6788, 7928, 8468) then
                  'lijintian'
                 when t1.batch_no in
                      (5674, 9289, 9290, 8095, 8169, 8093, 7749, 8328, 7910, 7908, 7752, 7754, 8090, 7868, 8317, 8618, 8168, 8312, 8529, 8311, 8313, 8637, 8643, 8494, 8710, 8813, 8599, 8590, 8530, 8308, 8309, 8315, 8316, 8489, 8491, 8508, 8510, 8511, 8513, 8514, 8515, 8528, 8531, 8534, 8600, 8644, 8720, 8721, 8940, 8711, 8814, 8933, 8936, 8935, 8708, 8934) then
                  'yangmian'
               end 操作人,
               t1.batch_no,
               t2.act_name,
               min(t1.activity_name) activity_name,  ---cms有多个名称不一致的情况
               t2.total_num,
               t2.create_user,
               t2.create_date,
               t2.money_var,
               t2.status,
               t2.ssnum,
               t2.usenum,
               t2.nusenum,
               count(1) 生成量,
               sum(case
                     when t1.expand_feild is not null then
                      1
                     when t1.quan_status = '1' then
                      1
                     else
                      0
                   end) 兑换量,
               t2.money_var * sum(case
                                    when t1.expand_feild is not null then
                                     1
                                    when t1.quan_status = '1' then
                                     1
                                    else
                                     0
                                  end) 优惠金额
          from hdb.cms_yhq_create t1
          left join (select h1.batch_id,
                           h1.act_name,
                           h1.total_num,
                           h1.create_user,
                           h1.create_date,
                           h1.money_var,
                           h1.status,
                           count(distinct h2.id) ssnum,
                           count(distinct case when h2.STATUS=1 then h2.id else null end) usenum,
                           count(distinct case when h2.STATUS=1 and nvl(h2.INNERPID,'-') like '%无效%' then h2.id else null end) nusenum                 
                      from dw.bi_yhq_batch h1
                     left join YHQ.CQ_NEW_YHQ_RELATION@to_air h2 on h1.batch_id=h2.CREATE_ID                    
                     where h1.create_date>=to_date('20180101','yyyymmdd')
                     group by h1.batch_id,
                              h1.act_name,
                              h1.total_num,
                              h1.create_user,
                              h1.create_date,
                              h1.money_var,
                              h1.status
                   
                              ) t2 on to_char(t1.batch_no) =
                                               to_char(t2.batch_id)
         where t1.batch_no in
               (4688, 4091, 3875, 4710, 4151, 3870, 4709, 4094, 4430, 5603, 4690, 4050, 4150, 3889, 4051, 4110, 4250, 3928, 4052, 4063, 4130, 5668, 4506, 4490, 4909, 4208, 4505, 4834, 5192, 5088, 5177, 5142, 4348, 4751, 4817, 4836, 4837, 4893, 4894, 4835, 4870, 6408, 6410, 6411, 6412, 6421, 6428, 5592, 5594, 4589, 5597, 5614, 5684, 5685, 5728, 5729, 5753, 5754, 5772, 5773, 6631, 6509, 6671, 6670, 6669, 6668, 6732, 6731, 6730, 6729, 6728, 6710, 6708, 6709, 6148, 6190, 7289, 7288, 7108, 7248, 6948, 6808, 6788, 7928, 8468, 5674, 9289, 9290, 8095, 8169, 8093, 7749, 8328, 7910, 7908, 7752, 7754, 8090, 7868, 8317, 8618, 8168, 8312, 8529, 8311, 8313, 8637, 8643, 8494, 8710, 8813, 8599, 8590, 8530, 8308, 8309, 8315, 8316, 8489, 8491, 8508, 8510, 8511, 8513, 8514, 8515, 8528, 8531, 8534, 8600, 8644, 8720, 8721, 8940, 8711, 8814, 8933, 8936, 8935, 8708, 8934)
         group by case
                    when t1.batch_no in
                         (4688, 4091, 3875, 4710, 4151, 3870, 4709, 4094, 4430, 5603, 4690, 4050, 4150, 3889, 4051, 4110, 4250, 3928, 4052, 4063, 4130, 5668, 4506, 4490, 4909, 4208, 4505, 4834, 5192) then
                     'admin'
                    when t1.batch_no in
                         (5088, 5177, 5142, 4348, 4751, 4817, 4836, 4837, 4893, 4894, 4835, 4870, 6408, 6410, 6411, 6412, 6421, 6428, 5592, 5594, 4589, 5597, 5614, 5684, 5685, 5728, 5729, 5753, 5754, 5772, 5773, 6631, 6509, 6671, 6670, 6669, 6668, 6732, 6731, 6730, 6729, 6728, 6710, 6708, 6709, 6148, 6190, 7289, 7288, 7108, 7248, 6948, 6808, 6788, 7928, 8468) then
                     'lijintian'
                    when t1.batch_no in
                         (5674, 9289, 9290, 8095, 8169, 8093, 7749, 8328, 7910, 7908, 7752, 7754, 8090, 7868, 8317, 8618, 8168, 8312, 8529, 8311, 8313, 8637, 8643, 8494, 8710, 8813, 8599, 8590, 8530, 8308, 8309, 8315, 8316, 8489, 8491, 8508, 8510, 8511, 8513, 8514, 8515, 8528, 8531, 8534, 8600, 8644, 8720, 8721, 8940, 8711, 8814, 8933, 8936, 8935, 8708, 8934) then
                     'yangmian'
                  end,
                  t1.batch_no,
                  t2.act_name,
                  
                  t2.total_num,
                  t2.create_user,
                  t2.create_date,
                  t2.money_var,
                  t2.status,
                              t2.ssnum,
               t2.usenum,
               t2.nusenum) tb1
  ---目前CRM发券的流程，有具体的发券理由
  left join (select tb1.batch_id,
                    count(distinct tb1.yhq_id) yhqnum,
                    sum(case
                          when tb1.status = 1 then
                           1
                          else
                           0
                        end) useyhq,
                    sum(tb1.usemoney) usemoney
               from (select t4.batch_id,
                            t1.users_id,
                            t1.id yhq_id,
                            t3.usemoney,
                            t1.status
                       from YHQ.CQ_NEW_YHQ_RELATION@to_air t1
                       join dw.bi_yhq_batch t4 on t1.create_id = t4.batch_id
                       left join (select yhq_id,
                                        sum(case
                                              when t2.flag = 1 then
                                               t2.use_money
                                              else
                                               0
                                            end) usemoney
                                   from dw.bi_yhq_use t2
                                  where t2.version = '2'
                                  group by yhq_id) t3 on t1.id = t3.yhq_id) tb1
               join hdb.crm_yhq_reason tb2 on tb1.batch_id = tb2.couponno
                                          and tb1.yhq_id = tb2.couponid
                                          and tb2.couponid is not null
              group by tb1.batch_id) tb2 on tb1.batch_no = tb2.batch_id
---CRM改版前按照市场活动中的逻辑进行发券，未区分是不是补偿券
  left join (select t1.couponbatchno,
                    count(distinct t2.id) tkt,
                    count(distinct case
                          when t2.status = 1 then
                           t2.id
                          else
                           null
                        end) tktuse,
                     count(distinct case
                          when t2.status = 1 and  nvl(t2.INNERPID,'-') like '%无效%' then
                           t2.id
                          else
                           null
                        end) ntktuse
               from hdb.crm_coupon_grant_detail t1
               join YHQ.CQ_NEW_YHQ_RELATION@to_air t2 on t1.couponbatchno =
                                                         t2.create_id
                                                     and t1.userid =
                                                         t2.users_id
              where t1.status = 1
              group by t1.couponbatchno) tb3 on tb1.batch_no =
                                                tb3.couponbatchno;
                                                

select /*+parallel(4) */
tb1.*,tb2.yhqnum,tb2.useyhq,tb2.usemoney,tb3.tkt,tb3.tktuse,tb3.ntktuse
  from (select case
                 when t1.batch_no in
                      (4688, 4091, 3875, 4710, 4151, 3870, 4709, 4094, 4430, 5603, 4690, 4050, 4150, 3889, 4051, 4110, 4250, 3928, 4052, 4063, 4130, 5668, 4506, 4490, 4909, 4208, 4505, 4834, 5192) then
                  'admin'
                 when t1.batch_no in
                      (5088, 5177, 5142, 4348, 4751, 4817, 4836, 4837, 4893, 4894, 4835, 4870, 6408, 6410, 6411, 6412, 6421, 6428, 5592, 5594, 4589, 5597, 5614, 5684, 5685, 5728, 5729, 5753, 5754, 5772, 5773, 6631, 6509, 6671, 6670, 6669, 6668, 6732, 6731, 6730, 6729, 6728, 6710, 6708, 6709, 6148, 6190, 7289, 7288, 7108, 7248, 6948, 6808, 6788, 7928, 8468) then
                  'lijintian'
                 when t1.batch_no in
                      (5674, 9289, 9290, 8095, 8169, 8093, 7749, 8328, 7910, 7908, 7752, 7754, 8090, 7868, 8317, 8618, 8168, 8312, 8529, 8311, 8313, 8637, 8643, 8494, 8710, 8813, 8599, 8590, 8530, 8308, 8309, 8315, 8316, 8489, 8491, 8508, 8510, 8511, 8513, 8514, 8515, 8528, 8531, 8534, 8600, 8644, 8720, 8721, 8940, 8711, 8814, 8933, 8936, 8935, 8708, 8934) then
                  'yangmian'
               end 操作人,
               t1.batch_no,
               t2.act_name,
               min(t1.activity_name) activity_name,  ---cms有多个名称不一致的情况
               t2.total_num,
               t2.create_user,
               t2.create_date,
               t2.money_var,
               t2.status,
               t2.ssnum,
               t2.usenum,
               t2.nusenum,
               count(1) 生成量,
               sum(case
                     when t1.expand_feild is not null then
                      1
                     when t1.quan_status = '1' then
                      1
                     else
                      0
                   end) 兑换量,
               t2.money_var * sum(case
                                    when t1.expand_feild is not null then
                                     1
                                    when t1.quan_status = '1' then
                                     1
                                    else
                                     0
                                  end) 优惠金额
          from hdb.cms_yhq_create t1
          left join (select h1.batch_id,
                           h1.act_name,
                           h1.total_num,
                           h1.create_user,
                           h1.create_date,
                           h1.money_var,
                           h1.status,
                           count(distinct h2.id) ssnum,
                           count(distinct case when h2.STATUS=1 then h2.id else null end) usenum,
                           count(distinct case when h2.STATUS=1 and nvl(h2.INNERPID,'-') like '%无效%' then h2.id else null end) nusenum                 
                      from dw.bi_yhq_batch h1
                     left join YHQ.CQ_NEW_YHQ_RELATION@to_air h2 on h1.batch_id=h2.CREATE_ID                    
                     where h1.create_date>=to_date('20180101','yyyymmdd')
                     group by h1.batch_id,
                              h1.act_name,
                              h1.total_num,
                              h1.create_user,
                              h1.create_date,
                              h1.money_var,
                              h1.status
                   
                              ) t2 on to_char(t1.batch_no) =
                                               to_char(t2.batch_id)
         where t1.batch_no in
               (4688, 4091, 3875, 4710, 4151, 3870, 4709, 4094, 4430, 5603, 4690, 4050, 4150, 3889, 4051, 4110, 4250, 3928, 4052, 4063, 4130, 5668, 4506, 4490, 4909, 4208, 4505, 4834, 5192, 5088, 5177, 5142, 4348, 4751, 4817, 4836, 4837, 4893, 4894, 4835, 4870, 6408, 6410, 6411, 6412, 6421, 6428, 5592, 5594, 4589, 5597, 5614, 5684, 5685, 5728, 5729, 5753, 5754, 5772, 5773, 6631, 6509, 6671, 6670, 6669, 6668, 6732, 6731, 6730, 6729, 6728, 6710, 6708, 6709, 6148, 6190, 7289, 7288, 7108, 7248, 6948, 6808, 6788, 7928, 8468, 5674, 9289, 9290, 8095, 8169, 8093, 7749, 8328, 7910, 7908, 7752, 7754, 8090, 7868, 8317, 8618, 8168, 8312, 8529, 8311, 8313, 8637, 8643, 8494, 8710, 8813, 8599, 8590, 8530, 8308, 8309, 8315, 8316, 8489, 8491, 8508, 8510, 8511, 8513, 8514, 8515, 8528, 8531, 8534, 8600, 8644, 8720, 8721, 8940, 8711, 8814, 8933, 8936, 8935, 8708, 8934)
         group by case
                    when t1.batch_no in
                         (4688, 4091, 3875, 4710, 4151, 3870, 4709, 4094, 4430, 5603, 4690, 4050, 4150, 3889, 4051, 4110, 4250, 3928, 4052, 4063, 4130, 5668, 4506, 4490, 4909, 4208, 4505, 4834, 5192) then
                     'admin'
                    when t1.batch_no in
                         (5088, 5177, 5142, 4348, 4751, 4817, 4836, 4837, 4893, 4894, 4835, 4870, 6408, 6410, 6411, 6412, 6421, 6428, 5592, 5594, 4589, 5597, 5614, 5684, 5685, 5728, 5729, 5753, 5754, 5772, 5773, 6631, 6509, 6671, 6670, 6669, 6668, 6732, 6731, 6730, 6729, 6728, 6710, 6708, 6709, 6148, 6190, 7289, 7288, 7108, 7248, 6948, 6808, 6788, 7928, 8468) then
                     'lijintian'
                    when t1.batch_no in
                         (5674, 9289, 9290, 8095, 8169, 8093, 7749, 8328, 7910, 7908, 7752, 7754, 8090, 7868, 8317, 8618, 8168, 8312, 8529, 8311, 8313, 8637, 8643, 8494, 8710, 8813, 8599, 8590, 8530, 8308, 8309, 8315, 8316, 8489, 8491, 8508, 8510, 8511, 8513, 8514, 8515, 8528, 8531, 8534, 8600, 8644, 8720, 8721, 8940, 8711, 8814, 8933, 8936, 8935, 8708, 8934) then
                     'yangmian'
                  end,
                  t1.batch_no,
                  t2.act_name,
                  
                  t2.total_num,
                  t2.create_user,
                  t2.create_date,
                  t2.money_var,
                  t2.status,
                              t2.ssnum,
               t2.usenum,
               t2.nusenum) tb1
  left join (select tb1.batch_id,
                    count(distinct tb1.yhq_id) yhqnum,
                    sum(case
                          when tb1.status = 1 then
                           1
                          else
                           0
                        end) useyhq,
                    sum(tb1.usemoney) usemoney
               from (select t4.batch_id,
                            t1.users_id,
                            t1.id yhq_id,
                            t1.status,
                            t3.usemoney
                       from YHQ.CQ_NEW_YHQ_RELATION@to_air t1
                       join dw.bi_yhq_batch t4 on t1.create_id =t4.batch_id
                       left join (select yhq_id,
                                        sum(case
                                              when t2.flag = 1 then
                                               t2.use_money
                                              else
                                               0
                                            end) usemoney
                                   from dw.bi_yhq_use t2
                                  where t2.version = '2'
                                  and t2.flag=1
                                  group by yhq_id) t3 on t1.id = t3.yhq_id) tb1
               left join hdb.crm_yhq_reason tb2 on tb1.batch_id = tb2.couponno
                                          and tb1.yhq_id = tb2.couponid
                                          and tb2.couponid is not null
           group by tb1.batch_id) tb2 on tb1.batch_no = tb2.batch_id

  left join (select t1.couponbatchno,
                    count(distinct t2.id) tkt,
                    count(distinct case
                          when t2.status = 1 then
                           t2.id
                          else
                           null
                        end) tktuse,
                     count(distinct case
                          when t2.status = 1 and  nvl(t2.INNERPID,'-') like '%无效%' then
                           t2.id
                          else
                           null
                        end) ntktuse
               from hdb.crm_coupon_grant_detail t1
               join YHQ.CQ_NEW_YHQ_RELATION@to_air t2 on t1.couponbatchno =
                                                         t2.create_id
                                                     and t1.userid =
                                                         t2.users_id
              where t1.status = 1
              group by t1.couponbatchno) tb3 on tb1.batch_no =
                                                tb3.couponbatchno;


                          
 ------332、D舱销售数据

select t2.terminal_id,t2.client_id,t2.web_id,t2.ex_nfd1,t1.*
 from cqsale.cq_order_head@to_air t1
 join cqsale.cq_order@to_AIR T2 ON t1.flights_order_id=t2.flights_order_id
 where t1.codeno='500381199405020215';

 ------333、P2渠道销售数据

select t1.order_day,
case when t1.channel in('手机','网站') and t3.users_id is not null  then '线上自有平台代理'
     when t1.channel in('手机','网站') and regexp_like(t1.gate_name,'易宝|商旅卡') then '易宝商旅卡'
     when t1.channel in('手机','网站')  then '线上自有平台纯量'
     when t1.channel in('OTA','旗舰店') then 'OTA旗舰店'
     when t1.channel ='B2B代理' then 'B2B代理'
     else '线下自有平台' end,count(1)   
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo t3 on t1.client_id = t3.users_id
  left join dw.dim_segment_type t4 on t2.route_Id = t4.route_Id and t2.h_route_id = t4.h_route_id
 where t2.flag <> 2
   and t1.order_day >= TRUNC(SYSDATE-30)
   and t1.order_day <= trunc(sysdate)
   and t1.seats_name is not NULL
   and t1.seats_name ='P2'
   and t1.company_id=0
   group by t1.order_day,
case when t1.channel in('手机','网站') and t3.users_id is not null  then '线上自有平台代理'
     when t1.channel in('手机','网站') and regexp_like(t1.gate_name,'易宝|商旅卡') then '易宝商旅卡'
     when t1.channel in('手机','网站')  then '线上自有平台纯量'
     when t1.channel in('OTA','旗舰店') then 'OTA旗舰店'
     when t1.channel ='B2B代理' then 'B2B代理'
     else '线下自有平台' end

 ------334、CRM投诉数据


select cp.createtime 创建时间,
       case
         when cp.jobtypecode = 'J' then
          '建议'
         when cp.jobtypecode = 'B' then
          '表扬'
         when cp.jobtypecode = 'T' then
          '投诉'
         when cp.jobtypecode = 'P' then
          '评价'
         else
          cp.jobtypecode
       end 工单类型,
       cp.jobnextfrom 工单信息来源二级菜单,
       cp.complaintype1c 投诉类别基础数据里的名称,
       cp.complaintype2c 投诉类别二级菜单名称,
       cp.complaintype3c 投诉类别三级菜单名称,
       cp.passengertype 旅客类型,
       cp.flightno 航班号,
       cp.flightdate 航班日期,
       cp.airport 起降机场,
       cp.originairportcode 起飞机场三字码,
       cp.destairportcode 降落机场三字码,
       cp.conetent 投诉内容,
       cp.sex 性别,
       cp.age 年龄,
       cp.orderchannel 订单渠道,
       cp.orderchannelchild 订单子渠道,
       cp.leg 航段,
       cp.cabin 舱位,
       cp.ticketprice 票价,
       cp.station 航站,
       cp.responsibilitydept
  from hdb.crm_wo_baseinfo cp
 where trunc(cp.createtime) >= trunc(sysdate - 28)
   and trunc(cp.createtime) < trunc(sysdate)
   and cp.gcflag = 0;

 ------335、各OTA渠道占比

select t1.channel,t1.sub_channel,count(1)
 from dw.fact_order_detail t1
 where t1.order_day>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-04-01','yyyy-mm-dd')
   --and t1.channel in('OTA','旗舰店')
   and t1.company_id=0
   and t1.seats_name is not null 
   group by t1.channel,t1.sub_channel;

------------------------------------------------------------------20210618------------------------------------------------------------------------
-----336、联润实名认证条数

select split_part(timestamp,' ',1),substr(t1.phone,1,3),count(1)
 from anl.fact_threevaild_detail t1
 where t1.respcode in('P300', 'P301', 'P305', 'P306', 'P307', 'SJ', 'NM', 'ID')
 group by split_part(timestamp,' ',1),substr(t1.phone,1,3);



 select split_part(timestamp, ' ', 1),
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133',                           '153',
                                         '162',
                                         '168',
                                         '169',
                                         '173',
                                         '174',
                                         '177',
                                         '179',
                                         '180',
                                         '181',
                                         '189',
                                         '189',
                                         '191',
                                         '196',
                                         '197',
                                         '199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130',
                                         '131',
                                         '132',
                                         '140',
                                         '146',
                                         '155',
                                         '156',
                                         '163',
                                         '166',
                                         '167',
                                         '171',
                                         '175',
                                         '176',
                                         '185',
                                         '186',
                                         '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',
                                         '135',
                                         '136',
                                         '137',
                                         '138',
                                         '139',
                                         '144',
                                         '147',
                                         '148',
                                         '150',
                                         '151',
                                         '152',
                                         '157',
                                         '158',
                                         '159',
                                         '165',
                                         '172',
                                         '178',
                                         '182',
                                         '183',
                                         '184',
                                         '187',
                                         '188',
                                         '195',
                                         '198') then
          '移动'
       end
       
      , 
       count(1)
  from dw.fact_threevaild_detail t1
 where t1.respcode in
       ('P300', 'P301', 'P305', 'P306', 'P307', 'SJ', 'NM', 'ID')
 group by split_part(timestamp, ' ', 1),
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133',
                                         '153',
                                         '162',
                                         '168',
                                         '169',
                                         '173',
                                         '174',
                                         '177',
                                         '179',
                                         '180',
                                         '181',
                                         '189',
                                         '189',
                                         '191',
                                         '196',
                                         '197',
                                         '199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130',
                                         '131',
                                         '132',
                                         '140',
                                         '146',
                                         '155',
                                         '156',
                                         '163',
                                         '166',
                                         '167',
                                         '171',
                                         '175',
                                         '176',
                                         '185',
                                         '186',
                                         '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',
                                         '135',
                                         '136',
                                         '137',
                                         '138',
                                         '139',
                                         '144',
                                         '147',
                                         '148',
                                         '150',
                                         '151',
                                         '152',
                                         '157',
                                         '158',
                                         '159',
                                         '165',
                                         '172',
                                         '178',
                                         '182',
                                         '183',
                                         '184',
                                         '187',
                                         '188',
                                         '195',
                                         '198') then
          '移动'
       end;


 ------337、 A320（2排）、A321（3排）日非商务经济座的人数有多少

select fdate,t2.is_swj,t3.layout,case when to_number(regexp_substr(t1.sn,'[0-9]+'))<=3 then to_number(regexp_substr(t1.sn,'[0-9]+')) 
else 1111 end,
count(1)
 from stg.s_dcs_old_h t1
 join dw.fact_order_detail t2 on t1.rl=t2.flights_order_id and t1.ri=t2.valid_code
 join dw.da_flight t3 on t2.segment_head_id=t3.segment_head_id
 where t1.fdate>=trunc(sysdate)-1
   and t1.fdate< trunc(sysdate)
   and t2.flights_date>=trunc(sysdate)-1
   and t2.flights_date< trunc(sysdate)
   and t1.fn like '9C%'
 group by fdate,t2.is_swj,t3.layout,case when to_number(regexp_substr(t1.sn,'[0-9]+'))<=3 then to_number(regexp_substr(t1.sn,'[0-9]+')) 
else 1111 end;



 ------338、7月1日以后套票异常分析

select t1.combo_name,t2.change_flag,t1.flag_id,t4.flight_date,t4.flag,t2.ticket_price,t2.r_flights_date,t2.whole_segment,t4.flights_segment_name,t5.flights_segment_name,
case when t2.whole_segment like '%CAN%' then '广东'
when t2.whole_segment like '%SZX%' then '广东'
when t2.whole_segment like '%SWA%' then '广东' 
when t2.whole_segment like '%ZHA%' then '广东' 
when t2.whole_segment like '%ZUH%' then '广东' 
else '其他' end ,

count(1)
 from dw.fact_combo_ticket t1
 left join cqsale.cq_order_head@to_air t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join dw.da_order_change t3 on t2.flights_order_head_id=t3.flights_order_head_id and t3.new_segment_id=t2.segment_head_id
 left join dw.da_flight t4 on t4.segment_head_id=t3.old_segment_id
 left join dw.da_flight t5 on t5.segment_head_id=t2.segment_head_id
 where t1.r_flights_date>=to_date('2021-07-01','yyyy-mm-dd')
 and t1.flag_id IN(3,5)
 group by t1.combo_name,t2.change_flag,t1.flag_id,t4.flight_date,t4.flag,t2.ticket_price,t2.r_flights_date,case when t2.whole_segment like '%CAN%' then '广东'
when t2.whole_segment like '%SZX%' then '广东'
when t2.whole_segment like '%SWA%' then '广东' 
when t2.whole_segment like '%ZHA%' then '广东' 
when t2.whole_segment like '%ZUH%' then '广东' 
else '其他' end,t2.whole_segment,t4.flights_segment_name,t5.flights_segment_name;
  

 ------339、绿翼立减（随机立减）相应分析

select trunc(t.order_date) 日期,
       case when to_char(t.order_date,'hh24:mi')>='10:00' then '10点以后'
       else '其他时间' end,
       case
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 <= 1 then
          '网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and t.ex_nfd1 = 2 then
          'm网站'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (3, 8) then
          'ios'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (4, 9) then
          '安卓'
         when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
              t.ex_nfd1 in (5, 10) then
          '微信'
         else
          '其他'
       end,
       case
         when t.terminal_id < 0 and t.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'
         when t.terminal_id < 0 and t.web_id = 0 and
              t.pay_gate in (15, 29, 31) then
          '线上自有易宝商旅卡'
         when t.terminal_id < 0 and t.web_id = 0 then
          '线上纯量'
         else
          '其他'
       end,
       case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '受益人立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end,
       t4.youhui_result,
       case when t6.flights_order_head_id is not null then '套票'
       else '非套票' end 是否套票,
       case when t1.flag_id in(7,11,12) then '退票'
       else '已支付' end 机票状态,
       count(1) 票量
  from cqsale.cq_order@to_air t
  join cqsale.cq_order_head@to_air t1 on t.flights_order_id =t1.flights_order_id
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo t5 on t.client_id = t5.users_id
  left join dw.fact_combo_ticket t6 on t1.flights_order_head_id=t6.flights_order_head_id
  left join (select t1.flights_order_head_id,
                    nvl(t1.is_beneficiary, 0) is_beneficiary,
                    t1.youhui_result
               from cust.cq_order_youhui_detail@to_air t1
               join cust.cq_youhui_policy_main@to_air t2 on t1.youhui_id=t2.id
              where t1.product_type = 0
                and t1.yh_ret_time is null
                and t1.youhui_result is not null
                and t2.YH_STYLE=2
                and t1.create_date >= trunc(sysdate) - 30) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id
 where t.order_date >= trunc(sysdate) - 7
   and t.order_date < sysdate
   and t1.r_flights_date >= trunc(sysdate - 7) - 7
   and t2.flag <> 2
   and to_char(t.order_date,'hh24:mi')<'21:50'
   and t1.flag_id in (3, 5, 40, 41,7,11,12)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
 group by trunc(t.order_date),
          case
            when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
                 t.ex_nfd1 <= 1 then
             '网站'
            when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
                 t.ex_nfd1 = 2 then
             'm网站'
            when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
                 t.ex_nfd1 in (3, 8) then
             'ios'
            when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
                 t.ex_nfd1 in (4, 9) then
             '安卓'
            when t.terminal_id < 0 and nvl(t.web_id, 0) = 0 and
                 t.ex_nfd1 in (5, 10) then
             '微信'
            else
             '其他'
          end,
          case
            when t.terminal_id < 0 and t.web_id = 0 and
                 t5.users_id is not null then
             '线上自有黑代'
            when t.terminal_id < 0 and t.web_id = 0 and
                 t.pay_gate in (15, 29, 31) then
             '线上自有易宝商旅卡'
            when t.terminal_id < 0 and t.web_id = 0 then
             '线上纯量'
            else
             '其他'
          end,
          case
            when t4.flights_order_head_id is not null and
                 t4.is_beneficiary = 1 then
             '受益人立减'
            when t4.flights_order_head_id is not null and
                 t4.is_beneficiary = 0 then
             '绿翼立减'
            else
             '普通购买'
          end,
          t4.youhui_result,
          case when t6.flights_order_head_id is not null then '套票'
       else '非套票' end,     case when t1.flag_id in(7,11,12) then '退票'
       else '已支付' end,
        case when to_char(t.order_date,'hh24:mi')>='10:00' then '10点以后'
       else '其他时间' end;

 ------340、服务联系方式获取

---订单号/航班号/航班日期/航段/姓名/紧急联系电话/联系电话/邮箱
select t.flights_order_id 订单号,t1.whole_flight 航班号,t1.r_flights_date 航班日期,t1.whole_segment 航段,t1.name||' '||coalesce(t1.second_name,'') 姓名,
t1.r_tel 紧急联系电话,t.work_tel 联系电话,t.email 邮箱
from cqsale.cq_order@to_air t
join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
where t1.r_flights_date>=to_date('2021-06-19','yyyy-mm-dd')
 and t1.r_flights_date<=to_date('2021-07-03','yyyy-mm-dd')
-- and t1.whole_flight iN('9C8886','9C650','9C8794')
 and t1.whole_segment like 'SZX%'
 and t1.whole_flight like '9C%'
  and t1.flag_id in(3,5,40,41);


 ------341、优惠券数据（D舱查询）


select t1.flights_order_id,t1.order_date,t1.channel,t1.sub_channel,t1.seats_name,t1.ticket_price,
t1.traveller_name,t1.flights_date,t3.flights_segment_name,t2.batch_id,t2.yhq_id,t1.flag_id
 from dw.fact_recent_order_detail t1
 left join dw.bi_yhq_use t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 where t1.flights_order_head_id in(254871177,
254871178,
255555065,
257463330,
257463332,
257587764,
260313181,
260313550,
260313588,
260339348,
260342647,
266056019,
266056539,
267184832,
267428316,
267429721,
267443950,
267444713,
267462098,
267462664,
267465002,
267467754,
267478433);

select t1.batch_no,t1.start_time,t1.quan_code,t1.quan_user,t1.quan_status,t2.realname,t3.realname
 from hdb.cms_yhq_create t1
 left join dw.da_b2c_user t2 on t1.quan_user=t2.users_id
 left join dw.da_lyuser t3 on t1.quan_user=t3.users_id_fk
 where batch_no in('10088','10068','10089')
 and t1.quan_user is not null;

 ------342、暑运数据

select '2021年' 年,to_char(h1.flight_date,'mm') 航班月,
to_char(h1.flight_date,'mmdd') 航班日期,replace(to_char(h1.flight_date,'day'),'星期','') 星期,
h4.type_segment,
replace(
case
         when instr(h3.wf_segment, '＝', 1, 2) > 0 then
          split_part(h3.wf_segment, '＝', 1) || '＝' ||
          split_part(h3.wf_segment, '＝', 3)
         else
          h3.wf_segment
       end,'东京','羽田') 往返航线,h1.segment_code 航段,
       case when mod(to_number(regexp_substr(substr(h1.flight_no,6,1),'[0-9]')),2)=0 then '进港'
       when mod(to_number(regexp_substr(substr(h1.flight_no,6,1),'[0-9]')),2)=1 then '出港'
       else '--' end 进出港,  h1.oversale*h1.MILE 销售座公里,   
       h1.flight_no 航班号,h1.segment_country 航线国家,h3.income_type 收益类型,   
h1.oversale 计划总数,h1.bgo_plan-h1.o_plan BG计划数,h1.oversale-h1.bgo_plan+h1.o_plan 散客计划数
,to_number(hb2.RESULT_CABIN_PRICE) 限价,hb2.RESULT_CABIN 限价舱位,h7.avgprice 最低20张机票平均票价,
   case when h5.segment_code is not null then '两年均有此航线'
             when h5.segment_code is null then '2019年无此航线' end 航线类型,
nvl(h2.swnum,0) 散客已销售数,nvl(h2.swprice,0) 散客票价和,nvl(h2.adfy,0) 散客燃油费,nvl(h2.otherfy,0) 散客其他税费,
nvl(h2.swnum,0)  最终销售数,nvl(h2.swprice,0) +nvl(h2.adfy,0) 最终含油收入,h2.tp_num 套票量
from dw.da_flight h1
left join cqrm.bi_segment_result@to_cqrm hb2 on hb2.rule_type=1 and h1.segment_head_id=hb2.segment_head_id
left join (
select t1.segment_head_id,sum(case when t1.seats_name not in('B','G','G1','G2') then 1 else 0 end) swnum ,
    sum(case when t1.seats_name not in('B','G','G1','G2') then t1.ticket_price else 0 end) swprice,
    sum(case when t1.seats_name not in('B','G','G1','G2') then t1.ad_fy else 0 end) adfy,
    sum(case when t1.seats_name not in('B','G','G1','G2') then t1.other_fy else 0 end) otherfy,
    sum(case when t3.flights_order_head_id is not null then 1 else 0 end) tp_num          
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
  where t1.flights_date>=to_date('2021-06-20','yyyy-mm-dd')
    and t1.flights_date<=to_date('2021-09-10','yyyy-mm-dd')
    and t2.flag<>2
    --and t2.nationflag='国内'
    and t1.order_day< trunc(sysdate)
    and t1.whole_flight like '9C%'
    group by t1.segment_head_id)h2 on h1.segment_head_id=h2.segment_head_id
    left join dw.dim_segment_type h3 on h1.route_id=h3.route_id and h1.h_route_id=h3.h_route_id
    left join hdb.dim_21nation_summer h4 on h1.flight_date=h4.spring_date  
   left  join (select  distinct segment_code
                       from  dw.da_flight 
                             where flag<>2
                   and flight_date>=to_date('2019-06-16','yyyy-mm-dd')
                   and flight_date<=to_date('2019-09-06','yyyy-mm-dd') 
                 --and nationflag ='国内'
                 and company_id=0
            )h5 on h1.segment_code=h5.segment_code
            
   
  left join(  
  select h6.segment_head_id,avg(ticket_price) avgprice
  from( 
  select t1.segment_head_id,t1.ticket_price+t1.ad_fy ticket_price,row_number()over(partition by t1.segment_head_id order by t1.ticket_price+t1.ad_fy)  xid         
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  where t1.flights_date>=to_date('2021-06-20','yyyy-mm-dd')
    and t1.flights_date<=to_date('2021-09-10','yyyy-mm-dd')
    and t2.flag<>2
    --and t2.nationflag ='国内'
    and t1.order_day< trunc(sysdate)
    and t1.whole_flight like '9C%'
    and t1.ticket_price>0
    and t1.seats_name not in('B','G','G1','G2','O','P2','P3','P4','P5','A','D','Z','I','J')
    and t1.sex =1
 )h6 
    where h6.xid<=20
    group by h6.segment_head_id)h7 on h1.segment_head_id=h7.segment_head_id  
    where h1.flight_date>=to_date('2021-06-20','yyyy-mm-dd')
    and h1.flight_date<=to_date('2021-09-10','yyyy-mm-dd')
    and h1.flag<>2
   -- and h1.nationflag ='国内'
    and h1.company_id=0
    
 
union all 

select  tb2.*, tb7.avgprice ,
case when tb4.segment_code is not null then '两年均有此航线'
             when tb4.segment_code is null then '2021年无此航线' end 航线类型,
nvl(tb3.swnum,0) swnum,
nvl(tb3.swprice,0) swprice,
nvl(tb3.adfy,0) adfy,
nvl(tb3.otherfy,0) otherfy,
nvl(tb5.totalnum,0) totalnum,
nvl(tb5.totalprice,0) totalprice,
tb3.tp_num
from(
select  '2019年' year,to_char(t3.spring_date,'mm') smonth,
to_char(t3.spring_date,'mmdd') sdate,
replace(to_char(t3.spring_date,'day'),'星期','') sweek,
t3.type_segment,
replace(
case when instr(t4.wf_segment, '＝', 1, 2) > 0 then
          split_part(t4.wf_segment, '＝', 1) || '＝' ||
          split_part(t4.wf_segment, '＝', 3)
         else
          t4.wf_segment
       end,'东京','羽田') wf_segment,
tb1.segment_code,    case when mod(to_number(regexp_substr(substr(tb1.flight_no,6,1),'[0-9]')),2)=0 then '进港'
       when mod(to_number(regexp_substr(substr(tb1.flight_no,6,1),'[0-9]')),2)=1 then '出港'
       else '--' end,sum(tb1.oversale*tb1.mile) salemile,
tb1.flight_no,tb1.segment_country,t4.income_type,
sum(tb1.oversale) oversale,sum(tb1.bgo_plan-tb1.o_plan) bgplan,
sum(tb1.oversale-tb1.bgo_plan+tb1.o_plan) swplan,
to_number(hb2.RESULT_CABIN_PRICE) RESULT_CABIN_PRICE,hb2.RESULT_CABIN
  from dw.da_flight tb1
  join hdb.dim_21nation_summer t3 on tb1.flight_date=t3.corre_date 
  left join dw.dim_segment_type t4 on tb1.route_id=t4.route_id and tb1.h_route_id=t4.h_route_id
  left join cqrm.bi_segment_result@to_cqrm hb2 on hb2.rule_type=1 and tb1.segment_head_id=hb2.segment_head_id
  where tb1.flight_date>=to_date('2019-06-16','yyyy-mm-dd')
    and tb1.flight_date<=to_date('2019-09-06','yyyy-mm-dd') 
    and tb1.flag<>2
    and tb1.company_id=0
   -- and tb1.nationflag ='国内'
    group by to_char(t3.spring_date,'mm') ,
to_char(t3.spring_date,'mmdd') ,
replace(to_char(t3.spring_date,'day'),'星期',''),
t3.type_segment,
replace(
case when instr(t4.wf_segment, '＝', 1, 2) > 0 then
          split_part(t4.wf_segment, '＝', 1) || '＝' ||
          split_part(t4.wf_segment, '＝', 3)
         else
          t4.wf_segment
       end,'东京','羽田') ,
tb1.segment_code,
tb1.flight_no,tb1.segment_country,t4.income_type,to_number(hb2.RESULT_CABIN_PRICE),hb2.RESULT_CABIN,
 case when mod(to_number(regexp_substr(substr(tb1.flight_no,6,1),'[0-9]')),2)=0 then '进港'
       when mod(to_number(regexp_substr(substr(tb1.flight_no,6,1),'[0-9]')),2)=1 then '出港'
       else '--' end
)tb2
left join(
select to_char(t3.spring_date,'mmdd') sdate,
t2.segment_code,t2.flight_no,sum(case when t1.seats_name not in('B','G','G1','G2') then 1 else 0 end) swnum ,
    sum(case when t1.seats_name not in('B','G','G1','G2') then t1.ticket_price else 0 end) swprice,
    sum(case when t1.seats_name not in('B','G','G1','G2') then t1.ad_fy else 0 end) adfy,
    sum(case when t1.seats_name not in('B','G','G1','G2') then t1.other_fy else 0 end) otherfy,
    sum(case when t6.flights_order_head_id is not null then 1 else 0 end) tp_num           
  from dw.fact_recent_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id 
  join hdb.dim_21nation_summer t3 on t2.flight_date=t3.corre_date
  left join dw.da_order_drawback t5 on t1.flights_order_head_id=t5.flights_order_head_id
  left join dw.fact_combo_ticket t6 on t1.flights_order_head_id=t6.flights_order_head_id
                       
  where t1.flights_date>=to_date('2019-06-16','yyyy-mm-dd')
    and t1.flights_date<=to_date('2019-09-06','yyyy-mm-dd')    
    and t2.flag<>2
    --and t2.nationflag ='国内'
    and nvl(t5.money_date,trunc(sysdate))>=(select DATE_LUNAR
                         from dw.adt_income_date
                         where datetime=trunc(sysdate))
    and t1.order_day< add_months(trunc(sysdate),-12)+t3.corre_number
    and t1.whole_flight like '9C%'
    group by to_char(t3.spring_date,'mmdd') ,
t2.segment_code,t2.flight_no)tb3  on tb2.sdate=tb3.sdate and tb2.segment_code=tb3.segment_code and tb2.flight_no=tb3.flight_no
left  join (select  distinct segment_code
                       from  dw.da_flight 
                             where flag<>2
                   and flight_date>=to_date('2021-06-20','yyyy-mm-dd')
                   and flight_date<=to_date('2021-09-10','yyyy-mm-dd') 
                -- and nationflag ='国内'
                 and company_id=0
            )tb4 on tb2.segment_code=tb4.segment_code
left join(
select to_char(t3.spring_date,'mmdd') sdate,
t2.segment_code,t2.flight_no,sum(case when t1.seats_name not in('B','G','G1','G2') then 1 else 0 end) totalnum ,
    sum(case when t1.seats_name not in('B','G','G1','G2') then t1.ticket_price+t1.ad_fy else 0 end) totalprice      
  from dw.fact_recent_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  join hdb.dim_21nation_summer t3 on t2.flight_date=t3.corre_date
  where t1.flights_date>=to_date('2019-06-16','yyyy-mm-dd')
    and t1.flights_date<=to_date('2019-09-06','yyyy-mm-dd')    
    and t2.flag<>2
    and t1.flag_id in(3,5,40)
   -- and t2.nationflag ='国内'
    and t1.whole_flight like '9C%'
    group by to_char(t3.spring_date,'mmdd') ,
t2.segment_code,t2.flight_no)tb5  on tb2.sdate=tb5.sdate and tb2.segment_code=tb5.segment_code and tb2.flight_no=tb5.flight_no



left join
(
select tb6.sdate,tb6.segment_code,tb6.flight_no,avg(ticketprice) avgprice 
from
(
select to_char(t3.spring_date,'mmdd') sdate,
t2.segment_code,t2.flight_no, t1.ticket_price+t1.ad_fy ticketprice,row_number()over(partition by to_char(t3.spring_date,'mmdd'),
t2.segment_code,t2.flight_no order by t1.ticket_price+t1.ad_fy) xid         
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  join hdb.dim_21nation_summer t3 on t2.flight_date=t3.corre_date  and decode(t2.origin_country_id,0,0,1)=t3.flight_type
    left join dw.da_order_drawback t5 on t1.flights_order_head_id=t5.flights_order_head_id
   where t1.flights_date>=to_date('2019-06-16','yyyy-mm-dd')
    and t1.flights_date<=to_date('2019-09-06','yyyy-mm-dd')    
    and t2.flag<>2
    and t1.ticket_price>0
    and t1.seats_name not in('B','G','G1','G2','O','P2','P3','P4','P5','A','D','Z','I','J')
    and t1.sex =1 
    and nvl(t5.money_date,trunc(sysdate))>=(select DATE_LUNAR
                         from dw.adt_income_date
                         where datetime=trunc(sysdate))
    --and t2.nationflag ='国内'
    and t1.order_day< add_months(trunc(sysdate),-12)+t3.corre_number
    and t1.whole_flight like '9C%'
)tb6
where tb6.xid<=20
group by tb6.sdate,tb6.segment_code,tb6.flight_no)tb7  on tb2.sdate=tb7.sdate and tb2.segment_code=tb7.segment_code and tb2.flight_no=tb7.flight_no;

--------------------------------------------------------------------20210623-----------------------------------------------------------
 ------343、临时数据提取 各OTA 618期间的销量

select 
case when  t1.order_day >= to_date('2021-06-18','yyyy-mm-dd')
   and t1.order_day < to_date('2021-06-21','yyyy-mm-dd')  then '18~20'
   when t1.order_day >= to_date('2021-06-11','yyyy-mm-dd')
   and t1.order_day < to_date('2021-06-14','yyyy-mm-dd')  then '11~13'
   else '其他' end,
t1.sub_channel,
t2.segment_type,
t2.flights_segment_name,
t2.flights_city_name,
t2.route_name,
t9.wf_segment_name,
t9.wf_city_name,
t9.wf_segment,
       count(1) 票量,
     sum(t1.ticket_price) 票价,
   sum(t1.price)  全价
  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.dim_segment_type t9  on t2.h_route_id=t9.h_route_id and t2.route_id=t9.route_id

 
 where t1.order_day >= to_date('2021-06-11','yyyy-mm-dd')
   and t1.order_day < to_date('2021-06-21','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2','O')
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.sub_channel in('携程','淘宝','同程','去哪儿')
   and t1.whole_flight like '9C%'
 group by case when  t1.order_day >= to_date('2021-06-18','yyyy-mm-dd')
   and t1.order_day < to_date('2021-06-21','yyyy-mm-dd')  then '18~20'
   when t1.order_day >= to_date('2021-06-11','yyyy-mm-dd')
   and t1.order_day < to_date('2021-06-14','yyyy-mm-dd')  then '11~13'
   else '其他' end,
t1.sub_channel ,
t2.segment_type,
t2.flights_segment_name,
t2.flights_city_name,
t2.route_name,
t9.wf_segment_name,
t9.wf_city_name,
t9.wf_segment

 ------344、线上自助退改比例

 select case when t1.money_terminal< 0 then '线上'
when t1.money_terminal in
                (300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'            
else '其他线下' end 退改渠道,count(1),round(count(1)/sum(count(1))over(partition by 1)*100,2) 
 from dw.da_order_drawback t1
 where t1.money_date>=trunc(sysdate)-7
 
 group by case when t1.money_terminal< 0 then '线上'
when t1.money_terminal in
                (300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'            
else '其他线下' end;




 ------345、投诉数据分析

select to_char(cp.createtime, 'yyyymm') 月份,
       trunc(cp.createtime) 创建时间,
       case
         when cp.jobtypecode = 'J' then
          '建议'
         when cp.jobtypecode = 'B' then
          '表扬'
         when cp.jobtypecode = 'T' then
          '投诉'
         when cp.jobtypecode = 'P' then
          '评价'
         else
          cp.jobtypecode
       end 工单类型,
       cp.jobnextfrom 工单信息来源二级菜单,
       case
         when cp.jobnextfrom in ('Android', 'IOS', 'M网', '网站', '微信', '绿翼商城') then
          '内部渠道'
         when cp.jobnextfrom in ('民航局', '民航局（网页）') then
          '民航局'
         when cp.jobnextfrom = '呼叫中心' then
          '呼叫中心'
         when cp.jobnextfrom in
              ('集团投诉科', '旅客评价', '新媒体平台-舆情', '意见卡', '智慧客舱', '内部', '内部渠道', '其它') then
          '内部渠道'
         when cp.jobnextfrom in ('内部流转(其他)事项', '内部流转(投诉)事项') then
          '内部流转'
       
         when cp.jobnextfrom = '消保委' then
          '其他外部'
         when cp.jobnextfrom = '外部' then
          '其他外部'
       end 投诉来源分类,       
       cp.complaintype1c 投诉类别基础数据里的名称,
       case when cp.conetent like '%套票%' then '套票产品服务'
       else cp.complaintype2c end  投诉类别二级菜单名称,
       cp.complaintype3c 投诉类别三级菜单名称,
       cp.passengertype 旅客类型,
       cp.flightno 航班号,
       cp.flightdate 航班日期,
       cp.airport 起降机场,
       cp.originairportcode 起飞机场三字码,
       cp.destairportcode 降落机场三字码,
       cp.conetent 投诉内容,
       case when cp.conetent like '%套票%' then '套票产品'
       when cp.conetent like '%随心飞%' then '套票产品'
       when cp.conetent like '%疫情%' then '疫情'
       when cp.conetent like '%取消%' then '航班取消'
       when cp.conetent like '%延误%' then '航班延误'
        when cp.conetent like '%备降%' then '航班备降'
       when cp.conetent like '%退票%' then '机票退改签'
       when cp.conetent like '%改签%' then '机票退改签'       
       when cp.conetent like '%行李%' then '行李'
       when cp.complaintype1c like '%航班取消%' then '航班取消' 
       when cp.complaintype1c like '%航班延误%' then '航班延误' 
       when cp.complaintype1c like '%退改签%' then '机票退改签' 
       when cp.complaintype1c like '%行李%' then '行李'                    
       end 内容判断,             
       cp.sex 性别,
       case when cp.age<=18 then '00~18'
       when cp.age<=23 then '19~23'
       when cp.age<=30 then '24~30'
       when cp.age<=40 then '31~40'
       when cp.age<=50 then '41~50'
       when cp.age<=60 then '51~60'
       when cp.age>60 then '60+' end 年龄,
       cp.orderchannel 订单渠道,
       cp.orderchannelchild 订单子渠道,
       cp.leg 航段,
       case when regexp_like(cp.cabin,'P1|P2|P3|P4|P5|R') then substr(cp.cabin,1,2)
       else substr(cp.cabin,1,1) end 舱位,
       cp.ticketprice 票价,
       cp.station 航站,
       cp.responsibilitydept,
       case when cp1.flag=2 then '航班取消'
       when (cp2.dep_time-cp1.origin_std)*24>= 0.5 
       and (cp2.dep_time-cp1.origin_std)*24<=1 then '延误0.5~1H'
       when (cp2.dep_time-cp1.origin_std)*24>= 1
       and (cp2.dep_time-cp1.origin_std)*24< 3 then '延误1~3H'
       when (cp2.dep_time-cp1.origin_std)*24>= 3 then '延误3H+' end 航班状态,
       case when cp3.channel in('网站','手机') and cp4.users_id is not null then '非授权代理'
         when cp3.channel in('网站','手机') and cp3.pay_gate in(15,29,31) then '非授权代理'
         when cp3.channel in('网站','手机') then '线上纯量'
         when cp3.channel in('OTA','旗舰店') then 'OTA'
         when cp3.flights_order_head_id is not null then 'B2B'
         else null end channel,
         decode(cp5.gender,'0','-',1,'男',2,'女') 机票性别,
          case when cp5.age<=18 then '00~18'
       when cp5.age<=23 then '19~23'
       when cp5.age<=30 then '24~30'
       when cp5.age<=40 then '31~40'
       when cp5.age<=50 then '41~50'
       when cp5.age<=60 then '51~60'
       when cp5.age>60 then '60+' end 机票年龄,
         case when cp6.flights_order_head_id is not null then '退票'
              when cp7.flights_order_head_id is not null then '改签'
              else '正常' end 机票状态,
         case when cp6.money_date>=cp6.origin_std then '航班离站后'
             when (cp6.origin_std-cp6.money_date)*24>=0 and (cp6.origin_std-cp6.money_date)*24< 2  then '[0,2h)'
             when (cp6.origin_std-cp6.money_date)*24>=2 and (cp6.origin_std-cp6.money_date)*24< 24  then '[2,24h)'
             when (cp6.origin_std-cp6.money_date)>=1 and (cp6.origin_std-cp6.money_date)< 3  then '[1D,3D)' 
             when (cp6.origin_std-cp6.money_date)>=3 and (cp6.origin_std-cp6.money_date)< 7  then '[3D,7D)'
             when (cp6.origin_std-cp6.money_date)>=7  then '7D+' 
             else '-' end 退票提前期,
          case when cp7.modify_date>=cp6.origin_std then '航班离站后'
             when (cp6.origin_std-cp7.modify_date)*24>=0 and (cp6.origin_std-cp7.modify_date)*24< 2  then '[0,2h)'
             when (cp6.origin_std-cp7.modify_date)*24>=2 and (cp6.origin_std-cp7.modify_date)*24< 24  then '[2,24h)'
             when (cp6.origin_std-cp7.modify_date)>=1 and (cp6.origin_std-cp7.modify_date)< 3  then '[1D,3D)' 
             when (cp6.origin_std-cp7.modify_date)>=3 and (cp6.origin_std-cp7.modify_date)< 7  then '[3D,7D)'
             when (cp6.origin_std-cp7.modify_date)>=7  then '7D+' 
             else '-' end 改签提前期          
  from hdb.crm_wo_baseinfo cp
  left join dw.da_flight cp1 on cp.flightdate=cp1.flight_date and cp.flightno=cp1.flight_no and cp.originairportcode||cp.destairportcode=cp1.segment_code
  left join dw.da_foc_flight cp2 on cp1.segment_head_id=cp2.segment_head_id
  left join dw.fact_recent_order_detail cp3 on cp.orderchannelchild=cp3.flights_order_head_id
  left join dw.da_restrict_userinfo cp4 on cp3.client_id=cp4.users_id
  left join dw.bi_order_region cp5 on cp.orderchannelchild=cp5.flights_order_head_id
  left join dw.da_order_drawback cp6 on cp.orderchannelchild=cp6.flights_order_head_id
  left join dw.da_order_change cp7 on cp.orderchannelchild=cp7.flights_order_head_id and cp1.segment_head_id=cp7.old_segment_id
 where trunc(cp.createtime) >= to_date('2018-10-01', 'yyyy-mm-dd')
   and trunc(cp.createtime) < trunc(sysdate) 
   and cp.gcflag = 0
   and cp.jobtypecode = 'T';

----------------------------------------------------------------------20210625---------------------------------------------------------------------------------
 ------346、

select t1.segment_head_id,t1.r_flights_date,t1.whole_flight,t1.whole_segment,t.flag,t.layout,count(1)
 from cqsale.cq_order_head@to_air t1
 join dw.da_flight t on t1.segment_head_id=t.segment_head_id
 where t1.r_flights_date=to_date('2021-06-30','yyyy-mm-dd')
 and t1.whole_flight in('9C6691','9C8985')
 and t1.flag_id in(3,5,40,41)
 group by t1.segment_head_id,t1.r_flights_date,t1.whole_flight,t1.whole_segment,t.flag,t.layout


--------------------------------------------------------------------20210628-------------------------------------------------------------------------------------
 ------347、投诉数据梳理

 ---民航局投诉人群特征（偏女性24~40之间）

 select 
to_char(cp.createtime, 'yyyymm') 月份, 
   case when getgender(cp.cardno) in('男','女') then getgender(cp.cardno)
   when cp3.flights_order_head_id is not null then decode(cp3.GENDER,0,'-',1,'男',2,'女')   
   else nvl(cp.sex,'-') end 性别,
    case when nvl(cp3.age,cp.age)<=18 then '00~18'
       when nvl(cp3.age,cp.age)<=23 then '19~23'
       when nvl(cp3.age,cp.age)<=30 then '24~30'
       when nvl(cp3.age,cp.age)<=40 then '31~40'
       when nvl(cp3.age,cp.age)<=50 then '41~50'
       when nvl(cp3.age,cp.age)<=60 then '51~60'
       when nvl(cp3.age,cp.age)>60 then '60+' end 机票年龄,
   count(1) 投诉量
from hdb.crm_wo_baseinfo cp
left join dw.bi_order_region  cp3 on cp.orderchannelchild=cp3.flights_order_head_id
where cp.createtime>=to_date('2019-01-01','yyyy-mm-dd')
--and cp.createtime< to_date('2019-02-01','yyyy-mm-dd')
and  cp.jobnextfrom  in('民航局','民航局（调解）','民航局（华东管理局）','民航局（网页）')
group by to_char(cp.createtime, 'yyyymm') , 
   case when getgender(cp.cardno) in('男','女') then getgender(cp.cardno)
   when cp3.flights_order_head_id is not null then decode(cp3.GENDER,0,'-',1,'男',2,'女')   
    else nvl(cp.sex,'-') end ,
    case when nvl(cp3.age,cp.age)<=18 then '00~18'
       when nvl(cp3.age,cp.age)<=23 then '19~23'
       when nvl(cp3.age,cp.age)<=30 then '24~30'
       when nvl(cp3.age,cp.age)<=40 then '31~40'
       when nvl(cp3.age,cp.age)<=50 then '41~50'
       when nvl(cp3.age,cp.age)<=60 then '51~60'
       when nvl(cp3.age,cp.age)>60 then '60+' end;


---投诉重复情况说明（存在内部有投诉有又投诉到民航局的情况）

select to_char(mincreatetime,'yyyymm') 月份,jobstate,num, 
case when num1>0 and  num3+num2+num4>0  then '内部已有投诉还投诉到民航局'
     when num1=0 and  num3+num2+num4>1  then '内部多次处理'
     when num1>0 and  num3+num2+num4=0  then '仅民航局投诉'
     when num1=0 and  num3+num2+num4=1  then '内部仅一次处理' end 投诉类型,
     num1,num2,num3,num4,
     count(1) 去重投诉量
from(
select nvl(cp.orderchannelchild || cp.orderno||cp.cardno||cp.passengername, cp.jobno) tsnum,
       min(cp.createtime) mincreatetime,max(cp.createtime),max(case when cp.jobstate in('已结案','结案判定') then 1
       else 0 end) jobstate,
       sum(case
             when cp.jobnextfrom in ('Android', 'IOS', 'M网', '网站', '微信', '绿翼商城',
             '集团投诉科', '旅客评价', '新媒体平台-舆情', '意见卡', '智慧客舱', '内部', '内部渠道', '其它') then
             1
             else 0 end ) num4,
       sum(  case        
             when cp.jobnextfrom in
                  ('工商所（机场工商、华阳）', '公商所（机场工商、华阳）', '民航局', '民航局（调解）', '民航局（华东管理局）',
                   '民航局（网页）', '其他外部（社交网络）', '上海市民热线12345', '上海市信访办', '外部',
                   '外部媒体（广播、报社、新闻）', '消保委', '新媒体平台-FACEBOOK', '新媒体平台-舆情') then
                   1
                 else 0 end) num1,
        sum(case       
             when cp.jobnextfrom = '呼叫中心' then
              1
              else 0 end )  num2,           
        sum( case 
             when cp.jobnextfrom in ('内部流转(其他)事项', '内部流转(投诉)事项') then
              1
              else 0 end)  num3,
       count(distinct nvl(cp.orderchannelchild || cp.orderno||cp.cardno||cp.passengername, cp.jobno)) totalnum,
       count(1) num
  from hdb.crm_wo_baseinfo cp
 where trunc(cp.createtime) >= to_date('2021-03-01', 'yyyy-mm-dd')
   and trunc(cp.createtime) < trunc(sysdate)
   and cp.gcflag = 0
   and cp.jobtypecode = 'T'
 group by nvl(cp.orderchannelchild || cp.orderno||cp.cardno||cp.passengername, cp.jobno))tb1
 group by to_char(mincreatetime,'yyyymm'),jobstate,num, 
case when num1>0 and  num3+num2+num4>0  then '内部已有投诉还投诉到民航局'
     when num1=0 and  num3+num2+num4>1  then '内部多次处理'
     when num1>0 and  num3+num2+num4=0  then '仅民航局投诉'
     when num1=0 and  num3+num2+num4=1  then '内部仅一次处理' end,
      num1,num2,num3,num4;
         
-------348、退改签投诉分析/优化方案

select tp1.*,case when tp1.退改签类型 is null then '机票退改签'
when tp1.退改签类型 in('航班取消','航班延误','航班备降') then '不正常航班'
else tp1.退改签类型 end 内容判断,
case when tp1.money_fy =0 then '0元退改'
when tp1.money_fy is null  then '未操作退改'
else '非0元退改' end 退改费用类型

from(
   select to_char(cp.createtime, 'yyyymm') 月份,
     case
         when cp.jobnextfrom in ('工商所（机场工商、华阳）', '公商所（机场工商、华阳）', '民航局', '民航局（调解）', '民航局（华东管理局）',
                   '民航局（网页）', '其他外部（社交网络）', '上海市民热线12345', '上海市信访办', '外部',
                   '外部媒体（广播、报社、新闻）', '消保委', '新媒体平台-FACEBOOK', '新媒体平台-舆情') then
          '外部投诉'
         when cp.jobnextfrom='呼叫中心' then
          '呼叫中心'
         when cp.jobnextfrom in
              ('Android', 'IOS', 'M网', '网站', '微信', '绿翼商城',
             '集团投诉科', '旅客评价', '新媒体平台-舆情', '意见卡', '智慧客舱', '内部', '内部渠道', '其它','M站','PC站','SQ系统','评价系统','服管部值班手机') then
          '内部渠道' 
       end 投诉来源分类,  
      --- cp.orderno, 
      -- CREATUSERDEPARTMENT,     
       cp.complaintype1c 投诉类别基础数据里的名称,
       case when cp.conetent like '%套票%' then '套票产品服务'
       else cp.complaintype2c end  投诉类别二级菜单名称,
       cp.complaintype3c 投诉类别三级菜单名称,
       --cp.passengertype 旅客类型,
      --- cp.flightno 航班号,
      --- cp.flightdate 航班日期,
       --cp.airport 起降机场,
       --cp.originairportcode 起飞机场三字码,
       --cp.destairportcode 降落机场三字码,
      -- cp.conetent 投诉内容,
       case when cp.conetent like '%套票%' then '套票产品'
       when cp.conetent like '%随心飞%' then '套票产品'
       when cp.conetent like '%疫情%' then '疫情'
       when cp.conetent like '%新冠%' then '疫情'
       when cp.conetent like '%疫%' then '疫情'
       when cp.conetent like '%健康码%' then '疫情'
       when cp.conetent like '%核酸%' then '疫情'
       when cp.conetent like '%隔离%' then '疫情'
       when cp.conetent like '%核算%' then '疫情'
       when cp.conetent like '%封闭%' then '疫情'
       when cp.conetent like '%封城%' then '疫情'
       when cp.conetent like '%取消%' then '航班取消'
       when cp.conetent like '%延误%' then '航班延误'
        when cp.conetent like '%备降%' then '航班备降'
       when cp.conetent like '%误退%' then '退改其他因素'
       when cp.conetent like '%误选%' then '退改其他因素'
       when cp.conetent like '%定错%' then '退改其他因素'
       when cp.conetent like '%误操作%' then '退改其他因素'
       when cp.conetent like '%重复预定%' then '退改其他因素'
       when cp.conetent like '%病退%' then '退改其他因素'
       when cp.conetent like '%错订%' then '退改其他因素'
       when cp.conetent like '%买错%' then '退改其他因素'
       when cp.conetent like '%补退%' then '退改其他因素'
       when cp.conetent like '%拒载%' then '退改其他因素'
       when cp.conetent like '%误机%' then '退改其他因素'
       when cp.conetent like '%价格跳水%' then '退改其他因素'
       when cp.complaintype1c like '%补退%' then '退改其他因素'
       when cp.conetent like '%退票%' then '机票退改签'
       when cp.conetent like '%改签%' then '机票退改签'
       when cp.conetent like '%变更%' then '机票退改签' 
       when cp.conetent like '%要求全退%' then '机票退改签'
       when cp.conetent like '%坚持全退%' then '机票退改签'
       when cp.conetent like '%要全退%' then '机票退改签'               
       when cp.conetent like '%行李%' then '行李'                          
       end 退改签类型,      
       case when regexp_like(cp.cabin,'P1|P2|P3|P4|P5|R') then substr(cp.cabin,1,2)
       when regexp_like(cp.cabin,'PR') then 'P'
       else substr(cp.cabin,1,1) end 舱位,
       cp.ticketprice 票价,
       --cp.station 航站,
       --cp.responsibilitydept,
       case when cp1.flag=2 then '航班取消'
       when (cp2.dep_time-cp1.origin_std)*24>= 0.5 
       and (cp2.dep_time-cp1.origin_std)*24<=1 then '延误0.5~1H'
       when (cp2.dep_time-cp1.origin_std)*24>= 1
       and (cp2.dep_time-cp1.origin_std)*24< 2 then '延误1~2H'
     when (cp2.dep_time-cp1.origin_std)*24>= 2
       and (cp2.dep_time-cp1.origin_std)*24< 3 then '延误2~3H'
       when (cp2.dep_time-cp1.origin_std)*24>= 3 then '延误3H+' 
     else '其他' end 航班状态,
       case when cp5.terminal_id<0 and cp5.web_id=0 and cp4.users_id is not null then '非授权代理'
         when cp5.terminal_id<0 and cp5.web_id=0 and cp5.pay_gate in(15,29,31) then '非授权代理'
         when cp5.terminal_id<0 and cp5.web_id=0 then '线上纯量'
         when cp5.terminal_id<0 and cp5.web_id>0 then 'OTA'
         else '其他' end channel,
         case when getgender(cp.cardno) in('男','女') then getgender(cp.cardno)
   when cp5.flights_order_head_id is not null then decode(cp5.GENDER,0,'-',1,'男',2,'女')   
   else nvl(cp.sex,'-') end 性别,
    case when nvl(cp5.age,cp.age)<=18 then '00~18'
       when nvl(cp5.age,cp.age)<=23 then '19~23'
       when nvl(cp5.age,cp.age)<=30 then '24~30'
       when nvl(cp5.age,cp.age)<=40 then '31~40'
       when nvl(cp5.age,cp.age)<=50 then '41~50'
       when nvl(cp5.age,cp.age)<=60 then '51~60'
       when nvl(cp5.age,cp.age)>60 then '60+' end 机票年龄,     
         case when cp6.flights_order_head_id is not null then '退票'
              when cp7.flights_order_head_id is not null then '改签'             
              else '其他状态' end 机票状态,
         case when cp6.money_date>=cp6.origin_std then '航班离站后'
             when (cp6.origin_std-cp6.money_date)*24>=0 and (cp6.origin_std-cp6.money_date)*24< 2  then '[0,2h)'
             when (cp6.origin_std-cp6.money_date)*24>=2 and (cp6.origin_std-cp6.money_date)*24< 24  then '[2,24h)'
             when (cp6.origin_std-cp6.money_date)>=1 and (cp6.origin_std-cp6.money_date)< 3  then '[1D,3D)' 
             when (cp6.origin_std-cp6.money_date)>=3 and (cp6.origin_std-cp6.money_date)< 7  then '[3D,7D)'
             when (cp6.origin_std-cp6.money_date)>=7  then '7D+' 
             else '-' end 退票提前期,
          case when cp7.modify_date>=cp6.origin_std then '航班离站后'
             when (cp6.origin_std-cp7.modify_date)*24>=0 and (cp6.origin_std-cp7.modify_date)*24< 2  then '[0,2h)'
             when (cp6.origin_std-cp7.modify_date)*24>=2 and (cp6.origin_std-cp7.modify_date)*24< 24  then '[2,24h)'
             when (cp6.origin_std-cp7.modify_date)>=1 and (cp6.origin_std-cp7.modify_date)< 3  then '[1D,3D)' 
             when (cp6.origin_std-cp7.modify_date)>=3 and (cp6.origin_std-cp7.modify_date)< 7  then '[3D,7D)'
             when (cp6.origin_std-cp7.modify_date)>=7  then '7D+' 
             else '-' end 改签提前期,
    case  when cp6.flights_order_head_id is not null  then cp6.money_fy 
             when cp7.flights_order_head_id is not null then cp7.money_fy*cp7.rate 
             else null end money_fy,       
       nvl(cp.orderchannelchild || cp.orderno||cp.cardno||cp.passengername, cp.jobno) jobno,
       row_number()over(partition by nvl(cp.orderchannelchild || cp.orderno||cp.cardno||cp.passengername, cp.jobno) order by cp.jobno) xid
     
  from hdb.crm_wo_baseinfo cp
  left join dw.da_flight cp1 on cp.flightdate=cp1.flight_date and cp.flightno=cp1.flight_no and cp.originairportcode||cp.destairportcode=cp1.segment_code
  left join dw.da_foc_flight cp2 on cp1.segment_head_id=cp2.segment_head_id
   left join dw.bi_order_region cp5 on cp.orderchannelchild=cp5.flights_order_head_id
   left join dw.da_restrict_userinfo cp4 on cp5.client_id=cp4.users_id
  left join dw.da_order_drawback cp6 on cp.orderchannelchild=cp6.flights_order_head_id
  left join dw.da_order_change cp7 on cp.orderchannelchild=cp7.flights_order_head_id and (cp1.segment_head_id=cp7.old_segment_id or 
  cp1.segment_head_id=cp7.new_segment_id)
 where trunc(cp.createtime) >= to_date('2018-01-01', 'yyyy-mm-dd')
   and trunc(cp.createtime) < trunc(sysdate) 
   and cp.gcflag = 0
   and nvl(cp1.nationflag,'-') ='国内'
   and cp.jobtypecode = 'T'
  -- and cp.jobno ='T202106070131'
   and upper(cp.flightno) like '%9C%' 
   and cp.jobnextfrom not in('内部流转(其他)事项', '内部流转(投诉)事项')
   and (cp.complaintype1c like '%退%'
   or cp.complaintype2c like '%退%'
   or cp.complaintype3c like '%退%'
   or cp.complaintype1c like '%改签%'
   or cp.complaintype2c like '%改签%'
   or cp.complaintype3c like '%改签%')
/*   or cp.conetent like '%退%'
   or cp.conetent like '%改%'*/
   and not regexp_like(nvl(cp.conetent,'-'),'(套票)|(随心飞)|(年卡)')
   and not regexp_like(nvl(cp.complaintype1c,'-'),'(旅客网上误点退票)|(退改签操作流程)|(退款)')
      and not regexp_like(nvl(cp.complaintype2c,'-'),'(旅客网上误点退票)|(退改签操作流程)|(退款)')
   and not regexp_like(nvl(cp.complaintype1c,'-'),'(退款时间)|(单退)|(火车票)|(病退)|(积分)|(时刻调整)|(快递)|(用车)|(行李)
   |(值机)|(预定错误)|(行程单)|(交通)|(成功短信)|(航班动态)|(服务态度)|(回复慢)|(法院)|(误操作)|(人工广播)|(会员)|(增值)|(表扬)|(客服)|(产品服务)|(营销)|(ij)|(客舱)|(促销)|(通知)|(地面服务)|
   (行李)|(超售)|(支付)|(未收到通知)|(掉单)|(错运)|(人员违规)|(退款失败)|(OTA退款)|(更名)|(残疾人)|(促销优惠)|(法院)
   |(付款)|(登机)|(票价)|(燃油费)|(商旅通)|(经济座)|(税费调整)|(退款慢)|(活动)|(信息)|(他航)|(价格)')
   and not regexp_like(nvl(cp.complaintype2c,'-'),'(增值产品)|(网站活动)|(候机/登机服务)|(商务经济座)|(行李)|(漏运遗失)|(接送机)|(值机)|
   ( 起飞降落)|(空铁)|(绿翼会员)|(选座)|(车辆服务)|( 旅客伤病亡)|( 破损)|(产品服务)|(旅客信息)|(信息通知)|(登机)|(旅客伤病亡)|
   (会员服务)|(客舱)|(支付)|(商旅通产品)|(掉单)|(会员)|(错运)|(错拿)|(人员违规操作)|(客服)|(价格变动)|(订票信息)|( 特殊旅客)|
   (商务经济座)|(信息错误)|(更改信息)|(营销活动)|(质量缺陷)|(零售品)|(其他综合服务)|(信息)|(行程单)|(预定错误)|(起飞降落)|(航班动态)|(退款时间)')
   and not regexp_like(nvl(cp.complaintype3c,'-'),'(增值产品)|(网站活动)|(候机/登机服务)|(商务经济座产品)|(行李)|(漏运遗失)|(接送机)|(值机)|
   ( 起飞降落)|(空铁)|(绿翼会员)|(选座)|(车辆服务)|( 旅客伤病亡)|( 破损)|(产品服务)|(旅客信息)|(信息通知)|(登机)|(行程单)|(旅客伤病亡)|
   (会员服务)|(客舱)|(客服服务)')
   and not regexp_like(nvl(cp.conetent,'-'),'(火车票)|(行李)')
  )tp1
  where tp1.xid=1;


 ------349、订票联系方式

select t.client_id,t.pay_flag,count(distinct t.flights_order_id)
 from cqsale.cq_order@to_air t
 join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
 where t.work_tel='13586715094'
 and t.order_date>=trunc(sysdate)-7
 group by  t.client_id,t.pay_flag;


 ------350、联系方式匹配

select t1.channel,t1.sub_channel,t1.traveller_name,t1.whole_segment,t1.flights_order_id,t1.work_tel,t1.email,t1.r_tel,t1.client_id,t2.gate_name,t3.login_id,t4.login_id
 from dw.fact_recent_order_detail t1
 left join stg.p_cq_pay_gate t2 on t1.pay_gate=t2.id
 left join dw.da_lyuser t3 on t1.codeno=t3.codeno
 left join dw.da_b2c_user t4 on t1.client_id=t4.users_id
 --left join dw.fact_idno_statistics t5 on t1.codeno=t5.codeno
 where t1.flights_order_id in('XVQWCB',
'XWNYKC',
'XWFHQY',
'XVLKMZ',
'XLIWMI',
'XVJETQ',
'XWGINJ',
'XVWRMU',
'XWBJWQ',
'XVVDHA',
'XVOOSS',
'XWVQFD',
'XVIAFT',
'XWWJTD',
'XTVHXP',
'XVOUCS',
'XOUPOB',
'XRFGYD',
'XWJVMP',
'XWRRJR',
'XTZMGK',
'XOOBJN',
'XWRYRO',
'XTOOMJ',
'XGTRPV',
'XWVEVV',
'XVNQPI',
'XRRBBS',
'XQKSLX',
'XVZUJX',
'XWHXHH',
'XVXYVL',
'XUVYEF',
'XVEPKM',
'XTRJBZ',
'XWMOEN',
'XWMPHU',
'XTVHXI',
'XWVNDJ',
'XWTYYX',
'XTQPJQ',
'XTZMGP',
'XVPHRE',
'XSCMTU',
'XVKPRN',
'XWSJJX',
'XWSJPO',
'XWSJJX',
'XVEJCZ',
'XLZUBJ',
'XWBNET',
'XTOMYO',
'XSTJAO',
'XKINWG',
'XPNIVI',
'XPUKQP',
'XROZSV',
'XROMKT',
'XPFYVG',
'XRFZDU',
'XRFYKU',
'XMFECM',
'XUHOLT',
'XQQLGO',
'XQWLZQ',
'XRSZKC',
'XRVJUO',
'XRNGWE',
'XRNKHP',
'XRZOAL',
'XMQMUS',
'XRGAZW',
'XRGEFA',
'XSEXEI',
'XVTEEJ',
'XUQQZA',
'XQTIJH',
'XRLBYP',
'XQAUAR',
'XVDELH',
'XPVFBM',
'XRVZHS',
'XKMHOD',
'XRQURV',
'XRFZAJ',
'XQKJZB',
'XNSVUS',
'XSKBTM',
'XRWGVT',
'XSGRCM',
'XOEGTP',
'XRDPNL',
'XUXXHB',
'XQKSXV',
'XUUAKO',
'XRLBYP',
'XRNVZV',
'XIQAHT',
'XRMFKM',
'XTRCCF',
'XQLDFR',
'XRHSFI',
'XSFWEL',
'XVDBEV',
'XVGWRC',
'XRETSS',
'XPGJPT',
'XIJEFA',
'XRCNKC',
'XUXWHI',
'XSMIQT',
'XKQRTT',
'XSWQEV',
'XRCLQD',
'XSOHFV',
'XUZORT',
'XSWQSF',
'XRJTGY',
'XEBSSH',
'XJJROA',
'XRYKVM',
'XTTYET',
'XTZIED',
'XGJPHP',
'XSNAPQ',
'XRNRJE',
'XRVKLK',
'XRVTPN',
'XVBCIU',
'XSNIRC',
'XRYKVN',
'XELIMQ',
'XRVZHT',
'XTMOTF',
'XELIMQ',
'XSSSZR',
'XTHXXM',
'XQQYCZ',
'XTSSAK',
'XRSURE',
'XRPIIA',
'XMWQUZ')


 ------351、

select to_char(t1.flight_date,'yyyymm'),sum(t1.oversale),sum(case when t1.nationflag='国内' then t1.oversale else 0 end),
sum(case when t1.nationflag='国内' and t1.is_bsale=1 and not regexp_like(t1.flights_segment_name,'(琼海－深圳)|(深圳－琼海)|(南昌－中卫)|(中卫－南昌)|(浦东－文山)|(文山－浦东)')  then t1.bgo_plan-t1.o_plan else 0 end) bgplan
 from dw.da_flight t1
 where t1.flag=0
 and t1.flight_date>=to_date('2019-04-01','yyyy-mm-dd')
 and t1.flight_date< to_date('2021-11-01','yyyy-mm-dd')
 and t1.company_id=0
 and to_char(t1.flight_date,'mm')>='04'
 and to_char(t1.flight_date,'mm')<='10'
 group by to_char(t1.flight_date,'yyyymm');

 --------------------------------------------------------------20210701--------------------------------------------------------------------------------------
 ------352、宝武注册

select t1.login_id,t1.users_id
 from dw.da_b2c_user t1
 where login_id in('13901689339',
'18605550016',
'13079912553',
'15000858767',
'13701842907',
'13818989668');

 ------353、特殊退改签数据提取

--适用于2021年6月18日（含）前购买，且乘机日期在2021年6月19（含）至2021年7月15日（含）之间，由春秋航空（9C）实际承运的深圳进出航班
--适用于2021年6月6日（含）前购买，且乘机日期在2021年6月7日（含）至2021年6月30日（含）之间，由春秋航空（9C）实际承运的广州、深圳、珠海、揭阳、湛江进出航班。
--适用于2021年5月30日（含）前购买，且乘机日期在2021年5月31日22：00（含）至2021年6月30日（含）24：00之间，由春秋航空（9C）实际承运的广州、深圳进出航班。
--适用于2021年5月26日（含）前购买，且乘机日期在2021年5月26日（含）至2021年6月9日（含）之间，由春秋航空（9C）实际承运的航班。
--适用于2021年5月16日（含）前购买，且乘机日期在2021年5月18日（含）至2021年5月30日（含）之间，由春秋航空（9C）实际承运的航班。

select trunc(t1.money_date),count(1)
 from dw.da_order_drawback t1
 join dw.fact_recent_order_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id
 join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 where t1.money_terminal< 0
  and ((t2.order_day<=to_date('2021-06-18','yyyy-mm-dd')
  and t2.flights_date>=to_date('2021-06-19','yyyy-mm-dd')
  and t2.flights_date<=to_date('2021-07-15','yyyy-mm-dd')
  and t3.flights_segment_name like '%深圳%'
  ) or (t2.order_day<=to_date('2021-06-06','yyyy-mm-dd')
  and t2.flights_date>=to_date('2021-06-07','yyyy-mm-dd')
  and t2.flights_date<=to_date('2021-06-30','yyyy-mm-dd')
  and regexp_like(t3.flights_segment_name,'(广州)|(深圳)|(揭阳)|(湛江)')
  )or (t2.order_day<=to_date('2021-05-30','yyyy-mm-dd')
  and t2.flights_date>=to_date('2021-05-31','yyyy-mm-dd')
  and t2.flights_date<=to_date('2021-06-30','yyyy-mm-dd')
  and regexp_like(t3.flights_segment_name,'(广州)|(深圳)')
  ) or (t2.order_day<=to_date('2021-05-26','yyyy-mm-dd')
  and t2.flights_date>=to_date('2021-05-26','yyyy-mm-dd')
  and t2.flights_date<=to_date('2021-06-09','yyyy-mm-dd')
  and regexp_like(t3.flights_segment_name,'(广州)')
  )
  or (t2.order_day<=to_date('2021-05-16','yyyy-mm-dd')
  and t2.flights_date>=to_date('2021-05-18','yyyy-mm-dd')
  and t2.flights_date<=to_date('2021-05-30','yyyy-mm-dd')
  and regexp_like(t3.flights_segment_name,'(沈阳)|(大连)')
  )
  )
  and t1.money_fy=0
  and t1.money_date>=to_date('2021-04-01','yyyy-mm-dd')
  group by trunc(t1.money_date)

 ------354、

create table hdb.temp_feng_0703 as 
select /*+leading(t1)*/
t1.*,t2.r_flights_date,t2.whole_segment,t3.originairport_name,t3.destairport_name,
t5.age,t4.province,t4.city,decode(t5.gender,0,'-',1,'男',2,'女') gender,
t7.youhui_result-t8.youhui_result youhui_result ,
t9.yhq_money,
t8.youhui_result insur_result,
t10.discount_count,
t11.point_money
  from hdb.temp_feng_0702 t1
  join stg.s_cq_order_head t2 on t1.flights_order_id=t2.flights_order_id
  join dw.da_flight t3 on t2.segment_head_id=t3.segment_head_id
  left join dw.adt_region_code t4 on length(t2.codeno)=18 and substr(t2.codeno,1,6) =t4.regioncode
  left join dw.bi_order_region t5 on t2.flights_order_head_id=t5.flights_order_head_id
  left join (select t6.flights_order_head_id,sum(YOUHUI_RESULT) youhui_result
              from stg.c_cq_order_youhui_detail t6 
              where t6.product_type=0        
              group by t6.flights_order_head_id) t7 on t7.flights_order_head_id=t2.flights_order_head_id  
  left join (select t6.order_head_id,sum(DISCOUNT_AMOUNT) youhui_result
              from cqsale.CQ_INSURANCE_DISCOUNT_HISTORY@to_air t6 
              where t6.type = 1
        and  DISCOUNT_TYPE=0
              group by t6.order_head_id) t8 on t8.order_head_id=t2.flights_order_head_id
left join(select ORDER_HEAD_ID,sum(yhq_money) yhq_money
 from yhq.cq_new_yhq_history_detail@to_air
 group by ORDER_HEAD_ID)  t9 on t9.order_head_id=t2.flights_order_head_id
 left join (
 select  tb2.order_head_id,suM(tb1.discount_count)  discount_count
 from cqsale.cq_order_xprod_discount@to_air tb1
 join stg.s_cq_other_order_head tb2  on tb1.other_order_head_id=tb2.other_order_head_id
 where tb2.flag_id in(3,5,40,7,11,12)
 group by tb2.order_head_id
 )t10 on t10.order_head_id=t2.flights_order_head_id
 left join(select flights_order_head_id,
       sum(h1.ticket_price) point_money
  from cqsale.cq_btc_order_head@to_air h1
 where h1.pay_gate = '35' --积分支付
   and h1.order_type in ('0', '1', '2')
 group by flights_order_head_id) t11 on t11.flights_order_head_id=t2.flights_order_head_id;
        
       

 ------355、异常监控

select to_char(t1.flights_date,'mmdd')||t1.whole_flight||t1.codeno picode,
t1.order_date,t1.codeno,t1.flights_date,t1.whole_flight,
case when t2.flights_order_head_id is not null then '退票'
when t3.flights_order_head_id is not null then '改签'
else '正常' end,
case when t4.flag=2 then '取消'
else '正常' end ,
nvl(t2.money_date,t3.modify_date) 退票及改签日期,
t5.unnormaltype, t5.reason,t5.memo


 from dw.fact_recent_order_detail t1
 left join dw.da_order_drawback t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join dw.da_order_change t3 on t1.flights_order_head_id=t3.flights_order_head_id and t1.segment_head_id=t3.new_segment_id
 left join dw.da_flight t4 on t1.segment_head_id=t4.segment_head_id
 left join( select *
 from( 
 select flight_date,flight_no,OLD_ORIAIRPORT||OLD_DESTAIRPORT segment_code,
  decode(tb1.unnormaltype,1,'延误',2,'取消',3,'备降',4,'改降',5,'返航',6,'补班') unnormaltype,
  tb1.delaytime,tb1.reason,tb1.memo,row_Number()over(partition by flight_date,flight_no,OLD_ORIAIRPORT||OLD_DESTAIRPORT order by create_time desc) xid
 from stg.s_cq_unnormal_flights tb1
 where flight_date>=trunc(sysdate)-365*2
 )
 where xid=1)t5 on t1.flights_date=t5.flight_date and t1.whole_flight =t5.flight_no and t1.whole_segment=t5.segment_code
 
 --异常类型 1-延误 2-取消 3-备降 4-转场/改降 5-返航 6.补班
 
  where t1.flights_date>=to_date('2020-01-01','yyyy-mm-dd')
  and to_char(t1.flights_date,'mmdd')||t1.whole_flight||t1.codeno
  in('05119C8693340403197607290624',
'03279C8575210106197707280945',
'05219C6201131182198712180633',
'05129C6696429001198012035630',
'05159C6790610427199210123348',
'01229C6223360222198209066711',
'07049C6135330724197409132744',
'05149C8780320503198403222028',
'05159C8554620103199909151048',
'05219C8840210921199001054328',
'06089C8924210321199612151810',
'05249C8924230225199301013828',
'05179C8923210803198110122032',
'06049C8744211203199210240020',
'05249C8691350822199406055128',
'05179C8510612501198907286613',
'06099C6151210302196106040314',
'05199C8840210503199210141829',
'05209C8966230902197610061537',
'05229C8870232326199701202939',
'05289C8929320586199602041524',
'06039C8599210105198102220622',
'05269C8911222303197709267213',
'05219C8766130104199606171527',
'052613010319681112157X',
'06039C8713210204198406185773',
'0122210782196301102844',
'05319C623144010419601206191X',
'05319C6231440102196304103250',
'05319C6231440104196410270741',
'05319C6231440104196011142523',
'06109C8527350102197705020846',
'05259C6748220204199008013649',
'05319C6231440140196104151947',
'05289C8679131128199412055722',
'06019C6419321081197002207511',
'05289C8613510525198803260019',
'06209C8846430181199207099373',
'05179C6653652301197304250365',
'05289C8694340122199202082263',
'06069C8713210211199310082727',
'06119C8835310113198903302429',
'05309C8756441423198610043821',
'06109C8527620104198805160822',
'06129C8846411081198611162909',
'06189C8849150203199208020320',
'06079C6232620103199112294017',
'06069C8694430405199408132547',
'05259C8950510824198412095060',
'06029C6551321281198811070186',
'06179C8819310110198707273764',
'07049C6287230224199006083966',
'05189C6575370829199501270035',
'06079C6281421023199506250029',
'06259C8932440107198704020025',
'06119C6289330226198812017068',
'06099C6552210302200001283327',
'06049C8819370321199904073927',
'06059C8950610424199307202625',
'06059C8614510302199208241023',
'05179C8844210311195202100622',
'06129C6116445121199901046845',
'06039C8819650104198704263369',
'06019C8599210703198311122068',
'06059C6849440505196606060410',
'05299C8836441702198906184214',
'06129C6231421127199312010044',
'06089C6710321088199411285928',
'06089C8776430481198909112597',
'06129C6690440981199009061716',
'06249C8846411381198510193948',
'06109C8819310112198411205685',
'06069C8671EJ3726107',
'06169C6836360111198209290153',
'06139C8773331082199512085523',
'06089C8932450921199303123215',
'06019C8744210803196709271027',
'05319C8900130103196512060316',
'05309C8836440104199012162220',
'06129C6782330326200112116028',
'06299C6545330602199510171524',
'06179C6126330326200105235213',
'06179C6782330326195612103510',
'0617130602199002181526',
'06229C6782330327197004240410',
'06259C6126330381198512283444',
'06139C8665330381200110140125',
'06129C8924362430198203220012',
'06259C8835513022199102152542',
'06199C6125330326196807205028',
'06169C8950362203199109176849',
'06219C8671230903197908030828',
'06179C6125330302198911014027',
'06159C8886310106198610171652',
'06209C8918360124199601175420',
'07019C8895362321198306252529',
'06239C6125330302196010210427',
'06229C8671232301198407030222',
'06199C8900410703199603194022',
'06209C8956362426199107120038',
'07039C623144512219810402600X',
'05229C8876G55838709',
'07049C8835310107198511030922',
'07179C8835310102197702202428',
'05109C8628130622198908147632',
'06289C6231620422198911137756',
'07029C655232128319961008022X',
'06269C612533030219631015624X',
'0624130104198706061224',
'06089C8655360481199211250046',
'09119C8856320684198707282664',
'07039C8819310102198508191627',
'07029C8882420624198902104713',
'06289C8949441424199805096107',
'06209C885644023319910928351X',
'07069C8846440711197807075726',
'07069C8846440782198005202842',
'07099C6551321283198511035023',
'07039C8649360722199007220049',
'07049C8631411326198607150042',
'05159C6339640102198312281221',
'06119C8632330205196207281820',
'05199C8978210303198112070611',
'05229C867234011120020831851X',
'05209C6575210104198505074029',
'05159C8774220625198912192023',
'05279C884965900119940905006X',
'06159C8832210381199404256016',
'05249C8840211103199304060324',
'05179C8832610326199812261826',
'05199C8797342425198806160421',
'05289C8920211302199911040020',
'05239C8691130421199812243328',
'06029C8694411526198609301319',
'05299C8655360102197212123822',
'06019C6284210311199803090923',
'06049C8919210803199603201526',
'05269C8839210123199107210228',
'05199C8691210902198307235523',
'11209C8899130121199712150224',
'05189C8839E22478740',
'05209C6575210321199808260066',
'05179C6174321086196608254619',
'06059C8672230802198211151315',
'05239C8773211103197508310621',
'06169C622431010719790926162X',
'05249C885541132319950914172X',
'05309C8931440183199104225861',
'05289C8929320586199508271526',
'06109C8527441481199405295665',
'06199C8855310107198112181336',
'05319C6231440104196506042524',
'06119C6391340202198711081029',
'05299C8881412824199411102663',
'06059C6173321181199505147965',
'06039C6552210105195807104011',
'05319C655123102419870523102X',
'05289C6282430621196808190014',
'05299C8671420921198204163422',
'06129C8614500237199212170400',
'05299C8930450481199111290069',
'0528130102197408271816',
'06129C8846130632199002013141',
'05319C6685320684199702104417',
'06029C6282370105198001293368',
'05319C8950413026198609163328',
'06059C8985130102198007301820',
'06069C8694430102199009220528',
'06039C8665130721199904150010',
'05189C8596220381198707024025',
'06059C611532102719961120662X',
'06089C8632330211198905140044',
'06129C611532100119871216001X',
'06059C6115321011199112241526',
'06149C6288430102199203302017',
'06049C6174210726199301016922',
'06069C8732432427197002030058',
'06119C8632440105199002105421',
'05319C8835120222198609304016',
'0608132324196912171423',
'07029C6315620121199206080012',
'06059C864936042119620525004X',
'06029C8923360103196402034128',
'06039C8613360782199410183520',
'06059C6690330205196205310317',
'06139C6836510823198403184866',
'06089C8899132528197010091740',
'06109C8932440921199601103827',
'06109C6359445102199407212319',
'06169C6552210402195001180549',
'06099C8775370406199310265042',
'06089C8633320882199301095634',
'06129C6372330282199205240028',
'06029C8923360102195509033319',
'06109C8775411327198808160649',
'06139C6174211011198304145520',
'06109C6748320705198702112041',
'01169C8555411527198809252511',
'07139C8819310107198702133430',
'0611533001199601125145',
'06119C6782330372199304197120',
'06189C8932140622197905280021',
'06179C6781152827199803256624',
'06169C8558440825199312053528',
'06169C6107330381199005023351',
'06179C6781352230196603160029',
'07139C8528360725198410110020',
'06199C8931140622197905280021',
'06219C6782330325195701101449',
'06259C6281421081198309292480',
'06149C8510130532199902035025',
'07039C6419320321199501280615',
'07059C8846330322196303160027',
'07119C8855310115198810254221',
'06169C6126331002199609102914',
'06269C6231620422199512111713',
'06229C6782330326196309253529',
'07039C8819320581199207073428',
'06269C8605410901198605070828',
'06139C867123022519880401182X',
'07019C893231011219870805032X',
'06159C8930370123197111061013',
'07029C6552321201198710200023',
'07019C8932310112198612156621',
'06059C8813120102198603204419',
'06209C6287430527199103180920',
'06269C8553210104197903024022',
'06309C8554210114195205230041',
'05029C8785130102197908150615',
'06269C8513321028197509170023',
'07319C636033010519860309342X',
'07099C6346620421198911185815',
'06269C6188320111198206033226',
'05169C6173210106198812154013',
'07029C6345310104197711111627',
'07079C6790330302195305062025',
'07069C884644070219780821092X',
'06289C8753610427197510271618',
'07069C8846441881198111297427',
'07069C8846440711197807225421',
'07059C6363412827197209222549',
'05149C8797130621198809135162',
'05159C8977310105198209292080',
'05239C6133340104196405250021',
'05169C8832610126199901187022',
'05299C8661140122198904302820',
'05259C88869348143c7158800d61ebb3d9f2d6a7e6',
'05199C8553210702199703020421',
'05179C6808152128199710124524',
'06069C8850211321197111173482',
'05259C6551210411199712292920',
'05209C880922010219990724061X',
'05219C6345340122198908250172',
'05299C8661140122198904302820',
'05249C681021140219940830184X',
'06059C6232620422198705285117',
'05249C6685360423199609064522',
'05229C6807210281198603146442',
'06059C675623270019910822430X',
'06069C6167210106198503062166',
'06049C869334010419691008209X',
'05269C628736073319930113532X',
'05269C628743072519911218602X',
'06019C8856310230198905203725',
'06029C8553211121199512250811',
'06039C8774210304198301041824',
'06089C8600210105198102220622',
'06109C8527440811199204020640',
'06029C8955411481199604267522',
'05319C6231440102196307020047',
'06039C8836440126197708105127',
'05279C8855512222197311225112',
'05319C6231440104196308270729',
'06079C8925410302198912301597',
'05269C6231522526197301015617',
'06129C8846362424199609210022',
'06209C6654211202198712214518',
'05319C6134340104198703290522',
'06069C893144088319941027394X',
'05289C8679445121198703053644',
'05319C8924440923199909161962',
'05309C8900130125198401034534',
'06029C6551321001198703010343',
'06039C881931010919850731401X',
'0111130635199402274817',
'06139C6233320684198810108744',
'05279C8929460003198510024653',
'07069C6224310230198408133324',
'06119C6134342401199103130043',
'05279C8753422326199307260028',
'06299C8804420528199005231063',
'06169C6836360111198209290153',
'06119C865036031319950823001X',
'06309C8631330227198602267321',
'06029C8856362202200012296149',
'06069C6223441421199505236922',
'06079C6232622901200403010019',
'06079C889544080219980928006X',
'06039C889644080219980928006X',
'06169C6836360425198801014021',
'06109C8819310108197901120845',
'06099C8924210104198609231711',
'06249C6360230103198912181320',
'06059C8753610322198206175522',
'06109C8932441721199712180024',
'06079C8924360926200111061633',
'06209C8671EJ3726107',
'06069C6501510623198307224919',
'06129C6551320924199410270261',
'06149C6767320923199612251513',
'06129C6551230602199307046812',
'06149C6600360428197108183534',
'06079C8957310110198602055138',
'06189C6654210603198708222520',
'07039C66854309199501070322',
'0613341221199709044880',
'06119C6115321283199208104625',
'06229C6782330326196310213524',
'06129C6115321002199206026126',
'06199C8957430381199001093057',
'06199C6689352201199002280107',
'06129C8671321322198411238627',
'06019C859921092119841101261X',
'06089C8632230104199911303729',
'06159C8600230605199705232644',
'06179C6781352230199705280033',
'06199C6231622322200112193619',
'06209C8918340304199412060044',
'06209C6399130628198312056615',
'06199C653944030119780103411X',
'06229C655121140219940830184X',
'06219C893244058219840324481X',
'07039C8924360103198201202729',
'06199C8776350502198602140526',
'06199C6789622323199609236515',
'07039C8895310109197802273324',
'06299C8694445202199509307744',
'07039C889513010419791109442X',
'07039C6231445224199004100658',
'06089C889632118319950318532X',
'06239C8950413001198512153062',
'06249C8603510703199612033419',
'07079C6138420103198207123745',
'06269C8753610102198608240618',
'06259C8753231005198812280530',
'07189C8753610323195308090047',
'06259C8847350624198109110028',
'07319C6360330103198209070729',
'06289C6790653130198611080016',
'07029C6789210203198306233014',
'07069C884644070320060104542X',
'07199C613842210119791105002X',
'07049C6346320811198309233528',
'06299C8671230303199405054912',
'05269C8575210181198705203764',
'06219C628744030119630914112X',
'05229C8576211303197806053214',
'06119C8924210102198408087212',
'06219C8882431103200002170612',
'07039C8671320804199605125119',
'05269C6417210302198905163328',
'06039C6685511523199312055064',
'05219C6491310225198505171620',
'06099C8634440515199705081926',
'06169C6287430523197901257617',
'06229C8649440307195511150066',
'06209C6133220724199501051617',
'07019C8887320502198210272268',
'06029C6345210105195001250618',
'05299C6576210703199111052442',
'06199C6231622103200007050042',
'06289C6789511528198404012835',
'06029C8856362202200104106103',
'06089C8930433130200112259694',
'06199C8649321281199509023690',
'06169C855833021119991205152X',
'06169C8558330283200006134726',
'06209C6836362523199901250012',
'06089C8528410104196102123023',
'06119C6224440582198409205969',
'06119C6287152628199103157217',
'06279C6836442000199511303316',
'06099C8611445281200212152711',
'06199C6539640221197609300016',
'06089C8527410104196102123023',
'06309C6233371002199808068525',
'06019C6685430721199510204902',
'06209C8509440803198911282450',
'06279C8776440301195307072314',
'05209C8614430521199712113338',
'05269C892932102719821030032X',
'05279C895642062419900916761X',
'05279C895642098319850322882X',
'05279C8956511323199702160213',
'05279C8956350625199005071010',
'05279C8956370602198601300718',
'05279C891815030219890927052X',
'05279C8956441523198709126788',
'05319C8633320113197306091667',
'06169C8949340321199305177956',
'06159C8613440823199409104000',
'06139C622431011519790119133X',
'06039C6539131026199609011012',
'06139C8510420111197903154073',
'06139C8510622827199903041519',
'06209C867123260119611225041X',
'06199C861350010219980218783X',
'06229C8634440524197411274551',
'06209C6282370303199705300012',
'06309C8510360124199907100085',
'06259C6555230602200103192856',
'06259C8633440523197501050328',
'06289C6281370302198504206029',
'07059C8956511027197511253054',
'07029C8598522725197304185528',
'05049C860052232319921213624X',
'05189C8775132924196311120324',
'05109C6685360102196906206337',
'05189C654036042519820327021X',
'05169C6233440582199904126111',
'05219C8655362424196203066442',
'05279C8907511321198703109148',
'05189C642034122119910207678X',
'05259C8930232330198601232620',
'05269C628814010919920809622X',
'05279C8956411403198801247519',
'05279C8956450924199201143927',
'05279C6116c4e8698ee4964fd55b9258ece5c0797a',
'05279C8956460028198609036029',
'05279C8956441900198604161680',
'05199C8753320106198912052829',
'05279C8918411424198406173339',
'05279C8881422203197203176017',
'05279C895731011019980725002X',
'05229C8655220204196509150322',
'05279C9958445202199407027733',
'05279C8957310110198608110548',
'05309C6281142726199806190014',
'05309C6282411381199611161747',
'06049C8671230104197412313413',
'06079C8955610103199506062831',
'06109C6233431124199807140337',
'06239C6282230523197711293812',
'06259C6836440404201903199066',
'06199C6420342601199501016829',
'05169C8882421281199008011724',
'05189C653913012919981215213X',
'05189C8955440402198306163043',
'05199C8950510525197611103049',
'05249C8509411321199705262817',
'05279C8956210106198907056117',
'05279C8956445221198810074630',
'05279C8956310107196201171683',
'05279C8956445224199910151262',
'05209C8614511325199702052717',
'05269C8510410922198103200022',
'06059C6163330206198412030321',
'05279C8918440921199608076833',
'05279C8655220202198704163328',
'05269C8510450422199608080200',
'05269C8510430381198212201412',
'05269C8510320911199501061922',
'05319C8882310101195505032823',
'05279C8956440203197606151844',
'06059C8956422201199101201310',
'06069C6629211004198010263325',
'05199C8753610582199211092029',
'06109C8819522726199906164439',
'06109C8819411081199903283256',
'06029C8950412823200005152082',
'06209C8754445281199404114386',
'06169C8950320107198907205014',
'06209C6419362128197701093121',
'06209C6282370923196401023110',
'06249C8754142633196803271016',
'07049C863432092519900911455X',
'06279C8633321001199908170628')

 ------356、

------343、临时数据提取 各OTA 去哪儿活动期间的销量

select 
case when  t1.order_day >= to_date('2021-06-28','yyyy-mm-dd')
   and t1.order_day <=to_date('2021-06-30','yyyy-mm-dd')  then '28~30'
   when t1.order_day >= to_date('2021-06-21','yyyy-mm-dd')
   and t1.order_day <=to_date('2021-06-23','yyyy-mm-dd')  then '21~23'
   else '其他' end,
t1.sub_channel,
t2.segment_type,
t2.flights_segment_name,
t2.flights_city_name,
t2.route_name,
t9.wf_segment_name,
t9.wf_city_name,
t9.wf_segment,
       count(1) 票量,
     sum(t1.ticket_price) 票价,
   sum(t1.price)  全价
  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.dim_segment_type t9  on t2.h_route_id=t9.h_route_id and t2.route_id=t9.route_id

 
 where t1.order_day >= to_date('2021-06-21','yyyy-mm-dd')
   and t1.order_day <= to_date('2021-06-30','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2','O')
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.sub_channel in('携程','淘宝','同程','去哪儿')
   and t1.whole_flight like '9C%'
 group by case when  t1.order_day >= to_date('2021-06-28','yyyy-mm-dd')
   and t1.order_day <=to_date('2021-06-30','yyyy-mm-dd')  then '28~30'
   when t1.order_day >= to_date('2021-06-21','yyyy-mm-dd')
   and t1.order_day <=to_date('2021-06-23','yyyy-mm-dd')  then '21~23'
   else '其他' end,
t1.sub_channel ,
t2.segment_type,
t2.flights_segment_name,
t2.flights_city_name,
t2.route_name,
t9.wf_segment_name,
t9.wf_city_name,
t9.wf_segment

-----------------------------------------------------------20210706------------------------------------------------
 ------357、优惠规则\优惠券\机票优惠\辅收优惠

select t2.flights_order_head_id,
       t7.youhui_result 优惠规则_优惠金额,
       t8.youhui_result 优惠规则_保险立减,
       t9.yhq_money 优惠券抵用金额,
       t10.discount_count 辅收推荐立减金额,
       t11.point_money 积分支付金额
  from cqsale.cq_order_head@to_air t2
--机票产品优惠规则
  left join (select t6.flights_order_head_id,
                    sum(YOUHUI_RESULT) youhui_result
               from cust.cq_order_youhui_detail@to_air t6
              where t6.product_type = 0
              group by t6.flights_order_head_id) t7 on t7.flights_order_head_id =
                                                       t2.flights_order_head_id
---保险立减（立减规则是减在机票产品上）
  left join (select t6.order_head_id, sum(DISCOUNT_AMOUNT) youhui_result
               from cqsale.CQ_INSURANCE_DISCOUNT_HISTORY@to_air t6
              where t6.type = 1
                and DISCOUNT_TYPE = 0
              group by t6.order_head_id) t8 on t8.order_head_id =
                                               t2.flights_order_head_id
---优惠券抵用
  left join (select ORDER_HEAD_ID, sum(yhq_money) yhq_money
               from yhq.cq_new_yhq_history_detail@to_air
              group by ORDER_HEAD_ID) t9 on t9.order_head_id =
                                            t2.flights_order_head_id
---辅收推荐立减
  left join (select tb2.order_head_id,
                    suM(tb1.discount_count) discount_count
               from cqsale.cq_order_xprod_discount@to_air tb1
               join cqsale.cq_other_order_head@to_air tb2 on tb1.other_order_head_id =
                                                     tb2.other_order_head_id
              where tb2.flag_id in (3, 5, 40, 7, 11, 12)
              group by tb2.order_head_id) t10 on t10.order_head_id =
                                                 t2.flights_order_head_id
--积分支付
  left join (select flights_order_head_id, sum(h1.ticket_price) point_money
               from cqsale.cq_btc_order_head@to_air h1
              where h1.pay_gate = '35' --积分支付
                and h1.order_type in ('0', '1', '2')
              group by flights_order_head_id) t11 on t11.flights_order_head_id =
                                                     t2.flights_order_head_id
 where t2.r_order_date>=trunc(sysdate)
  and t2.flag_id in(3,5,40);


 ------358、


 --7月5日9C6336 3A的旅客 叫段月秋 男性


select t1.work_tel,t1.r_tel,t1.gate_name,t1.sub_channel,t1.*
 from dw.fact_order_detail t1
 where t1.flights_date=trunc(sysdate)-1
 and t1.whole_flight ='9C6336'
 and t1.traveller_name ='段月秋';

订票人联系方式：13773671963
乘机人联系方式：13516809688

 ------359、

 --临时任务：使用redmine


select 
case when t1.ahead_days<=3 then '00~03'
         when t1.ahead_days<=7 then '04~07'
       when t1.ahead_days<=15 then '08~15'
       when t1.ahead_days<=30 then '15~30'
       when t1.ahead_days<=60 then '31~60'
       when t1.ahead_days<=90 then '61~90'
       when t1.ahead_days> 90 then '90+' end 提前期, 
       count(1)

  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id

 where t1.flights_date >= to_date('2019-07-01','yyyy-mm-dd')
   and t1.flights_date <  to_date('2019-09-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2','O')
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t2.flights_city_name in('上海－重庆',
'上海－三亚',
'上海－兰州－敦煌',
'上海－西宁',
'上海－成都天府',
'上海－丽江',
'上海－遵义',
'上海－西安－乌鲁木齐',
'上海－乌鲁木齐',
'上海－桂林',
'揭阳－合肥－银川',
'揭阳－上海',
'揭阳－常州－沈阳',
'揭阳－哈尔滨－加格达奇',
'揭阳－淮安－长春',
'揭阳－南通－烟台',
'揭阳－南昌－兰州',
'揭阳－三明－青岛',
'揭阳－桂林',
'揭阳－杭州',
'兰州－烟台',
'兰州－石家庄',
'兰州－北海',
'兰州－庆阳－上海',
'兰州－温州',
'兰州－南京',
'兰州－淮安－宁波',
'兰州－杭州',
'兰州－南阳－厦门',
'兰州－沈阳',
'深圳－重庆',
'深圳－西安',
'深圳－上海',
'深圳－淮安－哈尔滨',
'深圳－遵义－兰州',
'深圳－岳阳－济南',
'深圳－南昌－长春',
'深圳－邵阳－兰州',
'深圳－南京',
'深圳－石家庄－通辽',
'扬州泰州－重庆',
'扬州泰州－南昌－北海',
'扬州泰州－银川',
'扬州泰州－厦门',
'扬州泰州－兰州',
'扬州泰州－贵阳',
'扬州泰州－张家界',
'扬州泰州－长春',
'扬州泰州－哈尔滨',
'扬州泰州－太原',
'宁波－成都天府',
'宁波－西安',
'宁波－盐城－银川',
'宁波－桂林',
'宁波－兰州－克拉玛依',
'宁波－昆明',
'宁波－洛阳－乌鲁木齐',
'宁波－珠海',
'宁波－常德－北海',
'宁波－井冈山－重庆',
'沈阳－济南－桂林',
'沈阳－西安',
'沈阳－南昌－湛江',
'沈阳－常州－揭阳',
'沈阳－扬州泰州－珠海',
'沈阳－上海',
'沈阳－兰州',
'沈阳－洛阳－重庆',
'沈阳－绵阳－昆明',
'沈阳－忻州－厦门',
'石家庄－合肥－北海',
'石家庄－上海',
'石家庄－成都天府',
'石家庄－长春',
'石家庄－重庆',
'石家庄－银川',
'石家庄－泉州',
'石家庄－厦门',
'石家庄－绵阳',
'石家庄－桂林',
'南昌－上海',
'南昌－盐城－呼和浩特',
'南昌－银川',
'南昌－珠海',
'南昌－桂林',
'南昌－泸州',
'南昌－石家庄')
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
 group by case when t1.ahead_days<=3 then '00~03'
         when t1.ahead_days<=7 then '04~07'
       when t1.ahead_days<=15 then '08~15'
       when t1.ahead_days<=30 then '15~30'
       when t1.ahead_days<=60 then '31~60'
       when t1.ahead_days<=90 then '61~90'
       when t1.ahead_days> 90 then '90+' end;

----------------------------------------20210707----------------
 ------360、
 --优惠查询 
select case when t1.terminal_id=-1 and t1.web_id=0 then '线上渠道'
       when t1.terminal_id=-1 and t1.web_id>0 then 'OTA'
       else '其他' end ,
       t7.youhui_result 优惠规则_优惠金额,
       t7.youhui_id,
       t7.memo,
       t4.gate_name,
       count(1)
  from cqsale.cq_order@to_air t1
  join cqsale.cq_order_head@to_air t2 on t1.flights_order_id=t2.flights_order_id
--机票产品优惠规则
   join (select t6.flights_order_head_id,max(t7.memo) memo,
                     max(t6.youhui_id) youhui_id,
                    sum(YOUHUI_RESULT) youhui_result
               from cust.cq_order_youhui_detail@to_air t6
               join cust.cq_youhui_policy_main@to_air t7 on t6.YOUHUI_ID=t7.id
              where t6.product_type = 0
              and t7.YH_STYLE!=2
              group by t6.flights_order_head_id) t7 on t7.flights_order_head_id =
                                                       t2.flights_order_head_id
    left join dw.da_flight t3 on t2.segment_head_id=t3.segment_head_id
    left join stg.p_cq_pay_gate t4 on t1.pay_gate=t4.id
 where t1.order_date>=trunc(sysdate)-1
 and  t2.r_order_date>=trunc(sysdate)-1
 and t2.r_order_date< trunc(sysdate)
 and t1.terminal_id<0
 and t1.web_id=0
 and t2.flag_id in(3,5,40)
 group by case when t1.terminal_id=-1 and t1.web_id=0 then '线上渠道'
       when t1.terminal_id=-1 and t1.web_id>0 then 'OTA'
       else '其他' end ,
       t7.youhui_result,
       t7.memo,
       t7.youhui_id,t4.gate_name;

-------------------------------------------------------------20210708-------------------------------------------------------------
 ------361、

--商旅通数据
--1、 

select case when fee<100 then '0~100' 
when fee<200 then '100~200' 
when fee<300 then '200~300' 
when fee<400 then '300~400' 
when fee<500 then '400~500' 
when fee<600 then '500~600' 
when fee<900 then '600~900' 
when fee<1000 then '900~1000' 
when fee>=1000 then '1000+' end,count(1) 
from(
select t1.flights_order_id,case when t1.flag_id in(3,5,40,41) then '消费'
when t1.flag_id in(7,11,12) then '退票' end type1,
sum(t1.ticket_price+t1.port_pay+t1.ad_fy+t1.other_fy+t1.insurce_fee+t1.other_fee) fee
 from dw.fact_recent_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.bi_order_region t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.order_day>=trunc(sysdate)-180
  and t1.order_day< trunc(sysdate)
  and t2.flag=0
  and t1.seats_name not in('B','G1','G','G2','O')
  and t1.seats_name is not null 
 group by t1.flights_order_id,case when t1.flag_id in(3,5,40,41) then '消费'
when t1.flag_id in(7,11,12) then '退票' end)
group by case when fee<100 then '0~100' 
when fee<200 then '100~200' 
when fee<300 then '200~300' 
when fee<400 then '300~400' 
when fee<500 then '400~500' 
when fee<600 then '500~600' 
when fee<900 then '600~900' 
when fee<1000 then '900~1000' 
when fee>=1000 then '1000+' end;
   


--商旅通数据
--2、 


select 
case when t2.originairport_name in('浦东','虹桥','兰州','深圳','石家庄','沈阳','宁波')  then t2.originairport_name
else '-' end originairport_name,
case when t2.destairport_name in('浦东','虹桥','兰州','深圳','石家庄','沈阳','宁波')  then t2.destairport_name
else '-' end destairport_name,
case when t1.ahead_days< 5 then '00~05'
         when t1.ahead_days< 10 then '05~10'
       when t1.ahead_days< 15 then '10~15'
       when t1.ahead_days< 20 then '15~20'
       when t1.ahead_days>=20 then '20+' end 
 提前期, 
 decode(t3.gender,0,'-',1,'男',2,'女') 性别,
 case when t3.age<20 then '00~20'
         when t3.age<30 then '20~30'
       when t3.age<40 then '30~40'
       when t3.age<50 then '40~50'
       when t3.age<60 then '50~60'
       when t3.age>=60 then '60+' end,
   case when t3.cust_province like '%江苏%' then '江苏'
   when t3.cust_province like '%甘肃%' then '甘肃'
   when t3.cust_province like '%四川%' then '四川'
   when t3.cust_province like '%河北%' then '河北'
   when t3.cust_province like '%辽宁%' then '辽宁'
   when t3.cust_province like '%黑龙江%' then '黑龙江'
   when t3.cust_province like '%广东%' then '广东'
   else '--' end ,
   count(1)

 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.bi_order_region t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.order_day>=trunc(sysdate)-180
  and t1.order_day< trunc(sysdate)
  and t2.flag=0
  and t1.whole_flight like '9C%'
  and t1.seats_name not in('B','G1','G','G2','O')
  and t1.seats_name is not null 
  group by case when t2.originairport_name in('浦东','虹桥','兰州','深圳','石家庄','沈阳','宁波')  then t2.originairport_name
else '-' end ,
case when t2.destairport_name in('浦东','虹桥','兰州','深圳','石家庄','沈阳','宁波')  then t2.destairport_name
else '-' end ,
case when t1.ahead_days<5 then '00~05'
         when t1.ahead_days<10 then '05~10'
       when t1.ahead_days<15 then '10~15'
       when t1.ahead_days<20 then '15~20'
       when t1.ahead_days>=20 then '20+' end 
 , 
 decode(t3.gender,0,'-',1,'男',2,'女') ,
 case when t3.age<20 then '00~20'
         when t3.age<30 then '20~30'
       when t3.age<40 then '30~40'
       when t3.age<50 then '40~50'
       when t3.age<60 then '50~60'
       when t3.age>=60 then '60+' end,
   case when t3.cust_province like '%江苏%' then '江苏'
   when t3.cust_province like '%甘肃%' then '甘肃'
   when t3.cust_province like '%四川%' then '四川'
   when t3.cust_province like '%河北%' then '河北'
   when t3.cust_province like '%辽宁%' then '辽宁'
   when t3.cust_province like '%黑龙江%' then '黑龙江'
   when t3.cust_province like '%广东%' then '广东'
   else '--' end;


-----------------------------------------------------20210708------------------------------------------

 ------362、

/*1）  线上自有渠道剔除易宝商旅卡、剔除识别成代理的订单（不对订单状态，所有订单状态）剔除已经绿翼会员账号按照订单日期最近一个月的去重的注册手机号码量，最近一年的去重注册手机号码量
2）  最近一个月，最近一年，OTA购票的，剔除手机号码在代理手机号出现过的，剔除手机号码已经注册过绿翼会员的，获取OTA订票的乘机人联系方式的去重量
*/

select count(distinct t4.login_id)
 from stg.s_cq_order t
 join stg.s_cq_order_head t1 on t.flights_order_id=t1.flights_order_id
 left join dw.da_restrict_userinfo t2 on t.client_id=t2.users_id
 left join dw.da_b2c_user t4 on t.client_id=t4.users_id
 where t.terminal_id<0
 and t1.whole_flight like '9C%'
 and t1.seats_name <>'O'
 and t.web_id=0
 and t.order_date>=trunc(sysdate)-30
 and t.order_date< trunc(sysdate)
 and not exists(select 1 from dw.da_lyuser t3
 where t3.users_id_fk=t.client_id)
 and t.pay_gate not in(15,29,31)

 --result:48553
 
 
select count(distinct t4.login_id)
 from stg.s_cq_order t
 join stg.s_cq_order_head t1 on t.flights_order_id=t1.flights_order_id
 left join dw.da_restrict_userinfo t2 on t.client_id=t2.users_id
 left join dw.da_b2c_user t4 on t.client_id=t4.users_id
 where t.terminal_id<0
 and t1.whole_flight like '9C%'
 and t1.seats_name <>'O'
 and t.web_id=0
 and t.order_date>=trunc(sysdate)-365
 and t.order_date< trunc(sysdate)
 and not exists(select 1 from dw.da_lyuser t3
 where t3.users_id_fk=t.client_id)
 and t.pay_gate not in(15,29,31);

--result:92044

 select count(distinct t1.r_tel)
 from dw.fact_recent_order_detail t1
 left join dw.da_restrict_mobile t2 on t1.r_tel=t2.mobile
 where t1.channel in('OTA','旗舰店')
 and t1.whole_flight like '9C%'
 and t1.seats_name <>'O'
 and t1.order_day>=trunc(sysdate)-365
 and t1.order_day< trunc(sysdate)
 and not exists(select 1 from dw.da_lyuser t3
 where t1.r_tel=t3.login_id
 or t1.codeno=t3.codeno)
 and t2.mobile is null;
 
 
 
 
 select count(distinct t1.r_tel)
 from dw.fact_recent_order_detail t1
 left join dw.da_restrict_mobile t2 on t1.r_tel=t2.mobile
 where t1.channel in('OTA','旗舰店')
 and t1.whole_flight like '9C%'
 and t1.seats_name <>'O'
 and t1.order_day>=trunc(sysdate)-30
 and t1.order_day< trunc(sysdate)
 and not exists(select 1 from dw.da_lyuser t3
 where t1.r_tel=t3.login_id
 or t1.codeno=t3.codeno)
 and t2.mobile is null;
 


 ------363、成都天府错走分析

select distinct t.*, t1.client_id,t1.flights_order_head_id,t1.traveller_name,case 
when t1.channel in('手机','网站') and t4.users_id is not null then '代理'
when t1.channel in('手机','网站') and t1.pay_gate in(15,29,31) then '易宝商旅卡'
when t1.channel in('手机','网站')  then '线上纯量'
when t1.channel in('OTA','旗舰店') then t1.sub_channel
else t1.sub_channel end 渠道,
t1.order_linkman,
t1.work_tel,
t1.email,
t1.r_tel,
t1.seats_name,
case when t1.flag_id in(7,11,12) then '退票'
when t2.flights_order_head_id is not null then '改签' end,
t5.flights_segment_name,
to_char(t5.origin_std,'hh24')
from anl.temp_feng_0708@to_dds t
left join dw.fact_recent_order_detail t1 on t.flights_order_id=t1.flights_order_id
left join dw.da_order_change t2 on t1.segment_head_id=t2.new_segment_id and t1.flights_order_head_id=t2.flights_order_head_id
left join dw.da_flight t3 on t2.old_segment_id=t3.segment_head_id
left join dw.da_restrict_userinfo t4 on t1.client_id=t4.users_id
left join dw.da_flight t5 on t1.segment_head_id=t5.segment_head_id
where t.flight_date=nvl(trunc(t2.old_origin_std),t1.flights_date)
and t.flight_no=nvl(t3.flight_no,t1.whole_flight);


------------------------------------------------------20210709----------------------------------------------------------------------
 ------364、

---多张使用的情况说明

select ordermonth,case when codenum<=5 then '0~5' 
when codenum<=10 then '5~10' 
when codenum<=20 then '10~20'
when codenum<=50 then '20~50'  
when codenum> 50 then '50+' end,count(1),
sum(tkt)  

from(
select to_char(t1.order_day,'yyyymm') ordermonth,t1.client_id,count(distinct t1.codeno) codenum,count(1) tkt
  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
    join( select user_id,sname
   from(
  select id,user_id,replace(upper(trim(fam_name_en||coalesce(per_name_en,''))),' ','') sname,
   row_number()over(partition by user_id order by id ) xid
   from stg.c_cq_cust_code t1
   where fam_name_en is not null)
   where xid=1) t5  on t1.client_id=t5.user_id and upper(replace(trim(t1.en_name),' ',''))=t5.sname
  left join (select t1.flights_order_head_id,
                    nvl(t1.is_beneficiary, 0) is_beneficiary,
                    t1.youhui_result
               from stg.c_cq_order_youhui_detail t1
               join stg.c_cq_youhui_policy_main t2 on t1.youhui_id=t2.id
              where t1.product_type = 0
                and t1.yh_ret_time is null
                and t1.youhui_result is not null
                and t2.YH_STYLE=2
                and t1.create_date >= to_date('2021-01-01','yyyy-mm-dd')) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id

 where t1.order_day >=  to_date('2021-01-01','yyyy-mm-dd')
   and t1.order_day < to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2','O')
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.channel in('手机','网站')
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
   and  t4.flights_order_head_id is not null and nvl(t4.is_beneficiary,0)= 0
   group by to_char(t1.order_day,'yyyymm'),t1.client_id)
   group by ordermonth,case when codenum<=5 then '0~5' 
when codenum<=10 then '5~10' 
when codenum<=20 then '10~20'
when codenum<=50 then '20~50'  
when codenum> 50 then '50+' end;
   
   
---绿翼账号对应的使用的购票证件个数统计
select ordermonth,case when codenum<=5 then '0~5' 
when codenum<=10 then '5~10' 
when codenum<=20 then '10~20'
when codenum<=50 then '20~50'  
when codenum> 50 then '50+' end,count(1),
sum(tkt) 
from(
select to_char(t1.order_day,'yyyymm') ordermonth,t1.client_id,count(distinct t1.codeno) codenum,count(1) tkt
  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
    join( select user_id,sname
   from(
  select id,user_id,replace(upper(trim(fam_name_en||coalesce(per_name_en,''))),' ','') sname,
   row_number()over(partition by user_id order by id ) xid
   from stg.c_cq_cust_code t1
   where fam_name_en is not null)
   where xid=1) t5  on t1.client_id=t5.user_id and upper(replace(trim(t1.en_name),' ',''))=t5.sname
 where t1.order_day >=  to_date('2021-01-01','yyyy-mm-dd')
   and t1.order_day < to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2','O')
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.channel in('手机','网站')
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
   and exists(select 1 from dw.da_lyuser tp1
   where tp1.users_id_fk=t1.client_id)
   
   group by to_char(t1.order_day,'yyyymm'),t1.client_id)
   group by ordermonth,case when codenum<=5 then '0~5' 
when codenum<=10 then '5~10' 
when codenum<=20 then '10~20'
when codenum<=50 then '20~50'  
when codenum> 50 then '50+' end;
   

 ------365、天府数据处理


select h.flight_date,case when h.originairport_name like '%成都%' then '天府' 
when h.originairport_name like '%武隆%' then '重庆'
else h.originairport_name end 始发站 ,
case when h.destairport_name like '%成都%' then '天府' 
when h.destairport_name like '%武隆%' then '重庆'
else h.destairport_name end 目的站,
h.flight_no,
h.layout,
h.flag,
sum(h1.tkt) tkt,sum(h1.boardnum) boardnum
from dw.da_flight h
left join (
select t1.segment_head_id,t2.origin_std,t1.whole_segment,t2.segment_code,t2.flights_segment_name,t2.layout,t2.flight_no,t2.flag,t2.route_name,
count(1) tkt,sum(case when t1.flag_id=40 then 1 else 0 end) boardnum
 from cqsale.cq_order_head@to_air t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.r_flights_date>=to_date('2021-06-30','yyyy-mm-dd')
 and t1.r_flights_date<=to_date('2021-07-09','yyyy-mm-dd')
 and t1.flag_id in(3,5,40,41)
 and t1.seats_name is not null
 and t1.whole_segment like '%TFU%'
 group by t1.segment_head_id,t2.origin_std,t1.whole_segment,t2.segment_code,t2.flights_segment_name,t2.layout,t2.flight_no,t2.flag,t2.route_name)
 h1 on h.segment_head_id=h1.segment_head_id
 where h.segment_code like '%TFU%'
 and h.flag=0
 and h.flight_date>=to_date('2021-06-30','yyyy-mm-dd')
 and h.flight_date<=to_date('2021-07-09','yyyy-mm-dd')
 group by h.flight_date,case when h.originairport_name like '%成都%' then '天府' 
when h.originairport_name like '%武隆%' then '重庆'
else h.originairport_name end ,
case when h.destairport_name like '%成都%' then '天府' 
when h.destairport_name like '%武隆%' then '重庆'
else h.destairport_name end ,
h.flight_no,
h.layout,
h.flag;

-----------------------------------------------------------------------------20210712---------------------------------------------------------
-------366、优易采相应的数据


select t1.flights_order_id,t1.order_date,t1.channel,t1.sub_channel,t1.seats_name,t1.ticket_price,
t1.traveller_name,t1.flights_date,t3.flights_segment_name,t2.batch_id,t2.yhq_id,t1.flag_id
 from dw.fact_recent_order_detail t1
 left join dw.bi_yhq_use t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join dw.da_flight t3 on t1.segment_head_id=t3.segment_head_id
 where t2.batch_id ='10089'
 
 
 select t1.batch_no,t1.start_time,t1.quan_code,t1.quan_user,t1.quan_status,t2.realname,t3.realname
 from hdb.cms_yhq_create t1
 left join dw.da_b2c_user t2 on t1.quan_user=t2.users_id
 left join dw.da_lyuser t3 on t1.quan_user=t3.users_id_fk
 where batch_no ='10089'
 and t1.quan_user is not null;

----------------------------------------------------------------------------20210713------------------------------------------------------------
 ------367、
select distinct t.*, t1.client_id,t1.flights_order_head_id,t1.traveller_name,case 
when t1.channel in('手机','网站') and t4.users_id is not null then '代理'
when t1.channel in('手机','网站') and t1.pay_gate in(15,29,31) then '易宝商旅卡'
when t1.channel in('手机','网站')  then '线上纯量'
when t1.channel in('OTA','旗舰店') then t1.sub_channel
else t1.sub_channel end 渠道,
t1.order_linkman,
t1.work_tel,
t1.email,
t1.r_tel,
t1.seats_name,
case when t1.flag_id in(7,11,12) then '退票'
when t2.flights_order_head_id is not null then '改签' end,
t5.flights_segment_name,
to_char(t5.origin_std,'hh24')
from anl.temp_feng_0708@to_dds t
left join dw.fact_recent_order_detail t1 on t.flights_order_id=t1.flights_order_id
left join dw.da_order_change t2 on t1.segment_head_id=t2.new_segment_id and t1.flights_order_head_id=t2.flights_order_head_id
left join dw.da_flight t3 on t2.old_segment_id=t3.segment_head_id
left join dw.da_restrict_userinfo t4 on t1.client_id=t4.users_id
left join dw.da_flight t5 on t1.segment_head_id=t5.segment_head_id
where t.flight_date=nvl(trunc(t2.old_origin_std),t1.flights_date)
and t.flight_no=nvl(t3.flight_no,t1.whole_flight);



-------368、易宝商旅卡相关数据提取

--渠道占比/渠道联系方式正常与否

select to_char(t1.order_day,'yyyymm'),case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end ,
case when t1.work_tel is null and t1.r_tel is null then '无联系方式'
when t4.mobilenum>=200 and t5.mobilenum>=200 then '代理联系方式'
when t1.work_tel is null and t5.mobilenum>=200 then '代理联系方式'
when t4.mobilenum>=200 and t1.r_tel is null then '代理联系方式'
else '正常' end,
count(1),sum(t1.ticket_price)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
 left join ( 
 select nvl(h2.r_tel,h1.work_tel) mobile,greatest(h2.mobilenum,h1.mobilenum) mobilenum
 from(
 select tp1.work_tel,count(1) mobilenum
               from dw.fact_order_detail tp1
               where  tp1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and tp1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and tp1.seats_name not in('B','G','G1','G2')
   and tp1.company_id=0
   and tp1.work_tel is not null 
   group by tp1.work_tel)h1
   full outer join (  
   select tp1.r_tel,count(1) mobilenum
               from dw.fact_order_detail tp1
               where  tp1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and tp1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and tp1.seats_name not in('B','G','G1','G2')
   and tp1.company_id=0
   and tp1.r_tel is not null 
   group by tp1.r_tel
   ) h2 on h1.work_tel=h2.r_tel
   )t4 on t1.work_tel=t4.mobile
    left join ( 
 select nvl(h2.r_tel,h1.work_tel) mobile,greatest(h2.mobilenum,h1.mobilenum) mobilenum
 from(
 select tp1.work_tel,count(1) mobilenum
               from dw.fact_order_detail tp1
               where  tp1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and tp1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and tp1.seats_name not in('B','G','G1','G2')
   and tp1.company_id=0
   and tp1.work_tel is not null 
   group by tp1.work_tel)h1
   full outer join (  
   select tp1.r_tel,count(1) mobilenum
               from dw.fact_order_detail tp1
               where  tp1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and tp1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and tp1.seats_name not in('B','G','G1','G2')
   and tp1.company_id=0
   and tp1.r_tel is not null 
   group by tp1.r_tel
   ) h2 on h1.work_tel=h2.r_tel
   )t5 on t1.r_tel=t5.mobile
 where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2')
   and t1.company_id=0
 group by to_char(t1.order_day,'yyyymm'),case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end
,case when t1.work_tel is null and t1.r_tel is null then '无联系方式'
when t4.mobilenum>=200 and t5.mobilenum>=200 then '代理联系方式'
when t1.work_tel is null and t5.mobilenum>=200 then '代理联系方式'
when t4.mobilenum>=200 and t1.r_tel is null then '代理联系方式'
else '正常' end;



  /*1、易宝商旅卡订单的乘机人信息真实性、会员转化情况（是否绿翼）
  2、易宝商旅卡预订人的账号属性，（新老会员、是否绿翼、平均年订单数、复购率、本人出行次数）
  3、易宝商旅卡的立减情况（已有），优惠券使用情况（看占比）
*/

select to_char(t1.order_day,'yyyy'),
case when t1.order_day-t4.reg_date<=30 then '新会员'
when t1.order_day-t4.reg_date>30 then '老会员' end,
count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
 left join dw.da_b2c_user t4 on t1.client_id=t4.users_id
 left join dw.da_lyuser t5 on t1.client_id=t5.users_id_fk
 where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2')
   and t1.company_id=0
   and( case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end) in('易宝','商旅卡')
group  by to_char(t1.order_day,'yyyy'),
case when t1.order_day-t4.reg_date<=30 then '新会员'
when t1.order_day-t4.reg_date>30 then '老会员' end;


  /*1、易宝商旅卡订单的乘机人信息真实性、会员转化情况（是否绿翼）
  2、易宝商旅卡预订人的账号属性，（新老会员、是否绿翼、平均年订单数、复购率、本人出行次数）
  3、易宝商旅卡的立减情况（已有），优惠券使用情况（看占比）
*/

select to_char(t1.order_day,'yyyy'),
case when t5.cust_id is not null then '绿翼会员'
else '非绿翼' end,
count(distinct t1.flights_order_head_id) 机票量,
count(distinct t1.client_id) 账号数
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
 left join dw.da_b2c_user t4 on t1.client_id=t4.users_id
 left join dw.da_lyuser t5 on t1.client_id=t5.users_id_fk
 where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2')
   and t1.company_id=0
   and( case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end) in('易宝','商旅卡')
group  by  to_char(t1.order_day,'yyyy'),
case when t5.cust_id is not null then '绿翼会员'
else '非绿翼' end;



select  syear,case when h1.snum<=2 then '01~02'
when h1.snum<=4 then '03~04'
when h1.snum<=6 then '05~06'
when h1.snum<=12 then '07~12'
else '12+' end,count(distinct h1.client_id)
from(
select to_char(t1.order_day,'yyyy') syear,
t1.client_id,
count(distinct t1.flights_order_head_id) snum
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
 left join dw.da_b2c_user t4 on t1.client_id=t4.users_id
 left join dw.da_lyuser t5 on t1.client_id=t5.users_id_fk
 where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2')
   and t1.company_id=0
   and( case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end) in('易宝','商旅卡')
group by to_char(t1.order_day,'yyyy'),
t1.client_id)h1
group by syear,case when h1.snum<=2 then '01~02'
when h1.snum<=4 then '03~04'
when h1.snum<=6 then '05~06'
when h1.snum<=12 then '07~12'
else '12+' end;

--是否本人出行

select to_char(t1.order_day,'yyyy') syear,
 case when t1.codeno=t4.codeno and t1.codetype=t4.codetype and t1.traveller_name=t4.realname then '本人出行'
 when t1.codeno=t5.codeno and t1.codetype=t5.codetype and t1.traveller_name=t5.realname then '本人出行'
 when t1.codeno=t6.code_no and t1.codetype=t6.code_type and t1.en_name=t6.fam_name_en||coalesce(t6.per_name_en,'') then '本人出行'
 else '非本人出行' end,count(distinct t1.flights_order_head_id)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
 left join dw.da_b2c_user t4 on t1.client_id=t4.users_id
 left join dw.da_lyuser t5 on t1.client_id=t5.users_id_fk
 left join stg.c_cq_cust_code t6 on t5.cust_id=t6.custid
 where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2')
   and t1.company_id=0
   and( case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end) in('易宝','商旅卡')
group by to_char(t1.order_day,'yyyy') ,
 case when t1.codeno=t4.codeno and t1.codetype=t4.codetype and t1.traveller_name=t4.realname then '本人出行'
 when t1.codeno=t5.codeno and t1.codetype=t5.codetype and t1.traveller_name=t5.realname then '本人出行'
 when t1.codeno=t6.code_no and t1.codetype=t6.code_type and t1.en_name=t6.fam_name_en||coalesce(t6.per_name_en,'') then '本人出行'
 else '非本人出行' end;

--易宝商旅卡账号有本人出行记录的账号有多少？？

select h2.syear, case when xtype=1 then '本人有出行'
else '本人未出行' end ,count(1)
 from (
select to_char(t1.order_day,'yyyy') syear,
t1.client_id,
max(
 case when t1.codeno=t4.codeno and t1.codetype=t4.codetype and t1.traveller_name=t4.realname then 1
 when t1.codeno=t5.codeno and t1.codetype=t5.codetype and t1.traveller_name=t5.realname then 1
 when t1.codeno=t6.code_no and t1.codetype=t6.code_type and t1.en_name=t6.fam_name_en||coalesce(t6.per_name_en,'') then 1
 else 0 end) xtype
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
 left join dw.da_b2c_user t4 on t1.client_id=t4.users_id
 left join dw.da_lyuser t5 on t1.client_id=t5.users_id_fk
 left join stg.c_cq_cust_code t6 on t5.cust_id=t6.custid
 where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2')
   and t1.company_id=0
   and( case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end) in('易宝','商旅卡')
group by to_char(t1.order_day,'yyyy') ,
t1.client_id)h2
group by h2.syear, case when xtype=1 then '本人有出行'
else '本人未出行' end;




--订单类型 0-航空订单 1-二次辅收订单 2-变更申请 3-酒店 4-旅游 5-绿翼商城 6-春航日分 7 -一次辅收订单

select to_char(t1.order_day,'yyyy') syear,
case when t3.yhq_id is not null then '使用优惠券'
else '不使用优惠券' end,
case when t3.order_type=0 then '机票'
when t3.order_type =1 then '辅收'  end,
count(distinct t1.flights_order_head_id),
sum(t3.use_money),
sum(t1.ticket_price),
sum(t1.other_fee+t1.insurce_fee)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.bi_yhq_use t3 on t1.flights_order_head_id=t3.flights_order_head_id
 left join dw.bi_yhq_batch t4 on t3.batch_id=t4.batch_id
 where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2')
   and t1.company_id=0
   and( case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end) in('易宝','商旅卡')
group by   to_char(t1.order_day,'yyyy'),case when t3.yhq_id is not null then '使用优惠券'
else '不使用优惠券' end,
case when t3.order_type=0 then '机票'
when t3.order_type =1 then '辅收'  end;


---增加各个渠道优惠券使用占比

select to_char(t1.order_day,'yyyy') syear,
case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end 渠道,
case when t3.yhq_id is not null then '使用优惠券'
else '不使用优惠券' end,
case when t3.order_type=0 then '机票'
when t3.order_type =1 then '辅收'  end,
count(distinct t1.flights_order_head_id),
sum(t3.use_money),
sum(t1.ticket_price),
sum(t1.other_fee+t1.insurce_fee)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.bi_yhq_use t3 on t1.flights_order_head_id=t3.flights_order_head_id
 left join dw.bi_yhq_batch t4 on t3.batch_id=t4.batch_id
 where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2')

group by   to_char(t1.order_day,'yyyy'),case when t3.yhq_id is not null then '使用优惠券'
else '不使用优惠券' end,
case when t3.order_type=0 then '机票'
when t3.order_type =1 then '辅收'  end,
case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end


----------------------------------------------------------20210715-------------------------------------------------
 ------369、亲友添加下单分布情况


select t1.order_day 日期,
       case
         when t1.terminal_id < 0 and nvl(t1.web_id, 0) = 0 and t1.station_id <= 1 then
          '网站'
         when t1.terminal_id < 0 and nvl(t1.web_id, 0) = 0 and t1.station_id = 2 then
          'm网站'
         when t1.terminal_id < 0 and nvl(t1.web_id, 0) = 0 and
              t1.station_id in (3, 8) then
          'ios'
         when t1.terminal_id < 0 and nvl(t1.web_id, 0) = 0 and
              t1.station_id in (4, 9) then
          '安卓'
         when t1.terminal_id < 0 and nvl(t1.web_id, 0) = 0 and
              t1.station_id in (5, 10) then
          '微信'
         else
          '其他'
       end,
       case
         when t1.terminal_id < 0 and t1.web_id = 0 and
              t1.pay_gate =15 then
          '线上-商旅卡'
             when t1.terminal_id < 0 and t1.web_id = 0 and
              t1.pay_gate in (29, 31) then
          '线上-易宝'
         when t1.terminal_id < 0 and t1.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'        
         when t1.terminal_id < 0 and t1.web_id = 0 then
          '线上纯量'
         else
          '其他'
       end,
       case when t1.order_day-trunc(t6.create_time)<=0  then '00'
       when t1.order_day-trunc(t6.create_time)<=7  then '0'||to_char(t1.order_day-trunc(t6.create_time))
       else '7+' end,           
       
       count(1) 票量
  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.da_restrict_userinfo t5 on t1.client_id = t5.users_id
  left join (select t1.flights_order_head_id,
                    nvl(t1.is_beneficiary, 0) is_beneficiary,
                    t1.youhui_result
               from stg.c_cq_order_youhui_detail t1
               join stg.c_cq_youhui_policy_main t2 on t1.youhui_id=t2.id
              where t1.product_type = 0
                and t1.yh_ret_time is null
                and t1.youhui_result is not null
                and t2.YH_STYLE=2
                and t1.create_date >= to_date('2021-06-21','yyyy-mm-dd')) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id
  left join( select users_id,CODE_NO,code_type,create_time,row_number()over(partition by users_id,CODE_NO,code_type order by create_time) xid
from hdb.crm_gwf_benefic_user t1
where t1.status=1
and code_type=1)t6 on t1.client_id=t6.users_id and t1.codeno=t6.CODE_NO and t1.codetype=t6.code_type and t6.xid=1
 where t1.order_day >= to_date('2021-06-21','yyyy-mm-dd')
   and t1.order_day < trunc(sysdate)
   and t1.flights_date >= to_date('2021-06-21','yyyy-mm-dd')-1
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
   and t4.flights_order_head_id is not null 
   and t4.is_beneficiary = 1
   group by t1.order_day,
       case
         when t1.terminal_id < 0 and nvl(t1.web_id, 0) = 0 and t1.station_id <= 1 then
          '网站'
         when t1.terminal_id < 0 and nvl(t1.web_id, 0) = 0 and t1.station_id = 2 then
          'm网站'
         when t1.terminal_id < 0 and nvl(t1.web_id, 0) = 0 and
              t1.station_id in (3, 8) then
          'ios'
         when t1.terminal_id < 0 and nvl(t1.web_id, 0) = 0 and
              t1.station_id in (4, 9) then
          '安卓'
         when t1.terminal_id < 0 and nvl(t1.web_id, 0) = 0 and
              t1.station_id in (5, 10) then
          '微信'
         else
          '其他'
       end,
       case
         when t1.terminal_id < 0 and t1.web_id = 0 and
              t1.pay_gate =15 then
          '线上-商旅卡'
             when t1.terminal_id < 0 and t1.web_id = 0 and
              t1.pay_gate in (29, 31) then
          '线上-易宝'
         when t1.terminal_id < 0 and t1.web_id = 0 and t5.users_id is not null then
          '线上自有黑代'        
         when t1.terminal_id < 0 and t1.web_id = 0 then
          '线上纯量'
         else
          '其他'
       end,
        case when t1.order_day-trunc(t6.create_time)<=0  then '00'
       when t1.order_day-trunc(t6.create_time)<=7  then '0'||to_char(t1.order_day-trunc(t6.create_time))
       else '7+' end;

---------------------------------------------------------------20210716----------------------------------------------------------
 ------370、澳门航线数据

select t1.flight_date,to_char(t1.flight_date,'day'),t1.flights_segment_name,count(1),sum(t2.checkin_num),sum(t2.checkin_mile)/sum(t2.checkin_s_mile)
 from dw.da_flight t1
 left join hdb.recent_flights_cost t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_main_order t3 on t1.segment_head_id=t3.segment_head_id
 where t1.flight_date>=trunc(sysdate)-8
 and t1.flight_date< trunc(sysdate)-1
 and t1.flag=0
 and t1.flights_segment_name like '%澳门%'
 --and t1.flights_segment_name ='澳门－浦东'
 group by t1.flight_date,to_char(t1.flight_date,'day'),t1.flights_segment_name;

 ------371、 小于12岁绿翼会员注册来源


select t1.cust_typename,
       decode(t1.source_flag, 0, '线上', 1, '线下') 线上线下,
       decode(t2.AUTHENTICATION_METHODS,
              1,
              '线下审核',
              2,
              '支付宝',
              3,
              '微信',
              4,
              '联名卡',
              5,
              '值机',
              6,
              '京东认证',
              7,
              '金银卡认证',
              8,
              '扫脸认证',
              9,
              '白花花认证',
              10,
              '四要素',
              11,
              '钱包认证'),
       
       count(1) 注册量,
       min(t1.reg_date),
       max(t1.reg_date)
  from dw.da_lyuser t1
  left join cqsale.cq_users_huiyuan_change@to_air t2 on t1.CUST_ID =
                                                        t2.cust_id
 where t1.birthday >= to_date('2009-07-16', 'yyyy-mm-dd')
   and t1.codetype = 1
   and length(t1.codeno) = 18
 group by t1.cust_typename,
          decode(t1.source_flag, 0, '线上', 1, '线下'),
          decode(t2.AUTHENTICATION_METHODS,
                 1,
                 '线下审核',
                 2,
                 '支付宝',
                 3,
                 '微信',
                 4,
                 '联名卡',
                 5,
                 '值机',
                 6,
                 '京东认证',
                 7,
                 '金银卡认证',
                 8,
                 '扫脸认证',
                 9,
                 '白花花认证',
                 10,
                 '四要素',
                 11,
                 '钱包认证');

-----------------------------------------------------20210717---------------------------------------------------------
 ------372、绿翼会员选座数据

select case when t5.flights_order_head_id is not null then '选座'
            else '没有选座' end,
        t2.part,count(distinct t1.flights_order_head_id)
 from dw.fact_order_detail t1
  left join dw.da_lyuser t3 on t1.client_id=t3.users_id_fk
 left join dw.fact_orderhead_trippurpose@to_ods t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join dw.bi_order_region t6 on t1.flights_order_head_id=t6.flights_order_head_id
 left join (select flights_order_head_id,count(1) tkt,sum(t4.book_fee) bookfee   from dw.fact_other_order_detail t4
 where t4.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t4.flights_date< to_date('2021-07-17','yyyy-mm-dd')
   and t4.xtype_id=3
   group by flights_order_head_id)t5 on t1.flights_Order_head_id=t5.flights_order_head_id
/*left join (select tb1.flights_order_id,  
               from dw.fact_order_detail tb1
               where exists(select 
                             from dw.bi_order_region tb2
                             where tb1.flights_order_head_id=tb2.flights_order_head_id
                             and tb2.age< 12
                              */

where t1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-07-17','yyyy-mm-dd')
   and t1.channel in('网站','手机')
   and t1.whole_flight like '9C%'
   and t1.nationflag='国内'
   and t1.seats_name not in('B','G','G1','G2','O')
   and t3.cust_id is not null 
   group by case when t5.flights_order_head_id is not null then '选座'
            else '没有选座' end,
        t2.part;



select case when t5.flights_order_head_id is not null then '选座'
            else '没有选座' end,
          case when tp1.part1 ='儿童' then '家庭出行_儿童'
          when tp1.part1 ='老人' then '家庭出行_老人'
          else  t2.part end,count(distinct t1.flights_order_head_id)
 from dw.fact_order_detail t1
  left join dw.da_lyuser t3 on t1.client_id=t3.users_id_fk
 left join dw.fact_orderhead_trippurpose@to_ods t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join dw.bi_order_region t6 on t1.flights_order_head_id=t6.flights_order_head_id
 left join (select flights_order_head_id,count(1) tkt,sum(t4.book_fee) bookfee   from dw.fact_other_order_detail t4
 where t4.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t4.flights_date< to_date('2021-07-17','yyyy-mm-dd')
   and t4.xtype_id=3
   group by flights_order_head_id)t5 on t1.flights_Order_head_id=t5.flights_order_head_id
left join (
select tb4.flights_order_id,case when age< 12 then '儿童'
when age>=60 then '老人' end part1

from(
select flights_order_id,ntkt,age,row_number()over(partition by  flights_order_id  order by age ) xid
 from(
select tb1.flights_order_id,tb2.age,sum(count(1))over(partition by tb1.flights_order_id )  ntkt
               from dw.fact_order_detail tb1
               join dw.bi_order_region tb2 on tb1.flights_order_head_id=tb2.flights_order_head_id
               where tb1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and tb1.flights_date< to_date('2021-07-17','yyyy-mm-dd')
   group by tb1.flights_order_id,tb2.age)tb3
   where (tb3.age< 12 or tb3.age>=60)
   )tb4
   where tb4.xid=1
   and tb4.ntkt>=2)tp1  on t1.flights_order_id=tp1.flights_order_id
 
where t1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-07-17','yyyy-mm-dd')
   and t1.channel in('网站','手机')
   and t1.whole_flight like '9C%'
   and t1.nationflag='国内'
   and t1.seats_name not in('B','G','G1','G2','O')
   and t3.cust_id is not null 
   group by case when t5.flights_order_head_id is not null then '选座'
            else '没有选座' end,
          case when tp1.part1 ='儿童' then '家庭出行_儿童'
          when tp1.part1 ='老人' then '家庭出行_老人'
          else  t2.part end;

-------------------------------------------------------------20210719--------------------------------------------------------------------
 ------373、客座率低于85%的航线的数据

select dim2.wf_city_name,t1.flight_segment,sum(t1.checkin_mile) 客公里,sum(t1.checkin_s_mile) 座公里
 from dw.bi_tbl_plf t1
 left join (
 select dim1.route_name,dim1.wf_city_name
  from dw.dim_segment_type dim1
  group by dim1.route_name,dim1.wf_city_name)dim2  on t1.flight_segment=dim2.route_name
 where t1.flight_date=to_date('2021-07-17','yyyy-mm-dd')
 group by dim2.wf_city_name,t1.flight_segment;

 ------374、往返立减活动数据

select trunc(t1.r_order_date) order_day,t2.flights_segment_name, count(1) tktnum
  from cust.cq_youhui_policy_main@to_air yp
  join cust.cq_order_youhui_detail@to_air yd on yd.youhui_id = yp.id
  join cqsale.cq_order_head@to_air t1 on t1.flights_order_head_id =
                                         yd.flights_order_head_id
  left join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where yp.yh_ret_time = 1 --立减
   and yp.seg_lc_type = 2 --往返
   and t1.flag_id in (3, 5, 40, 41,7,11,12)
   and t1.whole_flight like '9C%'
   and t1.r_flights_date >= to_date('2021-06-25','yyyy-mm-dd')-7
   and t1.r_order_date >= to_date('2021-06-25','yyyy-mm-dd')
   and t1.r_order_date < trunc(sysdate)
 group by trunc(t1.r_order_date),t2.flights_segment_name;

 ------375、新航线

--航线--对应航段客公里/座公里

select dim2.wf_city_name,t1.flight_segment,sum(t1.checkin_mile) 客公里,sum(t1.checkin_s_mile) 座公里,
sum(t1.checkin_mile)/sum(t1.checkin_s_mile)
 from dw.bi_tbl_plf t1
 left join (
 select dim1.route_name,dim1.wf_city_name
  from dw.dim_segment_type dim1
  group by dim1.route_name,dim1.wf_city_name)dim2  on t1.flight_segment=dim2.route_name
 where t1.flight_date=to_date('2021-07-17','yyyy-mm-dd')
 group by rollup(dim2.wf_city_name,t1.flight_segment);
 

--实际包销比例

select dim2.wf_city_name,t1.route_name,sum(t1.bax_num) baxnum,sum(t1.totalnum) totalnum,sum(t1.plan) planum,
sum(t1.bax_num)/sum(t1.totalnum) bx_percent
 from hdb.recent_flights_cost t1
  left join (
 select dim1.route_name,dim1.wf_city_name
  from dw.dim_segment_type dim1
  group by dim1.route_name,dim1.wf_city_name)dim2  on t1.route_name=dim2.route_name
  where t1.total_cost>0
   and  t1.flight_date>=trunc(sysdate)-8
   and t1.flight_date< trunc(sysdate)-1
   and t1.checkin_num>0
group by rollup(dim2.wf_city_name,t1.route_name)
 
 

 
 --航班班期
 --获取的是后后一周的班期及计划量（未取消的数据）
 
 select *
 from(
 select h2.wf_city_name,h2.route_name,h2.banqi,sum(h2.plannum) planum
  from(
 select h1.wf_city_name,h1.route_name,h1.plannum,
 listagg(h1.weeknum,'') WITHIN GROUP ( order by h1.weeknum)over(partition by h1.wf_city_name,h1.route_name) banqi
 from(
 select t2.wf_city_name,t1.route_name,to_char(t1.flight_date-1,'d')weeknum,suM(t1.oversale) plannum
  from dw.da_flight t1
  left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
  where t1.flight_date>=trunc(sysdate)+7
    and t1.flight_date<  trunc(sysdate)+14
    and t1.flag=0
    and t1.company_id=0
    group by t2.wf_city_name,t1.route_name,to_char(t1.flight_date-1,'d'))h1
    )h2
    group by rollup(h2.wf_city_name,h2.route_name),h2.banqi
    )
    where not (wf_city_name is null and route_name is null and banqi is not null);


---------------------------------------------------------------20210720---------------------------------------------------------
 ------376、困难航线对应的数据参照


--航线--对应航段客公里/座公里

select dim2.wf_city_name,t1.flight_segment,sum(t1.checkin_mile) 客公里,sum(t1.checkin_s_mile) 座公里
 from dw.bi_tbl_plf t1
 left join (
 select dim1.route_name,dim1.wf_city_name
  from dw.dim_segment_type dim1
  group by dim1.route_name,dim1.wf_city_name)dim2  on t1.flight_segment=dim2.route_name
 where t1.flight_date=to_date('2021-07-17','yyyy-mm-dd')
 group by dim2.wf_city_name,t1.flight_segment;
 

--实际包销比例

select dim2.wf_city_name,t1.route_name,sum(t1.bax_num) baxnum,sum(t1.totalnum) totalnum,sum(t1.plan) planum,
sum(t1.bax_num)/sum(t1.totalnum) bx_percent
 from hdb.recent_flights_cost t1
  left join (
 select dim1.route_name,dim1.wf_city_name
  from dw.dim_segment_type dim1
  group by dim1.route_name,dim1.wf_city_name)dim2  on t1.route_name=dim2.route_name
  where t1.total_cost>0
   and  t1.flight_date>=trunc(sysdate)-8
   and t1.flight_date< trunc(sysdate)-1
   and t1.checkin_num>0
group by dim2.wf_city_name,t1.route_name;
 
 

 
 --航班班期
 --获取的是后后一周的班期及计划量（未取消的数据）
 

 select h2.wf_city_name,h2.route_name,h2.banqi,sum(h2.plannum) planum
  from(
 select h1.wf_city_name,h1.route_name,h1.plannum,
 listagg(h1.weeknum,'') WITHIN GROUP ( order by h1.weeknum)over(partition by h1.wf_city_name,h1.route_name) banqi
 from(
 select t2.wf_city_name,t1.route_name,to_char(t1.flight_date-1,'d')weeknum,suM(t1.oversale) plannum
  from dw.da_flight t1
  left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
  where t1.flight_date>=trunc(sysdate)+7
    and t1.flight_date<  trunc(sysdate)+14
    and t1.flag=0
    and t1.company_id=0
    group by t2.wf_city_name,t1.route_name,to_char(t1.flight_date-1,'d'))h1
    )h2
    group by h2.wf_city_name,h2.route_name,h2.banqi;
    
---销售数据 
  
 select dim1.wf_city_name,t2.flights_segment_name,
        case when t1.is_swj>=1 then '商务经济座'
             when t1.EX_CFD6 is not null then '经济座'
             else '普通座' end 座位类型,
        case when t1.seats_name in('P2','P3','P4','P5') then '活动舱位'
             when t6.flights_order_head_id is not null then '优惠'
             when t5.flights_order_head_id is not null then '优惠'
             else '其他舱位' end 营销活动,
        case when t1.seats_name in('B','G','G1','G2') then 'BG'
        when t1.channel in('网站','手机') and dim2.users_id is not null then '线上渠道_代理'
        when t1.channel in('网站','手机') and t1.gate_name like '%易宝%' then '线上渠道_易宝商旅卡'
        when t1.channel in('网站','手机') and t1.gate_name like '%商旅卡%' then '线上渠道_易宝商旅卡'
        when t1.channel in('网站','手机') then '线上渠道纯量'
        when t1.channel in('OTA','旗舰店') then 'OTA'
        else '其他' end 渠道,
        case when dim3.codeno is not null then '绿翼乘机人'
        else '非绿翼乘机人' end 绿翼类型,
        case when t3.age< 2 then '[0,2)'
        when t3.age< 12 then '[2,11]'
        when t3.age< 18 then '[12,17]'
        when t3.age<=24 then '[18,24]'
        when t3.age<=30 then '[25,30]'
        when t3.age<=40 then '[31,40]'
        when t3.age<=50 then '[41,50]'
        when t3.age<=60 then '[51,60]'
        when t3.age>=60 then '60+' end age,
        decode(t3.gender,0,'-',1,'男',2,'女') 性别,
        t3.cust_province,
        t3.cust_city,
        case when t1.ahead_days<=0 then '00'
        when t1.ahead_days<=3 then '01~03'
        when t1.ahead_days<=7 then '04~07'
        when t1.ahead_days<=14 then '08~14'
        when t1.ahead_days<=30 then '15~30'
        when t1.ahead_days<=60 then '31~60'
        when t1.ahead_days>=60 then '60+' end ahead_days,
        count(1) tkt,
        sum(t1.ticket_price) ticket_price,
        sum(t5.use_money) 机票优惠金额,
        sum(t8.bookfee) bookfee,
        sum(t8.fee_bag) fee_bag 
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  left join dw.dim_segment_type dim1 on t2.h_route_id=dim1.h_route_id and t2.route_id=dim1.route_id
  left join dw.da_restrict_userinfo dim2 on t1.client_id=dim2.users_id
  left join(    select tt1.code_type,tt1.code_no codeno
     from stg.c_cq_cust_code tt1
     where tt1.status in(1,9)
     and length(tt1.code_no)>=6     
     group by tt1.code_type,tt1.code_no)dim3 on t1.codetype=dim3.code_type and t1.codeno=dim3.codeno
  left join dw.bi_order_region t3 on t1.flights_order_head_id=t3.flights_order_head_id
  left join dw.da_order_drawback t4 on t1.flights_order_head_id=t4.flights_order_head_id
  left join (select flights_order_head_id,sum(use_money) use_money
from dw.bi_yhq_use
where use_date>=trunc(sysdate)-30
group by flights_order_head_id )t5 on t5.flights_order_head_id=t1.flights_order_head_id
left join stg.c_cq_order_youhui_detail t6 on t1.flights_order_head_id=t6.flights_order_head_id
left join (select t7.flights_order_head_id,sum(t7.book_fee) bookfee,sum(case when t7.xtype_id in(6,10,17) then t7.book_fee
else 0 end) fee_bag
              from dw.fact_other_order_detail t7 
              where t7.flights_date>=trunc(sysdate)-7
                and t7.flights_date< trunc(sysdate)
                and t7.xtype_id not in(24,25,34)
                group by t7.flights_order_head_id                
                )t8 on t1.flights_order_head_id=t8.flights_order_head_id
where t1.flights_date>=trunc(sysdate)-7
 and t1.flights_date< trunc(sysdate)
 and t1.whole_flight like '9C%'
 and t1.seats_name is not null 
 group by dim1.wf_city_name,t2.flights_segment_name,
        case when t1.is_swj>=1 then '商务经济座'
             when t1.EX_CFD6 is not null then '经济座'
             else '普通座' end ,
        case when t1.seats_name in('P2','P3','P4','P5') then '活动舱位'
             when t6.flights_order_head_id is not null then '优惠'
             when t5.flights_order_head_id is not null then '优惠'
             else '其他舱位' end ,
        case when t1.seats_name in('B','G','G1','G2') then 'BG'
        when t1.channel in('网站','手机') and dim2.users_id is not null then '线上渠道_代理'
        when t1.channel in('网站','手机') and t1.gate_name like '%易宝%' then '线上渠道_易宝商旅卡'
        when t1.channel in('网站','手机') and t1.gate_name like '%商旅卡%' then '线上渠道_易宝商旅卡'
        when t1.channel in('网站','手机') then '线上渠道纯量'
        when t1.channel in('OTA','旗舰店') then 'OTA'
        else '其他' end ,
        case when t3.age< 2 then '[0,2)'
        when t3.age< 12 then '[2,11]'
        when t3.age< 18 then '[12,17]'
        when t3.age<=24 then '[18,24]'
        when t3.age<=30 then '[25,30]'
        when t3.age<=40 then '[31,40]'
        when t3.age<=50 then '[41,50]'
        when t3.age<=60 then '[51,60]'
        when t3.age>=60 then '60+' end ,
        decode(t3.gender,0,'-',1,'男',2,'女') ,
        t3.cust_province,
        t3.cust_city,
        case when t1.ahead_days<=0 then '00'
        when t1.ahead_days<=3 then '01~03'
        when t1.ahead_days<=7 then '04~07'
        when t1.ahead_days<=14 then '08~14'
        when t1.ahead_days<=30 then '15~30'
        when t1.ahead_days<=60 then '31~60'
        when t1.ahead_days>=60 then '60+' end,case when dim3.codeno is not null then '绿翼乘机人'
        else '非绿翼乘机人' end;

------------------------------------------------------20210721--------------------------------------------------------------------------
 ------377、

--陇海线：连云港、徐州、郑州、洛阳、西安、宝鸡、兰州                
--京广线：北京、保定、石家庄、安阳、郑州、许昌；武汉、岳阳、长沙、衡阳、韶关、广州                

select trunc(t1.order_day) orderday,
t3.wf_city_name,            
       t2.flights_city_name, 
       case            
         when t1.ahead_days <= 0 then            
          '00'            
         when t1.ahead_days > 0 and t1.ahead_days <= 3 then            
          '1~3'            
         when t1.ahead_days >= 4 and t1.ahead_days <= 7 then            
          '4~7'            
         when t1.ahead_days >= 8 and t1.ahead_days <= 15 then            
          '8~15'            
         when t1.ahead_days >= 16 and t1.ahead_days <= 30 then            
          '16~30'            
         when t1.ahead_days >= 31 and t1.ahead_days <= 60 then            
          '31~60'            
         when t1.ahead_days > 60 then            
          '60+'            
         else            
          null            
       end ahead_days,
       t1.flights_date,      
       to_char(t1.flights_date, 'yyyymm') fm, 
       
sum(case    
             when t1.seats_name is not null then            
1            
             else            
0            
           end) ticket_num,  
       sum(t1.ticket_price) ticket_price
  from dw.fact_order_detail t1            
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id            
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id            
                                  and t2.route_id = t3.route_id  
 where t1.order_day >= trunc(sysdate)-2           
   and t1.order_day < trunc(sysdate)  
   and t1.seats_name not in ('B', 'G1', 'G2', 'G', 'O')            
   and t1.company_id = 0            
   and t1.flag_id in (3, 5, 40, 41)            
   --and t2.flag != 2 
   group by   trunc(t1.order_day),t3.wf_city_name,            
       t2.flights_city_name, 
       case            
         when t1.ahead_days <= 0 then            
          '00'            
         when t1.ahead_days > 0 and t1.ahead_days <= 3 then            
          '1~3'            
         when t1.ahead_days >= 4 and t1.ahead_days <= 7 then            
          '4~7'            
         when t1.ahead_days >= 8 and t1.ahead_days <= 15 then            
          '8~15'            
         when t1.ahead_days >= 16 and t1.ahead_days <= 30 then            
          '16~30'            
         when t1.ahead_days >= 31 and t1.ahead_days <= 60 then            
          '31~60'            
         when t1.ahead_days > 60 then            
          '60+'            
         else            
          null            
       end ,
       t1.flights_date,      
       to_char(t1.flights_date, 'yyyymm');
 
  ---各根据地数据对比
select trunc(t1.order_day) orderday,
case when t2.origincity_name in('上海','石家庄','扬州泰州','兰州','揭阳','宁波','深圳','南昌','沈阳') then t2.origincity_name
else '其他' end,
       case            
         when t1.ahead_days <= 0 then            
          '00'            
         when t1.ahead_days > 0 and t1.ahead_days <= 3 then            
          '1~3'            
         when t1.ahead_days >= 4 and t1.ahead_days <= 7 then            
          '4~7'            
         when t1.ahead_days >= 8 and t1.ahead_days <= 15 then            
          '8~15'            
         when t1.ahead_days >= 16 and t1.ahead_days <= 30 then            
          '16~30'            
         when t1.ahead_days >= 31 and t1.ahead_days <= 60 then            
          '31~60'            
         when t1.ahead_days > 60 then            
          '60+'            
         else            
          null            
       end ahead_days,
       
sum(case    
             when t1.seats_name is not null then            
1
             else            
0
           end) ticket_num,  
       sum(t1.ticket_price) ticket_price
  from dw.fact_order_detail t1            
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id            
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id            
                                  and t2.route_id = t3.route_id  
 where t1.order_day >= trunc(sysdate)-2           
   and t1.order_day < trunc(sysdate)  
   and t1.seats_name not in ('B', 'G1', 'G2', 'G', 'O')            
   and t1.company_id = 0 
   and t2.origincity_name in('上海','石家庄','扬州泰州','兰州','揭阳','宁波','深圳','南昌','沈阳')          
   and t1.flag_id in (3, 5, 40, 41)            
   and t2.flag != 2 
   group by  trunc(t1.order_day) ,
case when t2.origincity_name in('上海','石家庄','扬州泰州','兰州','揭阳','宁波','深圳','南昌','沈阳') then t2.origincity_name
else '其他' end,
       case            
         when t1.ahead_days <= 0 then            
          '00'            
         when t1.ahead_days > 0 and t1.ahead_days <= 3 then            
          '1~3'            
         when t1.ahead_days >= 4 and t1.ahead_days <= 7 then            
          '4~7'            
         when t1.ahead_days >= 8 and t1.ahead_days <= 15 then            
          '8~15'            
         when t1.ahead_days >= 16 and t1.ahead_days <= 30 then            
          '16~30'            
         when t1.ahead_days >= 31 and t1.ahead_days <= 60 then            
          '31~60'            
         when t1.ahead_days > 60 then            
          '60+'            
         else            
          null            
       end
       
    union all
    
    
    select trunc(t1.order_day) orderday,
case when t2.destcity_name in('上海','石家庄','扬州泰州','兰州','揭阳','宁波','深圳','南昌','沈阳') then t2.destcity_name
else '其他' end,
       case            
         when t1.ahead_days <= 0 then            
          '00'            
         when t1.ahead_days > 0 and t1.ahead_days <= 3 then            
          '1~3'            
         when t1.ahead_days >= 4 and t1.ahead_days <= 7 then            
          '4~7'            
         when t1.ahead_days >= 8 and t1.ahead_days <= 15 then            
          '8~15'            
         when t1.ahead_days >= 16 and t1.ahead_days <= 30 then            
          '16~30'            
         when t1.ahead_days >= 31 and t1.ahead_days <= 60 then            
          '31~60'            
         when t1.ahead_days > 60 then            
          '60+'            
         else            
          null            
       end ahead_days,
       
sum(case    
             when t1.seats_name is not null then            
1
             else            
0
           end) ticket_num,  
       sum(t1.ticket_price) ticket_price
  from dw.fact_order_detail t1            
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id            
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id            
                                  and t2.route_id = t3.route_id  
 where t1.order_day >= trunc(sysdate)-2           
   and t1.order_day < trunc(sysdate)  
   and t1.seats_name not in ('B', 'G1', 'G2', 'G', 'O')            
   and t1.company_id = 0   
   and t2.destcity_name in('上海','石家庄','扬州泰州','兰州','揭阳','宁波','深圳','南昌','沈阳')             
   and t1.flag_id in (3, 5, 40, 41)            
   and t2.flag != 2 
   group by  trunc(t1.order_day) ,
case when t2.destcity_name in('上海','石家庄','扬州泰州','兰州','揭阳','宁波','深圳','南昌','沈阳') then t2.destcity_name
else '其他' end,
       case            
         when t1.ahead_days <= 0 then            
          '00'            
         when t1.ahead_days > 0 and t1.ahead_days <= 3 then            
          '1~3'            
         when t1.ahead_days >= 4 and t1.ahead_days <= 7 then            
          '4~7'            
         when t1.ahead_days >= 8 and t1.ahead_days <= 15 then            
          '8~15'            
         when t1.ahead_days >= 16 and t1.ahead_days <= 30 then            
          '16~30'            
         when t1.ahead_days >= 31 and t1.ahead_days <= 60 then            
          '31~60'            
         when t1.ahead_days > 60 then            
          '60+'            
         else            
          null            
       end;

---------------------------------------------------------------20210722---------------------------------------------------------------
 ------378、市商委的数据

select /*+parallel(4) */
hh1.syear 年,hh1.squar 季度,hh1.rank 月度集,
hh1.月度所线上交易额 "01月度所线上交易额",
hh1.月度移动交易额 "02月度移动交易额",
hh1.月度所线上交易额 "07月度网上交易额",
hh1.月度自营交易额 "08月度自营交易额",
hh1.月度线上代理交易额 "09月度线上代理交易额",
hh1.月度B2B交易额 "10月度B2B交易额",
hh1.月度B2C交易额 "11月度B2C交易额",
hh1.月度所线上交易额 "32服务类金额",
hh1.月度主营收入 "34月度主营收入",
hh1.月度辅收收入 "38月度辅收收入",
hh1.月度市内交易额 "39月度市内交易额",
hh1.月度总订单数 "B01-1月度总订单数",
hh1.月度移动订单数 "B01-2月度移动订单数",
hh1.月度所线上交易额/hh2.月度交易额 "B02月度网上交易额占比",
hh1.季度所线上交易额 "01季度所线上交易额",
hh1.季度移动交易额 "02季度移动交易额",
hh1.季度所线上交易额 "07季度网上交易额",
hh1.季度自营交易额 "08季度自营交易额",
hh1.季度线上代理交易额 "09季度线上代理交易额",
hh1.季度B2B交易额 "10季度B2B交易额",
hh1.季度B2C交易额 "11季度B2C交易额",
hh1.季度所线上交易额 "32服务类金额",
hh1.季度主营收入 "34季度主营收入",
hh1.季度辅收收入 "38季度辅收收入",
hh1.季度市内交易额 "39季度市内交易额",
hh1.季度总订单数 "B01-1季度总订单数",
hh1.季度移动订单数 "B01-2季度移动订单数",
hh1.季度所线上交易额/hh2.季度交易额 "B02季度网上交易额占比"
from(
select 
h2.syear,h2.squar,h2.rank,
avg(所有线上交易) 月度所线上交易额,
avg(移动交易) 月度移动交易额,
avg(自营交易额) 月度自营交易额,
avg(线上代理交易额) 月度线上代理交易额,
avg(B2G交易额) 月度B2B交易额,
avg(B2C交易额) 月度B2C交易额,
avg(主营收入) 月度主营收入,
avg(辅收收入) 月度辅收收入,
avg(市内交易额) 月度市内交易额,
avg(总交易订单数) 月度总订单数,
avg(移动交易订单数) 月度移动订单数,

sum(所有线上交易) 季度所线上交易额,
sum(移动交易) 季度移动交易额,
sum(自营交易额) 季度自营交易额,
sum(线上代理交易额) 季度线上代理交易额,
sum(B2G交易额) 季度B2B交易额,
sum(B2C交易额) 季度B2C交易额,
sum(主营收入) 季度主营收入,
sum(辅收收入) 季度辅收收入,
sum(市内交易额) 季度市内交易额,
sum(总交易订单数) 季度总订单数,
sum(移动交易订单数) 季度移动订单数

from(
select h1.*,listagg(smonth,',') within GROUP (order by smonth) over (partition by h1.syear,h1.squar) rank
from(
SELECT to_char(t1.flights_date,'yyyy') syear,
TO_CHAR (t1.flights_date, 'q') squar,TO_CHAR (t1.flights_date, 'yyyymm') smonth,
sum(t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurce_fee+t1.other_fee+t1.other_fy+t1.sx_fy) 所有线上交易,
sum(case when t1.station_id>1 then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurce_fee+t1.other_fee+t1.other_fy+t1.sx_fy else 0 end) 移动交易,
sum(case when t1.channel in('网站','手机','B2G机构客户','B2B代理')
 then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurce_fee+t1.other_fee+t1.other_fy+t1.sx_fy else 0 end) 自营交易额,
sum(case when t1.channel in('旗舰店','OTA')
 then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurce_fee+t1.other_fee+t1.other_fy+t1.sx_fy else 0 end) 线上代理交易额,
 sum(case when t1.channel in('B2G机构客户','B2B代理')
 then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurce_fee+t1.other_fee+t1.other_fy+t1.sx_fy else 0 end) B2G交易额,
sum(case when t1.channel in('旗舰店','OTA','网站','手机')
 then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurce_fee+t1.other_fee+t1.other_fy+t1.sx_fy else 0 end) B2C交易额,
 sum(t1.ticket_price+t1.ad_fy+t1.port_pay+t1.other_fy+t1.sx_fy) 主营收入,
 sum(t1.insurce_fee+t1.other_fee) 辅收收入,
 sum(case when t2.flights_city_name like '%上海%' then t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurce_fee+t1.other_fee+t1.other_fy+t1.sx_fy
 else 0 end) 市内交易额,
 count(distinct t1.flights_order_id) 总交易订单数,
 count( distinct case when t1.station_id>1 then t1.flights_order_id else null end) 移动交易订单数,
 sum(case when t1.channel='网站' then  t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurce_fee+t1.other_fee+t1.other_fy+t1.sx_fy else 0 end) 网站交易额

  FROM DW.FACT_ORDER_DETAIL T1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  WHERE T1.FLIGHTS_DATE>=TO_DATE('2019-07-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2021-04-01','yyyy-mm-dd')
  and t1.company_id=0
  and t2.flag<>2
  and t1.terminal_id<0  
  group by to_char(t1.flights_date,'yyyy'),
TO_CHAR (t1.flights_date, 'q'),TO_CHAR (t1.flights_date, 'yyyymm'))h1)h2
group by h2.syear,h2.squar,h2.rank)hh1
left join(

select 
h2.syear,h2.squar,h2.rank,
avg(总交易额) 月度交易额,
sum(总交易额) 季度交易额
from(
select h1.*,listagg(smonth,',') within GROUP (order by smonth) over (partition by h1.syear,h1.squar) rank
from(
SELECT to_char(t1.flights_date,'yyyy') syear,
TO_CHAR (t1.flights_date, 'q') squar,TO_CHAR (t1.flights_date, 'yyyymm') smonth,
sum(t1.ticket_price+t1.ad_fy+t1.port_pay+t1.insurce_fee+t1.other_fee+t1.other_fy+t1.sx_fy) 总交易额
  FROM DW.FACT_ORDER_DETAIL T1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  WHERE T1.FLIGHTS_DATE>=TO_DATE('2019-07-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2021-04-01','yyyy-mm-dd')
  and t1.company_id=0
  and t2.flag<>2
  group by to_char(t1.flights_date,'yyyy'),
TO_CHAR (t1.flights_date, 'q'),TO_CHAR (t1.flights_date, 'yyyymm'))h1)h2
group by h2.syear,h2.squar,h2.rank
)hh2 on hh1.syear=hh2.syear and hh1.squar=hh2.squar and hh1.rank=hh2.rank;

 ------379、经济座筛选航线出行目的类型数据

 select t3.wf_segment,t.part,count(1)
 from dw.fact_orderhead_trippurpose@to_ods t
 join dw.fact_order_detail t1 on t.flights_order_head_id=t1.flights_order_head_Id
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flag_id=40
   and t1.flights_date>=trunc(sysdate)-14
   and t1.flights_date< trunc(sysdate)
   and t3.wf_segment in('虹桥＝深圳','虹桥＝广州','虹桥＝厦门','浦东＝重庆','虹桥＝石家庄','石家庄＝广州','浦东＝兰州','浦东＝三亚')
   group by t3.wf_segment,t.part;


 ------380、各渠道联系方式有多少是有问题的？？

select to_char(t1.order_day,'yyyymm'),case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end  渠道,
t1.nationflag 航线性质,
case when t1.work_tel is null and t1.r_tel is null then '无联系方式'
when t4.mobilenum>=200 and t5.mobilenum>=200 then '代理联系方式'
when t1.work_tel is null and t5.mobilenum>=200 then '代理联系方式'
when t4.mobilenum>=200 and t1.r_tel is null then '代理联系方式'
else '正常' end 联系方式类型,
case when t6.cust_id is not null then '乘机人已转化会员'
else  '乘机人未转化会员' end 是否已转化成会员,
case when t8.order_head_id is not null then '手机号更换'
else '未进行更换' end 联系方式校对,
count(distinct t1.flights_order_head_id) 机票量
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
 left join dw.da_lyuser t6 on t6.codetype=t1.codetype and t6.codeno=t1.codeno
 left join ( 
 select nvl(h2.r_tel,h1.work_tel) mobile,greatest(h2.mobilenum,h1.mobilenum) mobilenum
 from(
 select tp1.work_tel,count(1) mobilenum
               from dw.fact_order_detail tp1
               where  tp1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and tp1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and tp1.seats_name not in('B','G','G1','G2')
   and tp1.company_id=0
   and tp1.work_tel is not null 
   group by tp1.work_tel)h1
   full outer join (  
   select tp1.r_tel,count(1) mobilenum
               from dw.fact_order_detail tp1
               where  tp1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and tp1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and tp1.seats_name not in('B','G','G1','G2')
   and tp1.company_id=0
   and tp1.r_tel is not null 
   group by tp1.r_tel
   ) h2 on h1.work_tel=h2.r_tel
   )t4 on t1.work_tel=t4.mobile
    left join ( 
 select nvl(h2.r_tel,h1.work_tel) mobile,greatest(h2.mobilenum,h1.mobilenum) mobilenum
 from(
 select tp1.work_tel,count(1) mobilenum
               from dw.fact_order_detail tp1
               where  tp1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and tp1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and tp1.seats_name not in('B','G','G1','G2')
   and tp1.company_id=0
   and tp1.work_tel is not null 
   group by tp1.work_tel)h1
   full outer join (  
   select tp1.r_tel,count(1) mobilenum
               from dw.fact_order_detail tp1
               where  tp1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and tp1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and tp1.seats_name not in('B','G','G1','G2')
   and tp1.company_id=0
   and tp1.r_tel is not null 
   group by tp1.r_tel
   ) h2 on h1.work_tel=h2.r_tel
   )t5 on t1.r_tel=t5.mobile
left join(select distinct t.order_head_id
from cqsale.cq_black_phone_change_log@to_air t
where t.new_tel in(
select new_tel
 from cqsale.cq_black_phone_change_log@to_air t1
 where t1.old_tel <> t1.new_tel
 group by new_tel
 having count(1)>100))t8 on t1.flights_order_head_id=t8.order_head_id
 where t1.order_day>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.order_day< to_date('2021-07-01','yyyy-mm-dd')
   and t1.seats_name not in('B','G','G1','G2')
   and t1.company_id=0
 group by to_char(t1.order_day,'yyyymm'),case when t1.channel in('手机','网站') and t1.gate_name like '%易宝%' then '易宝'
when t1.channel in('手机','网站') and t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.channel in('手机','网站') and t3.users_id is not null  then '代理'
when t1.channel in('手机','网站') then '线上纯量'
when t1.channel in('OTA','旗舰店') then 'OTA'
else 'B2B' end
,case when t1.work_tel is null and t1.r_tel is null then '无联系方式'
when t4.mobilenum>=200 and t5.mobilenum>=200 then '代理联系方式'
when t1.work_tel is null and t5.mobilenum>=200 then '代理联系方式'
when t4.mobilenum>=200 and t1.r_tel is null then '代理联系方式'
else '正常' end,case when t6.cust_id is not null then '乘机人已转化会员'
else  '乘机人未转化会员' end ,
case when t8.order_head_id is not null then '手机号更换'
else '未进行更换' end,
t1.nationflag;


-------381、账号积分余额查询（金额）

select case when points>=20 then 1 
else 0 end,count(1)
from(
select users_id,sum(t1.balance)  points
 from hdb.crm_piont_balance t1
 where t1.orderchannel='trade'
   and t1.validdate>=trunc(sysdate)
   and t1.isvalid=1
   group by users_id)h1
   group by case when points>=20 then 1 
else 0 end;
  


select case when points< 20 then '(0,20)'
when points< 50 then '[20,50)'
when points< 100 then '[50,100)'
when points< 200 then '[100,200)'
when points>=200 then '200+' end,count(1)
from(
select users_id,sum(t1.balance)  points
 from hdb.crm_piont_balance t1
 where t1.orderchannel='trade'
   and t1.validdate>=trunc(sysdate)
   and t1.isvalid=1
   group by users_id)h1
   group by case when points< 20 then '(0,20)'
when points< 50 then '[20,50)'
when points< 100 then '[50,100)'
when points< 200 then '[100,200)'
when points>=200 then '200+' end;

-----------------------------------------------20210728------------------------------------------------------------------
 ------382、新疆航线有哪些？延伸--航班运力监控

  select distinct t1.flights_segment_name
  from dw.da_flight t1
  join hdb.cq_airport t2 on t1.originairport=t2.threecodeforcity
  where t2.province like '%新疆%'
    and t1.flight_date>=trunc(sysdate);


 ------383、退票数据对比

select 
case when trunc(t1.money_date)=trunc(sysdate)-1 then '昨天'
when trunc(t1.money_date)=trunc(sysdate)-2 then '前天'
when trunc(t1.money_date)=trunc(sysdate)-1-7 then '上周二'
when trunc(t1.money_date)=trunc(sysdate)-2-7 then '上周一' end,
t3.wf_segment,t2.flights_segment_name,
case when t1.money_fy=0 then '0元退票'
when t1.money_fy>0 then '非0元退票' end,
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)*24<2 then '[0,2H)'
when (t1.origin_std-t1.money_date)*24<24 then '[2H,24H)'
when (t1.origin_std-t1.money_date)<3 then '[24H,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)>=7 then '7D+' end priod,
case when t1.seats_name like 'P%' then 'P舱'
when t1.seats_name like 'R%' then 'R舱'
when t1.seats_name in('E','U','X','T','Q','N') then 'EUXTQN'
when t1.seats_name in('Y','S','H','V','K','L','M') then 'YSHVKLM'
else '其他' end seattype,nvl(t1.seats_name,'YE') seats_name,
count(1) tkt,
sum(t1.money_fy) money_fy

 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.money_date>=trunc(sysdate)-2-7
   and t1.money_date< trunc(sysdate)
   and t2.company_id=0
   and trunc(t1.money_date) in(trunc(sysdate)-1,trunc(sysdate)-2,trunc(sysdate)-1-7,trunc(sysdate)-2-7)
   group by case when trunc(t1.money_date)=trunc(sysdate)-1 then '昨天'
when trunc(t1.money_date)=trunc(sysdate)-2 then '前天'
when trunc(t1.money_date)=trunc(sysdate)-1-7 then '上周二'
when trunc(t1.money_date)=trunc(sysdate)-2-7 then '上周一' end,
t3.wf_segment,t2.flights_segment_name,
case when t1.money_fy=0 then '0元退票'
when t1.money_fy>0 then '非0元退票' end,
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)*24<2 then '[0,2H)'
when (t1.origin_std-t1.money_date)*24<24 then '[2H,24H)'
when (t1.origin_std-t1.money_date)<3 then '[24H,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)>=7 then '7D+' end ,
case when t1.seats_name like 'P%' then 'P舱'
when t1.seats_name like 'R%' then 'R舱'
when t1.seats_name in('E','U','X','T','Q','N') then 'EUXTQN'
when t1.seats_name in('Y','S','H','V','K','L','M') then 'YSHVKLM'
else '其他' end ,nvl(t1.seats_name,'YE');

 ------384、

select  case when disyear=5 then '每年都飞行的旅客'
when disyear=1 then '仅在其中一年飞行的旅客'
else '其他旅客' end,
h1.type,
h1.province,
count(1),
sum(pc)

from(
select t1.codeno,
      
       case
         when t3.province in ('北京市', '天津市', '河北省', '山东省', '江苏省', '上海市', '浙江省',
               '福建省', '广东省', '海南省') then
          '东部'
         when t3.province in ('山西省', '安徽省', '江西省', '河南省', '湖北省', '湖南省') then
          '中部'
       
         when t3.province in ('陕西省', '甘肃省', '青海省', '宁夏', '新疆', '四川省', '重庆市',
               '云南省', '贵州省', '西藏', '广西省', '内蒙古') then
          '西部'
         when t3.province in ('辽宁省', '吉林省', '黑龙江省') then
          '东北'
         else
          t3.province
       end province,
       case when hdb.getbirthday(t1.codeno)< to_date('1960-01-01','yyyy-mm-dd') then '60前'
       when hdb.getbirthday(t1.codeno)< to_date('1970-01-01','yyyy-mm-dd') then '60后'
       when hdb.getbirthday(t1.codeno)< to_date('1980-01-01','yyyy-mm-dd') then '70后'
       when hdb.getbirthday(t1.codeno)< to_date('1990-01-01','yyyy-mm-dd') then '80后'
       when hdb.getbirthday(t1.codeno)< to_date('2000-01-01','yyyy-mm-dd') then '90后'
       when hdb.getbirthday(t1.codeno)< to_date('2010-01-01','yyyy-mm-dd') then '00后'
       when hdb.getbirthday(t1.codeno)< to_date('2020-01-01','yyyy-mm-dd') then '10后'
       when hdb.getbirthday(t1.codeno)< to_date('2021-01-01','yyyy-mm-dd') then '20后' end type,
        count(distinct to_char(t1.flights_date, 'yyyy')) disyear,
        count(1) pc

  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  join dw.adt_region_code t3 on substr(t1.codeno, 1, 6) = t3.regioncode
 where t1.flights_date >= to_date('2016-01-01', 'yyyy-mm-dd')
   and t1.flights_date <= to_date('2020-12-31', 'yyyy-mm-dd')
   and t1.seats_name is not null
   and length(t1.codeno) in (15, 18)
   and t1.codetype = 1
  group by t1.codeno,      
       case
         when t3.province in ('北京市', '天津市', '河北省', '山东省', '江苏省', '上海市', '浙江省',
               '福建省', '广东省', '海南省') then
          '东部'
         when t3.province in ('山西省', '安徽省', '江西省', '河南省', '湖北省', '湖南省') then
          '中部'
       
         when t3.province in ('陕西省', '甘肃省', '青海省', '宁夏', '新疆', '四川省', '重庆市',
               '云南省', '贵州省', '西藏', '广西省', '内蒙古') then
          '西部'
         when t3.province in ('辽宁省', '吉林省', '黑龙江省') then
          '东北'
         else
          t3.province
       end,
       case when hdb.getbirthday(t1.codeno)< to_date('1960-01-01','yyyy-mm-dd') then '60前'
       when hdb.getbirthday(t1.codeno)< to_date('1970-01-01','yyyy-mm-dd') then '60后'
       when hdb.getbirthday(t1.codeno)< to_date('1980-01-01','yyyy-mm-dd') then '70后'
       when hdb.getbirthday(t1.codeno)< to_date('1990-01-01','yyyy-mm-dd') then '80后'
       when hdb.getbirthday(t1.codeno)< to_date('2000-01-01','yyyy-mm-dd') then '90后'
       when hdb.getbirthday(t1.codeno)< to_date('2010-01-01','yyyy-mm-dd') then '00后'
       when hdb.getbirthday(t1.codeno)< to_date('2020-01-01','yyyy-mm-dd') then '10后'
       when hdb.getbirthday(t1.codeno)< to_date('2021-01-01','yyyy-mm-dd') then '20后' end)h1
    group by  case when disyear=5 then '每年都飞行的旅客'
when disyear=1 then '仅在其中一年飞行的旅客'
else '其他旅客' end,
h1.type,
h1.province;

http://www.stats.gov.cn/ztjc/zthd/sjtjr/dejtjkfr/tjkp/201106/t20110613_71947.htm              
东部  中部  西部  东北        
北京市  山西省  陕西省  辽宁省        
天津市  安徽省  甘肃省  吉林省        
河北省  江西省  青海省  黑龙江省        
山东省  河南省  宁夏          
江苏省  湖北省  新疆          
上海市  湖南省  四川省          
浙江省          重庆市          
福建省          云南省          
广东省          贵州省          
海南省          西藏          
                广西省          
                内蒙古          
              

----------------------------------------------------20210729---------------------------------------------------------------------
 ------385、去哪儿销售数据（含退票）

select t1.order_day,count(1)
 from dw.fact_recent_order_detail t1
 where t1.sub_channel='去哪儿'
 and t1.order_day>=to_date('2019-07-17','yyyy-mm-dd')
 and t1.order_day<=to_date('2019-07-31','yyyy-mm-dd')
 and t1.seats_name is not null 
 group by t1.order_day;


 ------386、支付宝小程序销售数据统计

select to_char(t1.createtime,'yyyymm') 订单月,trunc(t1.createtime) 订单日期,count(distinct t1.orderno) 下单量,
count(distinct t2.flights_order_id) 支付订单量,
count(distinct case when t2.flag_id in(3,5,40,41) then t2.flights_order_id else null end) 已售订单量,
count(distinct case when t2.flag_id in(3,5,40,41) then t2.flights_order_head_id else null end) 已售机票量
 from hdb.cms_app_aliminiorder t1
left join dw.fact_recent_order_detail t2 on t1.orderno=t2.flights_order_id
where t1.createtime>=to_date('2020-03-01','yyyy-mm-dd')
group by trunc(t1.createtime) ;

-----------------------------------------------20210730--------------------------------------------------------------------------
 ------387、基地及对应的基地飞机架数

   select h1.ad_name,h1.ba_id,h1.base_id,h1.aplan_num,h1.s_date,h1.e_date
   from(
  select t2.ad_name,t1.*,row_Number()over(partition by t2.ad_name,t1.base_id order by s_date desc)xid
   from cqsale.CQ_BASE_APLAN@to_air t1
   join cqsale.cq_cost_adinfo@to_air t2  on t1.BASE_ID=t2.ad_id
   where t1.flag=1)h1
   where h1.xid=1 
   and aplan_num >0;

---每天有哪些基地存在，基地对应的飞机架数对应表
   select distinct h1.datetime,h2.*
 from dw.dim_contrast_date h1
 left join(
 select t2.ad_name,t1.ba_id,t1.base_id,t1.aplan_num,t1.e_date,t1.s_date,
 lead(t1.s_date, 1, null) over (partition by t2.ad_name,t1.base_id order by t1.s_date) next_date
   from cqsale.CQ_BASE_APLAN@to_air t1
   join cqsale.cq_cost_adinfo@to_air t2  on t1.BASE_ID=t2.ad_id
   where t1.flag=1
   /*and aplan_num > 0*/)h2 on h1.datetime>=h2.s_date and h1.datetime< nvl(h2.next_date,h1.datetime+1)
   where h1.datetime>=to_date('2005-07-18','yyyy-mm-dd')
   and h1.datetime< trunc(sysdate)+365
   and h2.ad_name ='大阪';

----每天的基地数量(数据从2012年开始)
select  h2.datetime,count(distinct h2.base_id),count(distinct case when h2.aplan_num>0 then h2.base_id else null end)
from(
select distinct h1.datetime,h2.*
 from dw.dim_contrast_date h1
 left join(
 select t2.ad_name,t1.ba_id,t1.base_id,t1.aplan_num,t1.e_date,t1.s_date,
 lead(t1.s_date, 1, null) over (partition by t2.ad_name,t1.base_id order by t1.s_date) next_date
   from cqsale.CQ_BASE_APLAN@to_air t1
   join cqsale.cq_cost_adinfo@to_air t2  on t1.BASE_ID=t2.ad_id
   where t1.flag=1
   /*and aplan_num > 0*/)h2 on h1.datetime>=h2.s_date and h1.datetime< nvl(h2.next_date,h1.datetime+1)
   where h1.datetime>=to_date('2005-07-18','yyyy-mm-dd')
   and h1.datetime< trunc(sysdate)+365)h2
   group by h2.datetime;



 ------388、代理购买行李的购买率 （二次购买率5.95% 最近7天的数据，一次基本上为0）

select t1.flights_date,count(1),count(distinct t2.flights_order_head_id),count(distinct case when t2.pay_together=0 then t2.flights_order_head_id
    else null end )
      from dw.fact_order_detail t1
    left   join dw.fact_other_order_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id and  t2.xtype_id in(6,10,17)
    left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
        where t1.flights_date>=trunc(sysdate)-7
        and t1.flights_date< trunc(sysdate)
        and t1.channel in('网站','手机')
        and t1.is_swj=0
        and t1.ex_cfd6 is null 
        and t1.company_id=0
        and (t1.pay_gate in(15,29,31) /*or   t3.users_id is not null*/)
        group by t1.flights_date;


 ------389、 


 /*我有时做每个季度简报或半年简报，经常询问这几个的更新数据：在册飞机架数、基地数、在飞航线数（国际、国内）、
客座率及同比、利用率及同比、正常率及同比、连续无人为责任事故征候的月数。看是否合适做报表，谢谢！*/


select h1.syear,h1.flightmonth,h1.airplane_normal,h1.day_num,h1.total_round_time,h1.on_flight_count,h1.normal_fnum,h1.plan_fnum,
h2.checkin_mile,h2.checkin_s_mile,h2.gn_mile,h2.gn_smile,h2.gj_mile,h2.gj_smile,
h3.route_num,h3.gn_routenum,h3.gj_routenum

from(
select substr(t1.flight_month,1,4) syear,t1.flight_month flightmonth,t1.airplane_normal,t1.day_num,t1.total_round_time,t1.on_flight_count,
t1.normal_fnum,t1.plan_fnum
 from hdb.foc_flight_statistics t1
 where t1.flight_month>='2018-01'
   and t1.flight_month<=to_char(add_months(last_day(trunc(sysdate))+1,-2),'yyyy-mm'))h1

left join( 
 select to_char(T1.FLIGHT_DATE,'yyyy') syear,to_char(T1.FLIGHT_DATE,'yyyy-mm') flightmonth,
        suM(t1.checkin_mile) checkin_mile,sum(t1.checkin_s_mile)  checkin_s_mile,
        sum(case when t1.nation_flag=1 then t1.checkin_mile else 0 end) gn_mile,
        sum(case when t1.nation_flag=1 then t1.checkin_s_mile else 0 end) gn_smile,
        sum(case when t1.nation_flag in(2,3) then t1.checkin_mile else 0 end) gj_mile,
        sum(case when t1.nation_flag in(2,3) then t1.checkin_s_mile else 0 end) gj_smile        
  from dw.bi_tbl_plf t1
  where t1.flight_date>=to_date('2018-01-01','yyyy-mm-dd')
    and t1.flight_date< add_months(last_day(trunc(sysdate))+1,-1)
    and t1.checkin_mile>0
    and t1.checkin_s_mile>0
    group by to_char(T1.FLIGHT_DATE,'yyyy') ,to_char(T1.FLIGHT_DATE,'yyyy-mm')
    )h2 on h1.syear=h2.syear and h1.flightmonth=h2.flightmonth  
left join (  
  
  select to_char(T1.FLIGHT_DATE,'yyyy') syear,to_char(T1.FLIGHT_DATE,'yyyy-mm') flightmonth,
         count(distinct t2.wf_city_name) route_num,
         count(distinct case when t1.root_nation_flag=1 then t2.wf_city_name else null end) gn_routenum,
         count(distinct case when t1.root_nation_flag in(2,3) then t2.wf_city_name else null end) gj_routenum
    from dw.da_flight t1
    join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
    where t1.flight_date>=to_date('2018-01-01','yyyy-mm-dd')
    and t1.flight_date< add_months(last_day(trunc(sysdate))+1,-1)
    and t1.flag=0
    and t1.company_id=0
    group by to_char(T1.FLIGHT_DATE,'yyyy') ,to_char(T1.FLIGHT_DATE,'yyyy-mm')
    )h3 on h1.syear=h3.syear and h1.flightmonth=h3.flightmonth;
    

----------------------------------------------------------20210804------------------------------------------------

 ------390、

select distinct t1.originairport||'-'||t1.destairport,t1.flights_segment_name
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)
 and t1.flag=0
 and t1.nationflag='国内'
 and t1.company_id=0;



 ------391、基地数据统计

select *
 from stg.s_cq_cost_adinfo 
 where AD_TYPE=3
 and AD_FLAG=1
 
 
 select *
  from dba_col_comments@to_air
  where comments like '%基地%'
  
  select h1.ad_name,h1.ba_id,h1.base_id,h1.aplan_num,h1.s_date,h1.e_date
   from(
  select t2.ad_name,t1.*,row_Number()over(partition by t2.ad_name,t1.base_id order by s_date desc)xid
   from cqsale.CQ_BASE_APLAN@to_air t1
   join cqsale.cq_cost_adinfo@to_air t2  on t1.BASE_ID=t2.ad_id
   where t1.flag=1)h1
   where h1.xid=1 
   and aplan_num >0;
   

select  --h2.datetime,count(distinct h2.base_id),count(distinct case when h2.aplan_num>0 then h2.base_id else null end)
*
from(
select distinct h1.datetime,h2.*
 from dw.dim_contrast_date h1
 left join(
 select t2.ad_name,t1.ba_id,t1.base_id,t1.aplan_num,t1.e_date,t1.s_date,
 lead(t1.s_date, 1, null) over (partition by t2.ad_name,t1.base_id order by t1.s_date) next_date
   from cqsale.CQ_BASE_APLAN@to_air t1
   join cqsale.cq_cost_adinfo@to_air t2  on t1.BASE_ID=t2.ad_id
   where t1.flag=1
   /*and aplan_num > 0*/)h2 on h1.datetime>=h2.s_date and h1.datetime< nvl(h2.next_date,h1.datetime+1)
   where h1.datetime>=to_date('2005-07-18','yyyy-mm-dd')
   and h1.datetime< trunc(sysdate)+365
   )h2
   where h2.aplan_num>=3
   and h2.ad_name='成都'
   group by h2.datetime;

-----------------------------------------------------------20210805----------------------------------------------------------------

 ------392、金银卡-原生\临时

select t1.memberlevelid,case when t1.AUTOMEMBERLEVELID< t1.memberlevelid then '临时等级'
when t1.AUTOMEMBERLEVELID=t1.memberlevelid then '自动等级' end,count(1)
,count(1)
from dw.da_user_level t1
where t1.memberlevelid>=3
and MEMBEREXPIREDATE>=trunc(sysdate)
group by t1.memberlevelid,case when t1.AUTOMEMBERLEVELID< t1.memberlevelid then '临时等级'
when t1.AUTOMEMBERLEVELID=t1.memberlevelid then '自动等级' end

-------------------------------------------------------20210811-------------------------------------------------------------------------
 ------393、服务-航班状态匹配

select to_char(t1.flight_date,'yyyymmdd')||t1.flight_no,min(t1.flag)
 from dw.da_flight t1
 left join anl.temp_feng_0811@to_dds t2 on to_char(t1.flight_date,'yyyymmdd')||t1.flight_no=t2.flightno
 where t1.flight_date>=trunc(sysdate)-365*3
 
 group by to_char(t1.flight_date,'yyyymmdd')||t1.flight_no;

 ------394、服务退票核对

select t1.flights_order_id||t1.codeno||to_char(t1.origin_std,'yyyymmdd'),t1.money_fy
from dw.da_order_drawback t1
where t1.flights_order_id||t1.codeno||to_char(t1.origin_std,'yyyymmdd') in('YBUOAF13013319860220032420210825',
'YFSNAW14270220000819003020210805',
'YGNVQX23082219921103256X20210808',
'YEMDMA13302919760811183020210827',
'YEOYDF13010319950625031X20210814',
'YDLDEO51021519820402132420210802',
'YDUQCD21010519860521314120210812',
'YEJEBRC5779224320210811',
'YBSUTO13068219870813572120210816',
'YAUXXM14060219990628172420210812',
'YEJPTN22012419780525042920210807',
'YFUDRI44522419760318184120210812',
'YALGHP35010219840717322420210814',
'YBDKMC31010219670409484120210909',
'YGJEWA13013120011208062X20210814',
'YDXFDT31011319770902081020210821',
'YAUAGH31010219580711161120210907',
'YDUAYRE1641052820210809',
'YFVJFRCC415821020210804',
'YBNSIU22010319780709352520210801',
'YCAFWW31010819830813004320210903',
'YECUDPCB412477420210813',
'YGFMGP34262319711222821020210810',
'YEYONH31011519820131066220210808',
'YFNLCS22012419720804021220210816',
'YDITUE62010219820525331X20210807',
'YANNBY41010519980122002520210815',
'YFAZWR13010820061225183120210807',
'YENFXB61011319640901292X20210825',
'YFTTIC31011519830325095520210818',
'YGTOAA32032119930223023620210808',
'YGFSSV51152719900916672820210805',
'YFVBUXCB393624220210807',
'YDOWBI22028119910506101220210803',
'YDWMAQ41282719800919101720210721',
'YDTLJX62302119990215421120210722',
'YDJCSM15040319720604001220210720',
'YCNNLK21010519820124531520210822',
'YGDYHJ23080219790731032420210813',
'YFWZFS33042119891205004020210803',
'YCXCLB42052619890918022220210806',
'YEAYZY44190019940311588520210814',
'YDYCHZ33072719881205003X20210821',
'YFSIMB62282419880917116120210807',
'YCYYPD32040119900106342X20210806',
'XYAGBJ33068220130116003820210810',
'YEXTFYCC408665520210808',
'YCTOMQ33040219810515004620210814',
'YDRUVU31010419840311086220210808',
'YBOJIK43062320010320224020210809',
'YECAVJ14242419911118502520210807',
'YEBNFK50024319940504248820210808',
'YEBNFK50024319940504248820210808',
'YFBSGK37148219870406033320210804',
'YFBSGK37148219870406033320210804',
'YAHVEY32052019750603302920210821',
'YDSEVJ15010319801127005120210815',
'YDJDHD44050819870806262620210810',
'YCRXPX21010419801122052420210809',
'YAHVEW32052019750603302920210826',
'YFURSO33252519981021672120210807',
'YDIWGZ13042919940520102520210829',
'YDCKFQ33032719930405024720210814',
'YEBTJN31011319741119084120210828',
'YCVOGR32028219950122398420210826',
'YDXFDT31011319741119084120210821',
'YFCBRJ65010319870918062X20210815',
'YDOIOB32108819900906510X20210820',
'YEKKMK21080219881209002420210816',
'YBKGUG32048119880530341420210822',
'YFUSCP50022419921212334620210809',
'YFIOTM36220119800823041520210805',
'XXVFCU31010719830214211920210814',
'YFRKAX37018119981226481X20210802',
'YFGUXK43070319931002686220210731',
'YCSJVD51012920020711312020210818',
'YCSJVD51012920020711312020210818',
'YDBEYF22020219520813481520210805',
'YBQICV31022719820630242720210811',
'YBQICV31022719820630242720210811',
'YFAILV33028220000716824320210814',
'YCMGAP31022719810808241620210815',
'YECAPQ22240519720612182720210815',
'YBSQGG37030320060831542920210808',
'YDBGWA33022719960130272420210821',
'YFGMGD32108820030214450720210805',
'YFKRBT33028220000716824320210809',
'XSCRIH33082519960505622520210805',
'XSCRIH33108119960530306020210805',
'YBQILC31022719810808241620210811',
'YFRZTP13052819970407422120210806',
'YEQWWF52212919991102502620210829',
'YADGQC32028119940923852X20210804',
'YEZONN61011420000110302220210816',
'XTLDZZ33022619950213450320210818',
'YDXFDT31011319770902081020210821',
'YDGCXM33028119930315041720210805',
'XZVVTJ34220119880613182120210819',
'YFBJUE34250119890404482420210818',
'YBPPWQ21040419880101061620210823',
'YFQPZS42062120011209631820210808',
'YETZSH53032819970708002220210803',
'YCHNIT51340119930820086120210806',
'YCZXWS32068219870714326620210805',
'YCMYOS32012119830502002820210821',
'YEXBCP44088219960704506320210817',
'YBOAPV31011220030924524220210804',
'YCDARG34080319751111234X20210819',
'YEVWHK13012319950607002320210804',
'YFQCEQ33072619961031312720210804',
'XZZNBC31010719860203252820210909',
'XZZNBC31010919540130485620210909',
'YFINNC14112219991104012320210805',
'YFTAEX14223419900528282720210807',
'YEOYGO33010519810120004520210820',
'YBWCYH32108819850101002620210815',
'YFBZEL62010419830516052720210806',
'YDNLTZ34118119920922182920210822',
'YFDQRO41010519960613007520210731',
'YFEUOC36230119770816104420210809',
'YDXZHB13062820010525002820210803',
'YEKQFX31010819671224202120210812',
'YFBSGK37148219870406033320210804',
'YFBSGK37148219870406033320210804',
'YFQRGC23230320010120504520210818',
'YFQLEL51052120010718791620210801',
'YFOMBP23118119911029211120210805',
'YDFERV62222419920504402420210813',
'YBYCMR21072619830110672020210814',
'YBDDCF31011519871224045920210810',
'YEMPWB12010219890521232620210816',
'YEZHLD36028119940615141820210730',
'YCCATV33038119970213222X20210815',
'YCFOGX51172520020212062920210716',
'YDPTGR34262219650204065020210822',
'YESKOU36072719991126002420210808',
'YCILFU52210119991225241920210810',
'YGBBPY41132319900420383320210807',
'YCUSOQ32108820180921015X20210803',
'YCWZUV44512119930415562120210812',
'YCXBHA44512119930415562120210820',
'YFXXNT31011520140221249X20210803',
'YFXXNT43060219830520115620210803',
'YDIMEO42128119941123292220210802',
'YCGRHC51040219931225142X20210812',
'YFCBZI62010219601015333620210806',
'YFCBZI62010319650701306020210806');

 ------395、易宝停止销售

select 
t1.order_day 日期,
to_char(t1.order_date,'hh24'),
 case when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%春秋商旅%' then '春秋商旅卡'
 when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%易宝%' then '易宝'
 when t1.channel in('网站','手机') then '线上自有'
 when t1.channel in('OTA','旗舰店') then 'OTA' 
else '其他' end 渠道大类,
case when t1.channel in('网站','手机') and t1.station_id in(3,8) then 'IOS'
when t1.channel in('网站','手机') and t1.station_id in(4,9) then '安卓'
else '其他' end ,
count(1)

  from dw.fact_order_detail t1
   join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id 
 where t1.order_day >= trunc(sysdate)-2
   and t1.order_day < trunc(sysdate)
   and t1.seats_name not in('B','G','G1','G2','O')
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
   group by t1.order_day ,
to_char(t1.order_date,'hh24'),
 case when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%春秋商旅%' then '春秋商旅卡'
 when t1.channel in('网站','手机') AND T1.GATE_NAME LIKE '%易宝%' then '易宝'
 when t1.channel in('网站','手机') then '线上自有'
 when t1.channel in('OTA','旗舰店') then 'OTA' 
else '其他' end ,
case when t1.channel in('网站','手机') and t1.station_id in(3,8) then 'IOS'
when t1.channel in('网站','手机') and t1.station_id in(4,9) then '安卓'
else '其他' end;

-----------------------------------------------------------------20210812-----------------------------------------------------------
 ------396、

--查找某个route_name及往返航线的未来航班收入问题

select hp1.ROUTE_NAME,
       hp1.FLIGHT_NO,
       hp1.FLIGHTS_DETAIL,
       hp1.OVERSALE,
       hp1.layout,
       hp1.limit_num,
       hp1.SEGMENT_TYPE,
       hp1.BGO_PLAN,
       hp1.BUSI_PLAN,
       hp1.INCOME,
       hp1.TOINCOME,
       hp1.BUSINUM,
       hp1.BGONUM,
       hp1.TKTNUM,
       hp1.TICKET_PRICE,
       hp1.PRICE,
       hp1.FTNUM,
       hp1.JTNUM,
       hp1.ROUND_TIME,
       hp1.SMILE,
       hp1.TAX_FEE,
       hp1.TOLINCOME,
       hp1.JTAX_FEE,
       hp1.JTOLINCOME,
       case
         when hp1.segment_type = 0 then
          nvl(hp1.var_cost, hp1.ROUND_TIME * hp2.vari_cost)
         else
          null
       end var_cost,
       case
         when hp1.segment_type = 1 then
          nvl(hp1.JTVAR_COST, hp1.ROUND_TIME * hp2.vari_cost)
         else
          null
       end JTVAR_COST,
       hp1.stype
from(
select h.*,
               nvl(nvl(nvl(tb1.round_time, tb2.round_time), tb3.round_time),
                   tb4.round_time) * h.ftnum round_time, --飞行小时
               nvl(nvl(nvl(tb1.smile, tb2.smile), tb3.smile), tb4.smile) *
               h.ftnum smile,
               nvl(nvl(tb1.tax_fee, tb2.tax_fee),
                   nvl(sb1.tax_fee, sb2.tax_fee)) tax_fee, --税费
               nvl(nvl(tb1.tolincome, tb2.tolincome),
                   nvl(sb1.tolincome, sb2.tolincome)) tolincome, --总收入
               nvl(tb3.jtax_fee, sb3.jtax_fee) jtax_fee,
               nvl(tb3.jtolincome, sb3.jtolincome) jtolincome,
               nvl(nvl(tb1.var_cost, tb2.var_cost),
                   nvl(sb1.var_cost, sb2.var_cost)) * h.ftnum var_cost,
               nvl(tb3.var_cost, sb3.var_cost) * h.jtnum jtvar_cost,
               tb5.stype
          from (select ts.route_name,
                       ts.flight_no,
                       ts.flight_no || '  ' ||
                       to_char(ts.origin_std, 'hh24mi') || '/' ||
                       to_char(ts.dest_sta, 'hh24mi') flights_detail,
                       sum(ts.oversale) oversale,
                       sum(ts.limit_num) limit_num,
                       sum(ts.layout) layout,
                       case
                         when ts.segment_type in ('经停AC段') then
                          1
                         else
                          0
                       end segment_type,
                       sum(ts.bgo_plan) bgo_plan,
                       sum(ts.busi_plan) busi_plan,
                       sum(ts.income) income,
                       sum(ts.toincome) toincome,
                       sum(ts.businum) businum,
                       sum(ts.bgonum) bgonum,
                       sum(ts.tktnum) tktnum,
                       sum(ts.ticket_price) ticket_price,
                       sum(ts.price) price,
                       count(distinct ts.segment_head_id) ftnum,
                       sum(case
                             when ts.segment_type in ('经停AC段') then
                              1
                             else
                              0
                           end) jtnum
                  from (select f.segment_head_id,
                               f.flight_date,
                               f.flights_segment_name,
                               nvl(t3.limitnum, 0) limit_num,
                               f.segment_code,
                               f.segment_type,
                               t1.wf_segment_name route_name,
                               f.flight_no,
                               f.origin_std,
                               f.dest_sta,
                               f.oversale,
                               case
                                 when f.oversale = 0 and f.flag = 1 then
                                  0
                                 else
                                  case
                                 when f.segment_type like '%经停%' then
                                  f.oversale + nvl(limitnum, 0)
                                 else
                                  f.layout
                               end end layout,
                               f.bgo_plan - f.o_plan bgo_plan,
                               f.oversale - f.bgo_plan + f.o_plan busi_plan,
                               nvl(t.price, 0) price,
                               nvl(t.ticket_price, 0) ticket_price,
                               nvl(t.ad_fy, 0) ad_fy,
                               nvl(t.income, 0) + nvl(t2.huoincome, 0) * 0.94 income,
                               nvl(t.toincome, 0) + nvl(t2.huoincome, 0) toincome,
                               nvl(t.businum, 0) businum,
                               nvl(t.bgonum, 0) bgonum,
                               nvl(tktnum, 0) tktnum,
                               nvl(fzfee, 0) fzfee
                          from dw.da_flight f
                          left join (select t.segment_head_id,
                                           sum(f.price) price,
                                           sum(t.ticket_price * t.r_com_rate) ticket_price,
                                           sum(t.ad_fy * t.r_com_rate) ad_fy,
                                           sum(case
                                                 when f.nationflag = '国内' then
                                                  (t.ticket_price + t.ad_fy) *
                                                  t.r_com_rate * 0.9174
                                                 when f.nationflag <> '国际' then
                                                  (t.ticket_price + t.ad_fy) *
                                                  t.r_com_rate
                                                 else
                                                  (t.ticket_price + t.ad_fy) *
                                                  t.r_com_rate
                                               end) income,
                                           sum((t.ticket_price + t.ad_fy) *
                                               t.r_com_rate) toincome,
                                           sum(case
                                                 when t.seats_name not in
                                                      ('B', 'G', 'G1', 'G2') then
                                                  1
                                                 else
                                                  0
                                               end) businum,
                                           sum(case
                                                 when t.seats_name in
                                                      ('B', 'G', 'G1', 'G2') then
                                                  1
                                                 else
                                                  0
                                               end) bgonum,
                                           count(1) tktnum,
                                           sum((t.insurance_fee + t.other_fee) *
                                               t.r_rate) fzfee
                                      from cqsale.cq_order_head@to_air t
                                      join dw.da_flight f on t.segment_head_id =
                                                             f.segment_head_id
                                     where t.seats_name is not null
                                       and t.flag_id in (3, 5, 40, 41)
                                       and t.whole_flight like '9C%'
                                       and t.r_flights_date >= trunc(sysdate)
                                       and t.r_flights_date >=
                                           to_date('2021-08-12', 'yyyy-mm-dd') - 1
                                       and t.r_flights_date <=
                                           to_date('2021-08-12', 'yyyy-mm-dd') + 1
                                     group by t.segment_head_id) t on f.segment_head_id =
                                                                      t.segment_head_id
                          left join dw.dim_segment_type t1 on f.route_id =
                                                              t1.route_id
                                                          and f.h_route_id =
                                                              t1.h_route_id
                          left join stg.wb_freight_charter t2 on f.flight_date =
                                                                 t2.flight_date
                                                             and f.flight_no =
                                                                 t2.flight_no
                                                             and f.flights_segment_name =
                                                                 t2.flights_segment_name
                          left join (SELECT segment_head_id, COUNT(1) limitnum
                                      FROM cqsale.CQ_AIRCREW@to_air T
                                     WHERE T.STATUS IN (1, 2)
                                       and t.flights_date >= trunc(sysdate)
                                     group by segment_head_id) t3 on f.segment_head_id =
                                                                     t3.segment_head_id
                         where f.flight_date >=
                               to_date('2021-08-12', 'yyyy-mm-dd')
                           and f.flight_date <=
                               to_date('2021-08-12', 'yyyy-mm-dd')
                           and f.flag <> 2
                 
                           and f.flight_date >= trunc(sysdate)
                           and f.company_id = 0
                       ) ts
  
               
                
                
                 where 1 = 1
           
                 group by route_name,
                          flight_no,
                          flight_no || '  ' || to_char(origin_std, 'hh24mi') || '/' ||
                          to_char(dest_sta, 'hh24mi'),
                          case
                            when segment_type in ('经停AC段') then
                             1
                            else
                             0
                          end) h
        --直飞航线 航段+航班号+起飞时间
          left join (select t1.wf_segment_name route_name,
                           f.flight_no,
                           f.flight_no || '  ' ||
                           to_char(f.origin_std, 'hh24mi') || '/' ||
                           to_char(f.dest_sta, 'hh24mi') flights_detail,
                           avg(ROUND_TIME) round_time,
                           sum(t.tax_fee) tax_fee,
                           sum(t.total_income) tolincome,
                           avg(t.vari_cost) var_cost,
                           avg(t.checkin_s_mile) smile
                      from hdb.recent_flights_cost t
                      join dw.da_flight f on f.segment_head_id =
                                             t.segment_head_id
                      join dw.dim_segment_type t1 on f.route_id =
                                                     t1.route_id
                                                 and f.h_route_id =
                                                     t1.h_route_id
                     where f.flag != 2
                       and t.flight_no like '9C%'
                       and t.total_cost > 0
                       and t.flight_no not like '%+%'
                          --and t.checkin_mile>0
                       and t.checkin_s_mile > 0
                       and t.qr_flag is null
                       and t.ROUND_TIME > 0
                       and t.flight_date >= trunc(sysdate - 7)
                       and t.flight_date < trunc(sysdate)
                     group by t1.wf_segment_name,
                              f.flight_no,
                              f.flight_no || '  ' ||
                              to_char(f.origin_std, 'hh24mi') || '/' ||
                              to_char(f.dest_sta, 'hh24mi')) tb1 on h.route_name =
                                                                    tb1.route_name
                                                                and h.flights_detail =
                                                                    tb1.flights_detail
        --- 直飞航线 航班号+航段轮档小时
          left join (select t1.wf_segment_name route_name,
                           f.flight_no,
                           avg(t.round_time) round_time,
                           sum(t.tax_fee) tax_fee,
                           sum(t.total_income) tolincome,
                           avg(t.vari_cost) var_cost,
                           avg(t.checkin_s_mile) smile
                      from hdb.recent_flights_cost t
                      join dw.da_flight f on f.segment_head_id =
                                             t.segment_head_id
                      join dw.dim_segment_type t1 on f.route_id =
                                                     t1.route_id
                                                 and f.h_route_id =
                                                     t1.h_route_id
                     where f.flag != 2
                       and t.flight_no like '9C%'
                       and t.total_cost > 0
                       and t.flight_no not like '%+%'
                          -- and t.checkin_mile>0
                       and t.checkin_s_mile > 0
                       and t.qr_flag is null
                       and t.round_time > 0
                       and t.flight_date >= trunc(sysdate - 7)
                       and t.flight_date < trunc(sysdate)
                     group by t1.wf_segment_name, f.flight_no) tb2 on h.route_name =
                                                                      tb2.route_name
                                                                  and h.flight_no =
                                                                      tb2.flight_no
        ---经停航线轮档时间
          left join (select t1.wf_segment_name route_name,
                           t.flight_no,
                           1 segment_type,
                           avg(t.round_time) round_time,
                           sum(t.tax_fee) jtax_fee,
                           sum(t.total_income) jtolincome,
                           avg(t.vari_cost) var_cost,
                           avg(t.checkin_s_mile) smile
                      from hdb.recent_flights_cost t
                      join (select distinct h_route_id, wf_segment_name
                             from dw.dim_segment_type) t1 on t.flights_id =
                                                             t1.h_route_id
                      join (select t1.flight_date,
                                  t1.h_route_id,min(t1.flag) minflag,
                                  max(t1.flag) flag
                             from dw.da_flight t1
                            where t1.flight_date >= trunc(sysdate - 7)
                              and t1.flight_date < trunc(sysdate)
                              and t1.segment_type like '%经停%'
                              and t1.company_id = 0
                            group by t1.flight_date, t1.h_route_id) t2 on t.flight_date =
                                                                          t2.flight_date
                                                                      and t.flights_id =
                                                                          t2.h_route_id
                     where t.flight_no like '9C%'
                       and t.total_cost > 0
                       and t.flight_no not like '%+%'
                       and t.checkin_mile > 0
                       and t.checkin_s_mile > 0
                       and t2.minflag*t2.flag = 0
                       and t.qr_flag = 1
                       and t.round_time > 0
                       and t.flight_date >= trunc(sysdate - 7)
                       and t.flight_date < trunc(sysdate)
                     group by t1.wf_segment_name, t.flight_no) tb3 on h.route_name =
                                                                      tb3.route_name
                                                                  and h.segment_type =
                                                                      tb3.segment_type
                                                                  and h.flight_no =
                                                                      tb3.flight_no
        
        --直飞航线 航段+航班号+起飞时间2
          left join (select t1.wf_segment_name route_name,
                           f.flight_no,
                           f.flight_no || '  ' ||
                           to_char(f.origin_std, 'hh24mi') || '/' ||
                           to_char(f.dest_sta, 'hh24mi') flights_detail,
                           avg(ROUND_TIME) round_time,
                           sum(t.tax_fee) tax_fee,
                           sum(t.total_income) tolincome,
                           avg(t.vari_cost) var_cost,
                           avg(t.checkin_s_mile) smile
                      from hdb.recent_flights_cost t
                      join dw.da_flight f on f.segment_head_id =
                                             t.segment_head_id
                      join dw.dim_segment_type t1 on f.route_id =
                                                     t1.route_id
                                                 and f.h_route_id =
                                                     t1.h_route_id
                     where f.flag != 2
                       and t.flight_no like '9C%'
                       and t.total_cost > 0
                       and t.flight_no not like '%+%'
                          --and t.checkin_mile>0
                       and t.checkin_s_mile > 0
                       and t.qr_flag is null
                       and t.ROUND_TIME > 0
                       and t.flight_date >= trunc(sysdate - 15)
                       and t.flight_date < trunc(sysdate)
                     group by t1.wf_segment_name,
                              f.flight_no,
                              f.flight_no || '  ' ||
                              to_char(f.origin_std, 'hh24mi') || '/' ||
                              to_char(f.dest_sta, 'hh24mi')) sb1 on h.route_name =
                                                                    sb1.route_name
                                                                and h.flights_detail =
                                                                    sb1.flights_detail
        --- 直飞航线 航班号+航段轮档小时2
          left join (select t1.wf_segment_name route_name,
                           f.flight_no,
                           avg(t.round_time) round_time,
                           sum(t.tax_fee) tax_fee,
                           sum(t.total_income) tolincome,
                           avg(t.vari_cost) var_cost,
                           avg(t.checkin_s_mile) smile
                      from hdb.recent_flights_cost t
                      join dw.da_flight f on f.segment_head_id =
                                             t.segment_head_id
                      join dw.dim_segment_type t1 on f.route_id =
                                                     t1.route_id
                                                 and f.h_route_id =
                                                     t1.h_route_id
                     where f.flag != 2
                       and t.flight_no like '9C%'
                       and t.total_cost > 0
                       and t.flight_no not like '%+%'
                          --and t.checkin_mile>0
                       and t.checkin_s_mile > 0
                       and t.qr_flag is null
                       and t.round_time > 0
                       and t.flight_date >= trunc(sysdate - 15)
                       and t.flight_date < trunc(sysdate)
                     group by t1.wf_segment_name, f.flight_no) sb2 on h.route_name =
                                                                      sb2.route_name
                                                                  and h.flight_no =
                                                                      sb2.flight_no
        ---经停航线轮档时间2
          left join (select t1.wf_segment_name route_name,
                           t.flight_no,
                           1 segment_type,
                           avg(t.round_time) round_time,
                           sum(t.tax_fee) jtax_fee,
                           sum(t.total_income) jtolincome,
                           avg(t.vari_cost) var_cost,
                           avg(t.checkin_s_mile) smile
                      from hdb.recent_flights_cost t
                      join (select distinct h_route_id, wf_segment_name
                             from dw.dim_segment_type) t1 on t.flights_id =
                                                             t1.h_route_id
                      join (select t1.flight_date,
                                  t1.h_route_id,min(t1.flag) minflag,
                                  max(t1.flag) flag
                             from dw.da_flight t1
                            where t1.flight_date >= trunc(sysdate - 15)
                              and t1.flight_date < trunc(sysdate)
                              and t1.segment_type like '%经停%'
                              and t1.company_id = 0
                            group by t1.flight_date, t1.h_route_id) t2 on t.flight_date =
                                                                          t2.flight_date
                                                                      and t.flights_id =
                                                                          t2.h_route_id
                     where t.flight_no like '9C%'
                       and t.total_cost > 0
                       and t.flight_no not like '%+%'
                       and t.checkin_mile > 0
                       and t.checkin_s_mile > 0
                       and t2.minflag*t2.flag = 0
                       and t.qr_flag = 1
                       and t.round_time > 0
                       and t.flight_date >= trunc(sysdate - 15)
                       and t.flight_date < trunc(sysdate)
                     group by t1.wf_segment_name, t.flight_no) sb3 on h.route_name =
                                                                      sb3.route_name
                                                                  and h.segment_type =
                                                                      sb3.segment_type
                                                                  and h.flight_no =
                                                                      sb3.flight_no
        
        -- 飞行小时统计
          left join (select route_name,
                           flight_no,
                           segment_Type,
                           sum(round_time) round_time,
                           sum(smile) smile
                      from (select tt1.wf_segment_name route_name,
                                   tt.flight_no,
                                   case
                                     when tt.segment_type like '%经停%' then
                                      1
                                     else
                                      0
                                   end segment_Type,
                                   tt.segment_type segmenttype,
                                   avg(round((tt.dest_sta - tt.origin_std) * 24,
                                             2)) round_time,
                                   avg(tt.layout * tt.mile) smile
                              from dw.da_flight tt
                              join dw.dim_segment_type tt1 on tt.route_id =
                                                              tt1.route_id
                                                          and tt.h_route_id =
                                                              tt1.h_route_id
                             where tt.flight_date >=
                                   to_date('2021-08-12', 'yyyy-mm-dd')
                               and tt.flight_date <=
                                   to_date('2021-08-12', 'yyyy-mm-dd')
                               and tt.flag <> 2
                               and tt.company_id = 0
                               and tt.segment_type in
                                   ('实航班', '经停AB段', '经停BC段')
                               and not exists
                             (select 1
                                      from hdb.recent_flights_cost hh1
                                     where hh1.flight_no like '9C%'
                                       and hh1.total_cost > 0
                                          --and hh1.checkin_mile>0
                                       and hh1.checkin_s_mile > 0
                                       and hh1.flight_no not like '%+%'
                                       and hh1.qr_flag = 1
                                       and hh1.flight_date >=
                                           trunc(sysdate - 7)
                                       and hh1.flight_date < trunc(sysdate)
                                       and hh1.route_name = tt.route_name
                                       and hh1.flight_no = tt.flight_no)
                             group by tt1.wf_segment_name,
                                      tt.flight_no,
                                      case
                                        when tt.segment_type like '%经停%' then
                                         1
                                        else
                                         0
                                      end,tt.segment_type)
                     group by route_name, flight_no, segment_Type
                    
                    ) tb4 on h.route_name = tb4.route_name
                         and h.flight_no = tb4.flight_no
                         and h.segment_type = tb4.segment_Type
        
          left join hdb.wb_yunwang_flighttype tb5 on h.flight_no =
                                                     tb5.flight_no
                                                    ) hp1
                                                
                                                    
  left join hdb.v_newsegment_varicost hp2 on hp1.route_name =
                                             hp2.wf_segment_name
                                         and hp1.SEGMENT_TYPE =
                                             hp2.segment_type
                                                 where route_name ='沈阳＝济南＝桂林';

 ------397、退票数据后续审核修改

merge into dw.da_order_drawback d
using (select flights_order_head_id,
              modify_date,
              flights_head_history_id,
              modify_content,
              fy
         from (select flights_order_head_id,
                      modify_date,
                      flights_head_history_id,
                      modify_content,
                      case
                        when instr(modify_content, '改为', 1) > 0 then
                         to_number(split_part(modify_content, '改为', 2))
                        else
                         to_number(split_part(modify_content, '实际费用', 2))
                      end fy,
                      row_number() over(partition by flights_order_head_id order by modify_date desc, flights_head_history_id desc) rid
                 from stg.s_cq_flights_head_history
                where log_code = 7
                  and flights_order_head_id is not null)
        where rid = 1) h
on (h.flights_order_head_id = d.flights_order_head_id and h.modify_date > d.money_date)
when matched then
  update set d.money_fy = h.fy, d.apply_memo = (case
when instr(d.apply_memo, h.flights_head_history_id, 1) > 0 then d.apply_memo else d.apply_memo || ';' || h.flights_head_history_id || ' ' || h.modify_content end);
commit;


 ------398、

 --拉下浦东西安6439 今晚的航班，从8月9日（含9日）虹桥西安、浦东西安变更到这个航班的订单号、姓名，还要区分下是付费还是免费变更

select t1.flights_order_id,t1.sname,
case when t1.money_fy=0 then '免费'
when t1.money_fy>0 then '付费' end 
 from dw.da_order_change t1
 join dw.da_flight t2 on t1.old_segment_id=t2.segment_head_id
 join cqsale.cq_order_head@to_air t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.new_segment_id=1732787
 and t2.flight_date>=to_date('2021-08-09','yyyy-mm-dd')
 and t2.flights_city_name like '上海%西安'
 and t3.flag_id in(3,5,40)
 and t3.segment_head_id=t1.new_segment_id
 
 
 union all
 
 
 select t1.flights_order_id,t1.sname,
case when t1.money_fy=0 then '免费'
when t1.money_fy>0 then '付费' end 
 from dw.da_order_change_today t1
 join dw.da_flight t2 on t1.old_segment_id=t2.segment_head_id
 join cqsale.cq_order_head@to_air t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.new_segment_id=1732787
 and t2.flight_date>=to_date('2021-08-09','yyyy-mm-dd')
 and t2.flights_city_name like '上海%西安'
 and t3.flag_id in(3,5,40)
 and t3.segment_head_id=t1.new_segment_id;

---------------------------------------------------------------20210813-----------------------------------------------------------------------------
 ------399、呼叫中心修改姓名费用
select trunc(t1.money_date),case when t1.money_fy=0 then '免费'
when t1.money_fy>0 then '付费' 
else '免费' end ,
count(1)
 from stg.s_cq_money_report t1
 left join stg.s_cq_terminal t2 on t1.money_terminal=t2.terminal_id
 where memo like '%修改姓名%'
 and t1.money_date>=to_date('2020-01-01','yyyy-mm-dd')
 and t1.money_date< to_date('2021-01-01','yyyy-mm-dd')
 and t1.money_terminal in( 300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) 
 group by 
trunc(t1.money_date),case when t1.money_fy=0 then '免费'
when t1.money_fy>0 then '付费' 
else '免费' end;

select '修改姓名证件号-审计' 日志类型 ,
       t4.terminal 终端,
       trunc(t1.modify_date) 操作日期 ,
       nvl(t1.fy, 0)*nvl(t2.r_com_rate,1)  实际费用,
       nvl(t1.ys_fy, 0)*nvl(t2.r_com_rate,1)  规则费用,
       count(1)
  from stg.s_cq_flights_head_history t1,
       stg.s_cq_order_head           t2,
       stg.s_cq_flights              t3,
       stg.s_cq_terminal             t4,
       stg.s_cq_user                 t5,
       stg.s_cq_order                t6,
       stg.s_cq_flights_segment_head t9
 where t1.flights_order_head_id = t2.flights_order_head_id
   and t2.flights_id = t3.flights_id
   and t1.users_id = t5.users_id
   and t5.terminal_id = t4.terminal_id
   and t6.flights_order_id = t2.flights_order_id
   and t5.company_id = t3.company_id
   and t5.company_id = 0
   and t2.segment_head_id = t9.segment_head_id
   and t9.origin_std >= to_date('2020-01-01', 'yyyy-mm-dd')
   and t9.origin_std < to_date('2021-01-01', 'yyyy-mm-dd')
   and t1.log_code=21
   and t4.terminal_id in( 300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) 
   group by t4.terminal ,
       trunc(t1.modify_date)  ,
       nvl(t1.fy, 0)*nvl(t2.r_com_rate,1)  ,
       nvl(t1.ys_fy, 0)*nvl(t2.r_com_rate,1);

--------------------------------------------------20210814-------------------------------------------------------------------------
 ------400、包销航班数据

select t1.whole_flight ,t1.whole_segment,t1.flights_date,t1.seats_name,t1.ticket_price,count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-10-25','yyyy-mm-dd')
    and t1.flights_date<=to_date('2021-03-31','yyyy-mm-dd')
    and t3.wf_segment in('沈阳＝石家庄','沈阳＝三亚','石家庄＝三亚')
    and t1.flag_id =40
 group by t1.whole_flight ,t1.whole_segment,t1.flights_date,t1.seats_name,t1.ticket_price;


 select t1.whole_flight ,t1.whole_segment,t1.flights_date,t1.seats_name,t1.ticket_price,count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2019-10-25','yyyy-mm-dd')
    and t1.flights_date<=to_date('2021-03-31','yyyy-mm-dd')
    and t3.wf_segment ='三亚＝天津'
    and t1.flag_id =40
 group by t1.whole_flight ,t1.whole_segment,t1.flights_date,t1.seats_name,t1.ticket_price;


 ------401、代理账号数日趋势监控

select trunc(t1.create_date) create_date,t1.feature_value,t2.reg_day,count(1) user_num
  from dw.da_restrict_userinfo t1
  join dw.da_b2c_user t2 on t1.users_id=t2.users_id
  where t1.create_date>=trunc(sysdate)-28
  group by trunc(t1.create_date) ,t1.feature_value,t2.reg_day

-----------------------------------------------------20210817-----------------------------------------------------------------------------
 ------402、代理账号问题查询

select t1.feature_value,count(1)
 from dw.da_restrict_userinfo t1
 where t1.create_date>=to_date('2021-08-06','yyyy-mm-dd')
   and t1.create_date< trunc(sysdate)
   group by t1.feature_value;
   
 
 select t1.work_tel,t1.r_tel,t2.feature_value,t1.gate_name,count(1)
  from dw.fact_order_detail t1
  join dw.da_restrict_userinfo t2 on t1.client_id =t2.users_id
  where t1.order_day>=trunc(sysdate)-7
    and t1.order_day< trunc(sysdate)
    and t2.create_date>=to_date('2021-08-06','yyyy-mm-dd')
   and t2.create_date< trunc(sysdate)
   and t1.channel in('网站','手机')
   group by  t1.work_tel,t1.r_tel,t2.feature_value,t1.gate_name
   having count(1)>=100;

 ------403、FIneBI 航班信息


select decode(t1.company_id,0,'9C',6,'IJ') company,
       t1.flight_date,
       t1.nationflag,
       case when t1.flag=2 then '取消'
       else '正常' end cancel_flag,
       case when t1.root_route_type like '%经停%' then '经停'
       else '直飞' end,
       t2.wf_city_name,
       count(distinct t1.flights_id) flightnum,     
       sum(t1.oversale) plannum,
       sum(t1.superseat_num) swplan,
       sum(t1.mile) mile,
       sum(case when t1.segment_type like '%AC%' then 0 
       else (t1.dest_sta-t1.origin_std)*24 end) flighttime       
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=trunc(sysdate)-28
   and t1.flight_date< trunc(sysdate)+28
   group by decode(t1.company_id,0,'9C',6,'IJ') ,
       t1.flight_date,
       case when t1.flag=2 then '取消'
       else '正常' end ,
       case when t1.root_route_type like '%经停%' then '经停'
       else '直飞' end,
       t2.wf_city_name,t1.nationflag;
 

 ------404、各航线的出行目的、年龄、性别



select t1.flights_date, t.part, t2.flights_segment_name,t3.wf_segment,t3.wf_city_name,count(1)
  from dw.fact_orderhead_trippurpose@to_ods t
  join dw.fact_order_detail t1 on t.flights_order_head_id =
                                  t1.flights_order_head_Id
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flag_id in (3, 5, 40)
   and t1.flights_date >= trunc(sysdate) - 28
   and t1.flights_date < trunc(sysdate) + 28
   and t2.company_id = 0
 group by  t1.flights_date, t.part, t2.flights_segment_name,t3.wf_segment,t3.wf_city_name


-----------------------------------------------------20210818-------------------------------------------------------------------
 ------405、 年月周分类

 select t1.flight_date,to_char(t1.flight_date-1,'iw') 周二到周一分类,
 count(1)
  from dw.da_flight t1
  where t1.flight_date>=trunc(sysdate-15)
   and t1.flight_date< trunc(sysdate)+1
   group by t1.flight_date,to_char(t1.flight_date-1,'iw');

 ------406、不正常航班汇总表

select t2.flight_date,t2.flight_no,t2.segment_code,t2.origin_std
from DW.TW_UNNORMAL_FLIGHT t2
where t2.unnormaltype='取消'
and t2.flight_date>=to_date('2021-05-01','yyyy-mm-dd')
and t2.flight_date< to_date('2021-09-01','yyyy-mm-dd');


-------------------------------------------------202108203-----------------------------------------------------------------------------
 ------407、 旅客航班乘机记录查询

select t1.r_flights_date,t2.origincity_name,t2.destcity_name,t1.whole_flight,t1.ticket_price,t1.r_com_rate,t2.aircraft_no,t4.aircraft_no,
t5.ac_no,t6.ac_no,nvl(nvl(nvl(t5.ac_no,t6.ac_no),t4.aircraft_no),t2.aircraft_no),t3.yhq_money
 from stg.s_cq_order_head t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
 left join(select t3.flight_date,t3.flight_no,min(t3.aircraft_no) aircraft_no
            from dw.da_flight t3
            where t3.aircraft_no<>'-'
            and t3.flag=0
            group by t3.flight_date,t3.flight_no) t4 on t2.flight_date=t4.flight_date and t2.flight_no=t4.flight_no
 left join(select flight_date,substr(flight_no,1,6) flight_no,min(ac_no) ac_no
 from fm.fm_day_flight@to_foc
 where FLIGHT_TYPE in('1','2','3','4','5')
 and ac_no is not null
 group by flight_date,substr(flight_no,1,6))t5 on t4.flight_date=t5.flight_date and t4.flight_no=t5.flight_no
  left join(select trunc(b_oristd) flight_date,substr(flightno,1,6) flight_no,min(acno) ac_no
 from foc.day_flight@to_foc
 where FLIGHTTYPE in('1','2','3','4','5')
 and acno is not null 
 group by trunc(b_oristd),substr(flightno,1,6))t6 on t4.flight_date=t6.flight_date and t4.flight_no=t6.flight_no
 where t1.flag_id=40
 and t1.codeno in('210104198401240336','W46513705','T08824093');


----------------------------------------------------------------20210823--------------------------------------------
 ------408、呼叫中心免费改签数据

select trunc(t1.modify_date),count(1)
 from dw.da_order_change t1
  join dw.da_order_drawback t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join stg.s_cq_user t3 on t1.users_id=t3.users_id
 where t3.terminal_id in( 300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505)
 and t1.money_fy=0
 and t1.modify_date< t2.money_date
 and t1.modify_date>=to_date('2021-08-10','yyyy-mm-dd')
 group by trunc(t1.modify_date)



 ------409、平均民航公布价\平均航距

select avg(t1.price)*0.015*7,avg(t1.mile)
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)-7
   and t1.flight_date< trunc(sysdate)
   and t1.company_id=0
   and t1.flag=0;

-------------------------------------------------20210826-----------------------------------------------------------------------
 ------410、服务W舱数据

/*麻烦提取下：浦东-喀什、上海（虹桥/浦东）-乌鲁木齐、兰州-喀什、
上海（虹桥/浦东）-西安、沈阳-西安、洛阳-乌鲁木齐 、以上所有航班单程W舱旅客联系方式。不要往返。  航班日期：8月27日（含）~9月30（含）*/



select t.flights_Order_id 订单号,t1.whole_flight 航班号,t1.r_flights_date 航班日期,t1.whole_segment 航段,
       t1.name||coalesce(t1.second_name,'') 姓名,t1.r_tel 紧急人联系方式,t.work_tel 联系电话,t.email 邮箱
 from cqsale.cq_order@to_air t 
 join cqsale.cq_order_head@to_air t1 on t.flights_order_id=t1.flights_order_id
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.r_flights_date>=to_date('2021-08-27','yyyy-mm-dd')
   and t1.r_flights_date<=to_date('2021-09-30','yyyy-mm-dd')
   and t1.whole_flight like '9C%'
   and regexp_like(t2.flights_segment_name,'(浦东－喀什)|(虹桥－乌鲁木齐)|(浦东－乌鲁木齐)|(兰州－喀什)|(虹桥－西安)|(浦东－西安)|(沈阳－西安)|
   (洛阳－乌鲁木齐)')
   and t1.flag_id in(3,5,40)
   and t1.seats_name ='W'
   and not exists(select 1 
                    from  cqsale.cq_order_head@to_air t3
                    where t3.r_flights_date>=to_date('2021-08-27','yyyy-mm-dd')
   and t3.r_flights_date<=to_date('2021-09-30','yyyy-mm-dd')
   and t3.flights_order_head_id<>t1.flights_order_head_id
   and t3.wf_lc_father_id=t1.wf_lc_father_id);

--------------------------------------------------20210827------------------------------------------------------------
 ------411、

select distinct t2.flights_order_id,t2.name||coalesce(t2.second_name,'') sname,t3.work_tel,t2.r_tel
 from stg.s_cq_order_head t2
 join stg.s_cq_order t3 on t2.flights_order_id=t3.flights_order_id
 JOIN ANL.TEMP_FENG_08272@to_dds t4 on t3.flights_order_id=t4.flights_order_id



 ------412、快登机数据

select t1.flights_date 日期,t1.flights_order_head_id,t1.flights_order_id,t1.valid_code,
t1.whole_flight,t1.whole_segment,k.feekdj        
  from dw.fact_order_detail t1
  join (select flights_order_head_id, sum(fee_kdj) feekdj
          from dw.fact_dcs_money_detail
         where flights_date >= trunc(sysdate) - 7
           and fee_kdj <> 0
         group by flights_order_head_id) k on k.flights_order_head_id =
                                              t1.flights_order_head_id
 where t1.flights_date >= trunc(sysdate) - 7
   and t1.flights_date < trunc(sysdate)
   and t1.company_id = 0;
 
---------------------------------------------20210901------------------------------------------------------------------------
 ------413、孙健-航班信息（取消等）

select tt1.flight_date,tt1.route_name,tt1.flight_no,
      case when tt1.minflag=tt1.maxflag then decode(minflag,0,'正常',1,'受保护',2,'取消')
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag>=2 then '部分取消'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag<=1 then '部分受保护'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%实航段%' and tt1.minflag*tt1.maxflag=0 then '正常'  
      end,
      case when 
      (case when tt1.minflag=tt1.maxflag then decode(minflag,0,'正常',1,'受保护',2,'取消')
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag>=2 then '部分取消'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag<=1 then '部分受保护'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%实航段%' and tt1.minflag*tt1.maxflag=0 then '正常'  
      end)='取消' then tt1.PUBLISH_DATE
      else null end,
      case when 
      (case when tt1.minflag=tt1.maxflag then decode(minflag,0,'正常',1,'受保护',2,'取消')
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag>=2 then '部分取消'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag<=1 then '部分受保护'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%实航段%' and tt1.minflag*tt1.maxflag=0 then '正常'  
      end)='取消' then null
      else tt3.checkin_s_mile end 座公里,
      case when 
      (case when tt1.minflag=tt1.maxflag then decode(minflag,0,'正常',1,'受保护',2,'取消')
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag>=2 then '部分取消'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag<=1 then '部分受保护'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%实航段%' and tt1.minflag*tt1.maxflag=0 then '正常'  
      end)='取消' then 1 
      when tt1.root_route_type like '%经停%' and normalnum=3 then 2
      when tt1.root_route_type like '%经停%' and normalnum<3 then normalnum
      else normalnum end 架次,
       case when 
      (case when tt1.minflag=tt1.maxflag then decode(minflag,0,'正常',1,'受保护',2,'取消')
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag>=2 then '部分取消'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag<=1 then '部分受保护'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%实航段%' and tt1.minflag*tt1.maxflag=0 then '正常'  
      end)='取消' then null
      else tt3.round_time end 轮档小时,
       case when 
      (case when tt1.minflag=tt1.maxflag then decode(minflag,0,'正常',1,'受保护',2,'取消')
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag>=2 then '部分取消'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag<=1 then '部分受保护'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%实航段%' and tt1.minflag*tt1.maxflag=0 then '正常'  
      end)='取消' then null
      else  tt3.plannum end 计划数,
      case when 
      (case when tt1.minflag=tt1.maxflag then decode(minflag,0,'正常',1,'受保护',2,'取消')
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag>=2 then '部分取消'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag<=1 then '部分受保护'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%实航段%' and tt1.minflag*tt1.maxflag=0 then '正常'  
      end)='取消' then null
      else  tt3.checkin_num end 乘机人数,
      case when 
      (case when tt1.minflag=tt1.maxflag then decode(minflag,0,'正常',1,'受保护',2,'取消')
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag>=2 then '部分取消'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag<=1 then '部分受保护'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%实航段%' and tt1.minflag*tt1.maxflag=0 then '正常'  
      end)='取消' then null
      else  tt3.total_income end 航班收入,
       case when 
      (case when tt1.minflag=tt1.maxflag then decode(minflag,0,'正常',1,'受保护',2,'取消')
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag>=2 then '部分取消'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag<=1 then '部分受保护'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%实航段%' and tt1.minflag*tt1.maxflag=0 then '正常'  
      end)='取消' then null
      else  tt3.vari_cost end 变动成本,
      case when 
      (case when tt1.minflag=tt1.maxflag then decode(minflag,0,'正常',1,'受保护',2,'取消')
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag>=2 then '部分取消'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%经停%' and tt1.minflag+tt1.maxflag<=1 then '部分受保护'
      when tt1.minflag<>tt1.maxflag and tt1.root_route_type like '%实航段%' and tt1.minflag*tt1.maxflag=0 then '正常'  
      end)='取消' then null
      else  tt3.bjincome end 边际贡献
  from(
  select t1.flight_date,t1.route_name,t1.flight_no,t1.root_route_type,min(t1.flag) minflag,max(t1.flag) maxflag,count(1) totalflight,
  sum(case when t1.flag=0 then 1 else 0 end) normalnum,
         min(nvl(t2.PUBLISH_DATE,t3.LAST_UPDATE_DATE)) PUBLISH_DATE          
   from dw.da_flight t1
   left join (select *
 from dw.tw_unnormal_flight
 where UNNORMALTYPE ='取消') t2 on t1.segment_head_id=t2.segment_head_id
 left join(select *
  from (select seg_head_id,
               LAST_UPDATE_DATE,
               NEW_STATUS,
               row_number() over(partition by seg_head_id order by LAST_UPDATE_DATE desc) rid
          from cqsale.CQ_FLIGHTS_STATUS_MODIFY_LOG@to_air)
 where rid = 1)t3 on t1.segment_head_id=t3.seg_head_id and t1.flag=t3.NEW_STATUS and t3.NEW_STATUS=2
 where t1.flight_date>=to_date('2021-07-01','yyyy-mm-dd')
 and t1.flight_date< to_date('2021-10-01','yyyy-mm-dd')
 and t1.company_id=0
 group by t1.flight_date,t1.route_name,t1.flight_no,t1.root_route_type)tt1 
   left join(select tb1.flight_date,tb1.route_name,tb1.flight_no,suM(case when h1.seats_name is not null then 1 else 0 end) tkt,
                    sum(h1.ticket_price+h1.ad_fy) toprice
              from dw.fact_order_detail h1
              join dw.da_flight tb1 on h1.segment_head_id=tb1.segment_head_id
              where tb1.flight_date>=to_date('2021-07-01','yyyy-mm-dd')
                and tb1.flight_date< to_date('2021-10-01','yyyy-mm-dd')
                group by tb1.flight_date,tb1.route_name,tb1.flight_no)tt2 on tt1.flight_date=tt2.flight_date
                and tt1.route_name=tt2.route_name and tt1.flight_no=tt2.flight_no
  left join(select h2.flight_date,h2.route_name,h2.flight_no,sum(h2.checkin_s_mile) checkin_s_mile ,
                   sum(h2.round_time) round_time,sum(h2.plan) plannum,sum(h2.checkin_num)  checkin_num,
                   sum(h2.total_income) total_income,sum(h2.vari_cost)  vari_cost, 
                   sum(h2.total_income) -sum(h2.vari_cost) bjincome           
              from hdb.recent_flights_cost h2
              where h2.flight_date>=to_date('2021-07-01','yyyy-mm-dd')
                and h2.flight_date< to_date('2021-10-01','yyyy-mm-dd')
                group by h2.flight_date,h2.route_name,h2.flight_no)tt3 on  tt1.flight_date=tt3.flight_date and tt1.route_name=tt3.route_name
                and tt1.flight_no=tt3.flight_No;
          


 ------414、线上上线补订儿童/婴儿的机票

--每日（每月）提取前一天（上个月）线上补定儿童婴儿销售量（即通过APP和小程序中预定，订单中只有婴儿或儿童）
--提取前一天（销售日期）预定渠道+补订订单数+补订儿童数+补订婴儿数（订单状态：已售票、已出票、已乘机）

select trunc(t.order_date) 销售日期,case when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1<=1 then '网站'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1=2 then 'M网站'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(3,8) then 'IOS'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(4,9) then 'Andriod'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(5,10) then '小程序' 
else t2.terminal end 渠道,
count(distinct t.flights_order_id) 补订订单数,
sum(case when t1.sex=2 then 1 else 0 end) 补订儿童数 ,
sum(case when t1.sex=3 then 1 else 0 end)  补订婴儿数
 from cqsale.cq_order@to_air t
 join cqsale.cq_order_head@to_air t1  on t.flights_order_id=t1.flights_order_id
 left join cqsale.cq_terminal@to_air t2 on t.terminal_id=t2.terminal_id
 where t.order_date>=trunc(sysdate)-1
 and t.order_date< trunc(sysdate)
 and t1.whole_flight like '9C%'
 and t1.flag_id in(3,5,40)
 and t1.seats_name <>'W'
 and t1.sex<>1 
 and not exists(select 1
              from cqsale.cq_order_head@to_air t2
              where t1.flights_order_id=t2.flights_order_id
              and t2.r_order_date>=trunc(sysdate)-1
              and t2.flag_id in(3,5,40,41)
              and t2.sex=1)
group by trunc(t.order_date) ,case when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1<=1 then '网站'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1=2 then 'M网站'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(3,8) then 'IOS'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(4,9) then 'Andriod'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(5,10) then '小程序' 
else t2.terminal end;




--每日（每月）提取前一天（上个月）线上补定儿童婴儿销售量（即通过APP和小程序中预定，订单中只有婴儿或儿童）
--提取前一天（销售日期）预定渠道+补订订单数+补订儿童数+补订婴儿数（订单状态：已售票、已出票、已乘机）

select trunc(t.order_date) 销售日期,case when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1<=1 then '网站'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1=2 then 'M网站'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(3,8) then 'IOS'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(4,9) then 'Andriod'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(5,10) then '小程序' 
else t2.terminal end,
count(distinct t.flights_order_id) 补订订单数,
sum(case when t1.sex=2 then 1 else 0 end) 补订儿童数 ,
sum(case when t1.sex=3 then 1 else 0 end)  补订婴儿数
 from cqsale.cq_order@to_air t
 join cqsale.cq_order_head@to_air t1  on t.flights_order_id=t1.flights_order_id
 left join cqsale.cq_terminal@to_air t2 on t.terminal_id=t2.terminal_id
 where t.order_date>=add_months(last_day(trunc(sysdate))+1,-2)
 and t.order_date< add_months(last_day(trunc(sysdate))+1,-1) 
 and t1.whole_flight like '9C%'
 and t1.flag_id in(3,5,40)
 and t1.seats_name <>'W'
 and t1.sex<>1 
 and not exists(select 1
              from cqsale.cq_order_head@to_air t2
              where t1.flights_order_id=t2.flights_order_id
              and t2.r_order_date>=add_months(last_day(trunc(sysdate))+1,-2)
              and t2.r_order_date< add_months(last_day(trunc(sysdate))+1,-1)
              and t2.flag_id in(3,5,40,41)
              and t2.sex=1)
group by trunc(t.order_date) ,case when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1<=1 then '网站'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1=2 then 'M网站'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(3,8) then 'IOS'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(4,9) then 'Andriod'
when t.terminal_id<0 and t.web_id=0 and t.ex_nfd1 in(5,10) then '小程序' 
else t2.terminal end;


-----------------------------------------------------20210902-----------------------------------------------------
 ------415、实名认证（三要素认证）量

select split_part(timestamp, ' ', 1) 日期,
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133',
                                         '153',
                                         '162',
                                         '168',
                                         '169',
                                         '173',
                                         '174',
                                         '177',
                                         '179',
                                         '180',
                                         '181',
                                         '189',
                                         '189',
                                         '191',
                                         '196',
                                         '197',
                                         '199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130',
                                         '131',
                                         '132',
                                         '140',
                                         '146',
                                         '155',
                                         '156',
                                         '163',
                                         '166',
                                         '167',
                                         '171',
                                         '175',
                                         '176',
                                         '185',
                                         '186',
                                         '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',
                                         '135',
                                         '136',
                                         '137',
                                         '138',
                                         '139',
                                         '144',
                                         '147',
                                         '148',
                                         '150',
                                         '151',
                                         '152',
                                         '157',
                                         '158',
                                         '159',
                                         '165',
                                         '172',
                                         '178',
                                         '182',
                                         '183',
                                         '184',
                                         '187',
                                         '188',
                                         '195',
                                         '198') then
          '移动'
       end 运营商       
      , 
       count(1) 认证量
  from dw.fact_threevaild_detail t1
 where t1.respcode in
       ('P300', 'P301', 'P305', 'P306', 'P307', 'SJ', 'NM', 'ID')
       and split_part(timestamp, ' ', 1)>='2021-08-01'
 group by split_part(timestamp, ' ', 1),
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133',
                                         '153',
                                         '162',
                                         '168',
                                         '169',
                                         '173',
                                         '174',
                                         '177',
                                         '179',
                                         '180',
                                         '181',
                                         '189',
                                         '189',
                                         '191',
                                         '196',
                                         '197',
                                         '199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130',
                                         '131',
                                         '132',
                                         '140',
                                         '146',
                                         '155',
                                         '156',
                                         '163',
                                         '166',
                                         '167',
                                         '171',
                                         '175',
                                         '176',
                                         '185',
                                         '186',
                                         '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',
                                         '135',
                                         '136',
                                         '137',
                                         '138',
                                         '139',
                                         '144',
                                         '147',
                                         '148',
                                         '150',
                                         '151',
                                         '152',
                                         '157',
                                         '158',
                                         '159',
                                         '165',
                                         '172',
                                         '178',
                                         '182',
                                         '183',
                                         '184',
                                         '187',
                                         '188',
                                         '195',
                                         '198') then
          '移动'
       end;

------416、线上辅收收入金额查询

select t1.r_flights_date,t1.whole_flight,t2.origin_std,t2.dest_sta,t2.flights_segment_name,sum(t1.insurance_fee+t1.other_fee)
 from stg.s_cq_order_head t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.r_flights_date=trunc(sysdate)
   and t1.whole_flight in('9C6232','9C8830')
   group by t1.r_flights_date,t1.whole_flight,t2.origin_std,t2.dest_sta,t2.flights_segment_name

---------------------------------------------20210907---------------------------------------------------------------------------
 ------417、redmine 市场部数据提取 #392571
/*
 请提取2021年8月3日~9月5日期间被识别为代理的号码，及对应的同一个号码在这期间内的购票量。
这批代理号码定期提取，根据购票量进行系统限制下单，最好形成定期定时自动邮件，频次：半个月一次。邮箱：cuihua@ch.com
*/

select t.order_day,count(1)
from dw.fact_order_detail t
join dw.da_flight t2 on t.segment_head_id=t2.segment_head_id
join(
select t1.users_id
 from dw.da_restrict_userinfo t1
 where t1.create_date>=to_date('2021-08-03','yyyy-mm-dd')
   and t1.create_date< to_date('2021-09-06','yyyy-mm-dd'))t3 on t.client_id=t3.users_id
   where t.order_day>=to_date('2021-08-03','yyyy-mm-dd')
   and t.channel in('网站','手机')
   group by  t.order_day;
   
   
   
select t1.users_id,t1.create_date
 from dw.da_restrict_userinfo t1
 where t1.create_date>=to_date('2021-08-03','yyyy-mm-dd')
   and t1.create_date< to_date('2021-09-06','yyyy-mm-dd');


select h1.mobile,h2.tkt
   from(
   select t1.users_id,t1.create_date,t1.mobile
 from dw.da_restrict_userinfo t1
 where t1.create_date>=to_date('2021-08-03','yyyy-mm-dd')
   and t1.create_date< to_date('2021-09-06','yyyy-mm-dd'))h1
   left join( 
select t3.users_id,t3.create_date,t3.mobile,count(1) tkt
from dw.fact_order_detail t
join dw.da_flight t2 on t.segment_head_id=t2.segment_head_id
join(
select t1.users_id,t1.create_date,t1.mobile
 from dw.da_restrict_userinfo t1
 where t1.create_date>=to_date('2021-08-03','yyyy-mm-dd')
   and t1.create_date< to_date('2021-09-06','yyyy-mm-dd'))t3 on t.client_id=t3.users_id
   where t.order_day>=to_date('2021-08-03','yyyy-mm-dd')
   and t.channel in('网站','手机')
group by   t3.users_id,t3.create_date,t3.mobile)h2 on h1.users_id=h2.users_id;

------------------------------------------------------20210908----------------------------------------------------------
 ------418、市场部数据提取 #392727
/*
 时间：过去一年
人群：乘机人，非套票
乘机次数：9~19次、20~39次、40次以上分别提取乘机人号码，去除套票、代理、易宝
*/

select case when num>=9 and num<=19 then '9~19'
when num>=20 and num<=39 then '20~39'
when num>=40 then '40+' end num,tel
from(
select t1.traveller_name,t1.codeno,count(1) num,max(t1.r_tel) tel
 from dw.Fact_Order_Detail T1
 left join dw.fact_combo_ticket t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join dw.da_restrict_userinfo t3 on t1.client_id=t3.users_id
 WHERE t1.flag_id=40
 and t1.flights_date>=trunc(sysdate)-365
 and t1.flights_date< trunc(sysdate)
 and t1.company_id=0
 and t1.seats_name is not null
 and t3.users_id is null
 and t1.sex <>3
 and t2.flights_order_head_id is null
 and not regexp_like(t1.gate_name,'(易宝)|(商旅卡)')
 group by t1.traveller_name,t1.codeno)
 where num>=9;


------------------------------------------------20210909---------------------------------------------------------------------
 ------419、近8周销售数据

select start_date,t1.week_day,t1.order_date,sum(t1.tickets) tickets,sum(t1.ticket_price) ticket_price
 from dw.bi_week_sales t1
where t1.order_date>=to_date('2021-07-19','yyyy-mm-dd')
and t1.order_date< trunc(sysdate)
group by start_date,t1.week_day,t1.order_date;


select t1.flights_date,count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.order_day>=trunc(sysdate)-7
 and t1.order_day<trunc(sysdate)
 and t1.company_id=0
 and t2.flag=0
 and t1.seats_name is not null
 and t1.seats_name not in('B','G','G1','G2','O')
 group by t1.flights_date;


 ------420、数据分析面试题目

select t1.order_day,to_char(t1.order_day,'day'),round(count(1)*1.5-1000,0)
 from dw.fact_order_detail  t1
 where t1.order_day>=to_date('2017-04-10','yyyy-mm-dd')
 and t1.order_day< to_date('2017-05-22','yyyy-mm-dd')
 and t1.company_id=0
group by t1.order_day,to_char(t1.order_day,'day');

 ------421、

--1、金银卡账号明细数据

/*
关联绿翼会员表，剔除掉无法找到证件号以及重复的数据
*/
with memberlevel as(
select *
  from (select t1.users_id,
               case
                 when MEMBERLEVELID = 3 then
                  '银卡'
                 when MEMBERLEVELID = 4 then
                  '金卡'
               end slevel,
               case
                 when MEMBERLEVELID = t1.automemberlevelid then
                  '自动'
                 when MEMBERLEVELID > t1.automemberlevelid then
                  '非自动'
               end stype,
               round(t1.memberexpiredate - t1.memberperiodstart, 0) expiredate,
               t1.memberlevelid,
               t1.automemberlevelid,
               t2.cust_id,
               t2.users_id_fk,
               t2.reg_date,
               t2.codeno,
               t2.CODETYPE,
               row_number() over(partition by t2.codeno order by t1.users_id) rid
          from dw.da_user_level t1
          join dw.da_lyuser t2 on t1.users_id = t2.users_id_fk
         where MEMBERLEVELID in (3, 4)) h1
 where h1.rid = 1)


--2、最近一年的销售数据

select t1.codeno,t1.codetype,t1.seat_type,
      case when t1.client_id=t6.users_id and t1.codeno=t6.codeno then '自购自乘'
      else '非自购' end stype1,
      t6.slevel,
      t6.stype stype2,
      t6.expiredate,
      case when t3.flights_order_head_id is not null and t3.money_fy> 0 then '付费退'
      when t3.flights_order_head_id is not null and t3.money_fy=0 then '免费退'
      else '其他' end stype3,
      t7.WEIGHT_GT_ALL+t7.WEIGHT_ZZ offline_weight,
      t7.weight_web online_weight,
      case when t7.bagw is null then '0'
      when t7.BAGW=0 then '0'
      when t7.BAGW<=5 then '(0,5]'
      when t7.BAGW<=10 then '(5,10]'
      when t7.BAGW<=15 then '(10,15]'
      when t7.BAGW<=20 then '(15,20]'
      when t7.BAGW<=25 then '(20,25]'
      when t7.BAGW<=30 then '(25,30]'
      when t7.BAGW> 30 then '30+' end bagw_type,
      case when t9.flights_order_head_id is not null then '购买手提'
      else '未购买手提' end st_type,
      case when t9.flights_order_head_Id is not null then 1
      when t1.seat_type ='经济座' then 1
      when t1.seat_type='商务经济座' and t7.BAGW>0 then 1
      when t7.WEIGHT_GT_ALL+t7.WEIGHT_ZZ+t7.weight_web>0 then 1
      when t7.BAGW>0 then 1 else 0 end is_luggage,
      count(1) tkt,
      sum(t7.bagw) tt_bagw,
      suM(t7.WEIGHT_GT_ALL+t7.WEIGHT_ZZ) tt_offweight,
      sum(t7.weight_web) tt_weight_web,
      sum(t7.fee_gt+t7.fee_zz) off_xlfee,
      sum(t7.fee_web) on_xlfee,
      sum(t9.book_fee) st_fee,
      sum(t3.money_fy) tuip_fy,
      sum(t5.changenum) changenum,
      sum(t5.change_fy) changefy 
  from dw.fact_recent_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
  join memberlevel t6 on t1.codeno=t6.codeno
left join dw.da_order_drawback t3 on t1.flights_order_head_id=t3.flights_order_head_id
left join (select t4.flights_order_head_id,count(1),sum(case when t4.money_fy>0 then 1 else  0 end) changenum,
                   sum(t4.money_fy*t4.rate) change_fy
              from dw.da_order_change t4
              group by t4.flights_order_head_id)t5 on t1.flights_order_head_id=t5.flights_order_head_id
left join dw.fact_luggage_detail t7 on t1.flights_order_head_id=t7.flights_order_head_id
left join(select t8.flights_order_head_id,sum(t8.book_num) book_num,sum(t8.book_fee) book_fee
              from dw.fact_other_order_detail t8 
              where t8.flights_date>=to_date('2020-08-01','yyyy-mm-dd')
     and t8.flights_date< to_date('2021-08-01','yyyy-mm-dd')
     and t8.xtype_id=23
     group by t8.flights_order_head_id)t9 on t1.flights_order_head_id=t9.flights_order_head_id
   where t1.flights_date>=to_date('2020-08-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2021-08-01','yyyy-mm-dd')
     group by t1.codeno,t1.codetype,t1.seat_type,
      case when t1.client_id=t6.users_id and t1.codeno=t6.codeno then '自购自乘'
      else '非自购' end ,
      t6.slevel,
      t6.stype ,
      t6.expiredate,
      case when t3.flights_order_head_id is not null and t3.money_fy> 0 then '付费退'
      when t3.flights_order_head_id is not null and t3.money_fy=0 then '免费退'
      else '其他' end ,
      t7.WEIGHT_GT_ALL+t7.WEIGHT_ZZ ,
      t7.weight_web ,
      case when t7.bagw is null then '0'
      when t7.BAGW=0 then '0'
      when t7.BAGW<=5 then '(0,5]'
      when t7.BAGW<=10 then '(5,10]'
      when t7.BAGW<=15 then '(10,15]'
      when t7.BAGW<=20 then '(15,20]'
      when t7.BAGW<=25 then '(20,25]'
      when t7.BAGW<=30 then '(25,30]'
      when t7.BAGW> 30 then '30+' end ,
      case when t9.flights_order_head_id is not null then '购买手提'
      else '未购买手提' end ,
      case when t9.flights_order_head_Id is not null then 1
      when t1.seat_type ='经济座' then 1
      when t1.seat_type='商务经济座' and t7.BAGW>0 then 1
      when t7.WEIGHT_GT_ALL+t7.WEIGHT_ZZ+t7.weight_web>0 then 1
      when t7.BAGW>0 then 1 else 0 end;

---------------------------------------------------20210913-----------------------------------------------------------------
 ------422、未来30天客座率小于80%的航线数据
--市场部数据提取 #392795

select 航线,case when (sum(客座率1)-sum(客座率2))/ sum(客座率2) >=0.2 then  sum(客座率2)
              else sum(客座率1) end 客座率
from (
select nvl(t2.ROUTE_NAME, '总计') 航线,
       
       sum(t1.predict_ticket_num) / sum(t2.OVERSALE) 客座率1,null 客座率2 
  from dw.fr_segment_income_predict3 t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id

 where t1.FLIGHT_DATE < = trunc(sysdate) + 30
   and t1.FLIGHT_DATE > trunc(sysdate)
   and t2.flag <> 2
   and t2.company_id = 0
and t2.nationflag='国内'
 group by rollup(t2.ROUTE_NAME)

union all
select nvl(t2.ROUTE_NAME, '总计') 航线,null 客座率1,
        sum(t1.机票量) / sum(t2.OVERSALE) 客座率2   
  from dw.da_flight t2

  left join (select tt.segment_head_id,
                    count(distinct tt.flights_order_head_id) 机票量
               from dw.fact_order_detail tt
              where tt.flights_date < trunc(sysdate)
                and tt.flights_date >= trunc(sysdate) - 30
                  and tt.company_id = 0
                  group by  tt.segment_head_id
                ) t1 on t1.segment_head_id =
                                                                 t2.segment_head_id
 where t2.FLIGHT_DATE < trunc(sysdate)
   and t2.FLIGHT_DATE >= trunc(sysdate) - 30
   and t2.flag <> 2
   and t2.company_id = 0
   and t2.nationflag='国内'
group by rollup(t2.ROUTE_NAME)) 

group by  航线
having  sum(客座率2) >0 and sum(客座率1) <0.8 and sum(客座率1)>=0;


 ------423、各销售渠道的支付方式

select t1.channel,t1.sub_channel,t1.gate_name,count(1)
 from dw.fact_order_detail t1
 where t1.order_day>=trunc(sysdate)-1
 group by t1.channel,t1.sub_channel,t1.gate_name;

 ------424、

--市场部数据提取 #392748
/*
烦请提取航班日期为8月份，舱位为G2舱，航班状态为“正常”，航班往返程G2舱出了单程或返程为退票状态。
字段和要求前面已经提取过一版，见附件（只要把航班日期改为8月份即可，其他要求不变，上一版Statement尚存：）
*/
/*
1.航班号
2.航班日期
3.航段
4.舱位： G2,
5.旅客姓名
6.销售终端：不限
7.航班日期：6/1-6/30
8.航班日期（返程日期）
9.航班号（返程）
10.航段（返程）
4. 逻辑： 同一个订单往返程航班状态均为正常，其中一段已乘机，
另一段已退票（起飞前申请过代卖，代卖数量大于等于退票数量）的记录。*/
/*代卖数量 :匹配累计总的代卖数*/

/*select ASSIST_SALE_NUM ,FLIGHT_NO,t2.flights_segment_name
from  cqsale.cq_bsale_flights_apply@to_air t
join dw.da_flight t2 on t2.segment_head_id =t.segment_head_id
where t2.flight_date=to_date('2021-05-11', 'yyyy-mm-dd')
and t2.FLIGHT_NO='9C8658' \*and t2.flights_segment_name='URCSJW'*\*/


with dingdan as(
select distinct  t2.FLIGHT_NO  航班号,t2.flight_date 航班日期
,t2.flights_segment_name 航段,cabin
,oh.seats_name 舱位,ASSIST_SALE_NUM,SEGMENT_INDEX
,oh.SEGMENT_HEAD_ID,oh.FLIGHTS_ORDER_ID
,oh.FLIGHTS_ORDER_HEAD_ID,oh.traveller_name 旅客姓名,CODENO,
case when oh.FLAG_ID IN (7, 11, 12) then '退票'
when oh.FLAG_ID IN (40) then '已乘机' else '其他' end FLAG_ID,
FLAG_NAME,
oh.WF_FLIGHTS_ORDER_HEAD_ID,
CASE
                 WHEN oh.CHANNEL = '手机' AND oh.STATION_ID = 2 THEN
                  'M网站'
                 WHEN oh.CHANNEL = '手机' AND oh.STATION_ID IN (3, 8) THEN
                  '手机IOS'
                 WHEN oh.CHANNEL = '手机' AND oh.STATION_ID IN (4, 9) THEN
                  '手机安卓'
                 WHEN oh.CHANNEL = '手机' AND oh.STATION_ID IN (5, 10) THEN
                  '微信'
                 WHEN oh.CHANNEL = '手机' THEN
                  '手机其他'
                 WHEN oh.CHANNEL IN ('网站', 'OTA', '旗舰店') THEN
                  oh.CHANNEL
                 ELSE
                  NVL(oh.SUB_CHANNEL, '其他')
               END 销售终端,oh.order_date
from cqsale.cq_bsale_flights_order_record@to_air rc
join dw.da_flight t2 on t2.segment_head_id =rc.segment_head_id
join   dw.fact_recent_order_detail oh
on oh.flights_order_head_id=rc.FLIGHTS_ORDER_HEAD_ID and rc.SEGMENT_HEAD_ID=oh.SEGMENT_HEAD_ID
left join stg.S_CQ_ORDER_HEAD_FLAG dm on dm.flag=oh.flag_id
 join   cqsale.cq_bsale_flights_apply@to_air t on rc.bsale_app_id = t.id

where   cabin in ('G2')
and t.SEGMENT_TYPE=1
and t.status = 1
and  t.apply_type <> 5
and t2.flag <> 2
and t2.company_id = 0
and t2.flight_date>=to_date('2021-08-01', 'yyyy-mm-dd')
--and oh.FLAG_ID in (7, 11, 12,40)


),
dingdan1 as(
select *  from (
select p.*, count(distinct FLIGHTS_ORDER_HEAD_ID)
 over(partition by 航班号,航班日期,航段,cabin,舱位,ASSIST_SALE_NUM,SEGMENT_HEAD_ID) rid

 from dingdan p
where FLAG_ID='退票'
) where rid>-ASSIST_SALE_NUM

)

select t.航班号 航班号,t.FLIGHTS_ORDER_ID,t.FLAG_ID 去程程状态大类,t1.FLAG_ID 返程状态大类,
t.航班日期 航班日期,
t.航段 航段,
t.舱位 舱位,
t.旅客姓名 旅客姓名,
t.销售终端 销售终端,
t1.航班日期 航班日期_返程日期,
t1.航班号 航班号_返程,
t1.航段 航段_返程,
t1.order_date 出票时间,dw.Money_Date  退票时间,
ceil((dw.Money_Date -t1.order_date)*24)   退票出票时间差,
(dw.Money_Date -t1.order_date)  退票出票时间差,
t.FLAG_NAME 去程程状态,t1.FLAG_NAME 返程状态
/*,
t.CODENO  CODENO1,

 t1.CODENO*/
from dingdan t
join dingdan t1 on t1.flights_order_id = t.flights_order_id
                 and t1.SEGMENT_INDEX=2
                 and t.SEGMENT_INDEX=1
                 and t.CODENO = t1.CODENO
                 and t1.FLAG_ID='退票'
join dw.da_order_drawback dw on dw.FLIGHTS_ORDER_HEAD_ID=t1.FLIGHTS_ORDER_HEAD_ID
where t.航班日期<=to_date('2021-08-31', 'yyyy-mm-dd')
--and t.FLAG_ID<>t1.FLAG_ID
and not exists (select 1
                from dingdan1 s2
               where s2.航班号 = t.航班号
               and s2.航班日期=t.航班日期 and s2.航段=t.航段
                and s2.ASSIST_SALE_NUM=t.ASSIST_SALE_NUM
                 and s2.SEGMENT_HEAD_ID=t.SEGMENT_HEAD_ID )
 and not exists (select 1
                from dingdan1 s2
               where s2.航班号 = t1.航班号
               and s2.航班日期=t1.航班日期 and s2.航段=t1.航段
                and s2.ASSIST_SALE_NUM=t1.ASSIST_SALE_NUM
                 and s2.SEGMENT_HEAD_ID=t1.SEGMENT_HEAD_ID );

 ------425、
--市场部数据提取 #392675
--9CIJ数据提取


select h4.destairport 中转点1,h4.originairport2 中转点2,h4.whole_segment 第一段,h4.segment2 第二段,
       h4.stype 第一段类型,h4.stype2 第二段类型,h4.flights_order_id 第一段订单号,
       h4.flights_order_id2 第二段订单号,
       case when diffdate<=1 then '(0,1]'
       when diffdate<=2 then '(1,2]'
       when diffdate<=3 then '(2,3]'
       when diffdate<=4 then '(3,4]'
       when diffdate<=5 then '(4,5]'
       when diffdate<=6 then '(5,6]'
       when diffdate<=7 then '(6,7]'
       end 间隔天数,
       count(1) 机票组数,
       sum(h4.ticket_price) 第一程票价和 ,
       sum(h4.ticket_price) 第二程票价和
from(
select h3.flights_order_id,h3.flights_date,h3.whole_segment,h3.ticket_price,h3.traveller_name,h3.birthday,h3.gender,
h3.originairport,h3.destairport,
h3.stype,h3.stype2,h3.flights_date2,h3.segment2,h3.originairport2,h3.destairport2,h3.flights_order_head_id2,h3.ticket_price2,
h3.flights_order_id2,h3.diffdate,row_number()over(partition by h3.flights_Order_head_id2 order by h3.diffdate) rid
from(
select h1.flights_date,h1.whole_segment,h1.flights_order_id,h1.ticket_price,h1.traveller_name,h1.birthday,h1.gender,
    h1.stype,h1.flights_order_head_id,h1.originairport,h1.destairport,h2.flights_date flights_date2,
    h2.whole_segment segment2,h2.flights_order_id flights_order_id2,h2.ticket_price ticket_price2,h2.traveller_name traveller_name2,
    h2.birthday birthday2,h2.gender gender2,
    h2.stype stype2,h2.flights_order_head_id flights_order_head_id2,h2.originairport originairport2,
    h2.destairport destairport2,h2.flights_date-h1.flights_date diffdate,
    row_number()over(partition by h1.flights_order_head_id order by h2.flights_date-h1.flights_date) rid  
from(
select t1.flights_date,t1.whole_segment,t1.flights_order_id,t1.ticket_price,t1.traveller_name,t1.birthday,t1.gender,
case when t1.company_id=0 then case when t2.nationflag='国内'  then '9C国内'
else '9C国际' end
when t1.company_id=6 then case when t2.nationflag='国内'  then 'IJ国内'
else 'IJ国际' end
end stype,t1.codeno,t1.flights_order_head_id,t2.originairport,t2.destairport
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
  -- and t2.company_id=0
   and t1.seats_name is not null )h1
,
   (
select t1.flights_date,t1.whole_segment,t1.flights_order_id,t1.ticket_price,t1.traveller_name,t1.birthday,t1.gender,
case when t1.company_id=0 then case when t2.nationflag='国内'  then '9C国内'
else '9C国际' end
when t1.company_id=6 then case when t2.nationflag='国内'  then 'IJ国内'
else 'IJ国际' end
end stype,t1.codeno,t1.flights_order_head_id,t2.originairport,t2.destairport
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
  -- and t2.company_id=0
   and t1.seats_name is not null )h2 
   where h1.traveller_name=h2.traveller_name
   and h1.birthday=h2.birthday
   and h1.gender=h2.gender
   and h2.flights_date-h1.flights_date<=7
   and h2.flights_date-h1.flights_date>=0 
   and h1.stype||'+'||h2.stype in('IJ国际+IJ国内','IJ国内+IJ国际','9C国际+IJ国内','IJ国内+9C国际','9C国内+IJ国际',
   'IJ国际+9C国内','IJ国际+9C国际','9C国际+IJ国际')
    )h3
   where h3.rid=1)h4
   where h4.rid=1
   group by h4.destairport,h4.originairport2,h4.whole_segment ,h4.segment2 ,
       h4.stype ,h4.stype2 ,h4.flights_order_id ,
       h4.flights_order_id2 ,
       case when diffdate<=1 then '(0,1]'
       when diffdate<=2 then '(1,2]'
       when diffdate<=3 then '(2,3]'
       when diffdate<=4 then '(3,4]'
       when diffdate<=5 then '(4,5]'
       when diffdate<=6 then '(5,6]'
       when diffdate<=7 then '(6,7]'
       end;

 ------426、

 /*新组合产品产品这边想增加销售监控报表，防止漏配，少配等情况，需要增加监控报表，内容如下：
1. 组合产品销售监控方案
1）监控表：组合产品定价策略
2）监控逻辑：分两块监控，
①一块是大规则策略监控（没有始发地和目的地），逻辑是展示所有有效的大规则策略
②一块是小规则策略监控（有始发地和目的地），逻辑是所有有效的始发地和目的地航线同目前在飞航线做对比
3）查询条件：
①展示目前新组合产品所有的列表，可下拉选择：PCA,PCC,PCD.....
②查询方式：大规则策略，小规则策略，全部展示
③航线性质：国内，国际，区域，全部
4)展示方
①大规则展示区
②小规则展示区
5）展示字段
组合产品等级，航线类型，航线性质，始发站，目的站

GDS报表名称：组合产品定价策略维护*/

select *
from(
 select  distinct '大规则展示' type,t2.type_code,t2.comb_name,decode(t1.nation_flag,1,'国内',2,'区域',3,'国际') nationflag,t1.ori_state,t1.dest_state,
 case when FLIGHTS_TYPE is null then '不限'
  when FLIGHTS_TYPE=1 then '直飞'
  when FLIGHTS_TYPE=2 then '经停AC段'  
  when FLIGHTS_TYPE=3 then '经停BC段'
  when FLIGHTS_TYPE=3 then '经停AB段' end route_type,
--t3.grade_name ,
case when  t1.ori_state is null and t1.dest_state is null then '大规则'
else '小规则' end  rule_type,
--销售途径（2-b2b，3-b2c网站，4-b2c手机，5-代理）
decode(SALE_TYPE,2,'B2B',3,'B2C网站',4,'B2C手机',5,'代理') SALE_TYPE
  from CQSALE.CQ_COMB_PRICE_SALE@to_air t1
  join cqsale.cq_comb_product@to_air t2 on t1.COMB_ID=t2.id
  --left join cqsale.CQ_COMB_GRADE@to_air t3 on t1.comb_grade=t3.grade_id
  where t1.STATUS=1
  and t1.COMPANY_ID=0
  and t1.ori_state is null and t1.dest_state is null
  
  union all 
  
  
  select distinct '小规则未设置航线展示',h1.type_code,h1.comb_name,h1.nationflag,h1.originairport,h1.destairport,h1.segment_type,
  '小规则' 规则类型,h1.channel
  from(
  select tt2.id,tt2.type_code,tt2.comb_name,tt1.originairport,tt1.destairport,tt1.segment_type,tt1.nationflag,tt3.channel
  from (
  select distinct t1.originairport,t1.destairport,t1.nationflag,t1.segment_type
    from dw.da_flight t1
    where t1.flight_date>=trunc(sysdate)
      and t1.company_id=0
      and t1.flag=0) tt1,
      (
      select id,type_code,comb_name
      from cqsale.cq_comb_product@to_air
      where company_id=0
      and status=1)tt2,
     (
     select 'B2B' channel
      from dual 
      union all      
      select 'B2C网站'
      from dual 
      union all
      select 'B2C手机'
      from dual 
      union all
      select '代理'
      from dual) tt3 
      
      where 1=1  
      )h1
 left join(  
select t2.id,t2.type_code,t2.comb_name,decode(t1.nation_flag,1,'国内',2,'区域',3,'国际') 航线性质,t1.ori_state,t1.dest_state,
 case when FLIGHTS_TYPE is null then '不限'
  when FLIGHTS_TYPE=1 then '实航班'
  when FLIGHTS_TYPE=2 then '经停AC段'  
  when FLIGHTS_TYPE=3 then '经停BC段'
  when FLIGHTS_TYPE=3 then '经停AB段' end 航线类型,
t3.grade_name ,case when  t1.ori_state is null and t1.dest_state is null then '大规则'
else '小规则' end rule_type,decode(SALE_TYPE,2,'B2B',3,'B2C网站',4,'B2C手机',5,'代理') SALE_TYPE
  from CQSALE.CQ_COMB_PRICE_SALE@to_air t1
  join cqsale.cq_comb_product@to_air t2 on t1.COMB_ID=t2.id
  left join cqsale.CQ_COMB_GRADE@to_air t3 on t1.comb_grade=t3.grade_id
  where t1.STATUS=1
  and t1.COMPANY_ID=0
  and not (t1.ori_state is null and t1.dest_state is null))h2 on h1.originairport=h2.ori_state and h1.destairport=h2.dest_state
  and h1.id=h2.id and h1.channel=h2.SALE_TYPE
  where h2.type_code is null)
  order by 1,2,3,4,5,6,7,8
  
-----------------------------------------------------------------20210914---------------------------------------------------------------------
 ------427、投诉内容解析

select trunc(t1.CREATETIME) jobday,t1.orderno,t1.jobno,t1.flightno,t1.flightdate,t1.originairportcode,t1.destairportcode,
t1.conetent,
/*substr(t1.conetent,instr(t1.conetent,'[投诉内容]',1),instr(t1.conetent,'[类型]',1)-instr(t1.conetent,'[投诉内容]',1)) 投诉内容,
substr(t1.conetent,instr(t1.conetent,'[类型]',1),instr(t1.conetent,'[持卡人]',1)-instr(t1.conetent,'[类型]',1)) 类型,
substr(t1.conetent,instr(t1.conetent,'[持卡人]',1),instr(t1.conetent,'[总行]',1)-instr(t1.conetent,'[持卡人]',1)) 持卡人,
substr(t1.conetent,instr(t1.conetent,'[总行]',1),instr(t1.conetent,'[分行]',1)-instr(t1.conetent,'[总行]',1)) 总行,
substr(t1.conetent,instr(t1.conetent,'[分行]',1),instr(t1.conetent,'[卡号]',1)-instr(t1.conetent,'[分行]',1)) 分行,
substr(t1.conetent,instr(t1.conetent,'[卡号]',1),instr(t1.conetent,'[金额]',1)-instr(t1.conetent,'[卡号]',1)) 卡号,
substr(t1.conetent,instr(t1.conetent,'[金额]',1),instr(t1.conetent,'元',1)-instr(t1.conetent,'[金额]',1)) 金额,
instr(t1.conetent,'[投诉内容]',1) 投诉内容位置,
instr(t1.conetent,'[类型]',1) 类型位置,
instr(t1.conetent,'[持卡人]',1) 持卡人位置,
instr(t1.conetent,'[总行]',1) 总行位置,
instr(t1.conetent,'[分行]',1) 分行位置,
instr(t1.conetent,'[卡号]',1) 卡号位置,
instr(t1.conetent,'[金额]',1) 金额位置,*/
case when t1.conetent like '%[投诉内容]%' then 
trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[投诉内容]',1)+6,10000),'[',1),'：',''),':',''))
else null end 投诉内容解析,
case when t1.conetent like '%[类型]%' then 
trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[类型]',1)+4,10000),'[',1),'：',''),':','')) 
else null end 类型解析,
case when t1.conetent like '%[持卡人]%' then 
trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[持卡人]',1)+5,10000),'[',1),'：',''),':',''))
else null end  持卡人解析,
case when t1.conetent like '%[总行]%' then 
trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[总行]',1)+4,10000),'[',1),'：',''),':',''))
else null end 总行解析,
case when t1.conetent like '%[分行]%' then 
trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[分行]',1)+4,10000),'[',1),'：',''),':','')) 
else null end 分行解析,
case when t1.conetent like '%[卡号]%' then 
trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[卡号]',1)+4,10000),'[',1),'：',''),':','')) 
else null end 卡号解析,
case when t1.conetent like '%[金额]%' then  
case when trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[金额]',1)+4,10000),'元',1),'：',''),':','')) like '%=%'
then split_part(trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[金额]',1)+4,10000),'元',1),'：',''),':','')),'=',1)
when trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[金额]',1)+4,10000),'元',1),'：',''),':','')) not like '%=%'
then regexp_substr(substr(trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[金额]',1)+4,10000),'元',1),'：',''),':','')),1,5),'[0-9]+')
end
else null end 金额解析
--, trim(replace(replace(split_part(substr(t1.conetent,instr(t1.conetent,'[金额]',1)+4,10000),'元',1),'：',''),':',''))
 from hdb.crm_wo_baseinfo t1
 where t1.conetent like '%[投诉内容]%'
 --and jobno='T202109140047'
 ;

 
--------------------------------------------------------------20210915-----------------------------------------------------------------428、
 ------429、剔除误识别的代理账号

select t1.order_day,case when t1.channel in('网站','手机') then '线上渠道'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '其他' end 渠道 ,case when t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.gate_name like '%易宝%' then '易宝'
else '其他' end 支付方式,t1.sub_channel,
case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '亲友立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end 立减类型,
case when t2.users_id is not null then 1 else 0 end 代理与否,count(1) 销量
 from dw.fact_order_detail t1
 left join dw.da_restrict_userinfo t2 on t1.client_id=t2.users_id
left join (select t1.flights_order_head_id,
                    nvl(t1.is_beneficiary, 0) is_beneficiary,
                    t1.youhui_result
               from stg.c_cq_order_youhui_detail t1
               join stg.c_cq_youhui_policy_main t2 on t1.youhui_id=t2.id
              where t1.product_type = 0
                and t1.yh_ret_time is null
                and t1.youhui_result is not null
                and t2.YH_STYLE=2
                and t1.create_date >= trunc(sysdate) - 30) t4 on t1.flights_order_head_id =
                                                              t4.flights_order_head_id
 where t1.order_day>=trunc(sysdate)-30
 and t1.seats_name not in('B','G1','G','G2','O')
 and t1.company_id=0
 group by t1.order_day,case when t1.channel in('网站','手机') then '线上渠道'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '其他' end ,case when t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.gate_name like '%易宝%' then '易宝'
else '其他' end,case when t2.users_id is not null then 1 else 0 end,t1.sub_channel,
case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '亲友立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end;


---代理删除

select t1.order_day,case when t1.channel in('网站','手机') then '线上渠道'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '其他' end 渠道 ,case when t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.gate_name like '%易宝%' then '易宝'
else '其他' end 支付方式,t1.sub_channel,
case when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '亲友立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end 立减类型,
case when t2.users_id is not null then 1 else 0 end 代理与否,
t1.channel,t1.sub_channel,t1.client_id,t1.terminal_id,t5.user_id,t5.flag,t2.feature_id,t2.feature_value,t5.memo,
count(1)
from dw.fact_order_detail t1
left join dw.da_restrict_userinfo t2 on t1.client_id=t2.users_id
left join (select t1.flights_order_head_id,
                    nvl(t1.is_beneficiary, 0) is_beneficiary,
                    t1.youhui_result
               from stg.c_cq_order_youhui_detail t1
               join stg.c_cq_youhui_policy_main t2 on t1.youhui_id=t2.id
              where t1.product_type = 0
                and t1.yh_ret_time is null
                and t1.youhui_result is not null
                and t2.YH_STYLE=2
                and t1.create_date >= trunc(sysdate) - 30)t4 on t1.flights_order_head_id=t4.flights_order_head_id
 left join stg.s_cq_user_restrict t5 on t1.client_id=t5.user_id
where t1.order_day>=trunc(sysdate)-30
 and t1.seats_name not in('B','G1','G','G2','O')
 and t1.company_id=0
 and t1.terminal_id<0
 and t4.flights_order_head_id is not null
 and t4.is_beneficiary=1
 and t2.users_id is not null
 and t1.users_id is not null
 and t1.channel  in('网站','手机')
 group by t1.order_day,case when t1.channel in('网站','手机') then '线上渠道'
when t1.channel in('OTA','旗舰店') then 'OTA'
else '其他' end  ,case when t1.gate_name like '%商旅卡%' then '商旅卡'
when t1.gate_name like '%易宝%' then '易宝'
else '其他' end ,t1.sub_channel,
case
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 1 then
          '亲友立减'
         when t4.flights_order_head_id is not null and t4.is_beneficiary = 0 then
          '绿翼立减'
         else
          '普通购买'
       end ,
case when t2.users_id is not null then 1 else 0 end ,
t1.channel,t1.sub_channel,t1.client_id,t1.terminal_id,t5.user_id,t5.flag,t2.feature_id,t2.feature_value,t5.memo;

--------------------------------------------------------20210916----------------------------------------------------------------------
 ------430、代理账号下单数据

 select t.order_date,t1.*,t2.*
  from cqsale.cq_order@to_air t
  left join dw.da_restrict_userinfo t1 on t.client_id=t1.users_id
  left join cqsale.cq_user_restrict@to_air t2 on t.client_id=t2.user_id
  where t.order_date>=trunc(sysdate)
  and t1.users_id is not null;

 ------431、临时数据---2020年退改签收入、乘机人数

 select sum(t1.money_fy)
 from dw.da_order_drawback t1
 where t1.money_date>=to_date('2020-01-01','yyyy-mm-dd')
   and t1.money_date< to_date('2021-01-01','yyyy-mm-dd')
   
 union all
 
 select sum(t1.money_fy*t1.rate)
 from dw.da_order_change t1
 where t1.modify_date>=to_date('2020-01-01','yyyy-mm-dd')
   and t1.modify_date< to_date('2021-01-01','yyyy-mm-dd');
   
   
   select sum(t1.boardnum)
    from dw.da_main_order t1
    where t1.flights_date>=to_date('2020-01-01','yyyy-mm-dd')
     and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
     and t1.flights_no like '9C%';

---------------------------------------------------------20210917-----------------------------------------
 ------432、经纬度计算出来的航线距离

select A||B code,a,b,dis
  from dw.adt_airportbetween_distance;

--已有航线公布里程
select *
froM(
select start_city,end_city,mileage,row_Number()over(partition by start_city,end_city order by last_update_time desc ) rid
 from cqsale.cq_flights_pub_mileage@to_air)t1
 where rid=1;



 ------433、机上销售-支付宝离线支付数据

支付宝离线支付上线已经两个星期，目前收到有效订单4129笔（订单号见附件），希望根据订单号提取如下字段信息。
支付人身份证号
支付人年龄
支付人性别
支付人出行原因标签
下单时间
商品名称\单价\数量
航班信息（出发地-目的地）
航班信息（飞行时长）
航班类型标签
--状态[000-新建;100-系统取消;101-用户取消;102-用户删除;200-支付成功;300-已发货;301-部分发货;400-确认收货;500-已评价;
--600-已退货退款;601-退货中;602-退货失败;700-已退款;701-退款中;702-退款失败;703:退货退款中]
;

select t.id,decode(t.status,'200','支付成功',300,'已发货','301','部分发货','400','确认收货','500','已评价',
'600','已退货退款','601','退货中','602','退货失败','700','已退款','701','退款中','702','退款失败','703','退货退款中') 订单状态,
t1.pro_name,t1.SALE_PRICE,t1.pro_number,t3.flight_date,t4.daylinedate foc_date,t3.flight_no,t4.flightno foc_flightno,t3.flight_id,t5.airport_name,t6.airport_name,
round((t4.f_sta-t4.f_std)*24,1) flight_time,t3.seat_no,t5.threecodeforcity oriairport,t6.threecodeforcity destairport,
tt2.EX_CFD1,tt2.gender,tt3.age,tt3.cust_province,tt3.cust_city 
from stg.prt_eshop_order t
join stg.prt_eshop_order_detail t1 on t.id=t1.order_id
join stg.prt_eshop_order_payment t2 on t.id=t2.order_id
join stg.prt_eshop_order_flight t3 on t.id=t3.order_id
left join stg.f_day_flight t4 on t3.flight_id=t4.dayflightid
left join hdb.cq_airport t5 on t5.f_code=t4.oriairport
left join hdb.cq_airport t6 on t6.f_code=t4.arrairport
left join(select rl flights_order_id,ri vaild_code,sn seat_no,cn codno,fdate,fn,fs
from(
select t1.rl,t1.ri,t1.sn,t1.cn,t1.fdate,t1.fn,t1.fs
 from stg.s_dcs_old_h_bak t1
 where t1.fdate>=to_date('2021-07-19','yyyy-mm-dd')
union 
select t1.rl,t1.ri,t1.sn,t1.cn,t1.fdate,t1.fn,t1.fs
 from stg.s_dcs_old_h t1
 where t1.fdate>=to_date('2021-07-19','yyyy-mm-dd')
 ))tt1 on to_char(tt1.fdate,'yyyymmdd')=t3.flight_date and tt1.fn=t3.flight_no and tt1.fs=t5.threecodeforcity||t6.threecodeforcity
 and tt1.seat_no=t3.seat_no
left join dw.fact_recent_order_detail tt2 on tt1.flights_order_id=tt2.flights_order_id and tt1.vaild_code=tt2.valid_code 
left join dw.bi_order_region tt3 on tt2.flights_order_head_id=tt3.flights_order_head_id
where t.STATUS in('200','300','301','400','500','600','601','602','700','701','702','703')
and t2.pay_type_name ='支付宝离线支付';


-------------------------------------------------------20210922-------------------------------------------------------------------
 ------434、


--我们现在有存量没出院的本土病例都限了9个座位，我想知道帮我测算一下如果不限计划数，实际会占用到这9个位置的情况多不多

select t1.flights_date,t1.flights_no,t2.route_name,case when t2.flights_city_name like '上海%' then '上海出港'
else '上海进港' end ,
max(t2.layout) layout,sum(t1.boardnum)
 from dw.da_main_order t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=trunc(sysdate)-14
   and t1.flights_date< trunc(sysdate)
   and t2.company_id=0
   and t2.flag=0
   and t2.flights_city_name like '%上海%'
   group by t1.flights_date,t1.flights_no,t2.route_name,t2.layout,case when t2.flights_city_name like '上海%' then '上海出港'
else '上海进港' end;

 ------435、 陕甘宁青 --西北地区航线运行数据

select count(distinct t1.segment_code) 航段数,count(distinct t1.flights_city_name) 航段城市数,count(distinct t1.flights_segment_name) 航段数,
       count(distinct t1.flights_id) 航班量,count(distinct t1.flight_date) 天数,
       count(distinct case when regexp_like(t2.province,'(陕西)|(甘肃)|(青海)|(宁夏)') then t1.origincity_name 
       else null end) 目的地数,
       count(distinct case when  t1.flight_date>=to_date('2021-10-31','yyyy-mm-dd') and 
       t1.flight_date< to_date('2021-10-31','yyyy-mm-dd')+7 then t1.flights_id else null end) 周航班量,
       count(distinct t4.wf_city_name) 往返航线城市数,
       count(distinct t4.wf_segment_name) 往返航段数
 from dw.da_flight t1
 join hdb.cq_airport t2 on t1.originairport=t2.threecodeforcity
 join hdb.cq_airport t3 on t1.destairport=t3.threecodeforcity
 left join dw.dim_segment_type t4 on t1.route_id=t4.route_id and t1.h_route_id=t4.h_route_id
 where t1.flight_date>=to_date('2021-10-31','yyyy-mm-dd')
 and (regexp_like(t2.province,'(陕西)|(甘肃)|(青海)|(宁夏)')
  or regexp_like(t3.province,'(陕西)|(甘肃)|(青海)|(宁夏)'))
  and t1.flag=0
  and t1.company_id=0;  

 ------436、


select trunc(to_date(t1.CREATE_TIME,'yyyy-mm-dd hh24:mi:ss')) order_day, to_char(to_date(t1.CREATE_TIME,'yyyy-mm-dd hh24:mi:ss'),'hh24') ordertime,
decode(t1.ORDER_STATUS,401,'已预定',402,'已售', 403,'已完成',404,'已取消',405,'超时取消',406,'申请退款',407,'退款中',408,'已退款') orderstatus,
decode(t1.pay_id,44,'微信',25,'支付宝',58,'春秋白花花') 支付方式,
sum(sales_num) sales_num,sum(order_price/100) price
 from  hdb.ec_order_goods t1
 where t1.goods_id=11
 and to_date(t1.CREATE_TIME,'yyyy-mm-dd hh24:mi:ss')>=trunc(sysdate)
 and t1.create_time>='2021-09-27 09:40:00'
 group by trunc(to_date(t1.CREATE_TIME,'yyyy-mm-dd hh24:mi:ss')) , to_char(to_date(t1.CREATE_TIME,'yyyy-mm-dd hh24:mi:ss'),'hh24') ,
decode(t1.ORDER_STATUS,401,'已预定',402,'已售', 403,'已完成',404,'已取消',405,'超时取消',406,'申请退款',407,'退款中',408,'已退款') ,
decode(t1.pay_id,44,'微信',25,'支付宝',58,'春秋白花花')
 
 --订单状态  401-已预定 402-已售 403-已完成 404-已取消 405-超时取消 406-申请退款 407-退款中 408-已退款



 ------437、

var cabin_name =contentPane.parameterEl.getWidgetByName('cabin_name');
var Labelcabin_name =contentPane.parameterEl.getWidgetByName('Labelcabin_name');  
var ORDER_STATUS =contentPane.parameterEl.getWidgetByName('ORDER_STATUS');
var LabelORDER_STATUS =contentPane.parameterEl.getWidgetByName('LabelORDER_STATUS');

$(".fr-sheetbutton-container").click(function()//切换sheet时 
{
var a= contentPane.$contentPane.data('TabPane').tabBtns[contentPane.selectedIndex].options.name;//获取当前sheet的名字
if(a=="机票兑换量") 
{ 
  ORDER_STATUS.invisible();
  LabelORDER_STATUS.invisible();
  cabin_name.visible();
  Labelcabin_name.visible();  
} 
else
{ 
  ORDER_STATUS.visible();
  LabelORDER_STATUS.visible();
  cabin_name.invisible();
  Labelcabin_name.invisible();  
};
})

-----------------------------------------------------------20210928---------------------------------------------------------------
 ------438、

select t1.flight_date,sum(t1.PREDICT_TICKET_NUM),sum(t1.oversale) from dw.fr_segment_income_predict3 t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_Id
 where t1.flight_date>=to_date('2021-10-01','yyyy-mm-dd')
   and t1.flight_date< to_date('2021-10-08','yyyy-mm-dd')
   and to_char(t1.flight_date,'mmdd')>='1001'
   and to_char(t1.flight_date,'mmdd')<='1007'
   and t2.flag=0
   and t2.company_id=0
   and t2.flights_city_name like '%上海'
   group by t1.flight_date;

 
select /*+parallel(4) */
stype,
flightyear,flightday,count(distinct flights_id) 航班量,sum(layout) 计划量,sum(tkt) 销量
from(
select '合计' stype,to_char(t1.flights_date,'yyyy') flightyear,to_char(t1.flights_date,'mm-dd') flightday,
t1.flights_id,max(t2.layout) layout,count(1) tkt   
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_Id
 where t1.flights_date>=to_date('2019-10-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-10-08','yyyy-mm-dd')
   and to_char(t1.flights_date,'mmdd')>='1001'
   and to_char(t1.flights_date,'mmdd')<='1007'
   and t1.flag_id in(3,5,40)
   and t1.company_id=0
   and t2.flag=0
   and t2.flights_city_name like '%上海'
  group by to_char(t1.flights_date,'yyyy') ,to_char(t1.flights_date,'mm-dd') ,t1.flights_id

   

union all


select '提前期',to_char(t1.flights_date,'yyyy') flightyear,to_char(t1.flights_date,'mm-dd') flightday,
t1.flights_id,max(t2.layout),count(1) tkt     
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_Id
 where t1.flights_date>=to_date('2019-10-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2019-10-08','yyyy-mm-dd')
   and to_char(t1.flights_date,'mmdd')>='1001'
   and to_char(t1.flights_date,'mmdd')<='1007'
   and t1.flag_id in(3,5,40)
   and t1.order_day< to_date('2019-09-30','yyyy-mm-dd')
   and t1.company_id=0
   and t2.flag=0
   and t2.flights_city_name like '%上海'
  group by to_char(t1.flights_date,'yyyy') ,to_char(t1.flights_date,'mm-dd') ,
t1.flights_id
  
union all

select '提前期',to_char(t1.flights_date,'yyyy') ,to_char(t1.flights_date,'mm-dd') ,
t1.flights_id,max(t2.layout),count(1) tkt     
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_Id
 where t1.flights_date>=to_date('2020-10-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2020-10-08','yyyy-mm-dd')
   and to_char(t1.flights_date,'mmdd')>='1001'
   and to_char(t1.flights_date,'mmdd')<='1007'
   and t1.flag_id in(3,5,40)
   and t1.order_day< to_date('2020-09-30','yyyy-mm-dd')
   and t1.company_id=0
   and t2.flag=0
   and t2.flights_city_name like '%上海'
  group by to_char(t1.flights_date,'yyyy') ,to_char(t1.flights_date,'mm-dd') ,
t1.flights_id)
group by stype,flightyear,flightday;


-----------------------------------------------20211008-----------------------------------------------------
 ------439、

 ---2019/2020年各乘机频次对应人数

select /*+parallel(4) */
syear,case when tkt<=5 then to_char(tkt)
when tkt<=10 then '6~10'
when tkt>10 then '11+' end,
count(1)
from(
select to_char(t1.flights_date,'yyyy') syear,t1.traveller_name||t1.codeno sname,count(1) tkt
 from dw.fact_order_detail t1
where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2021-01-01','yyyy-mm-dd')
and t1.flag_id=40
and t1.seats_name is  not null 
and t1.company_id=0
group by to_char(t1.flights_date,'yyyy'),t1.traveller_name||t1.codeno)
group by syear,case when tkt<=5 then to_char(tkt)
when tkt<=10 then '6~10'
when tkt>10 then '11+' end;

 
---------------------------------------------------20211009-------------------------------------------------------------------

 ------440、新开航线、复飞航线

select rownum,h1.flights_segment_name,
case when h2.flights_segment_name is null then '新增航线'
when h2.flightdate2 is not null and  h2.flightdate2-h1.flightdate1>=180 then '复飞航线'
else '老航线' end         
from(
select t1.flights_segment_name,min(t1.flight_date) flightdate1
 from dw.da_flight t1
 where t1.flight_date>=to_date('2021-10-31','yyyy-mm-dd')
    and t1.flag=0
    and t1.company_id=0
    group by t1.flights_segment_name )h1    
left join( 
select t1.flights_segment_name,max(t1.flight_date) flightdate2
 from dw.da_flight t1
 where t1.flight_date< to_date('2021-10-31','yyyy-mm-dd')
    and t1.flag=0
    and t1.company_id=0
    group by t1.flights_segment_name )h2 on h1.flights_segment_name =h2.flights_segment_name;


select rownum,h1.route_name,
case when h2.route_name is null then '新增航线'
when h2.flightdate2 is not null and  h2.flightdate2-h1.flightdate1>=180 then '复飞航线'
else '老航线' end         
from(
select t1.route_name,min(t1.flight_date) flightdate1
 from dw.da_flight t1
 where t1.flight_date>=to_date('2021-10-31','yyyy-mm-dd')
    and t1.flag=0
    and t1.company_id=0
    group by t1.route_name )h1    
left join( 
select t1.route_name,max(t1.flight_date) flightdate2
 from dw.da_flight t1
 where t1.flight_date< to_date('2021-10-31','yyyy-mm-dd')
    and t1.flag=0
    and t1.company_id=0
    group by t1.route_name )h2 on h1.route_name =h2.route_name;
    
  
    
  

 ------441、航线、航班号、班期、航班量

 

 select h2.flights_segment_name,h2.flight_no,h2.shour,h2.banqi,count(1)
  from(  
 select h1.flights_segment_name,h1.flight_no,h1.shour,h1.plannum,
 listagg(h1.weeknum,' ') WITHIN GROUP ( order by h1.weeknum)over(partition by h1.flights_segment_name,h1.shour,h1.flight_no) banqi
 from(
 select t1.flights_segment_name,t1.flight_no,to_char(t1.origin_std,'hh24:mi') shour,to_char(t1.flight_date-1,'d') weeknum,suM(t1.oversale) plannum
  from dw.da_flight t1
  left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
  where t1.flight_date>=to_date('2021-10-31','yyyy-mm-dd')
    and t1.flight_date<=to_date('2021-11-06','yyyy-mm-dd')
    and t1.flag=0
    and t1.company_id=0
    and t1.flights_segment_name like '石家庄%'
    group by t1.flights_segment_name,t1.flight_no,to_char(t1.origin_std,'hh24:mi'),to_char(t1.flight_date-1,'d')
    )h1)h2
    group by h2.flights_segment_name,h2.flight_no,h2.shour,h2.banqi
    
    
    
-------------------------------------------------------20211011--------------------------------------------------------------
 ------442、

--每个月优惠数据

--月度优惠统计
select p.yy 年, p.mm 月, p.id 编号, p.project 项目, nvl(v.value, 0) 数值
  from (select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               1 id,
               '虚拟航班收入' project
          from dual) p
  left join (select to_char(t.r_flights_date, 'yyyy') yy,
                    to_char(t.r_flights_date, 'mm') mm,
                    1 id,
                    sum(t.ticket_price * nvl(t.r_com_rate, 1)) value
               from cqsale.cq_order_head t
               join cqsale.cq_flights_segment_head f on f.segment_head_id =
                                                        t.segment_head_id
              where t.whole_flight like '9C%'
                and t.r_flights_date >= add_months(trunc(sysdate, 'mm'), -1)
                and t.r_flights_date < trunc(sysdate, 'mm')
                and t.flag_id in (3, 5, 40, 41)
                and t.r_order_date > f.origin_std
                and f.flag <> 2
              group by to_char(t.r_flights_date, 'yyyy'),
                       to_char(t.r_flights_date, 'mm')) v on v.yy = p.yy
                                                         and v.mm = p.mm
                                                         and v.id = p.id

union all

select p.yy 年, p.mm 月, p.id 编号, p.project 项目, nvl(v.value, 0) 数值
  from (select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               7 id,
               '绿翼立减金额' project
          from dual
        union all
        select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               8 id,
               '往返立减金额' project
          from dual
        union all
        select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               9 id,
               '联程立减金额' project
          from dual) p
  left join (select to_char(t1.r_flights_date, 'yyyy') yy,
                    to_char(t1.r_flights_date, 'mm') mm,
                    case
                      when ym.yh_style = 2 then
                       7
                      when ym.seg_lc_type = 2 then
                       8
                      when ym.seg_lc_type = 3 then
                       9
                    end id,
                    sum(yd.youhui_result) value
               from cust.cq_youhui_policy_main ym
               join cust.cq_order_youhui_detail yd on yd.youhui_id = ym.id
               join cqsale.cq_order_head t1 on t1.flights_order_head_id =
                                               yd.flights_order_head_id
              where ym.yh_ret_time = 1 --立减
                and (ym.yh_style = 2 --绿翼立减
                    or ym.seg_lc_type in (2, 3))
                and t1.whole_flight like '9C%'
                and t1.r_flights_date >=
                    add_months(trunc(sysdate, 'mm'), -1)
                and t1.r_flights_date < trunc(sysdate, 'mm')
                and t1.flag_id in (3, 5, 40, 41)
              group by to_char(t1.r_flights_date, 'yyyy'),
                       to_char(t1.r_flights_date, 'mm'),
                       case
                         when ym.yh_style = 2 then
                          7
                         when ym.seg_lc_type = 2 then
                          8
                         when ym.seg_lc_type = 3 then
                          9
                       end) v on v.yy = p.yy
                             and v.mm = p.mm
                             and v.id = p.id

union all

select p.yy 年, p.mm 月, p.id 编号, p.project 项目, nvl(v.value, 0) 数值
  from (select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               10 id,
               '保险立减金额' project
          from dual) p
  left join (select to_char(t1.r_flights_date, 'yyyy') yy,
                    to_char(t1.r_flights_date, 'mm') mm,
                    10 id,
                    sum(insur.price_discount_amount) value
               from cqsale.cq_order_head t1
               join cqsale.cq_insurance_discount_history insur on insur.order_head_id =
                                                                  t1.flights_order_head_id
              where t1.whole_flight like '9C%'
                and t1.r_flights_date >=
                    add_months(trunc(sysdate, 'mm'), -1)
                and t1.r_flights_date < trunc(sysdate, 'mm')
                and t1.flag_id in (3, 5, 40, 41)
              group by to_char(t1.r_flights_date, 'yyyy'),
                       to_char(t1.r_flights_date, 'mm')) v on v.yy = p.yy
                                                          and v.mm = p.mm
                                                          and v.id = p.id

union all

select p.yy 年, p.mm 月, p.id 编号, p.project 项目, nvl(v.value, 0) 数值
  from (select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               11 id,
               '优惠券金额' project
          from dual
        union all
        select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               12 id,
               '套票优惠金额' project
          from dual) p
  left join (select to_char(t.r_flights_date, 'yyyy') yy,
                    to_char(t.r_flights_date, 'mm') mm,
                    case
                      when cc.id is not null then
                       12
                      else
                       11
                    end id,
                    sum(t4.yhq_money) value
               from cqsale.cq_order_head t
               join yhq.cq_new_yhq_history_detail t4 on t4.order_head_id =
                                                        t.flights_order_head_id
               join yhq.cq_new_yhq_history t3 on t3.id = t4.history_id
               join yhq.cq_new_yhq_relation t2 on t2.id = t3.yhq_id
               left join yhq.cq_yhq_combo_config cc on cc.valid_flag = 1
                                                   and cc.ticket_type = 0
                                                   and cc.yhq_batch_id =
                                                       t2.create_id
              where t.whole_flight like '9C%'
                and t.r_flights_date >= add_months(trunc(sysdate, 'mm'), -1)
                and t.r_flights_date < trunc(sysdate, 'mm')
                and t.flag_id in (3, 5, 40, 41)
                and t3.flag = 1
                and (t4.other_order_head_id is null or
                    t4.other_order_head_id = 0)
              group by to_char(t.r_flights_date, 'yyyy'),
                       to_char(t.r_flights_date, 'mm'),
                       case
                         when cc.id is not null then
                          12
                         else
                          11
                       end) v on v.yy = p.yy
                             and v.mm = p.mm
                             and v.id = p.id

union all

select p.yy 年,
       p.mm 月,
       p.id 编号,
       p.project 项目,
       case
         when p.id = 13 then
          nvl(v.fee_cc, 0)
         when p.id = 14 then
          nvl(v.fee_oth, 0)
         when p.id = 15 then
          nvl(v.num_cc, 0)
         when p.id = 16 then
          nvl(v.num_oth, 0)
       end 数值
  from (select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               13 id,
               'O舱出差优惠金额' project
          from dual
        union all
        select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               14 id,
               'O舱其他优惠金额' project
          from dual
        union all
        select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               15 id,
               'O舱出差张数' project
          from dual
        union all
        select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               16 id,
               'O舱其他张数' project
          from dual) p
  left join (select to_char(t1.r_flights_date, 'yyyy') yy,
                    to_char(t1.r_flights_date, 'mm') mm,
                    sum(case
                          when t.o_type > 0 then
                           0
                          when mp.min_seat_price * nvl(mp.rate, 1) >
                               t1.ticket_price * nvl(t1.r_com_rate, 1) then
                           mp.min_seat_price * nvl(mp.rate, 1) -
                           t1.ticket_price * nvl(t1.r_com_rate, 1)
                          else
                           0
                        end) fee_cc,
                    sum(case
                          when t.o_type = 0 then
                           0
                          when mp.min_seat_price * nvl(mp.rate, 1) >
                               t1.ticket_price * nvl(t1.r_com_rate, 1) then
                           mp.min_seat_price * nvl(mp.rate, 1) -
                           t1.ticket_price * nvl(t1.r_com_rate, 1)
                          else
                           0
                        end) fee_oth,
                    sum(case
                          when t.o_type = 0 then
                           1
                          else
                           0
                        end) num_cc,
                    sum(case
                          when t.o_type > 0 then
                           1
                          else
                           0
                        end) num_oth
               from cqsale.cq_order_o_detail t
               join cqsale.cq_order_head t1 on t1.flights_order_head_id =
                                               t.flights_order_head_id
               left join (select h1.order_no,
                                h1.order_head_id,
                                h1.min_seat_name,
                                h1.min_seat_price,
                                h1.rate,
                                h1.rcd_type,
                                h1.rcd_segment_id
                           from (select h.order_no,
                                        h.order_head_id,
                                        h.min_seat_name,
                                        h.min_seat_price,
                                        h.rate,
                                        h.rcd_type,
                                        h.seg_head_id rcd_segment_id,
                                        row_number() over(partition by h.order_no, h.order_head_id order by id) rownumber
                                   from cqsale.cq_min_price_rcd h) h1
                          where h1.rownumber = 1) mp on mp.order_no =
                                                        t1.flights_order_id
                                                    and mp.order_head_id =
                                                        t1.flights_order_head_id
              where t1.whole_flight like '9C%'
                and t1.r_flights_date >=
                    add_months(trunc(sysdate, 'mm'), -1)
                and t1.r_flights_date < trunc(sysdate, 'mm')
                and t1.flag_id in (3, 5, 40, 41)
              group by to_char(t1.r_flights_date, 'yyyy'),
                       to_char(t1.r_flights_date, 'mm')) v on v.yy = p.yy
                                                          and v.mm = p.mm

union all

select p.yy 年, p.mm 月, p.id 编号, p.project 项目, nvl(v.value, 0) 数值
  from (select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               17 id,
               '限座数' project
          from dual) p
  left join (select to_char(flights_date, 'yyyy') yy,
                    to_char(flights_date, 'mm') mm,
                    17 id,
                    count(1) value
               from cqsale.cq_aircrew
              where flights_date >= add_months(trunc(sysdate, 'mm'), -2)
                and flights_date < trunc(sysdate, 'mm')
                and status in (1, 2)
              group by to_char(flights_date, 'yyyy'),
                       to_char(flights_date, 'mm')) v on v.yy = p.yy
                                                     and v.mm = p.mm
                                                     and v.id = p.id

union all

select p.yy 年, p.mm 月, p.id 编号, p.project 项目, nvl(v.value, 0) 数值
  from (select to_char(trunc(sysdate, 'mm') - 1, 'yyyy') yy,
               to_char(trunc(sysdate, 'mm') - 1, 'mm') mm,
               18 id,
               '积分使用金额' project
          from dual) p
  left join (select yy, mm, 18 id, sum(point_money) value
               from (select to_char(h1.flights_date, 'yyyy') yy,
                            to_char(h1.flights_date, 'mm') mm,
                            sum(h1.ticket_price + h1.other_fee) point_money
                       from cqsale.cq_btc_order_head h1
                       join cqsale.cq_order_head h2 on h2.flights_order_head_id =
                                                              h1.flights_order_head_id
                      where h1.pay_gate = '35' --积分支付
                        and h1.flights_date >=
                            add_months(trunc(sysdate, 'mm'), -2)
                        and h1.flights_date < trunc(sysdate, 'mm')
                        and h1.order_type = 0 --机票
                        and h2.flag_id = 40
                      group by to_char(h1.flights_date, 'yyyy'),
                               to_char(h1.flights_date, 'mm')
                     
                     union all
                     
                     select to_char(h1.flights_date, 'yyyy') yy,
                            to_char(h1.flights_date, 'mm') mm,
                            sum(h1.ticket_price + h1.other_fee) point_money
                       from cqsale.cq_btc_order_head h1
                       join cqsale.cq_other_order_head h2 on h2.other_order_head_id =
                                                                    h1.flights_order_head_id
                      where h1.pay_gate = '35' --积分支付
                        and h1.flights_date >=
                            add_months(trunc(sysdate, 'mm'), -2)
                        and h1.flights_date < trunc(sysdate, 'mm')
                        and h1.order_type = 1 --辅收
                        and h2.flag_id = 40
                      group by to_char(h1.flights_date, 'yyyy'),
                               to_char(h1.flights_date, 'mm')
                     
                     union all
                     
                     select to_char(h1.flights_date, 'yyyy') yy,
                            to_char(h1.flights_date, 'mm') mm,
                            sum(h1.ticket_price + h1.other_fee) point_money
                       from cqsale.cq_btc_order_head h1
                       join cqsale.cq_flight_bg_app_head h2 on h2.id =
                                                                      h1.flights_order_head_id
                       join cqsale.cq_order_head h3 on h3.flights_order_head_id =
                                                              h2.order_head_id
                      where h1.pay_gate = '35' --积分支付
                        and h1.flights_date >=
                            add_months(trunc(sysdate, 'mm'), -2)
                        and h1.flights_date < trunc(sysdate, 'mm')
                        and h1.order_type = 2 --变更
                        and h3.flag_id = 40
                      group by to_char(h1.flights_date, 'yyyy'),
                               to_char(h1.flights_date, 'mm'))
              group by yy, mm) v on v.yy = p.yy
                                and v.mm = p.mm
                                and v.id = p.id

 order by 1, 2, 3


 ------443、目的地城市数量

select count(distinct replace(replace(replace(t1.origincity_name,'黔江','重庆'),'武隆','重庆'),'茅台','遵义
')) ,count(distinct replace(replace(t1.origincity_name,'黔江','重庆'),'武隆','重庆')) from dw.da_flight t1
 where flight_date>=to_date('2021-10-31','yyyy-mm-dd')
 and flag=0
 and company_id=0

 ------444、班期
 

 select h2.flights_segment_name,h2.flight_no,h2.shour,h2.banqi,count(1)
  from(  
 select h1.flights_segment_name,h1.flight_no,h1.shour,h1.plannum,
 listagg(h1.weeknum,' ') WITHIN GROUP ( order by h1.weeknum)over(partition by h1.flights_segment_name,h1.shour,h1.flight_no) banqi
 from(
 select t1.flights_segment_name,t1.flight_no,to_char(t1.origin_std,'hh24:mi') shour,to_char(t1.flight_date-1,'d') weeknum,suM(t1.oversale) plannum
  from dw.da_flight t1
  left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
  where t1.flight_date>=to_date('2021-10-24','yyyy-mm-dd')
    and t1.flight_date<=to_date('2021-10-30','yyyy-mm-dd')
    and t1.flag=0
    and t1.company_id=0
    and t1.flights_segment_name like '石家庄%'
    group by t1.flights_segment_name,t1.flight_no,to_char(t1.origin_std,'hh24:mi'),to_char(t1.flight_date-1,'d')
    )h1)h2
    group by h2.flights_segment_name,h2.flight_no,h2.shour,h2.banqi;
    

---------------------------------------------------------------20211015-------------------------------------------------
 ------445、

---老用户乘机频次
select /*+parallel(2) */
h1.orderday,case when h1.ordernum<=10 then to_char(h1.ordernum)
 when h1.ordernum> 10 and h1.ordernum<=19 then '11~19'
 when h1.ordernum> 19 and h1.ordernum<=39 then '20~39'
 when h1.ordernum> 39 then '40+'   
 end ordernum,
 count(1) clientnum,sum(h1.ordernum) ordernum
from(
select case when t1.order_day>=to_date('2019-07-15','yyyy-mm-dd')
            and t1.order_day< to_date('2020-07-15','yyyy-mm-dd') then '套票前一年'
            when t1.order_day>=to_date('2020-07-15','yyyy-mm-dd')
            and t1.order_day<=to_date('2021-06-30','yyyy-mm-dd') then '套票当期1年'
            when t1.order_day>=to_date('2021-06-30','yyyy-mm-dd')
            and t1.order_day< to_date('2021-10-31','yyyy-mm-dd') then '套票后4个月'
            end orderday,
            t1.client_id,
            count(distinct t1.flights_order_id) ordernum       
  from dw.fact_order_detail t1
  left join dw.fact_combo_ticket t2 on t1.flights_order_head_id =
                                       t2.flights_order_head_id
  left join dw.da_user_purchase t3 on t1.client_id = t3.users_id
  where exists(select 1
              from dw.fact_combo_ticket h1
              join dw.da_user_purchase h2 on h1.users_id=h2.users_id
              where h2.first_orderdate< to_date('2020-07-15','yyyy-mm-dd')
               and h1.users_id=t1.client_id
               )
               and t1.order_day>=to_date('2019-07-15','yyyy-mm-dd')
               and t1.order_day< to_date('2021-10-31','yyyy-mm-dd')
   group by case when t1.order_day>=to_date('2019-07-15','yyyy-mm-dd')
            and t1.order_day< to_date('2020-07-15','yyyy-mm-dd') then '套票前一年'
            when t1.order_day>=to_date('2020-07-15','yyyy-mm-dd')
            and t1.order_day<=to_date('2021-06-30','yyyy-mm-dd') then '套票当期1年'
            when t1.order_day>=to_date('2021-06-30','yyyy-mm-dd')
            and t1.order_day< to_date('2021-10-31','yyyy-mm-dd') then '套票后4个月'
            end,
            t1.client_id)h1
            
       group by h1.orderday,case when h1.ordernum<=10 then to_char(h1.ordernum)
 when h1.ordernum> 10 and h1.ordernum<=19 then '11~19'
 when h1.ordernum> 19 and h1.ordernum<=39 then '20~39'
 when h1.ordernum> 39 then '40+'   
 end;
  

-------------乘机人频次分布

select /*+parallel(2) */
h1.orderday,case when h1.ordernum<=10 then to_char(h1.ordernum)
 when h1.ordernum> 10 and h1.ordernum<=19 then '11~19'
 when h1.ordernum> 19 and h1.ordernum<=39 then '20~39'
 when h1.ordernum> 39 then '40+'   
 end ordernum,
 count(1) clientnum,sum(h1.ordernum) ordernum
from(
select case when t1.flights_date>=to_date('2019-07-15','yyyy-mm-dd')
            and t1.flights_date< to_date('2020-07-15','yyyy-mm-dd') then '套票前一年'
            when t1.flights_date>=to_date('2020-07-15','yyyy-mm-dd')
            and t1.flights_date<=to_date('2021-06-30','yyyy-mm-dd') then '套票当期1年'
            when t1.flights_date>=to_date('2021-06-30','yyyy-mm-dd')
            and t1.flights_date< to_date('2021-10-31','yyyy-mm-dd') then '套票后4个月'
            end orderday,
            t1.traveller_name||t1.codeno sname,
            count(1) ordernum       
  from dw.fact_order_detail t1
  where t1.flights_date>=to_date('2019-07-15','yyyy-mm-dd')
   and t1.flights_date< to_date('2021-10-31','yyyy-mm-dd')
   and t1.company_id=0
   and t1.seats_name is not null 
   group by case when t1.flights_date>=to_date('2019-07-15','yyyy-mm-dd')
            and t1.flights_date< to_date('2020-07-15','yyyy-mm-dd') then '套票前一年'
            when t1.flights_date>=to_date('2020-07-15','yyyy-mm-dd')
            and t1.flights_date<=to_date('2021-06-30','yyyy-mm-dd') then '套票当期1年'
            when t1.flights_date>=to_date('2021-06-30','yyyy-mm-dd')
            and t1.flights_date< to_date('2021-10-31','yyyy-mm-dd') then '套票后4个月'
            end,
            t1.traveller_name||t1.codeno)h1            
       group by h1.orderday,case when h1.ordernum<=10 then to_char(h1.ordernum)
 when h1.ordernum> 10 and h1.ordernum<=19 then '11~19'
 when h1.ordernum> 19 and h1.ordernum<=39 then '20~39'
 when h1.ordernum> 39 then '40+'   
 end;




 ------446、新老航线数据（新航线、老航线、运力数据）

select 
case when h2.wf_segment_name is null then '新增航线'
when h2.flightdate2 is not null and  abs(h2.flightdate2-h1.flightdate1)>=180 then '复飞航线'
else '老航线' end,count(distinct h1.wf_segment_name)       
from(
select t2.wf_segment_name,min(t1.flight_date) flightdate1
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
    and t1.flight_date<=to_date('2020-11-28','yyyy-mm-dd')
    and t1.flag=0
    --and t1.flights_segment_name ='宁波－南宁'
    and t1.company_id=0
    group by t2.wf_segment_name )h1    
left join( 
select t2.wf_segment_name,max(t1.flight_date) flightdate2
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date< to_date('2020-11-01','yyyy-mm-dd')
    and t1.flag=0
    --and t1.flights_segment_name ='宁波－南宁'
    and t1.company_id=0
    group by t2.wf_segment_name)h2 on h1.wf_segment_name =h2.wf_segment_name
    group by case when h2.wf_segment_name is null then '新增航线'
when h2.flightdate2 is not null and  abs(h2.flightdate2-h1.flightdate1)>=180 then '复飞航线'
else '老航线' end;



 ------447、

----定价逻辑

 with TP1 as
      (select t1.codeno, count(1) ticket_num
         from dw.fact_recent_order_detail t1
         join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
         left join dw.fact_combo_ticket t3 on t1.flights_order_head_Id=t3.flights_order_head_id
        where t1.whole_flight like '9C%'
          and nvl(t1.seats_name, 'YE') != 'O'
          and t1.flag_id = 40         
          and length(t1.codeno) > 0
          and t2.nationflag = '国内' 
          and (case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end)>0
          --and t1.whole_segment like '%SJW%'
          and t1.sex = 1
          and t1.flights_date >= to_date('2020-07-01','yyyy-mm-dd')
          and t1.flights_date < =to_date('2020-12-31','yyyy-mm-dd')
         group by t1.codeno
       having count(1) >= 7),
    
    tp2 as
      (select 7,
              '所有日期' daytype,
              percentile_cont(0.25) within
        group(
        order by tile_25 desc) tile25_tile25, percentile_cont(0.75) within
        group(
        order by tile_25 desc) tile25_tile75, avg(tile_25) tile25_avg, median(tile_25) tile25_median, percentile_cont(0.25) within
        group(
        order by tile_75 desc) tile75_tile25, percentile_cont(0.75) within
        group(
        order by tile_75 desc) tile75_tile75, avg(tile_75) tile75_avg, median(tile_75) tile75_median, percentile_cont(0.25) within
        group(
        order by avg_num desc) avg_tile25, percentile_cont(0.75) within
        group(
        order by avg_num desc) avg_tile75, avg(avg_num) avg_avg, median(avg_num) avg_median, percentile_cont(0.25) within
        group(
        order by med_num desc) med_tile25, percentile_cont(0.75) within
        group(
        order by med_num desc) med_tile75, avg(med_num) med_avg, median(med_num) med_median
         from (select distinct h.people, 
     percentile_cont(0.25) within  group( order by h.ticket_price desc) over(partition by h.people) tile_25, 
     percentile_cont(0.75) within  group(order by h.ticket_price desc) over(partition by h.people) tile_75, 
     avg(ticket_price) over(partition by h.people) avg_num, 
     median(ticket_price) over(partition by h.people) med_num
      from (select t.codeno people,
      case when t1.seat_type='经济座' then  ( case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end) 
      -nvl(t1.comb_fee,98)
            when t1.seat_type='商务经济座' then nvl(t1.min_seat_price*nvl(t1.rcd_rate,1),( case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end))
                        else ( case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end) end ticket_price
                         from tp1 t
                         join dw.fact_recent_order_detail t1 on t.codeno = t1.codeno
                         join dw.da_flight t2 on t1.segment_head_id =
                                                 t2.segment_head_id
                         left join dw.fact_combo_ticket t3 on t1.flights_Order_head_id=t3.flights_order_head_id
                        where t1.whole_flight like '9C%'
                          and nvl(t1.seats_name, 'YE') != 'O'
                          and t1.flag_id = 40
                          and length(t1.codeno) > 0
                          and t2.nationflag = '国内' 
                          and( case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end)>0
                          --and t1.whole_segment like '%SJW%'
                          and t1.sex = 1   
                                               
                          and t1.flights_date >=  to_date('2020-07-01','yyyy-mm-dd')
                          and t1.flights_date <=  to_date('2020-12-31','yyyy-mm-dd')) h)),
    
    tp3 as
      (select count(distinct t.codeno) people_num
         from tp1 t
      )    
      select /*+parallel(2) */
       tp2.*, tp3.*, sysdate create_time from tp2, tp3;


----各乘机频次对应乘机人数

select /*+parallel(2) */
ticket_num,count(1),sum(ticket_num)

from(
select t1.codeno, count(1) ticket_num
         from dw.fact_recent_order_detail t1
         join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
         left join dw.fact_combo_ticket t3 on t1.flights_order_head_Id=t3.flights_order_head_id
        where t1.whole_flight like '9C%'
          and nvl(t1.seats_name, 'YE') != 'O'
          and t1.flag_id = 40         
          and length(t1.codeno) > 0
          and t2.nationflag = '国内' 
          and (case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end)>0
          --and t1.whole_segment like '%SJW%'
          and t1.sex = 1
          and t1.flights_date >= to_date('2020-07-01','yyyy-mm-dd')
          and t1.flights_date < =to_date('2020-12-31','yyyy-mm-dd')
         group by t1.codeno
       having count(1) >= 7)
       group by ticket_num

----------------------------------------------------金银卡价值判断-----------------------------------------------------------
 ------448、
 
 --针对购票频次分析，里面对于机票票价的分析要还原套票机票对应的票价

select
case 
         when t.memberlevelid = 2 then
          '普卡'
         when t.memberlevelid = 3 then
          '银卡'
         when t.memberlevelid = 4 then
          '金卡'
end 卡等级,
 count(distinct(h.codeno)) 卡人数,
 count(distinct(h.flights_order_head_id)) 乘机次数,
 count(distinct(h.flights_order_head_id))/count(distinct(h.codeno)) 平均乘机次数,
 sum(t1.book_num) 辅收数量,
 sum(t1.book_fee)/count(distinct(h.flights_order_head_id)) 平均辅收金额,
 sum(case when h.ticket_price=0 then fct.yhq_money
 else h.ticket_price end )/count(distinct(h.flights_order_head_id)) 平均乘机票价
from dw.fact_order_detail h
left join dw.da_lyuser l on h.codeno = l.codeno
left join dw.da_user_level t on t.users_id = l.users_id_fk
left join( 
select od.flights_order_head_id,sum(od.book_num) book_num,sum(od.book_fee) book_fee 
from dw.fact_other_order_detail od 
where od.flag_id = 40
and od.company_id = 0
and od.xtype_id not in (24, 25, 34)
group by od.flights_order_head_id
) t1 on h.flights_order_head_id = t1.flights_order_head_id
left join dw.fact_combo_ticket fct on h.flights_order_head_id=fct.flights_order_head_id
where h.flights_date >= trunc(sysdate) - 365
and h.flights_date <= trunc(sysdate)
and h.flag_id = 40
and t.memberlevelid in (2, 3, 4)
group by
case 
         when t.memberlevelid = 2 then
          '普卡'
         when t.memberlevelid = 3 then
          '银卡'
         when t.memberlevelid = 4 then
          '金卡'
end;


 ------449、各省份对应的航班量及计划量

select t2.province,count(distinct t1.flights_id),suM(t1.oversale)
 from dw.da_flight t1
 left join hdb.cq_airport t2 on t1.originairport=t2.threecodeforcity
 where t1.flight_date>=to_date('2021-10-31','yyyy-mm-dd')
 and t1.flight_date< to_date('2021-11-07','yyyy-mm-dd')
 and t1.company_id=0
 and t1.flag=0
 group by t2.province

-------------------------------------------------------20211021------------------------------------------------

 ------450、兰州出港数据-志刚总临时提取

select t1.flights_order_id,t1.r_order_date,t1.r_flights_date,t1.whole_segment,t1.ticket_price,t1.r_com_rate,t2.price
 from cqsale.cq_order_head@to_air t1
 left join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.r_order_date>=trunc(sysdate)
 and t1.flag_id in(3,5,40,41)
 and t1.whole_segment like 'LHW%'
 and t2.flag=0
 group by t1.r_flights_date,t1.whole_segment;

 
 ------451、

--运网临时提取---春秋航空2018年、2019年、2020年各条航线往返旅客吞吐量、客座率、航班量、座公里利润（含辅）


select to_char(t1.flight_date,'mm') 年,dim1.wf_segment_name 往返航线,sum(t1.total_income-t1.tax_fee) 不含税收入,
sum(t1.round_time) round_time
  from hdb.recent_flights_cost t1
  left join (
  select distinct route_name,wf_segment_name
   from dw.dim_segment_type ) dim1 on t1.route_name=dim1.route_name
   where t1.flight_date>=to_date('2020-10-01','yyyy-mm-dd')
     and t1.flight_date< to_date('2021-10-01','yyyy-mm-dd')
     and t1.total_cost>0
     and t1.checkin_s_mile>0
    group by to_char(t1.flight_date,'mm') ,dim1.wf_segment_name;

 ------452、

--1020日套票bug
 ---购买人账号、金额、产品名称、购买时间

select t1.buy_user_id 购买人账号,t2.realname 姓名,t1.BUY_CONTACT_PHONE 购买人联系方式,t1.combo_price 套票金额,t1.combo_name 套票名称,t1.CREATE_DATE 购买时间,
       decode(t1.STATUS,0,'未兑换',1,'已兑换',2,'已退',3,'后台取消') 状态,t1.combo_order_no 套票订单号
      
 from yhq.cq_yhq_unlimited_combo@to_air t1
 left join dw.da_lyuser t2 on t1.buy_user_id=t2.users_id_fk
 where t1.CREATE_DATE>=trunc(sysdate)-1;

-----------------------------------------------------------------20211022---------------------------------------------------------

 ------453、省钱卡销售记录

select t1.flights_segment_name,count(1) 总使用量,
sum(case when t.cabin_name='P2' then 1 else 0 end) p2使用量,
sum(case when t.cabin_name='P2' then case when t.cabin_name = 'P2' and
pr.min_seat_price * nvl(pr.RATE, 1) > o.ticket_price * o.r_com_rate then
pr.min_seat_price * nvl(pr.RATE, 1) - o.ticket_price * o.r_com_rate
else 0 end
else 0 end) p2优惠金额,
sum(case when t.cabin_name='P5' then 1 else 0 end) p5使用量,
sum(case when t.cabin_name='P5' then t.discount_price else 0 end) p5优惠金额
from cqsale.cq_order_head@to_air o
left join CQSALE.CQ_CARD99_ORDER_RECORD@to_air t on t.order_head_id =o.flights_order_head_id
left join yhq.cq_tjk_combo@to_air t2 on t.CARD_ID=t2.COMBO_ORDER_NO
left join cqsale.cq_min_price_rcd@to_air pr on o.flights_order_head_id = pr.order_head_id
left join dw.da_flight t1 on o.segment_head_id=t1.segment_head_id
where o.flag_id in (3, 5, 40)
and o.whole_flight like '9C%'
--针对新老接口的P2/P5舱省钱卡销售进行筛选
and (case when nvl(t.cabin_name,'-') in ('P2', 'P5') and t.CARD_TYPE=1 then t.cabin_name
when o.seats_name in ('P2', 'P5') and nvl(t.CARD_TYPE,1)=1 then o.seats_name else '-' end) in ('P2', 'P5')
${if(goods_id=='',"","and nvl(t2.COMBO_ID,'11') in ('"+goods_id+"')")}
and o.r_order_date >= to_date('2021-09-27 09:40:00', 'yyyy-mm-dd hh24:mi:ss')
and o.r_order_date>=to_date('${sdate}','yyyy-mm-dd')
and o.r_order_date< to_date('${edate}','yyyy-mm-dd')+1
${if(cabin_name=='',"","and t.cabin_name in ('"+cabin_name+"')")}
group by t1.flights_segment_name
order by 3 desc;

-----------------------------------------------------------20211023--------------------------------------------------------
 ------454、

--2019年春秋航空上海（分虹浦）通达至各个城市的往返旅客吞吐量

select t2.originairport_name,t2.destairport_name,count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=to_date('2019-01-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2020-01-01','yyyy-mm-dd')
  and t1.flag_id=40
  and t1.seats_name is not null
  and t1.company_id=0
  and t2.flights_city_name like '%上海%'
  group by t2.originairport_name,t2.destairport_name;


--------------------------------------------------------------------------20211026-----------------------------------------------------------
 ------455、
select t2.province,count(distinct t1.flights_id),suM(t1.oversale)
 from dw.da_flight t1
 left join hdb.cq_airport t2 on t1.originairport=t2.threecodeforcity
 where t1.flight_date>=to_date('2021-10-31','yyyy-mm-dd')
 and t1.flight_date< to_date('2021-11-07','yyyy-mm-dd')
 and t1.company_id=0
 and t1.nationflag='国内'
 and t1.flag=0
 and (regexp_like(t2.province,'辽宁|江西|安徽|河北|浙江|甘肃|江苏') or 
 t1.originairport_name='揭阳')
 group by t2.province
 
 union all
 
 
 select t2.province,count(distinct t1.flights_id),suM(t1.oversale)
 from dw.da_flight t1
 left join hdb.cq_airport t2 on t1.destairport=t2.threecodeforcity
 where t1.flight_date>=to_date('2021-10-31','yyyy-mm-dd')
 and t1.flight_date< to_date('2021-11-07','yyyy-mm-dd')
 and t1.company_id=0
 and t1.nationflag='国内'
  and (regexp_like(t2.province,'辽宁|江西|安徽|河北|浙江|甘肃|江苏') or 
 t1.destairport_name='揭阳') 
 and t1.flag=0
 group by t2.province;



 select count(distinct t1.flights_id),suM(t1.oversale)
 from dw.da_flight t1
 left join hdb.cq_airport t2 on t1.originairport=t2.threecodeforcity
 where t1.flight_date>=to_date('2021-10-31','yyyy-mm-dd')
 and t1.flight_date< to_date('2021-11-07','yyyy-mm-dd')
 and t1.company_id=0
 and t1.nationflag='国内'
 and t1.flag=0

----------------------------------------------------------------20211027---------------------------------------------------------------------
 ------456、取消航班-涉及人数及收入

select t.flight_date,t.flight_no,t.segment_code,t2.flights_segment_name,t2.route_name,sum(t.BACK_NUM+t.CHANGE_NUM+t.REMAIN_NUM),
sum(t.BACK_TKTFEE+t.BACK_ADFEE+t.CHANGE_TKTFEE+t.CHANGE_ADFEE+t.REMAIN_TKTFEE+t.REMAIN_ADFEE)
 from dw.tw_unnormal_flight t
 join dw.da_flight t2 on t.segment_head_id=t2.segment_head_id
 where t.flight_date>=to_date('2021-01-01','yyyy-mm-dd')
 and t.flight_date< to_date('2021-11-01','yyyy-mm-dd')
 and unnormaltype like '%取消%'
 group by t.flight_date,t.flight_no,t.segment_code,t2.flights_segment_name,t2.route_name;


 ------457、自己乘机和给他人购票

select /*+parallel(4)*/
flightyear 航班年,
dd 自己的乘机次数,
 board 总购票数,
 count(1) 人数
  from (select  
  
  case
            when to_char(t.flights_date,'yyyymm') in
                 ('201601', '201602', '201603', '201604', '201605', '201606') then
             '201601-201606'
            when to_char(t.flights_date,'yyyymm') in
                 ('201607', '201608', '201609', '201610', '201611', '201612') then
             '201607-201612'
            when to_char(t.flights_date,'yyyymm') in
                 ('201701', '201702', '201703', '201704', '201705', '201706') then
             '201701-201706'
            when to_char(t.flights_date,'yyyymm') in
                 ('201707', '201708', '201709', '201710', '201711', '201712') then
             '201707-201712'
            when to_char(t.flights_date,'yyyymm') in
                 ('201801', '201802', '201803', '201804', '201805', '201806') then
             '201801-201806'
            when to_char(t.flights_date,'yyyymm') in
                 ('201807', '201808', '201809', '201810', '201811', '201812') then
             '201807-201812'
            when to_char(t.flights_date,'yyyymm') in
                 ('201901', '201902', '201903', '201904', '201905', '201906') then
             '201901-201906'
            when to_char(t.flights_date,'yyyymm') in
                 ('201907', '201908', '201909', '201910', '201911', '201912') then
             '201907-201912'
            when to_char(t.flights_date,'yyyymm') in
                 ('202001', '202002', '202003', '202004', '202005', '202006') then
             '202001-202006'
            when to_char(t.flights_date,'yyyymm') in
                 ('202007', '202008', '202009', '202010', '202011', '202012') then
             '202007-202012'
            when to_char(t.flights_date,'yyyymm') in
                 ('202101', '202102', '202103', '202104', '202105', '202106') then
             '202101-202106'
                end flightyear,
  
  client_id,               
               count(distinct case when t.traveller_name = u.realname or lu.realname = t.traveller_name or t.codeno = lu.codeno  then
               t.flights_Order_id
               else 
               null
               end) dd,
               count(distinct t.flights_Order_id) board               
          from dw.fact_order_detail t
           left join stg.p_cq_pay_gate g on g.id = pay_gate
           left join dw.da_b2c_user u on t.client_id = u.users_id
           LEFT JOIN DW.DA_LYUSER LU ON LU.USERS_ID_FK = T.CLIENT_ID
           left join dw.da_restrict_userinfo@to_ods ll on ll.users_id=t.client_id
         where company_id = 0
           and flights_date >= to_date('2016-01-01', 'yyyy-mm-dd')
           and flights_date < to_date('2021-07-01', 'yyyy-mm-dd')
           and client_id <>0 
           and ll.users_id is null
           and channel in ('网站','手机')
           and not regexp_like(g.gate_name, '易宝|商旅卡') 
           and seats_name not in ('O')
         group by  case
            when to_char(t.flights_date,'yyyymm') in
                 ('201601', '201602', '201603', '201604', '201605', '201606') then
             '201601-201606'
            when to_char(t.flights_date,'yyyymm') in
                 ('201607', '201608', '201609', '201610', '201611', '201612') then
             '201607-201612'
            when to_char(t.flights_date,'yyyymm') in
                 ('201701', '201702', '201703', '201704', '201705', '201706') then
             '201701-201706'
            when to_char(t.flights_date,'yyyymm') in
                 ('201707', '201708', '201709', '201710', '201711', '201712') then
             '201707-201712'
            when to_char(t.flights_date,'yyyymm') in
                 ('201801', '201802', '201803', '201804', '201805', '201806') then
             '201801-201806'
            when to_char(t.flights_date,'yyyymm') in
                 ('201807', '201808', '201809', '201810', '201811', '201812') then
             '201807-201812'
            when to_char(t.flights_date,'yyyymm') in
                 ('201901', '201902', '201903', '201904', '201905', '201906') then
             '201901-201906'
            when to_char(t.flights_date,'yyyymm') in
                 ('201907', '201908', '201909', '201910', '201911', '201912') then
             '201907-201912'
            when to_char(t.flights_date,'yyyymm') in
                 ('202001', '202002', '202003', '202004', '202005', '202006') then
             '202001-202006'
            when to_char(t.flights_date,'yyyymm') in
                 ('202007', '202008', '202009', '202010', '202011', '202012') then
             '202007-202012'
            when to_char(t.flights_date,'yyyymm') in
                 ('202101', '202102', '202103', '202104', '202105', '202106') then
             '202101-202106'
                end,
         
         client_id
                  )
                  group by flightyear,dd,board;

-----------------------------------------------------------------------20211104-----------------------------------------------------
 ------458、省钱卡、组合产品、套票、立减相关sql逻辑


select t1.order_day,
       case
         when t1.ahead_days <= 3 then
          '00~03'
         when t1.ahead_days <= 7 then
          '04~07'
         when t1.ahead_days <= 15 then
          '08~15'
         when t1.ahead_days <= 30 then
          '15~30'
         when t1.ahead_days <= 60 then
          '31~60'
         when t1.ahead_days <= 90 then
          '61~90'
         when t1.ahead_days > 90 then
          '90+'
       end,
       case
         when t1.is_swj >= 1 then
          '尊享飞'
         when t1.EX_CFD6 is not null then
          cp.set_name
         else
          '惠选飞'
       end,
       t2.segment_type,
       t2.flights_segment_name,
       t2.flights_city_name,
       t2.route_name,
       t9.wf_segment_name,
       t9.wf_city_name,
       t9.wf_segment,
       replace(replace(replace(t9.wf_segment, '虹桥', '上海'),
                       '浦东',
                       '上海'),
               '茅台',
               '遵义') wf_city,
       case
         when t1.channel in ('网站', '手机') and t8.users_id is not null then
          '代理'
         when t1.channel in ('网站', '手机') and
              regexp_like(t1.gate_name, '易宝|商旅卡') then
          '易宝商旅卡'
         when t1.channel in ('OTA', '旗舰店') then
          'OTA'
         else
          t1.channel
       end,
       case
         when t1.channel in ('网站', '手机') and t1.station_id <= 1 then
          '网站'
         when t1.channel in ('网站', '手机') and t1.station_id = 2 then
          'M站'
         when t1.channel in ('网站', '手机') and t1.station_id in (3, 8) then
          'IOS'
         when t1.channel in ('网站', '手机') and t1.station_id in (4, 9) then
          'Android'
         when t1.channel in ('网站', '手机') and t1.station_id in (5, 10, 6) then
          '小程序'
         else
          t1.sub_channel
       end,
       case
         when t4.flights_order_head_id is not null and
              nvl(t4.is_beneficiary, 0) = 1 then
          '亲友立减'
         when t4.flights_order_head_id is not null and
              nvl(t4.is_beneficiary, 0) = 0 then
          '绿翼立减'
         else
          '非绿翼立减'
       end 绿翼立减类型,
       case
         when t7.flights_order_head_id is not null then
          '套票'
         else
          '非套票'
       end 是否套票,
       case
         when t1.seats_name in ('P2', 'P5') and
              nvl(t3.cabin_name, '-') in ('P2', 'P5') and t.card_type = 1 then
          '省钱卡'
         when t1.seats_name in ('P2', 'P5') and nvl(t3.CARD_TYPE, 1) = 1 and
              t1.channel in ('网站', '手机') then
          '省钱卡'
         else
          '非省钱卡'
       end 是否省钱卡购票,
       case
         when tb1.age < 12 then
          '<12'
         when tb1.age < 18 then
          '12~17'
         when tb1.age < 24 then
          '18~23'
         when tb1.age <= 30 then
          '24~30'
         when tb1.age <= 40 then
          '31~40'
         when tb1.age <= 50 then
          '41~50'
         when tb1.age <= 60 then
          '51~60'
         when tb1.age <= 70 then
          '61~70'
         when tb1.age > 70 then
          '70+'
       end age,
       decode(tb1.gender, 0, '-', 1, '男', 2, '女') gender,
       count(1),
       sum(t1.ticket_price),
       sum(t1.price)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.dim_comb_product cp on cp.type_id = t1.ex_cfd6
                                  and cp.id = nvl(t1.ex_nfd4, 1) --组合产品维表
  left join cqsale.cq_card99_order_record@to_air t3 on t3.order_head_id =
                                                       t1.flights_order_head_id --省钱卡
  left join dw.fact_combo_ticket t7 on t1.flights_order_head_id =
                                       t7.flights_order_head_id --套票
  left join dw.da_restrict_userinfo@to_ods t8 on t1.client_id = t8.users_id --黑代识别
  left join dw.dim_segment_type t9 on t2.h_route_id = t9.h_route_id
                                  and t2.route_id = t9.route_id --往返航线维表
  left join dw.bi_order_region tb1 on t1.flights_order_head_id =
                                      tb1.flights_order_head_id --归属地判断
  left join (select t1.flights_order_head_id,
                    nvl(t1.is_beneficiary, 0) is_beneficiary,
                    t1.youhui_result
               from stg.c_cq_order_youhui_detail t1 --绿翼立减
               join stg.c_cq_youhui_policy_main t2 on t1.youhui_id = t2.id
              where t1.product_type = 0
                and t1.yh_ret_time is null
                and t1.youhui_result is not null
                and t2.YH_STYLE = 2
                and t1.create_date >= trunc(sysdate) - 7) t4 on t1.flights_order_head_id =
                                                                t4.flights_order_head_id
 where t1.order_day >= trunc(sysdate) - 1
   and t1.order_day < trunc(sysdate)
   and t1.seats_name not in ('B', 'G', 'G1', 'G2', 'O')
   and t2.flag <> 2
   and t1.flag_id in (3, 5, 40, 41)
   and t1.seats_name is not null
   and t1.whole_flight like '9C%'
 group by t1.order_day,
          case
            when t1.ahead_days <= 3 then
             '00~03'
            when t1.ahead_days <= 7 then
             '04~07'
            when t1.ahead_days <= 15 then
             '08~15'
            when t1.ahead_days <= 30 then
             '15~30'
            when t1.ahead_days <= 60 then
             '31~60'
            when t1.ahead_days <= 90 then
             '61~90'
            when t1.ahead_days > 90 then
             '90+'
          end,
          case
            when t1.is_swj >= 1 then
             '尊享飞'
            when t1.EX_CFD6 is not null then
             cp.set_name
            else
             '惠选飞'
          end,
          t2.segment_type,
          t2.flights_segment_name,
          t2.flights_city_name,
          t2.route_name,
          t9.wf_segment_name,
          t9.wf_city_name,
          t9.wf_segment,
          replace(replace(replace(t9.wf_segment, '虹桥', '上海'),
                          '浦东',
                          '上海'),
                  '茅台',
                  '遵义'),
          case
            when t1.channel in ('网站', '手机') and t8.users_id is not null then
             '代理'
            when t1.channel in ('网站', '手机') and
                 regexp_like(t1.gate_name, '易宝|商旅卡') then
             '易宝商旅卡'
            when t1.channel in ('OTA', '旗舰店') then
             'OTA'
            else
             t1.channel
          end,
          case
            when t1.channel in ('网站', '手机') and t1.station_id <= 1 then
             '网站'
            when t1.channel in ('网站', '手机') and t1.station_id = 2 then
             'M站'
            when t1.channel in ('网站', '手机') and t1.station_id in (3, 8) then
             'IOS'
            when t1.channel in ('网站', '手机') and t1.station_id in (4, 9) then
             'Android'
            when t1.channel in ('网站', '手机') and t1.station_id in (5, 10, 6) then
             '小程序'
            else
             t1.sub_channel
          end,
          case
            when t4.flights_order_head_id is not null and
                 nvl(t4.is_beneficiary, 0) = 1 then
             '亲友立减'
            when t4.flights_order_head_id is not null and
                 nvl(t4.is_beneficiary, 0) = 0 then
             '绿翼立减'
            else
             '非绿翼立减'
          end,
          case
            when t7.flights_order_head_id is not null then
             '套票'
            else
             '非套票'
          end,
          case
            when tb1.age < 12 then
             '<12'
            when tb1.age < 18 then
             '12~17'
            when tb1.age < 24 then
             '18~23'
            when tb1.age <= 30 then
             '24~30'
            when tb1.age <= 40 then
             '31~40'
            when tb1.age <= 50 then
             '41~50'
            when tb1.age <= 60 then
             '51~60'
            when tb1.age <= 70 then
             '61~70'
            when tb1.age > 70 then
             '70+'
          end,
          decode(tb1.gender, 0, '-', 1, '男', 2, '女'),
          case
            when t1.seats_name in ('P2', 'P5') and
                 nvl(t3.cabin_name, '-') in ('P2', 'P5') and t.card_type = 1 then
             '省钱卡'
            when t1.seats_name in ('P2', 'P5') and nvl(t3.CARD_TYPE, 1) = 1 and
                 t1.channel in ('网站', '手机') then
             '省钱卡'
            else
             '非省钱卡'
          end;


--------------------------------------------------------------------------20211105-------------------------------------------------------------------
 ------459、2021年冬春航季全价航线排序

select ttb1.*,ttb1.rid1+ttb1.rid2+ttb1.rid3,dense_rank()over(order by ttb1.rid1+ttb1.rid2+ttb1.rid3 asc)
froM(
select h1.wf_city,h1.oversale,dense_rank()over(order by h1.oversale desc) rid1,
h3.ticketnum,dense_rank()over(order by nvl(h3.ticketnum,0) desc) rid2,
h2.plf,dense_rank()over(order by nvl(plf,0) desc) rid3
froM(
select replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义') wf_city,
sum(t2.oversale) oversale
 from dw.da_flight t2 
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t2.flight_date>=to_date('2021-10-31','yyyy-mm-dd')
   and t2.flight_date<=to_date('2022-03-26','yyyy-mm-dd')
   and t2.flag=0
   and t2.company_id=0
group by replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义'))h1
left join( 
select replace(replace(replace(tb3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义') wf_city,
       sum(tb1.boardnum)/sum(tb2.oversale) plf
 from dw.da_main_order tb1
 join dw.da_flight tb2 on tb1.segment_head_id=tb2.segment_head_id
 left join dw.dim_segment_type tb3 on tb2.h_route_id=tb3.h_route_id and tb2.route_id =tb3.route_id
 where tb1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and tb1.flights_date<=to_date('2021-11-08','yyyy-mm-dd')
   and tb2.flag=0
   and tb2.company_id=0
  group by  replace(replace(replace(tb3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义'))h2 on h1.wf_city=h2.wf_city

left join(
select replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义') wf_city,
count(1) ticketnum
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 where t1.flights_date>=to_date('2020-10-25','yyyy-mm-dd')
   and t1.flights_date<=to_date('2021-03-27','yyyy-mm-dd')
   and t1.ticket_price/t1.price>=0.9
   and t2.flag=0
   and t2.company_id=0
   group by replace(replace(replace(t3.wf_segment,'虹桥','上海'),'浦东','上海'),'茅台','遵义'))h3 on h1.wf_city=h3.wf_city)ttb1;


 -------------------------------------------------------------20211109------------------------------------------------------------------------
 ------460、

select /*+parallel(4) */
to_char(t1.flights_date,'yyyy'),count(1),
sum(case when t3.cust_city like '%苏州%' then 1 else 0 end),
count(distinct t1.flights_date)
  from dw.fact_order_detail t1
  join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
  left join dw.bi_order_region t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t2.flag <> 2
   and t1.flights_date >= to_date('2016-01-01','yyyy-mm-dd')
   and t1.flights_date < trunc(sysdate)
   and t1.seats_name is not NULL
   and t1.flag_id=40
   and t1.company_id=0
   and t2.flights_city_name like '%上海%'
   group by to_char(t1.flights_date,'yyyy')

 ------461、 补订儿童

select *
  from cqsale.CQ_ORDER_GROUP@to_air t1
  join cqsale.cq_order_head@to_air t2 on t1.order_no = t2.flights_order_id
  join dw.fact_order_detail t3 on t2.flights_order_head_id=t3.flights_order_head_id
  where t2.r_order_date>=trunc(sysdate)-1;
  


 ------462、武安总要求的小时收入及OTA占比

select '广州',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%广州%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
 union all
 
 
 select '深圳',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%深圳%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
  union all
   select '厦门',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%厦门%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
   union all
   select '成都',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%成都%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
  union all
   select '重庆',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%重庆%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
  union all
   select '西安',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%西安%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
   union all
   select '沈阳',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%沈阳%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
    union all
   select '哈尔滨',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%哈尔滨%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
    union all
   select '兰州',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%兰州%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
     union all
   select '青岛',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%青岛%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
      union all
   select '大连',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%大连%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
   union all
   select '三亚',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%三亚%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
    union all
   select '北海',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%北海%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
     union all
   select '桂林',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%桂林%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
      union all
   select '遵义',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%遵义%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
       union all
   select '湛江',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%湛江%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
    union all
   select '恩施',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%恩施%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
     union all
   select '香港',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%香港%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
    union all
   select '台北',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%台北%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy')
 
     union all
   select '大阪',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.round_time)
 from hdb.recent_flights_cost t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%大阪%'
 and t1.total_cost>0
 group by to_char(t1.flight_date,'yyyy');



 select '广州',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%广州%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
 union all
 
 
 select '深圳',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%深圳%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
  union all
   select '厦门',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%厦门%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
   union all
   select '成都',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%成都%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
  union all
   select '重庆',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%重庆%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
  union all
   select '西安',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%西安%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
   union all
   select '沈阳',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%沈阳%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
    union all
   select '哈尔滨',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%哈尔滨%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
    union all
   select '兰州',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%兰州%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
     union all
   select '青岛',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%青岛%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
      union all
   select '大连',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%大连%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
   union all
   select '三亚',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%三亚%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
    union all
   select '北海',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%北海%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
     union all
   select '桂林',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%桂林%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
      union all
   select '遵义',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%遵义%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
       union all
   select '湛江',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%湛江%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
    union all
   select '恩施',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%恩施%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
     union all
   select '香港',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%香港%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
    union all
   select '台北',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%台北%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy')
 
     union all
   select '大阪',to_char(t1.flight_date,'yyyy'),sum(t1.total_income),sum(t1.FLIGHT_HOUR)
 from hdb.flights_cost_history t1
 where to_char(t1.flight_date,'yyyy') in('2013','2016','2019') 
 and t1.route_name like '%大阪%'
 and t1.total_cost>0  and t1.flag in(0,1,2)
 group by to_char(t1.flight_date,'yyyy');



 ----OTA占比

 select to_char(t1.flights_date,'yyyy'),sum(case when t1.terminal_id<0 and t1.web_id>0  then 1 else 0 end),
count(1)
 from dw.fact_order_detail t1
 where to_char(t1.flights_date,'yyyy') in('2013','2016','2019')
  and t1.company_id=0
  and t1.seats_name is not null 
  group by to_char(t1.flights_date,'yyyy');
  

---------------------------------------------------------20211109------------------------------------------------------------------------
 ------463、未来3天在线上自有渠道购票的金银卡乘机人，未购买商务经济座，随机赠送商务经济座升舱服务


select t.flights_order_id 订单号,
       l.users_id_fk 用户ID,
       t1.flight_no 航班号,
       t.flights_date 航班日期,
       t.traveller_name 用户姓名,
       t.r_tel 联系电话,
       t1.originairport_name 始发地,
       t1.destairport_name 目的地,
     t1.segment_type 航线类型,
       t.seats_name 舱位,
       case
         when le.memberlevelid = 2 then
          '普卡'
         when le.memberlevelid = 3 then
          '银卡'
         when le.memberlevelid = 4 then
          '金卡'
       end 会员身份,
       case
         when t.ex_cfd6 is null and t.seats_name is not null then
          '普通座'
         when t.ex_cfd6 is not null and t.ex_nfd4 = 1 then
          '经济座'
       end 机票类型,
       t2.order_num 订单人数,
       t1.superseat_num 商务经济座计划数,
       nvl(t3.swj_num, 0) 商务座已销售数,
     tb1.superseat_num 经停商务计划数,
     tb1.swj_num 经停合计销售数,
     tb2.swj_num 上周相同提前期还能销售的数量,
       t1.superseat_num - nvl(t3.swj_num, 0) 商务座剩余可销售数,
       case
         when t4.bx_num is null then
          '未购买'
         else
          '已购'
       end 是否购买保险,
       case
         when t4.zw_num is null then
          '未选座'
         else
          '已选'
       end 是否选座,
       case
         when t4.xl_num is null then
          '未购买行李'
         else
          '已购买'
       end 是否购买线上行李,
       case
         when t4.cs_num is null then
          '未购买餐食'
         else
          '已购买'
       end 是否购买餐食,
       case
         when t4.sjst_num is null then
          '未买升级手提行李'
         else
          '已购买'
       end 是否购买升级手提行李,
       case
         when t4.kd_num is null then
          '未购买快递'
         else
          '已购买'
       end 是否购买快递行程单
  from dw.fact_order_detail t
  join dw.da_flight t1 on t.segment_head_id = t1.segment_head_id
  left join (select t.flights_order_id, t.segment_head_id,count(1) order_num
               from dw.fact_order_detail t
              where t.company_id = 0
                and t.flights_date >= trunc(sysdate)+1
                and t.flights_date <= trunc(sysdate) + 3
              group by t.flights_order_id,t.segment_head_id) t2 on t2.flights_order_id =
                                                 t.flights_order_id  and t2.segment_head_id=t.segment_head_id
                         
                         
 left join (select t.segment_head_id,
                    t.whole_flight,
                    t.flights_date,
                    count(1) swj_num
               from dw.fact_order_detail t
              where t.company_id = 0
                and t.is_swj in (1, 2)
                and t.flights_date >= trunc(sysdate)+1
                and t.flights_date <= trunc(sysdate) + 3
              group by t.segment_head_id, t.whole_flight, t.flights_date) t3 on t.segment_head_id =
                                                                                t3.segment_head_id---商务经济座已销售数
                    
  left join (
  select  h1.whole_flight,h1.flight_date,sum(h1.superseat_num)  superseat_num,sum(h1.swj_num)  swj_num
  from(
  select t.segment_head_id,
                    t.whole_flight,
                    t1.flight_date,
          t1.superseat_num,
                    count(1) swj_num
               from dw.fact_order_detail t
         join dw.da_flight t1 on t.segment_head_id=t1.segment_head_id
              where t.company_id = 0
                and t.is_swj in (1, 2)
                and t.flights_date >= trunc(sysdate)+1
                and t.flights_date <= trunc(sysdate) + 3
              group by t.segment_head_id,
                    t.whole_flight,
                    t1.flight_date,
          t1.superseat_num)h1
    group by h1.whole_flight,h1.flight_date        
        )tb1  on t1.flight_no =tb1.whole_flight and t1.flight_date=tb1.flight_date 
                          
  

 left join (
  select   
                    t1.flight_date,
          t.whole_flight,
          t.whole_segment,
                      count(1) swj_num
               from dw.fact_order_detail t
         join dw.da_flight t1 on t.segment_head_id=t1.segment_head_id
              where t.company_id = 0
                and t.is_swj in (1, 2)
                and t.flights_date  in( trunc(sysdate)+1-7,trunc(sysdate)+2-7,trunc(sysdate)+3-7)
        and ((t.flights_date =trunc(sysdate)+1-7  and t.flights_date-t.order_day=1)
        or (t.flights_date =trunc(sysdate)+2-7  and t.flights_date-t.order_day<=2)
        or  (t.flights_date =trunc(sysdate)+3-7  and t.flights_date-t.order_day<=3)
  
        )
              group by            t1.flight_date,
          t.whole_flight,
          t.whole_segment)tb2   on t.flights_date-7=tb2.flight_date and t.whole_flight=tb2.whole_flight and t.whole_segment=tb2.whole_segment
  
                                         

                    
  left join (select t.flights_order_head_id,
                    sum(case
                          when t.book_type = 1 then
                           1
                        end) bx_num,
                    sum(case
                          when t.xtype_id = 3 then
                           1
                        end) zw_num,
                    sum(case
                          when t.xtype_id in (6, 10, 17, 34) then
                           1
                        end) xl_num,
                    sum(case
                          when t.xtype_id = 7 then
                           1
                        end) cs_num,
                    sum(case
                          when t.xtype_id = 23 then
                           1
                        end) sjst_num,
                    sum(case
                          when t.xtype_id = 18 then
                           1
                        end) kd_num
               from dw.fact_other_order_detail t
              where t.company_id = 0
                and t.flights_date >= trunc(sysdate)+1
                and t.flights_date <= trunc(sysdate) +3
              group by t.flights_order_head_id) t4 on t4.flights_order_head_id =
                                                      t.flights_order_head_id---是否购买辅收产品
  left join dw.da_lyuser l on t.codeno = l.codeno
  left join dw.da_user_level le on le.users_id = l.users_id_fk
 where t1.flag = 0
   and t.company_id = 0
   and t.is_swj not in (1, 2) ---非商务经济座
   and t.flights_date >= trunc(sysdate)+1
   and t.flights_date <= trunc(sysdate)+3
   and (t.ex_cfd6 is null or (t.ex_cfd6 is not null and t.ex_nfd4 = 1)) ---经济座行李和普通座
   and t.channel in ('手机','网站')
   and t.seats_name not in ('G','G1','G2','O','B')
   and t.nationflag = '国内'
   and (t.flights_date - t.birthday)/365 > 3
and not exists(select 1
 from dw.fact_order_detail hp1
where hp1.flights_Order_id=t.flights_order_id
and (hp1.flights_date - hp1.birthday)/365 < 3
and hp1.flights_date>=trunc(sysdate)
and hp1.flights_date< trunc(sysdate)+3
and hp1.segment_head_id=t.segment_head_id)
and le.memberlevelid in (3, 4);

------------------------------------------------------20211111---------------------------------------------------------------------
 ------464、员工优惠票-价差等数据

---------2020年4月之后的数据
select /*+parallel(4) */
flightmonth 航班月份,
       '员工优惠' 类型,
       personnel_id 工号,
       department_name 部门,
       count(distinct client_id) 账号数,
       count(1) 机票数,
       count(distinct codeno) "乘机人数(去重)",
       sum(ticket_price) 机票票面金额,
       sum(minprice) 在售最低金额,       
       sum(ticket_price-minprice) 票面差价
from(
select 
to_char(t1.flights_date, 'yyyymm') flightmonth,
       t.flights_order_head_id,
       t.flights_order_id,
       t.segment_head_id,
       cc.personnel_id ,
       sd.department_name ,
       t.client_id,
       t.codeno,
       t.ticket_price,
       t1.o_type,
       t.seats_name,
       tb3.minprice              
  from  dw.fact_order_detail t 
 left join dw.fact_order_o_detail t1 on t.flights_order_head_id = t1.flights_order_head_id 
  left join cqsale.cq_crew_cust@to_air cc on cc.users_id_fk = t.client_id
  left join cqsale.cq_staff_department@to_air sd on sd.dept_code = cc.dept_code  
  left join(
  select tb2.flights_order_id,tb2.segment_head_id,
  max(ticketprice)over(partition by tb2.segment_head_id order by tb2.order_date rows between 1 preceding and 1 following) minprice
   from 
  (select tb1.flights_order_id,tb1.segment_head_id,tb1.order_date,avg(tb1.ticket_price) ticketprice
             from dw.fact_order_detail tb1
             left join dw.fact_combo_ticket t2 on tb1.flights_order_head_id=t2.flights_order_head_id
             where tb1.terminal_id<0
               and tb1.flights_date >= to_date('2020-11-01', 'yyyy-mm-dd')
               and tb1.flights_date <  to_date('2021-11-01', 'yyyy-mm-dd')
               and tb1.seats_name not in('B','G','G1','G2','P2','P5','D','A','Z','I','J','W') 
               and tb1.sex=1
               and t2.flights_order_head_id is null
               group by tb1.flights_order_id,tb1.segment_head_id,tb1.order_date)tb2) tb3 on tb3.flights_order_id=t.flights_order_id 
               and tb3.segment_head_id=t.segment_head_id
 where t.flights_date >= to_date('2020-11-01', 'yyyy-mm-dd')
   and t.flights_date < to_date('2021-11-01', 'yyyy-mm-dd')
   --and nvl(t1.o_type,0) = 4
   and t.company_id = 0
   and t.flag_id = 40
   and t1.o_type=4
   )h1
   group by flightmonth ,
       personnel_id ,
       department_name;


-------------2020年4月之后的数据

select /*+parallel(4) */
flightmonth 航班月份,
       o_type 类型,
       department_name 部门,
       count(distinct client_id) 账号数,
       count(1) 机票数,
       count(distinct codeno) "乘机人数(去重)",
       sum(ticket_price) 机票票面金额,
       sum(minprice) 在售最低金额,       
       sum(minprice-ticket_price) 票面差价
from(
select 
to_char(t1.flights_date, 'yyyymm') flightmonth,
       t.flights_order_head_id,
       t.flights_order_id,
       t.segment_head_id,
       cc.personnel_id ,
       sd.department_name ,
       t.client_id,
       t.codeno,
       t.ticket_price,
       --t1.o_type,
       t.seats_name,
       case  when t1.min_seat_price*t1.RCD_RATE >0 then t1.min_seat_price*t1.RCD_RATE
       when tb3.minprice>0 then tb3.minprice
       when tb3.minprice2>0 then tb3.minprice2
       else null end minprice 
       ,
       decode(t1.o_type,0,'公务出差',1,'销售奖励',2,'宾客优惠',3,'积分奖励',4,'员工优惠',5,'合作机票',6,'营销优惠', 7,'加机组',
       8,'服务优惠票') o_type            
  from  dw.fact_order_detail t 
 join dw.fact_order_o_detail t1 on t.flights_order_head_id = t1.flights_order_head_id 
  left join cqsale.cq_crew_cust@to_air cc on cc.users_id_fk = t.client_id
  left join cqsale.cq_staff_department@to_air sd on sd.dept_code = cc.dept_code  
  left join(
 select tb2.flights_order_id,tb2.segment_head_id,
  max(ticketprice)over(partition by tb2.segment_head_id order by tb2.order_date rows between 1 preceding and 1 following) minprice,
  max(ticketprice)over(partition by tb2.segment_head_id order by tb2.order_date rows between 2 preceding and 2 following) minprice2
   from 
  (select tb1.flights_order_id,tb1.segment_head_id,tb1.order_date,avg(tb1.ticket_price) ticketprice
             from dw.fact_order_detail tb1
             left join dw.fact_combo_ticket t2 on tb1.flights_order_head_id=t2.flights_order_head_id
             where  tb1.flights_date >= to_date('2020-04-01', 'yyyy-mm-dd')
               and tb1.flights_date <  to_date('2021-12-29', 'yyyy-mm-dd')
               and tb1.seats_name not in('B','G','G1','G2','P2','P5','D','A','Z','I','J','W') 
               and tb1.sex=1  
               --and tb1.segment_head_id=1758670       
               and t2.flights_order_head_id is null
               group by tb1.flights_order_id,tb1.segment_head_id,tb1.order_date)tb2               
               ) tb3 on tb3.flights_order_id=t.flights_order_id 
               and tb3.segment_head_id=t.segment_head_id
 where t.flights_date >= to_date('2020-04-01', 'yyyy-mm-dd')
   and t.flights_date < to_date('2021-12-29', 'yyyy-mm-dd')
   --and nvl(t1.o_type,0) = 4
   and t.company_id = 0
   and t.flag_id = 40
   --and t.flights_order_id='ZBJTSY'
   --and t1.o_type=4
   )h1
   group by flightmonth ,h1.o_type,
       department_name;

---2020年4月之前数据

select to_char(t1.flights_date, 'yyyymm') 航班月份,
       decode(t1.o_type,0,'公务出差',1,'销售奖励',2,'宾客优惠',3,'积分奖励',4,'员工优惠',5,'合作机票',6,'营销优惠', 7,'加机组',
       8,'服务优惠票') o_type,
       sd.department_name,
       count(distinct t1.client_id) 账号数,
       count(1) 机票数,
       count(distinct t.codeno) "乘机人数(去重)",
       sum(t1.ticket_price) 机票票面金额,
       sum(t1.min_seat_price * nvl(t1.rcd_rate, 1)) 在售最低金额,
       sum(t1.min_seat_price * nvl(t1.rcd_rate, 1))-sum(t1.ticket_price) 票面差价
  from dw.fact_order_o_detail t1
  join dw.fact_order_detail t on t.flights_order_head_id = t1.flights_order_head_id
  left join cqsale.cq_crew_cust@to_air cc on cc.users_id_fk = t.client_id
  left join cqsale.cq_staff_department@to_air sd on sd.dept_code = cc.dept_code  
 where t1.flights_date >= to_date('2020-01-01', 'yyyy-mm-dd')
   and t1.flights_date < to_date('2020-05-01', 'yyyy-mm-dd')
     and t1.company_id = 0
   and t1.flag_id = 40
 group by to_char(t1.flights_date, 'yyyymm') ,
       decode(t1.o_type,0,'公务出差',1,'销售奖励',2,'宾客优惠',3,'积分奖励',4,'员工优惠',5,'合作机票',6,'营销优惠', 7,'加机组',
       8,'服务优惠票') ,
       sd.department_name;

       
-------------------------------------------------------------20211112---------------------------------------------------------
 ------465、

select tb1.*
from(
select t1.name||coalesce(t1.second_name,'') sname,t1.codeno,
       t1.flights_order_head_id,
        t2.flights_segment_name,
        getbirthday(t1.codeno) birthday,
        getgender(t1.codeno) gender,
        t2.mile,
        to_char(t1.r_flights_date,'yyyy') syear,
        t1.r_flights_date,       
        t2.origincity_name,
        t2.destcity_name,
        count(1),
        sum(count(1))over(partition by t1.name||coalesce(t1.second_name,''),t1.codeno) totalnum,
        min(t1.r_flights_date)over(partition by t1.name||coalesce(t1.second_name,''),t1.codeno) minflightdate,
        max(t1.r_flights_date)over(partition by t1.name||coalesce(t1.second_name,''),t1.codeno) maxflightdate        
    from stg.s_cq_order_head t1
    join dw.da_flight t2 on t1.segment_head_id=t2.segment_Head_id
    where t1.whole_flight like '9C%'
     and t1.r_flights_date>=to_date('2005-07-18','yyyy-mm-dd')
     and t1.r_flights_date< trunc(sysdate)
     and t1.flag_id=40
     and t1.sex =1
     and t1.seats_name is not null 
     and t1.codeno is not null
     group by t1.name||coalesce(t1.second_name,''),t1.codeno,
       t1.flights_order_head_id,
        t2.flights_segment_name,
        getbirthday(t1.codeno) ,
        getgender(t1.codeno) ,
        to_char(t1.r_flights_date,'yyyy'),
        t2.mile,
        t1.r_flights_date,       
        t2.origincity_name,
        t2.destcity_name)tb1
        where totalnum>=1000;
     

 ------466、


select split_part(timestamp, ' ', 1) 日期,
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133',
                                         '153',
                                         '162',
                                         '168',
                                         '169',
                                         '173',
                                         '174',
                                         '177',
                                         '179',
                                         '180',
                                         '181',
                                         '189',
                                         '189',
                                         '191',
                                         '196',
                                         '197',
                                         '199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130',
                                         '131',
                                         '132',
                                         '140',
                                         '146',
                                         '155',
                                         '156',
                                         '163',
                                         '166',
                                         '167',
                                         '171',
                                         '175',
                                         '176',
                                         '185',
                                         '186',
                                         '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',
                                         '135',
                                         '136',
                                         '137',
                                         '138',
                                         '139',
                                         '144',
                                         '147',
                                         '148',
                                         '150',
                                         '151',
                                         '152',
                                         '157',
                                         '158',
                                         '159',
                                         '165',
                                         '172',
                                         '178',
                                         '182',
                                         '183',
                                         '184',
                                         '187',
                                         '188',
                                         '195',
                                         '198') then
          '移动'
       end 运营商
       
      , 
       count(1) 条数
  from dw.fact_threevaild_detail t1
 where t1.respcode in
       ('P300', 'P301', 'P305', 'P306', 'P307', 'SJ', 'NM', 'ID')
       and split_part(timestamp, ' ', 1)>='2021-10-01'
       and split_part(timestamp, ' ', 1)<='2021-10-31'
 group by split_part(timestamp, ' ', 1),
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133',
                                         '153',
                                         '162',
                                         '168',
                                         '169',
                                         '173',
                                         '174',
                                         '177',
                                         '179',
                                         '180',
                                         '181',
                                         '189',
                                         '189',
                                         '191',
                                         '196',
                                         '197',
                                         '199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130',
                                         '131',
                                         '132',
                                         '140',
                                         '146',
                                         '155',
                                         '156',
                                         '163',
                                         '166',
                                         '167',
                                         '171',
                                         '175',
                                         '176',
                                         '185',
                                         '186',
                                         '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',
                                         '135',
                                         '136',
                                         '137',
                                         '138',
                                         '139',
                                         '144',
                                         '147',
                                         '148',
                                         '150',
                                         '151',
                                         '152',
                                         '157',
                                         '158',
                                         '159',
                                         '165',
                                         '172',
                                         '178',
                                         '182',
                                         '183',
                                         '184',
                                         '187',
                                         '188',
                                         '195',
                                         '198') then
          '移动'
       end;

---------------------------------------------------20211115---------------------------------------------------------------
 ------467、

/*1. 2019年11月-2020年10月 韩文官网终端销售机票数量
2. 2020年11月-2021年10月 韩文官网终端销售机票数量*/


select to_char(t1.flights_date,'yyyy-mm'),count(1)
  from dw.fact_order_detail t1
  where t1.flights_date>=to_date('2019-11-01','yyyy-mm-dd')
  and t1.flights_date< to_date('2021-11-01','yyyy-mm-dd')
  and t1.order_language ='韩文'
  and t1.company_id=0
  and t1.seats_name is not null
  group by to_char(t1.flights_date,'yyyy-mm');

 ------468、乘机频次数据

select /*+parallel(4) */
t1.name||coalesce(t1.second_name,'') sname,t1.codeno,
        min(getbirthday(t1.codeno)) birthday,
        count(1)     
    from stg.s_cq_order_head t1
    join dw.da_flight t2 on t1.segment_head_id=t2.segment_Head_id
    where t1.whole_flight like '9C%'
     and t1.r_flights_date>=to_date('2005-07-18','yyyy-mm-dd')
     and t1.r_flights_date< trunc(sysdate)
     and t1.flag_id=40
     and t1.sex =1
     and t1.seats_name <>'O'
     and t1.seats_name is not null 
     and t1.codeno is not null
     group by t1.name||coalesce(t1.second_name,'') ,t1.codeno
     having count(1)>=100;
     

 ------469、

 select trunc(t1.money_date),t1.seats_name,
case when t1.money_fy=0 then '0元'
else '非0元' end ,
case when t3.segment_head_id is not null then '套票'
else '非套票' end,
t2.flights_city_name,
case when t2.flag=2 then '取消'
else '非取消' end,
count(1)
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.money_date>=trunc(sysdate)-2
 and t2.company_id=0
 group by trunc(t1.money_date),t1.seats_name,
case when t1.money_fy=0 then '0元'
else '非0元' end ,
case when t3.segment_head_id is not null then '套票'
else '非套票' end,
t2.flights_city_name,
case when t2.flag=2 then '取消'
else '非取消' end;



 ------470、


select count(distinct t2.wf_segment_name)
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id =t2.route_id
 where t1.company_id=0
 and t1.flight_date>=to_date('2017-10-29','yyyy-mm-dd')
 and t1.flight_date<=to_date('2018-10-27','yyyy-mm-dd')
 and t1.flag=0
 and not exists(select 1
 from dw.da_flight tt1
 join dw.dim_segment_type tt2 on tt1.h_route_id=tt2.h_route_id and tt1.route_id =tt2.route_id
 where tt1.company_id=0
 and tt1.flight_date>=to_date('2016-10-30','yyyy-mm-dd')
 and tt1.flight_date<=to_date('2017-10-28','yyyy-mm-dd')
 and tt1.flag=0
 and t2.wf_segment_name=tt2.wf_segment_name);



 select count(distinct t2.wf_segment_name)
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id =t2.route_id
 where t1.company_id=0
 and t1.flight_date>=to_date('2016-10-30','yyyy-mm-dd')
 and t1.flight_date<=to_date('2017-10-28','yyyy-mm-dd')
 and t1.flag=0
 and not exists(select 1
 from dw.da_flight tt1
 join dw.dim_segment_type tt2 on tt1.h_route_id=tt2.h_route_id and tt1.route_id =tt2.route_id
 where tt1.company_id=0
 and tt1.flight_date>=to_date('2015-10-25','yyyy-mm-dd')
 and tt1.flight_date<=to_date('2016-10-29','yyyy-mm-dd')
 and tt1.flag=0
 and t2.wf_segment_name=tt2.wf_segment_name);


 select count(distinct t2.originairport)
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id =t2.route_id
 where t1.company_id=0
 and t1.flight_date>=to_date('2017-10-29','yyyy-mm-dd')
 and t1.flight_date<=to_date('2018-10-27','yyyy-mm-dd')
 and t1.flag=0
 and not exists(select 1
 from dw.da_flight tt1
 join dw.dim_segment_type tt2 on tt1.h_route_id=tt2.h_route_id and tt1.route_id =tt2.route_id
 where tt1.company_id=0
 and tt1.flight_date>=to_date('2016-10-30','yyyy-mm-dd')
 and tt1.flight_date<=to_date('2017-10-28','yyyy-mm-dd')
 and tt1.flag=0
 and t2.originairport=tt2.originairport);


 select count(distinct t2.originairport)
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id =t2.route_id
 where t1.company_id=0
 and t1.flight_date>=to_date('2016-10-30','yyyy-mm-dd')
 and t1.flight_date<=to_date('2017-10-28','yyyy-mm-dd')
 and t1.flag=0
 and not exists(select 1
 from dw.da_flight tt1
 join dw.dim_segment_type tt2 on tt1.h_route_id=tt2.h_route_id and tt1.route_id =tt2.route_id
 where tt1.company_id=0
 and tt1.flight_date>=to_date('2015-10-25','yyyy-mm-dd')
 and tt1.flight_date<=to_date('2016-10-29','yyyy-mm-dd')
 and tt1.flag=0
 and t2.originairport=tt2.originairport);


------471、

---恶意占位相关数据

select distinct hh1.r_flights_date,hh1.route_name,hh1.plannum,hh1.cancelnum,hh1.online_cancelnum,
       hh1.tktnum,max(hh1.o_cancelnum)over(partition by hh1.r_flights_date,hh1.route_name,hh1.plannum,
       hh1.tktnum) maxo,
       percentile_cont(0.9) within  group( order by hh1.o_cancelnum desc) over(partition by hh1.r_flights_date,hh1.route_name,hh1.plannum,
hh1.cancelnum,hh1.online_cancelnum,
       hh1.tktnum) tile_25
from(
select h1.r_flights_date,h1.route_name,h1.plannum,h1.cancelnum,h1.online_cancelnum,
       h1.tktnum,trunc(h3.r_order_date) order_day,sum(case when h3.flag_id=8 and h4.terminal_id<0 and h4.web_id=0 then 1 else 0 end) o_cancelnum
from(
select r_flights_date,route_name,sum(oversale) plannum,
       sum(cancelnum) cancelnum,sum(online_cancelnum) online_cancelnum,suM(tktnum) tktnum
from( 
select t1.r_flights_date,t2.flights_segment_name,t2.route_name,t1.segment_head_id,t2.oversale,sum(case when t1.flag_id=8 then 1 else 0 end) cancelnum,
sum(case when t.terminal_id<0 and t.web_id=0 and  t1.flag_id =8 then 1 else 0 end) online_cancelnum,
count(1) tktnum
 from stg.s_cq_order t
 join stg.s_cq_order_head t1  on t.flights_order_id=t1.flights_order_id
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.r_flights_date>=to_date('2021-10-01','yyyy-mm-dd')
 and t1.r_flights_date<=to_date('2022-01-09','yyyy-mm-dd')
 and t1.r_company_id=0
 --and t2.flag<>0
 group by t1.r_flights_date,t2.flights_segment_name,t2.route_name,t1.segment_head_id,t2.oversale)
 group by r_flights_date,route_name) h1
 join dw.da_flight h2 on h1.r_flights_date=h2.flight_date and h1.route_name=h2.route_name
 join stg.s_cq_order_head h3 on h2.segment_head_id=h3.segment_head_id
 join stg.s_cq_order h4 on h3.flights_order_id=h4.flights_order_id
 ---针对行筛选规则 取消机票量/总机票量>=0.266 (各日期各航线占比9分位数0.266)，线上自营渠道占总取消量大于等于50%
 ---针对总取消量大于10张（大于是总座位数6%左右），取消量/总座位计划量大于等于11.35% （9分位数）
 where h1.cancelnum/h1.tktnum>=0.266
   and h1.online_cancelnum/h1.cancelnum>=0.5
   and h1.cancelnum>=10
   and h1.cancelnum/h1.plannum>=0.1135
   and h3.r_flights_date>=to_date('2021-10-01','yyyy-mm-dd')
   and h3.r_flights_date<=to_date('2022-01-09','yyyy-mm-dd')
   and h3.r_company_id=0
   group by h1.r_flights_date,h1.route_name,h1.plannum,h1.cancelnum,h1.online_cancelnum,
       h1.tktnum,trunc(h3.r_order_date)) hh1;


-----------------------------------------------20211125-----------------------------------------------------------
 ------472、机票改签数据

select mid.money_day,mid.channel,mid.terminal,mid.name,count(distinct flights_order_head_id)
from(
SELECT  m.flights_order_head_id,   
       trunc(m.money_date) money_day,
case
 when cqor.terminal_id < 0 and nvl(cqor.web_id, 0) = 0 and cqor.ex_nfd1 <=2 then '网站'
 when cqor.terminal_id < 0 and nvl(cqor.web_id, 0) = 0 and cqor.ex_nfd1 in(5,6,10) then '小程序'
 when cqor.terminal_id < 0 and nvl(cqor.web_id, 0) = 0 and cqor.ex_nfd1 in(3,8,4,9) then 'APP'
 when cqor.terminal_id in(300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'
 when cqor.terminal_id > 0 and regexp_like(cqte.terminal,'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2G机构客户'
 when regexp_like(cqai.abrv,'TMC|CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then 'B2G机构客户'
 when cqor.web_id > 0 and cqai.abrv like '%航信%' then 'B2B代理'
 when cqor.web_id in (240, 242, 312, 375, 1810, 2505, 3334) then 'B2B代理'
 when nvl(cqor.web_id, 0) > 0 and cqai.agent_type is null then  'B2B'
 when cqai.agent_id is not null then  decode(cqai.agent_type,1,'OTA', 2,'B2B代理', 4,'CPS', 5, 'B2G机构客户')
  end channel,
       
       CASE
         WHEN M.EX_NFD5 IS NULL THEN
          T.TERMINAL
         ELSE
          T3.TERMINAL
       END TERMINAL,
       t4.name
  FROM cqsale.CQ_MONEY_REPORT@to_air       M,
       cqsale.CQ_USER@to_air               U,
       cqsale.CQ_TERMINAL@to_air           T,
       cqsale.CQ_FLIGHT_BG_APP_HEAD@to_air T1,
       cqsale.CQ_FLIGHT_BG_APP@to_air      T2,
       cqsale.CQ_USER@to_air               U3,
       cqsale.CQ_TERMINAL@to_air           T3,
       cqsale.cq_agent_info@to_air         t4,
       cqsale.cq_order@to_air cqor,
         cqsale.cq_terminal@to_air cqte ,
       cqsale.cq_agent_info@to_air cqai 
 WHERE M.MONEY_TERMINAL = T.TERMINAL_ID
   AND M.MONEY_USERS = U.USERS_ID
   AND M.MONEY_NO IS NOT NULL
   AND M.MONEY_FLAG = 1
   AND M.EX_NFD5 = T1.ID(+)
   AND T1.APP_ID = T2.ID(+)
   AND T2.USER_ID = U3.USERS_ID(+)
   AND T2.TERMINAL_ID = T3.TERMINAL_ID(+)
   and t4.agent_id(+) = t2.web_id
   and m.flights_order_id=cqor.flights_order_id(+)
      and cqor.terminal_id=cqte.terminal_id(+)
   and cqor.web_id=cqai.agent_id(+)
   AND M.MONEY_DATE >=  to_date('2020-11-01','yyyy-mm-dd')
   AND M.MONEY_DATE < to_date('2021-11-01','yyyy-mm-dd')
 UNION
SELECT  m.flights_order_head_id,
trunc(m.money_date),
case
 when cqor.terminal_id < 0 and nvl(cqor.web_id, 0) = 0 and cqor.ex_nfd1 <=2 then '网站'
 when cqor.terminal_id < 0 and nvl(cqor.web_id, 0) = 0 and cqor.ex_nfd1 in(5,6,10) then '小程序'
 when cqor.terminal_id < 0 and nvl(cqor.web_id, 0) = 0 and cqor.ex_nfd1 in(3,8,4,9) then 'APP'
 when cqor.terminal_id in(300, 1233, 1309, 1330, 1400, 1401, 1516, 1571, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 3505) then
            '呼叫中心'
 when cqor.terminal_id > 0 and regexp_like(cqte.terminal,'CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then
            'B2G机构客户'
 when regexp_like(cqai.abrv,'TMC|CAACSC|阿斯兰|宝钢国旅|95524|机构客户|集团客户|特航商旅|杭州万途|上海趣卫|华油阳光商旅') then 'B2G机构客户'
 when cqor.web_id > 0 and cqai.abrv like '%航信%' then 'B2B代理'
 when cqor.web_id in (240, 242, 312, 375, 1810, 2505, 3334) then 'B2B代理'
 when nvl(cqor.web_id, 0) > 0 and cqai.agent_type is null then  'B2B'
 when cqai.agent_id is not null then  decode(cqai.agent_type,1,'OTA', 2,'B2B代理', 4,'CPS', 5, 'B2G机构客户')
  end channel,
       CASE
         WHEN M.EX_NFD5 IS NULL THEN
          T.TERMINAL
         ELSE
          T3.TERMINAL
       END TERMINAL,
       t4.name 代理
  FROM cqsale.CQ_BG_MONEY_REPORT@to_air    M,
       cqsale.CQ_USER@to_air               U,
       cqsale.CQ_TERMINAL@tO_AIR           T,
       cqsale.CQ_FLIGHT_BG_APP_HEAD@TO_AIR T1,
       cqsale.CQ_FLIGHT_BG_APP@To_AIR      T2,
       cqsale.CQ_USER@To_AIR               U3,
       cqsale.CQ_TERMINAL@To_AIR           T3,
       cqsale.cq_agent_info@To_air         t4,
       cqsale.cq_order@to_air      cqor,
       cqsale.cq_terminal@to_air cqte ,
       cqsale.cq_agent_info@to_air cqai 
 WHERE M.MONEY_TERMINAL = T.TERMINAL_ID
   AND M.MONEY_USERS = U.USERS_ID
   AND M.MONEY_NO IS NOT NULL
   AND M.MONEY_FLAG = 1
   AND M.EX_NFD5 = T1.ID(+)
   AND T1.APP_ID = T2.ID(+)
   AND T2.USER_ID = U3.USERS_ID(+)
   AND T2.TERMINAL_ID = T3.TERMINAL_ID(+)
   and t4.agent_id(+) = t2.web_id
   and m.flights_order_id=cqor.flights_order_id(+)
      and cqor.terminal_id=cqte.terminal_id(+)
   and cqor.web_id=cqai.agent_id(+)
   AND M.MONEY_DATE >=  to_date('2020-11-01','yyyy-mm-dd')
   AND M.MONEY_DATE <   to_date('2021-11-01','yyyy-mm-dd')
   )mid
   group by mid.money_day,mid.channel,mid.terminal,mid.name;

 -----------------------------------------------------20211201--------------------------------------------------------------
 ------473、经停改直飞的数据

---直接改的逻辑

select t2.flight_date,t2.flight_no,t3.route_name,t4.route_name,count(distinct t2.flight_date||t2.flight_no) 航班量,
case when t3.route_name=split_part(t4.route_name,'－',1)||'－'||split_part(t4.route_name,'－',3) then '经停转直飞AC'
when t4.route_name is not null then '经停转直飞AB/BC'
else '其他' end,
sum(sunshi),
count(distinct t5.flights_order_head_id)

 from (select t1.flight_date,t1.flight_no,min(t1.origin_std) originstd,count(distinct t1.root_route_type)
 from dw.da_flight t1
 where t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
-- and t1.flight_date< to_date('2021-11-01','yyyy-mm-dd')
 group by t1.flight_date,t1.flight_no
 having count(distinct t1.root_route_type)>1) t2 
 join(select t1.flight_date,t1.flight_no,t1.root_route_type,t1.route_name
 from dw.da_flight t1
 where t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
 --and t1.flight_date< to_date('2021-11-01','yyyy-mm-dd')
 and t1.company_id=0
 and t1.flag=0
 and t1.root_route_type like '%实航段%')t3 on t2.flight_date=t3.flight_date and t2.flight_no=t3.flight_no
  left join(select distinct t1.flight_date,t1.flight_no,t1.root_route_type,t1.route_name
 from dw.da_flight t1
 where t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
 --and t1.flight_date< to_date('2021-11-01','yyyy-mm-dd')
 and t1.company_id=0
 and t1.flag=2
 and t1.root_route_type like '%经停%')t4 on t4.flight_date=t3.flight_date and t4.flight_no=t3.flight_no
  --and 
 left join(select t2.flight_date,t2.flight_no,t1.ticketprice,t1.money_fy,t1.money_date,t1.ticketprice-t1.money_fy sunshi,
 flights_order_head_id
               from dw.da_order_drawback t1
               join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
               where t2.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
 --and t2.flight_date< to_date('2021-11-01','yyyy-mm-dd')
 and t2.flag=2
 and t2.root_route_type like '%经停%'
 )t5 on t2.flight_date=t5.flight_date and t2.flight_no=t5.flight_no and t5.money_date>=trunc(t2.originstd)-5/24
 group by t2.flight_date,t2.flight_no,
case when t3.route_name=split_part(t4.route_name,'－',1)||'－'||split_part(t4.route_name,'－',3) then '经停转直飞AC'
when t4.route_name is not null then '经停转直飞AB/BC'
else '其他' end,t3.route_name,t4.route_name;





---直接改的逻辑

select t1.flight_date,t1.flight_no,t2.route_name,count(distinct t1.flight_date||t1.flight_no),
sum(t1.back_num+t1.tktnum_lc1+t1.tktnum_lc2+t1.tktnum_wf1+t1.tktnum_wf2) 影响机票量,
suM(t1.back_tktfee+t1.back_adfee)      
 from dw.tw_unnormal_flight t1 
 join (select t1.flight_date,t1.flight_no,t1.route_name,min(t1.origin_std) originstd,sum(t1.flag)
 from dw.da_flight t1
 where t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
and t1.flight_date< to_date('2021-11-01','yyyy-mm-dd')
and t1.root_route_type like '%经停%'
 group by t1.flight_date,t1.flight_no,t1.route_name
 having sum(t1.flag)=4) t2  on t1.flight_no=t2.flight_no and t1.flight_date=t2.flight_date
 join(select distinct t1.flight_date,t1.flight_no,t1.root_route_type,t1.route_name,t1.flights_segment_name
 from dw.da_flight t1
 where t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
and t1.flight_date< to_date('2021-11-01','yyyy-mm-dd')
 and t1.company_id=0
 and t1.flag=0
 and t1.segment_type like '%AC%'
 and t1.root_route_type like '%经停%')t3 on t2.flight_date=t3.flight_date and t2.flight_no=t3.flight_no
/*  left join(select t2.flight_date,t2.flight_no,t1.ticketprice,t1.money_fy,t1.money_date,t1.ticketprice-t1.money_fy sunshi,
 flights_order_head_id
               from dw.da_order_drawback t1
               join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
               where t2.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
 --and t2.flight_date< to_date('2021-11-01','yyyy-mm-dd')
 and t2.flag=2
 and t2.root_route_type like '%经停%'
 )t5 on t2.flight_date=t5.flight_date and t2.flight_no=t5.flight_no and t5.money_date>=trunc(t2.originstd)-5/24
 group by t2.flight_date,t2.flight_no,
case when t3.route_name=split_part(t4.route_name,'－',1)||'－'||split_part(t4.route_name,'－',3) then '经停转直飞AC'
when t4.route_name is not null then '经停转直飞AB/BC'
else '其他' end,t3.route_name,t4.route_name;*/
where t1.unnormaltype  like '%取消%'
and t1.reason like '%天气%'
and t1.publish_date>=trunc(t1.origin_std)-5/24
group by t1.flight_date,t1.flight_no,t2.route_name


----航班表测试有多少这种航班
select *
 from (select t1.flight_date,t1.flight_no,min(t1.origin_std) originstd,sum(t1.flag)
 from dw.da_flight t1
 where t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
and t1.flight_date< to_date('2021-11-01','yyyy-mm-dd')
and t1.root_route_type like '%经停%'
 group by t1.flight_date,t1.flight_no
 having sum(t1.flag)=4) t2 
 join(select distinct t1.flight_date,t1.flight_no,t1.root_route_type,t1.route_name,t1.flights_segment_name
 from dw.da_flight t1
 where t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
and t1.flight_date< to_date('2021-11-01','yyyy-mm-dd')
 and t1.company_id=0
 and t1.flag=0
 and t1.segment_type like '%AC%'
 and t1.root_route_type like '%经停%')t3 on t2.flight_date=t3.flight_date and t2.flight_no=t3.flight_no
 group by t1.flight_date,t1.flight_no;


-----------------------------------------------------20211201-----------------------------------------------------------------
 ------474、

select tb1.*,tb2.totalnum 单程长段剩下的机票量,
tb2.total_income  单程长段剩下的收入,tb2.vari_cost
from(
select t1.flight_date,t1.flight_no,t2.route_name,count(distinct t1.flight_date||t1.flight_no) 航班量,
sum(t1.back_num+t1.tktnum_lc1+t1.tktnum_lc2+t1.tktnum_wf1+t1.tktnum_wf2) 影响机票量,suM(t1.back_tktfee+t1.back_adfee) 影响机票收入   
 from dw.tw_unnormal_flight t1 
 join (select t1.flight_date,t1.flight_no,t1.route_name,min(t1.origin_std) originstd,sum(t1.flag)
 from dw.da_flight t1
 where t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
and t1.flight_date< to_date('2021-11-01','yyyy-mm-dd')
and t1.root_route_type like '%经停%'
 group by t1.flight_date,t1.flight_no,t1.route_name
 having sum(t1.flag)=4) t2  on t1.flight_no=t2.flight_no and t1.flight_date=t2.flight_date
 join(select distinct t1.flight_date,t1.flight_no,t1.root_route_type,t1.route_name,t1.flights_segment_name
 from dw.da_flight t1
 where t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
and t1.flight_date< to_date('2021-11-01','yyyy-mm-dd')
 and t1.company_id=0
 and t1.flag=0
 and t1.segment_type like '%AC%'
 and t1.root_route_type like '%经停%')t3 on t2.flight_date=t3.flight_date and t2.flight_no=t3.flight_no
 left join dw.da_flight t4 on t1.segment_head_id=t4.segment_head_id 
 group by t1.flight_date,t1.flight_no,t2.route_name)tb1
 left join hdb.recent_flights_cost tb2 on tb1.flight_date=tb2.flight_date and tb1.flight_no=tb2.flight_no
 --where tb1.route_name='浦东－武隆－成都天府'
 

-----------------------------------------------------------20211203------------------------------------------------------------------
 ------475、误操作相关数据提取

 ---退票数据中误操作的数据

select to_char(t1.money_date,'yyyymm'),
case when t1.money_fy=0 then '0元退票'
  when t1.money_fy>0 then '非0元退票' end,count(1),sum(t1.ticketprice),suM(t1.money_fy)
 from dw.da_order_drawback t1
 where t1.money_date>=to_date('2018-11-01','yyyy-mm-dd')
 and t1.money_date< to_date('2021-11-01','yyyy-mm-dd')
 and t1.apply_memo like '%误操作%'
 group by to_char(t1.money_date,'yyyymm'),
case when t1.money_fy=0 then '0元退票'
  when t1.money_fy>0 then '非0元退票' end;
 
 --自有渠道航班起飞前24小时退票，并且退票和订票时间在30分钟内

 select  to_char(t1.money_date,'yyyymm'),case when t1.apply_memo like '%误操作%' then '误操作'
  when t1.money_fy=0 then '0元退票'
  when t1.money_fy>0 then '非0元退票' end,count(1),sum(t1.ticketprice),sum(t1.money_fy)
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join stg.s_cq_order_head t3 on t1.flights_order_head_id=t3.flights_order_head_id
 join stg.s_cq_order t4 on t3.flights_order_id=t4.flights_order_id
 where t1.money_date< t2.origin_std-1
 and t1.money_date-t3.r_order_date< 0.5/24
 and t4.terminal_id=-1
 and t4.web_id=0
 and t1.money_date>=to_date('2018-11-01','yyyy-mm-dd')
 and t1.money_date< to_date('2021-11-01','yyyy-mm-dd')
 group by to_char(t1.money_date,'yyyymm'),case when t1.apply_memo like '%误操作%' then '误操作'
  when t1.money_fy=0 then '0元退票'
  when t1.money_fy>0 then '非0元退票' end




 ------476、

--连续二次取消，第一个航班取消后改签，改签到第二个航班，第二个航班继续取消

select flightmonth,stype,sum(tkt) ,sum(fee),sum(tkt_fee) tkt_fee
 from(
  select to_char(h1.modify_date,'yyyymm') flightmonth,h1.modify_date,h1.old_segment_id,h2.origin_std,h4.publish_date,
  case when h1.money_fy=0 then '0元免费'
  else '非0元免费' end stype,  
  count(1) tkt,sum(h1.money_fy*h1.rate) fee,sum(h1.old_seat_price) tkt_fee
  from dw.da_order_change h1
  join dw.da_flight h2 on h1.old_segment_id=h2.segment_head_id
 left  join dw.da_flight h3 on h1.new_segment_id=h3.segment_head_id
  left join (select segment_head_id,min(publish_date) publish_date  
  from dw.tw_unnormal_flight
  group by segment_head_id)h4 on h2.segment_head_id=h4.segment_head_id
   where h2.flag in(1,2)
    and h3.flag in(1,2)
    and h1.modify_date>=to_date('2019-11-01','yyyy-mm-dd')
    and h1.modify_date< to_date('2021-12-01','yyyy-mm-dd')
    and h1.modify_date> nvl(h4.publish_date,h2.origin_std)
    group by to_char(h1.modify_date,'yyyymm'),h1.old_segment_id,h2.origin_std,h4.publish_date,h1.modify_date,
     case when h1.money_fy=0 then '0元免费'
  else '非0元免费' end
        )
 group by flightmonth,stype;


  
 
--2\ 连续二次取消,第一个航班取消后退票，退票当日后再次购票第二个航班，第二个航哥继续取消


select h1.flightmonth,h1.stype,sum(h1.tkt),sum(h1.fee)
from(
select to_char(t1.money_date,'yyyymm') flightmonth,case when t1.money_fy=0 then '0元免费'
  else '非0元免费' end stype, h4.segment_head_id,t1.money_date,t2.origin_std,h4.publish_date,
  count(1) tkt,sum(t1.money_fy) fee
  from dw.da_order_drawback t1
  join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
   left join (select segment_head_id,min(publish_date) publish_date  
  from dw.tw_unnormal_flight
  group by segment_head_id)h4 on t2.segment_head_id=h4.segment_head_id
  where  t1.money_date>=to_date('2019-11-01','yyyy-mm-dd')
    and t1.money_date< to_date('2021-12-01','yyyy-mm-dd')
    and t2.flag=2
    and t1.money_date> nvl(h4.publish_date,t2.origin_std) 
    and exists(select 1
                from dw.fact_recent_order_detail t3
                join dw.da_flight t4 on t3.segment_head_id=t4.segment_head_id
                where t4.flag=2
                  and t3.order_day=trunc(t1.money_date)
                  and t3.order_date< t1.money_date
                  and t2.segment_code=t4.segment_code
                  and t1.sname=t3.traveller_name
                  and t1.codeno=t3.codeno
                  )
   group by to_char(t1.money_date,'yyyymm'),case when t1.money_fy=0 then '0元免费'
  else '非0元免费' end,h4.segment_head_id,t1.money_date,t2.origin_std,h4.publish_date
  )h1
  group by h1.flightmonth,h1.stype;
  
  
    


 ------477、取消航班的总销量


select '退票' 类型,to_char(h2.flight_date,'yyyymm'),count(1)
from(select segment_head_id, min(publish_date) publish_date
               from dw.tw_unnormal_flight t1
              where t1.unnormaltype like '%取消%'
              group by segment_head_id) h1
  join dw.da_flight h2 on h1.segment_head_id = h2.segment_head_id
  join dw.da_order_drawback h3 on h2.segment_head_id = h3.segment_head_id
  where h2.flag=2
  and h3.money_date> nvl(h1.publish_date,h2.origin_std)
  and h2.flight_date>=date '2020-11-01'
  and h2.flight_date< date '2021-11-01'
  group by to_char(h2.flight_date,'yyyymm')

  union all
  
  
select '未退未改', to_char(h2.flight_date,'yyyymm'),count(1)
from(select segment_head_id, min(publish_date) publish_date
               from dw.tw_unnormal_flight t1
              where t1.unnormaltype like '%取消%'
              group by segment_head_id) h1
  join dw.da_flight h2 on h1.segment_head_id = h2.segment_head_id
  join dw.fact_order_detail h3 on h2.segment_head_id = h3.segment_head_id
  where   h2.flight_date>=date '2020-11-01'
  and h2.flight_date< date '2021-11-01'
  and h3.flag_id in(3,5)
    group by to_char(h2.flight_date,'yyyymm')
    
    
  union all
  
  
  select '改签', to_char(h2.flight_date,'yyyymm'),count(1)
from(select segment_head_id, min(publish_date) publish_date
               from dw.tw_unnormal_flight t1
              where t1.unnormaltype like '%取消%'
              group by segment_head_id) h1
  join dw.da_flight h2 on h1.segment_head_id = h2.segment_head_id
  join dw.da_order_change h3 on h2.segment_head_id = h3.old_segment_id
  where h2.flag=2
  and h3.modify_date> nvl(h1.publish_date,h2.origin_std)
  and h2.flight_date>=date '2020-11-01'
  and h2.flight_date< date '2021-11-01'
  group by to_char(h2.flight_date,'yyyymm');



-------------取消的留存机票


  select '退票' 类型,to_char(h2.flight_date,'yyyymm'),count(1)
from(select segment_head_id, min(publish_date) publish_date
               from dw.tw_unnormal_flight t1
              where t1.unnormaltype like '%取消%'
              group by segment_head_id) h1
  join dw.da_flight h2 on h1.segment_head_id = h2.segment_head_id
  join dw.da_order_drawback h3 on h2.segment_head_id = h3.segment_head_id
  where h2.flag=2
  and h3.money_date> nvl(h1.publish_date,h2.origin_std)
  and h2.flight_date>=date '2020-11-01'
  and h2.flight_date< date '2021-11-01'
  and  exists(select 1
                from dw.fact_recent_order_detail t3
                join dw.da_flight t4 on t3.segment_head_id=t4.segment_head_id
                where t3.order_day=trunc(h3.money_date)
                  and t3.order_date< h3.money_date
                  and h2.segment_code=t4.segment_code
                  and h3.sname=t3.traveller_name
                  and h3.codeno=t3.codeno
                  )
  group by to_char(h2.flight_date,'yyyymm')

  
  union all
  
  
  select '改签', to_char(h2.flight_date,'yyyymm'),count(1)
from(select segment_head_id, min(publish_date) publish_date
               from dw.tw_unnormal_flight t1
              where t1.unnormaltype like '%取消%'
              group by segment_head_id) h1
  join dw.da_flight h2 on h1.segment_head_id = h2.segment_head_id
  join dw.da_order_change h3 on h2.segment_head_id = h3.old_segment_id
  where h2.flag=2
  and h3.modify_date> nvl(h1.publish_date,h2.origin_std)
  and h2.flight_date>=date '2020-11-01'
  and h2.flight_date< date '2021-11-01'
  group by to_char(h2.flight_date,'yyyymm');



 ------478、


-----------再次取消后再次乘坐我司航班


  select '退票' 类型,to_char(h2.flight_date,'yyyymm'),count(1)
from(select segment_head_id, min(publish_date) publish_date
               from dw.tw_unnormal_flight t1
              where t1.unnormaltype like '%取消%'
              group by segment_head_id) h1
  join dw.da_flight h2 on h1.segment_head_id = h2.segment_head_id
  join dw.da_order_drawback h3 on h2.segment_head_id = h3.segment_head_id
  where h2.flag=2
  and h3.money_date> nvl(h1.publish_date,h2.origin_std)
  and h2.flight_date>=date '2020-11-01'
  and h2.flight_date< date '2021-11-01'
  and  exists(select 1
                from dw.fact_recent_order_detail t3
                join dw.da_flight t4 on t3.segment_head_id=t4.segment_head_id 
                where t3.order_day=trunc(h3.money_date)
                  and t3.order_date< h3.money_date
                  and h2.segment_code=t4.segment_code
                  and h3.sname=t3.traveller_name
                  and h3.codeno=t3.codeno
                  and t4.flag=2
                  and exists( select 1 from dw.fact_recent_order_detail t5
                  where t3.codeno=t5.codeno
                  and t3.whole_segment=t5.whole_segment
                  and t3.flights_date<=t5.flights_date
                  and t3.flights_date+3>=t5.flights_date
                  and t3.flights_order_head_id<>t5.flights_order_head_id)
                  )
  group by to_char(h2.flight_date,'yyyymm')

  
  union all
  
  
  select '改签', to_char(h2.flight_date,'yyyymm'),count(1)
from(select segment_head_id, min(publish_date) publish_date
               from dw.tw_unnormal_flight t1
              where t1.unnormaltype like '%取消%'
              group by segment_head_id) h1
  join dw.da_flight h2 on h1.segment_head_id = h2.segment_head_id
  join dw.da_order_change h3 on h2.segment_head_id = h3.old_segment_id
  join dw.da_flight h4 on h3.new_segment_id=h4.segment_head_id
  join dw.da_order_change h5 on h3.new_segment_id=h5.old_segment_id and h3.flights_order_head_id=h5.flights_order_head_id
  where h2.flag=2
  and h4.flag=2
   and h3.modify_date> nvl(h1.publish_date,h2.origin_std)
  and h2.flight_date>=date '2020-11-01'
  and h2.flight_date< date '2021-11-01'
  group by to_char(h2.flight_date,'yyyymm')


-------------------------------------------------------------20211203---------------------------------------------------------------------------
 ------479、新老航线、新航点、新航线

select 
case when h2.wf_segment_name is null then '新增航线'
when h2.flightdate2 is not null and  abs(h2.flightdate2-h1.flightdate1)>=180 then '复飞航线'
else '老航线' end,count(distinct h1.wf_segment_name)       
from(
select t2.wf_segment_name,min(t1.flight_date) flightdate1
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=to_date('2021-01-01','yyyy-mm-dd')
    and t1.flight_date< to_date('2021-12-01','yyyy-mm-dd')
    and t1.flag=0
    --and t1.flights_segment_name ='宁波－南宁'
    and t1.company_id=0
    group by t2.wf_segment_name )h1    
left join( 
select t2.wf_segment_name,max(t1.flight_date) flightdate2
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=to_date('2020-01-01','yyyy-mm-dd') 
 and t1.flight_date< to_date('2020-12-01','yyyy-mm-dd')
    and t1.flag=0
    --and t1.flights_segment_name ='宁波－南宁'
    and t1.company_id=0
    group by t2.wf_segment_name)h2 on h1.wf_segment_name =h2.wf_segment_name
    group by case when h2.wf_segment_name is null then '新增航线'
when h2.flightdate2 is not null and  abs(h2.flightdate2-h1.flightdate1)>=180 then '复飞航线'
else '老航线' end;




select 
case when h2.wf_segment_name is null then '新增航线'
when h2.flightdate2 is not null and  abs(h2.flightdate2-h1.flightdate1)>=180 then '复飞航线'
else '老航线' end,count(distinct h1.wf_segment_name)       
from(
select t1.origincity_name wf_segment_name,min(t1.flight_date) flightdate1
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=to_date('2021-01-01','yyyy-mm-dd')
    and t1.flight_date< to_date('2021-12-01','yyyy-mm-dd')
    and t1.flag=0
    --and t1.flights_segment_name ='宁波－南宁'
    and t1.company_id=0
    group by t1.origincity_name )h1    
left join( 
select t1.origincity_name wf_segment_name,max(t1.flight_date) flightdate2
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=to_date('2020-01-01','yyyy-mm-dd') 
 and t1.flight_date< to_date('2020-12-01','yyyy-mm-dd')
    and t1.flag=0
    --and t1.flights_segment_name ='宁波－南宁'
    and t1.company_id=0
    group by t1.origincity_name)h2 on h1.wf_segment_name =h2.wf_segment_name
    group by case when h2.wf_segment_name is null then '新增航线'
when h2.flightdate2 is not null and  abs(h2.flightdate2-h1.flightdate1)>=180 then '复飞航线'
else '老航线' end;

-------------------------------------------------------20211208-------------------------------------------------------------------
 ------480、志刚总要求的数据

select h1.*,h2.onlinerate,h2.zxrate,
from(
select to_char(t1.flight_date,'yyyymm') flightmonth,
       getseason(t1.flight_date) flightseason,
       t1.flight_date,
       t3.wf_segment_name,
       t1.route_name,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile
       suM(t1.total_income-t1.tax_fee) totalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile)
 from hdb.recent_flights_cost t1
 left join (select distinct route_name,t2.wf_segment_name
               from dw.dim_segment_type t2)t3 on t1.route_name=t3.route_name
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.total_cost>0
 and t1.checkin_s_mile>0
 group by to_char(t1.flight_date,'yyyymm') ,
       getseason(t1.flight_date) ,
       t1.flight_date ,
       t3.wf_segment_name,
       t1.route_name)h1
  left join( select  t1.flights_date,t2.route_name,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.seats_name is not null 
                  group by t1.flights_date,t2.route_name) h2 on h1.flight_date=h2.flights_date and h1.route_name=h2.route_name;




select /*+parallel(4) */
'全部' stype,
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
  union all
  
  
  
  select /*+parallel(4) */
  '虹桥',
  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%虹桥%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%虹桥%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%虹桥%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
   
union all

select '浦东',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%浦东%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%浦东%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%浦东%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
union all

select '石家庄',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%石家庄%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%石家庄%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%石家庄%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
                  
union all

select '广州',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%广州%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%广州%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%广州%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
                  
union all

select '沈阳',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%沈阳%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%沈阳%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%沈阳%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
union all

select '宁波',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%宁波%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%宁波%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%宁波%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
union all

select '揭阳',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%揭阳%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%揭阳%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%揭阳%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
                  
                  
union all

select '深圳',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%深圳%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%深圳%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%深圳%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
union all

select '扬州泰州',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%扬州泰州%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%扬州泰州%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%扬州泰州%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
union all

select '兰州',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%兰州%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%兰州%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%兰州%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
                  
union all

select '西安',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%西安%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%西安%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%西安%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
                  
union all

select '大连',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%大连%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%大连%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%大连%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
                  
union all

select '南昌',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%南昌%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%南昌%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%南昌%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason
                  
                  
union all

select '成都',  
h1.*,h2.onlinerate,h2.zxrate,h3.*
from(
select  getseason(t1.flight_date) flightseason,
       sum(t1.checkin_s_mile) checkin_s_mile,
       sum(t1.checkin_mile) k_mile,
       suM(t1.total_income-t1.tax_fee) totalincome,
       suM(t1.total_income) hstotalincome,
       sum(t1.day_income) day_income,
       count(1) flightnum,
       sum(t1.checkin_mile)/sum(t1.checkin_s_mile) plf
 from hdb.recent_flights_cost t1
 where substr(getseason(t1.flight_date),1,2)>='18'
 and t1.flight_date>=to_date('20180101','yyyymmdd')
 and t1.flight_date< trunc(sysdate)
 and t1.total_cost>0
 and t1.route_name like '%成都%'
 and t1.checkin_s_mile>0
 group by 
       getseason(t1.flight_date) )h1
  left join( select  getseason(t1.flights_date) flightseason ,sum(case when t1.channel in('网站','手机') then 1 else 0 end)/count(1) onlinerate,
                sum(case when t1.channel in('网站','手机','B2B','B2G机构客户','呼叫中心') then 1 else 0 end)/count(1) zxrate
                from dw.fact_order_detail t1
                join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
                where substr(getseason(t1.flights_date),1,2)>='18'
                  and t1.flights_date>=to_date('20180101','yyyymmdd')
                  and t1.flights_date< trunc(sysdate)
                  and t2.route_name like '%成都%'
                  and t1.seats_name is not null 
                  group by getseason(t1.flights_date)) h2 on h1.flightseason=h2.flightseason
     left join(      
     select tt3.flightseason,sum(case when tkt>=2 then 1 else 0 end) tkt2,sum(case when tkt>=3 then 1 else 0 end) tkt3,
     sum(case when tkt>=5 then 1 else 0 end) tkt5,count(1)
     from(
     select  getseason(tt1.flights_date) flightseason,tt1.traveller_name||tt1.codeno sname,count(1) tkt
                from dw.fact_order_detail tt1
                join dw.da_flight tt2 on tt1.segment_head_id=tt2.segment_head_id
                where substr(getseason(tt1.flights_date),1,2)>='18'
                  and tt1.flights_date>=to_date('20180101','yyyymmdd')
                  and tt1.flights_date< trunc(sysdate)
                  and tt2.route_name like '%成都%'
                  and tt1.seats_name is not null 
                  group by getseason(tt1.flights_date),tt1.traveller_name||tt1.codeno)tt3
             group by tt3.flightseason
                  ) h3 on h1.flightseason=h3.flightseason;
  
                  
          
------------------------------------------------------------20211209--------------------------------------------------------------

 ------481、收益考核数据

select t4.manager 主控姓名,
       decode(t1.NATION_FLAG, 1, '国内', 2, '区域', 3, '国际') 一级区域,
       t4.income_type 收益类型,
       to_char(t1.flight_date, 'yyyy') 年,
       to_char(t1.flight_DATE, 'MM') 月,
       t1.flight_date 日期,
       t4.wf_city_name 往返航线,
       case
         when nvl(t1.ROUTE_FLAG, 1) = 1 then
          '经停'
         else
          '直飞'
       end 性质,
       t1.FLIGHT_NO 航班号,
       t1.segment_name 航线,
       case when nvl(t1.ROUTE_FLAG, 1)=1 and not regexp_like(t1.flight_no,'X|Y') then
       t4.root_segment_code
       else  t1.flight_segment  end 航段三字码,
       t1.AIRCRAFT_TYPE 机型,
       t1.SORTIES 架次,
       t1.BX_CABIN_PLAN 包销计划数,
       t1.IT_NUM 直接运输人数,
       t1.INFANT_NUM 婴儿人数,
       t1.TOTAL_NUM 总人数,
       t1.BX_CABIN_ARR 包销值机人数,
       t1.COST_SEAT_NUM "销售客座率（座位数）",
       t1.CHECK_MILE/t1.SALE_SMILE "销售客座率（计划数）",
       t1.CHECK_MILE/t1.SMILE 值机客座率,
       t1.BJ_TICKET_INCOME 国旅客运收入,
       t1.BJ_ADFY_INCOME 国旅燃油附加费,
       t1.IT_TICKET_INCOME 商务客运收入,
       t1.IT_ADFY_INCOME 商务燃油附加费,
       t1.AVG_SW_TICKET 商务平均票价,
       t1.AVG_SW_SALE 商务平均折扣,
       t1.AVG_TICKET 平均票价,
       t1.AVG_SALE 平均折扣,
       t1.BJ_TICKET_INCOME + t1.BJ_ADFY_INCOME + t1.IT_TICKET_INCOME +
       t1.IT_ADFY_INCOME 客票销售金额,
       t1.BJ_TICKET_INCOME + t1.BJ_ADFY_INCOME + t1.IT_TICKET_INCOME +
       t1.IT_ADFY_INCOME - t1.TAX_FEE 客运总收入,
       t1.TRANS_COST 运输成本,
       t1.PER_FEE 期间费用,
       t1.tax_fee 税收,
       t1.FLIGHT_INCOME 航班收益,
       t1.FLIGHT_INCOMEB 去年航班收益,
       t1.FLIGHT_INCOME - t1.FLIGHT_INCOMEB 差额, 
       null 辅助业务收益,
       t1.ROUTE_ADD 航线补贴,
       t1.GDCOST_MONEY_FEE 固定成本费用,
       null 去年固定成本费用,
       null 差额,
       t1.CHANGE_COST_FEE 变动成本,
       t1.BOUND_INCOME 边际收益,
       t1.HOUR_COST_FEE 小时成本费用,
       null 去年小时成本费用,
       null 差额,
       null 小时固定成本费用,
       t1.COST_SEAT_NUM 座位数,
       t1.FLIGHTS_PLAN 计划数, 
       t1.CUST_MILE "销售客公里（三段）",
       t1.CUST_MILE2 "销售客公里（二段）",
       t1.SMILE 座公里,
       t1.CHECK_MILE 值机客公里,
       t1.SALE_SMILE 销售座公里,
       t1.round_time 轮挡时间
  from cqsale.CM_FINANCIAL_DETAIL@to_air t1
  left join (select to_char(t1.flight_date, 'yyyymm') flightmonth,
                    t1.flight_date,
                    t1.flight_no,
                    t1.segment_code,
                    t1.route_name,
                    replace(t2.wf_city_name, '茅台', '遵义') wf_city_name,
                    replace(t2.root_segment_code,'－','') root_segment_code,
                    min(t2.income_type) income_type,
                    min(t3.manager) manager
               from dw.da_flight t1
               join dw.dim_segment_type t2 on t1.h_route_id = t2.h_route_id
                                          and t1.route_id = t2.route_id
               left join dw.dim_route_manager_info t3 on t2.h_route_id =
                                                         t3.h_route_id
                                                     and t2.route_id =
                                                         t3.route_id
              where t1.flag = 0
              group by to_char(t1.flight_date, 'yyyymm'),
                       t1.flight_date,
                       t1.flight_no,
                       t1.segment_code,
                       t1.route_name,
                       replace(t2.wf_city_name, '茅台', '遵义'),
                       t2.root_segment_code
             
             ) t4 on
-- replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(t1.segment_name,'---','－'),
--  '-','－'),'扬州','扬州泰州'),'普吉岛','普吉'),'济州','济州岛'),
--'十堰','十堰（武当山）'),'—','－'),'－－','－'),'素叻他尼','素叻他尼(万伦)'),'东京成田','成田'),'胡志明','胡志明市'),'大兴','北京'),'东京羽田','东京')=t4.segment_name
 t1.flight_DATE = t4.flight_date
 and t1.flight_no2 = t4.flight_no
 and t4.segment_code = t1.flight_segment
 where ((t1.flight_date >= add_months(last_day(trunc(sysdate)) + 1, -2) and
       t1.flight_date < add_months(last_day(trunc(sysdate)) + 1, -1)) or
       (t1.flight_date >=
       add_months(last_day(trunc(sysdate)) + 1, -2 - 12) and
       t1.flight_date < add_months(last_day(trunc(sysdate)) + 1, -1 - 12)) or
       (t1.flight_date >=
       add_months(last_day(trunc(sysdate)) + 1, -2 - 24) and
       t1.flight_date < add_months(last_day(trunc(sysdate)) + 1, -1 - 24)) or
       (t1.flight_date >=
       add_months(last_day(trunc(sysdate)) + 1, -2 - 36) and
       t1.flight_date < add_months(last_day(trunc(sysdate)) + 1, -1 - 36))) 
       and t1.TRANS_COST+t1.PER_FEE+t1.TAX_FEE>0;









---判断航线是和我们这边的逻辑一致
  
  select  *
  from(
  select  distinct 
  replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(t1.segment_name,'---','－'),'-','－'),'扬州','扬州泰州'),'普吉岛','普吉'),'济州','济州岛'),
  '十堰','十堰（武当山）'),'—','－'),'－－','－'),'素叻他尼','素叻他尼(万伦)'),'东京成田','成田'),'胡志明','胡志明市'),'大兴','北京'),'东京羽田','东京')
   route_name
    from cqsale.CM_FINANCIAL_DETAIL@to_air t1
    where flight_date>=trunc(sysdate)-5*365
    and length(flight_no)=6)t1
    left join (select t2.route_name,replace(t2.wf_city_name,'茅台','遵义') wf_city_name ,min(t2.income_type) income_type,min(t3.manager) manager
             from dw.dim_segment_type t2
             left join dw.dim_route_manager_info t3 on t2.h_route_id=t3.h_route_id and t2.route_id =t3.route_id
             group by t2.route_name,replace(t2.wf_city_name,'茅台','遵义') )t4 on t1.route_name=t4.route_name
             where t4.route_name is null ;

            

   select /*t4.manager 主控姓名,decode(t1.NATION_FLAG,1,'国内',2,'区域',3,'国际') 一级区域,t4.income_type 收益类型,*/
to_char(t1.flight_date,'yyyy') 年,to_char(t1.flight_DATE,'MM') 月,
t4.wf_city_name 往返航线,
sum(t1.BJ_TICKET_INCOME+t1.BJ_ADFY_INCOME+t1.IT_TICKET_INCOME+t1.IT_ADFY_INCOME) 含税收入,
sum(t1.BJ_TICKET_INCOME+t1.BJ_ADFY_INCOME+t1.IT_TICKET_INCOME+t1.IT_ADFY_INCOME-t1.TAX_FEE) 不含税收入,
sum(t1.round_time) 轮档小时
 from cqsale.CM_FINANCIAL_DETAIL@to_air t1
 left join (select t2.route_name,replace(t2.wf_city_name,'茅台','遵义') wf_city_name ,min(t2.income_type) income_type,min(t3.manager) manager
             from dw.dim_segment_type t2
             left join dw.dim_route_manager_info t3 on t2.h_route_id=t3.h_route_id and t2.route_id =t3.route_id
             group by t2.route_name,replace(t2.wf_city_name,'茅台','遵义') )t4 on 
             replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(t1.segment_name,'---','－'),
             '-','－'),'扬州','扬州泰州'),'普吉岛','普吉'),'济州','济州岛'),
  '十堰','十堰（武当山）'),'—','－'),'－－','－'),'素叻他尼','素叻他尼(万伦)'),'东京成田','成田'),'胡志明','胡志明市'),'大兴','北京'),'东京羽田','东京'),'--','－')=t4.route_name
where ((t1.flight_date>= add_months(last_day(trunc(sysdate))+1,-4)
and t1.flight_date<  add_months(last_day(trunc(sysdate))+1,-1))
or (t1.flight_date>= add_months(last_day(trunc(sysdate))+1,-4-12)
and t1.flight_date<  add_months(last_day(trunc(sysdate))+1,-1-12))
or (t1.flight_date>= add_months(last_day(trunc(sysdate))+1,-4-24)
and t1.flight_date<  add_months(last_day(trunc(sysdate))+1,-1-24))
or (t1.flight_date>= add_months(last_day(trunc(sysdate))+1,-4-36)
and t1.flight_date<  add_months(last_day(trunc(sysdate))+1,-1-36)))
and t1.TRANS_COST+t1.PER_FEE>0
group by /*t4.manager,decode(t1.NATION_FLAG,1,'国内',2,'区域',3,'国际'),t4.income_type,*/
to_char(t1.flight_date,'yyyy') ,to_char(t1.flight_DATE,'MM') ,
t4.wf_city_name;




----开航日期
 select replace(t2.wf_city_name,'茅台','遵义')  往返航线 ,min(t1.flight_date) 开航日期
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 join (
select distinct replace(t2.wf_city_name,'茅台','遵义') wf_city_name
 from dw.da_flight t1
 join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=add_months(last_day(trunc(sysdate))+1,-2)
  and t1.flight_date<   add_months(last_day(trunc(sysdate))+1,-1)
  and t1.flag=0
  and t1.company_id=0
)h1 on replace(t2.wf_city_name,'茅台','遵义')=h1.wf_city_name
 where  t1.flight_date<    add_months(last_day(trunc(sysdate))+1,-1)
  and t1.company_id=0
  and t1.flag=0
  group by replace(t2.wf_city_name,'茅台','遵义');


------------------------------------------------------------20211210------------------------------------------------------------------
 ------482、汪华茂--12月退改量及0元退票

select trunc(t1.money_date),count(1),sum(case when t1.money_fy=0 then 1 else 0 end) 
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t2.segment_head_id=t1.segment_head_id
 where t1.money_date>=to_date('2021-12-01','yyyy-mm-dd')
 and t2.flights_city_name like '%上海%'
 group by trunc(t1.money_date);


 ----------------------------------------------------------20211211------------------------------------------------------------
 ------483、

 ---乘机人留存率

select to_number(substr(t1.ym,8,6))+100,custnum,year_remain1
  from dw.bi_cust_remain t1
  where t1.channel='-'
  and t1.base='-'
  and t1.nationflag='-'; 

---剔除代理及易宝商旅卡 
select *
 from dw.bi_user_year_remain_type t1
where type='正常账号'
and months>='2017-11';


---会员留存率

select *
 from dw.bi_user_remain;


---所有会员
 select t.years,t.retention_rate keep_rate,t1.years last_year,t1.retention_rate last_keep_rate
from dw.bi_ecommerce_yearrate t
left join dw.bi_ecommerce_yearrate t1 on 
to_number(substr(t.years,1,4))=to_number(substr(t1.years,1,4))+1 and to_number(substr(t.years,8,4))=to_number(substr(t1.years,8,4))+1
and to_number(substr(t.years,5,2))=to_number(substr(t1.years,5,2)) and to_number(substr(t.years,12,2))=to_number(substr(t1.years,12,2))
where t1.years is not null 
ORDER BY t.years DESC


 ------484、行李检查

select h1.fdate 航班日期,h1.segment 航段三字码,h1.fn 航班号,h1.flights_order_id 订单号,
h1.bagw 托运行李重量,h1.weight_free 免费行李额度,
h1.weight_web 线上行李购买额度,
h1.WEIGHT_WEB_zz 地面行李购买额度,
h1.zz_fee 地面行李购买金额,
h1.tkt 订单中的乘机人数,
h1.totalbagw 航班总托运行李重量,
h1.freebagw 航班总免费行李重量,
h1.totalnum 航班总乘机人数
from(
select fdate,segment,fn,flights_Order_id,sum(case when t1.bagw>=1000 then t1.bagw/1000 else t1.bagw end) bagw, 
sum(case when t1.weight_free>=1000 then t1.weight_free/1000 else t1.weight_free end)  weight_free,
sum(case when t1.WEIGHT_WEB>=1000 then t1.WEIGHT_WEB/1000 else t1.WEIGHT_WEB end) WEIGHT_WEB ,
sum(case when t1.WEIGHT_GT+t1.WEIGHT_ZZ>=1000 then (t1.WEIGHT_GT+t1.WEIGHT_ZZ)/1000 else t1.WEIGHT_GT+t1.WEIGHT_ZZ end) WEIGHT_WEB_zz,
sum(t1.FEE_ZZ+t1.FEE_GT) zz_fee ,
count(1) tkt,
sum(sum(case when t1.bagw>=1000 then t1.bagw/1000 else t1.bagw end))over(partition by fdate,segment,fn ) totalbagw,
sum(sum(case when t1.weight_free>=1000 then t1.weight_free/1000 else t1.weight_free end))over(partition by fdate,segment,fn ) freebagw,
sum(count(1))over(partition by fdate,segment,fn ) totalnum
 from dw.fact_luggage_detail t1
 where fdate>=trunc(sysdate)-7
 --and fdate< trunc(sysdate)-1
 and fn like '%9C%'
 --and t1.flights_order_id='YZYLDL'
 group by fdate,segment,fn,flights_Order_id)h1
 where h1.bagw> h1.weight_free+h1.WEIGHT_WEB+h1.WEIGHT_WEB_zz;


------------------------------------------------------------20211216------------------------------------------------------------------------
 ------485、市场部数据提取 #404892

select to_char(t1.order_day,'yyyymm'),t1.channel,sum(case when t1.flag_id in(7,11,12) then 1 else 0 end),
count(1)
 from dw.fact_recent_order_detail t1
 where t1.order_day>=to_date('2021-11-01','yyyy-mm-dd')
 and t1.order_day< to_date('2021-12-17','yyyy-mm-dd')
 and t1.seats_name not in('B','G','G1','G2')
 group by to_char(t1.order_day,'yyyymm'),t1.channel


--------------------------------------------------------------20211217-------------------------------------------------------
 ------486、会员价值

select /*+parallel(4) */
count(distinct t1.client_id) 会员数,count(1) 乘机次数,count(1)/count(distinct t1.client_id) 平均乘机次数,
suM(case when t1.other_fee+t1.insurce_fee>0 then 1 else 0 end),
sum(t1.other_fee+t1.insurce_fee),
sum(t1.ticket_price+t1.ad_fy)
 from dw.fact_order_detail t1
 left join dw.da_restrict_userinfo@to_ods t2 on t1.client_id=t2.users_id
 where t1.flights_date>=to_date('2020-11-01','yyyy-mm-dd')
 and t1.flights_date<  to_date('2021-11-01','yyyy-mm-dd')
 and t1.channel in('网站','手机')
 and t1.company_id=0
 and t2.users_id is null
 and not regexp_like(t1.gate_name,'易宝|商旅卡');

 
--金银卡价值

select /*+parallel(4) */
t2.memberlevelid,
count(distinct t1.client_id) 会员数,count(1) 乘机次数,count(1)/count(distinct t1.client_id) 平均乘机次数,
suM(case when t1.other_fee+t1.insurce_fee>0 then 1 else 0 end),
sum(t1.other_fee+t1.insurce_fee),
sum(t1.ticket_price+t1.ad_fy)
 from dw.fact_order_detail t1
 join dw.da_user_level t2 on t1.client_id=t2.users_id
 where t1.flights_date>=to_date('2020-11-01','yyyy-mm-dd')
 and t1.flights_date<  to_date('2021-11-01','yyyy-mm-dd')
 and t1.channel in('网站','手机')
 and t1.company_id=0
 group by t2.memberlevelid;

 ------487、误操作退票量数据

select  /*+parallel(4) */
to_char(t1.money_date,'yyyymm'),case when t1.apply_memo like '%误操作%' then '误操作'
  when t1.money_fy=0 then '0元退票'
  when t1.money_fy>0 then '非0元退票' end,count(1),sum(t1.ticketprice),sum(t1.money_fy)
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 join stg.s_cq_order_head t3 on t1.flights_order_head_id=t3.flights_order_head_id
 join stg.s_cq_order t4 on t3.flights_order_id=t4.flights_order_id
 where t1.money_date< t2.origin_std-1
 and t1.money_date-t3.r_order_date< 0.5/24
 and t4.terminal_id=-1
 and t4.web_id=0
 and t1.money_date>=to_date('2018-11-01','yyyy-mm-dd')
 and t1.money_date< to_date('2021-11-01','yyyy-mm-dd')
 group by to_char(t1.money_date,'yyyymm'),case when t1.apply_memo like '%误操作%' then '误操作'
  when t1.money_fy=0 then '0元退票'
  when t1.money_fy>0 then '非0元退票' end

 ------488、新开航点数据

select distinct 
case when h2.wf_segment_name is null then '新增航点'
when h2.flightdate2 is not null and  abs(h2.flightdate2-h1.flightdate1)>=180 then '复飞'
else '老航点' end,h1.wf_segment_name     
from(
select t1.originairport_name wf_segment_name,min(t1.flight_date) flightdate1
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where t1.flight_date>=to_date('2021-01-01','yyyy-mm-dd')
    and t1.flight_date< to_date('2022-01-01','yyyy-mm-dd')
    and t1.flag=0
    --and t1.flights_segment_name ='宁波－南宁'
    and t1.company_id=0
    group by t1.originairport_name )h1    
left join( 
select t1.originairport_name wf_segment_name,max(t1.flight_date) flightdate2
 from dw.da_flight t1
 left join dw.dim_segment_type t2 on t1.h_route_id=t2.h_route_id and t1.route_id=t2.route_id
 where  t1.flight_date< to_date('2021-01-01','yyyy-mm-dd')
    and t1.flag=0
    --and t1.flights_segment_name ='宁波－南宁'
    and t1.company_id=0
    group by t1.originairport_name)h2 on h1.wf_segment_name =h2.wf_segment_name;


----------------------------------------------------------20211220-----------------------------------------------------------------------
 ------489、联润短信认证条数统计

select split_part(timestamp, ' ', 1),
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133',
                                         '153',
                                         '162',
                                         '168',
                                         '169',
                                         '173',
                                         '174',
                                         '177',
                                         '179',
                                         '180',
                                         '181',
                                         '189',
                                         '189',
                                         '191',
                                         '196',
                                         '197',
                                         '199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130',
                                         '131',
                                         '132',
                                         '140',
                                         '146',
                                         '155',
                                         '156',
                                         '163',
                                         '166',
                                         '167',
                                         '171',
                                         '175',
                                         '176',
                                         '185',
                                         '186',
                                         '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',
                                         '135',
                                         '136',
                                         '137',
                                         '138',
                                         '139',
                                         '144',
                                         '147',
                                         '148',
                                         '150',
                                         '151',
                                         '152',
                                         '157',
                                         '158',
                                         '159',
                                         '165',
                                         '172',
                                         '178',
                                         '182',
                                         '183',
                                         '184',
                                         '187',
                                         '188',
                                         '195',
                                         '198') then
          '移动'
       end
       
      , 
       count(1)
  from dw.fact_threevaild_detail t1
  
 where split_part(timestamp, ' ', 1)>='2021-11-01'
 and split_part(timestamp, ' ', 1)< '2021-12-01'
 and 
 t1.respcode in
       ('P300', 'P301', 'P305', 'P306', 'P307', 'SJ', 'NM', 'ID')
 group by split_part(timestamp, ' ', 1),
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133',
                                         '153',
                                         '162',
                                         '168',
                                         '169',
                                         '173',
                                         '174',
                                         '177',
                                         '179',
                                         '180',
                                         '181',
                                         '189',
                                         '189',
                                         '191',
                                         '196',
                                         '197',
                                         '199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130',
                                         '131',
                                         '132',
                                         '140',
                                         '146',
                                         '155',
                                         '156',
                                         '163',
                                         '166',
                                         '167',
                                         '171',
                                         '175',
                                         '176',
                                         '185',
                                         '186',
                                         '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',
                                         '135',
                                         '136',
                                         '137',
                                         '138',
                                         '139',
                                         '144',
                                         '147',
                                         '148',
                                         '150',
                                         '151',
                                         '152',
                                         '157',
                                         '158',
                                         '159',
                                         '165',
                                         '172',
                                         '178',
                                         '182',
                                         '183',
                                         '184',
                                         '187',
                                         '188',
                                         '195',
                                         '198') then
          '移动'
       end;

 --------------------------------------------------------------20211221-----------------------------------------------------------------
 ------490、航班状态匹配

select to_char(t1.flight_date,'yyyy-mm-dd')||t1.flight_no,min(t1.flag)
 from dw.da_flight t1
 where to_char(t1.flight_date,'yyyy-mm-dd')||t1.flight_no
 in('2021-11-049C8850');





-------491、兰州航班架次

select flight_date 航班日期,count(distinct id) 兰州航班架次
from(
select distinct t1.flight_date,t1.flights_id||t1.flight_no id
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)
 and t1.flight_date< to_date('2022-01-01','yyyy-mm-dd')
 and t1.route_name  like '兰州%'
 and t1.flag =0 
 and t1.segment_type like '%经停%'
 --5
 
 union all
 
 
 select distinct t1.flight_date,t1.flights_id||t1.flight_no id
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)
 and t1.flight_date< to_date('2022-01-01','yyyy-mm-dd')
 and t1.flights_segment_name  like '%兰州'
 and t1.flag =0
 and t1.segment_type like '%经停%'
 
 --11
 
 union all
  
 select distinct t1.flight_date,t1.flights_id||t1.origin_std||t1.flight_no
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)
 and t1.flight_date< to_date('2022-01-01','yyyy-mm-dd')
 and t1.route_name  not like '%兰州'
 and t1.route_name  not like '兰州%'
 and t1.route_name  like '%兰州%'
 and t1.flights_segment_name like '%兰州%'
 and t1.flag =0
 and t1.segment_type like '%经停%'
 
 --12 
 union all 
 
 --26
 select distinct t1.flight_date,t1.flights_id||t1.flight_no id
 --t1.flights_id,t1.origin_std,t1.flight_no,t1.flights_segment_name,t1.route_name
 from dw.da_flight t1
 where t1.flight_date>=trunc(sysdate)
 and t1.flight_date< to_date('2022-01-01','yyyy-mm-dd')
 and t1.flag =0
  and t1.route_name  like '%兰州%'
 and t1.segment_type not like '%经停%')
 group by flight_date
 order by 1
 
--------------------------------------------------------------------------20211222------------------------------------------------------------
 ------492、去程

select /*+parallel(4) */
 t1.flights_order_head_id,t1.codeno,t1.r_tel
                  from dw.fact_order_detail t1
                  join dw.fact_dcs_money_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id
                  where t1.flights_date>=trunc(sysdate)-7
                  and t1.flights_date< trunc(sysdate)
                  and t1.flag_id=40
                  and t1.company_id=0
                  and nvl(t2.fee_bag, 0) + nvl(t2.bg_fee, 0)>0
                  and exists(select 1
                   from  dw.fact_order_detail h2 
                   where h2.codeno=t1.codeno
                   and h2.flights_date> t1.flights_date
                   and h2.flights_date< t1.flights_date+7
                   and h2.flights_date> trunc(sysdate)
                   and h2.flights_date< trunc(sysdate)+7
                   and h2.flag_id in(3,5)
                   and substr(h2.whole_segment,1,3)=substr(t1.whole_segment,4,3)
                   and substr(h2.whole_segment,4,3) =substr(t1.whole_segment,1,3)
                   )
                  and not  exists(select 1
                   from  dw.fact_other_order_detail h2 
                   where h2.codeno=t1.codeno
                   and h2.flights_date> t1.flights_date
                   and h2.flights_date< t1.flights_date+7
                   and h2.flights_date> trunc(sysdate)
                   and h2.flights_date< trunc(sysdate)+7
                   and substr(h2.whole_segment,1,3)=substr(t1.whole_segment,4,3)
                   and substr(h2.whole_segment,4,3) =substr(t1.whole_segment,1,3)
                   and h2.xtype_id in(6,10,17));


 -----------------------------------------------------------------------20211223----------------------------------------------------                   
  ------493、 中转联程(更名以及修改证件号码)

select t1.order_day_1,count(1)
 from dw.bi_connect_segment t1
 left join(select t1.flights_order_head_id
 from stg.s_cq_money_report t1
 where t1.money_date>=to_date('2021-11-01','yyyy-mm-dd')
 and t1.MONEY_FLAG=1
 and t1.EX_NFD3=2)t2 on t1.flights_order_head_id_1=t2.flights_order_head_id
  left join(select t1.flights_order_head_id
 from stg.s_cq_money_report t1
 where t1.money_date>=to_date('2021-11-01','yyyy-mm-dd')
 and t1.MONEY_FLAG=1
 and t1.EX_NFD3=2)t3 on t1.flights_order_head_id_2=t2.flights_order_head_id
 where t1.order_day_1>=to_date('2021-11-01','yyyy-mm-dd')
 and t1.flag_id in(0,1,-1)
 and nvl(t2.flights_order_head_id,t3.flights_order_head_id) is not null
 group by t1.order_day_1;


----------------------------------------------------------------------20211227----------------------------------------------------
 ------494、

--第二个人群

create table hdb.temp_feng_1226 as
select h1.*
from(
select t1.traveller_name||t1.codeno 证件号,max(t1.r_tel) 乘机人联系方式,max(t1.EX_CFD1) 出行目的,count(1) tkt,
max(case when t3.flights_order_id is not null then 1 else 0 end)  是否同行,
max(case when t2.BAGW>0 then 1 else 0 end)  是否有行李
 from dw.fact_recent_order_detail t1
 left join dw.fact_luggage_detail t2 on t1.flights_order_head_Id=t2.flights_order_head_Id
 left join (select tt1.flights_order_id,tt1.segment_head_id,count(1) tktnum
              from dw.fact_recent_order_detail tt1
              where tt1.flights_date>=to_date('2020-12-15','yyyy-mm-dd')
 and tt1.flights_date< to_date('2021-12-15','yyyy-mm-dd')
 and tt1.flag_id=40 
 group by tt1.flights_order_id,tt1.segment_head_id
 having count(1)>1
 ) t3 on t1.flights_order_id=t3.flights_order_id and t1.segment_head_id=t3.segment_head_id
 where t1.flights_DATE>=to_date('2020-12-15','yyyy-mm-dd')
 and t1.flights_date< to_date('2021-12-15','yyyy-mm-dd')
 and t1.flag_id=40
 and not exists(select 1
 from dw.fact_recent_order_detail tt2
 where tt2.flights_date>=to_date('2020-01-10','yyyy-mm-dd')
 and tt2.flights_date< to_date('2021-03-09','yyyy-mm-dd')
 and not(tt2.flights_date>=to_date('2020-02-19','yyyy-mm-dd')
 and tt2.flights_date< to_date('2021-01-28','yyyy-mm-dd'))
 and tt2.traveller_name=t1.traveller_name
 and tt2.codeno=t1.codeno)
 group by t1.traveller_name||t1.codeno)h1
 where h1.tkt>=3;


--第三个人群

--套票人群乘机频次10次以上
select 
t1.sname,t1.users_id,count(1),max(t3.r_tel) rtel,max(case when t2.bagw>1 then 1 else 0 end) 是否行李
 from dw.fact_combo_ticket t1
 join dw.fact_order_detail t3 on t1.flights_order_head_id=t3.flights_order_head_id
 left join dw.fact_luggage_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id
 where t1.flag_id =40
 group by t1.sname,t1.users_id
 having count(1)>=10


 ------495、积分生成检查

select t1.flight_date,/*t1.flights_order_id,*/t2.channel,/*t1.users_id,t1.cust_id,t1.user_type,t1.points_money,t1.ticket_price*/
count(1),sum(t1.points_money),sum(t1.ticket_price)
 from dw.fact_points_detail t1
 left join dw.fact_recent_order_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id
 where t1.point_type=1
 and t1.flight_date>=trunc(sysdate)-3-7
 group by t1.flight_date,t2.channel;


select t2.flights_order_head_id,t2.flights_order_id,t2.channel,t2.sub_channel,t1.ticket_price,
t1.points_money*100 points,
case when nvl(t6.memberlevelid,2)<=2 then t1.ticket_price
when t6.memberlevelid= 3 then t1.ticket_price*1.5
when t6.memberlevelid= 4 then t1.ticket_price*2
else t1.ticket_price end 积分基数,
t1.ticket_price 机票票价,
t4.onlinefee 线上餐食行李费用,
t4.offlinefee 现场行李费用,
t4.boardfee 登机口行李费用,
case when t7.users_id is not null then '代理'
when t2.channel in('网站','手机') and t2.pay_gate in(15,29,31) then '代理'
else '非代理' end 是否代理
 from dw.fact_points_detail t1
 left join dw.fact_recent_order_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join (select  t3.flights_order_head_id,
                    sum(case when t3.xtype_id in(7,6,10,17) then t3.book_fee
                          else 0 end) onlinefee,
                     sum(case when t3.xtype_id =24 then t3.book_fee
                          else 0 end) offlinefee,
                       sum(case when t3.xtype_id =34 then t3.book_fee
                          else 0 end) boardfee,
                          sum(t3.book_fee)
               from dw.fact_other_order_detail t3 
               where t3.flights_date>=trunc(sysdate-3)
                 and t3.xtype_id in(7,6,10,17,24,34)
                 group by t3.flights_order_head_id)t4 on t1.flights_order_head_id=t4.flights_order_head_id
  left join dw.da_user_level t6 on t1.users_id=t6.users_id
  left join dw.da_restrict_userinfo@to_ods t7 on t7.users_id=t1.users_id
 where t1.point_type=1
 and t1.flight_date>=trunc(sysdate)-3
 --and t2.channel='OTA'
 and t1.points_money*100> round(t1.ticket_price/2,0);



 select t2.channel,
case when t2.channel in('网站','手机') and t7.users_id is not null then '代理'
when t2.channel in('网站','手机') and t2.pay_gate in(15,29,31) then '易宝商旅卡'
else '非代理' end 是否代理,
case when t8.codeno=t2.codeno then '本人'
else '非本人' end ,
count(1)
 from dw.fact_points_detail t1
 join dw.fact_recent_order_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id
 left join (select  t3.flights_order_head_id,
                    sum(case when t3.xtype_id in(7,6,10,17) then t3.book_fee
                          else 0 end) onlinefee,
                     sum(case when t3.xtype_id =24 then t3.book_fee
                          else 0 end) offlinefee,
                       sum(case when t3.xtype_id =34 then t3.book_fee
                          else 0 end) boardfee,
                          sum(t3.book_fee)
               from dw.fact_other_order_detail t3 
               where t3.flights_date>=trunc(sysdate-3)
                 and t3.xtype_id in(7,6,10,17,24,34)
                 group by t3.flights_order_head_id)t4 on t1.flights_order_head_id=t4.flights_order_head_id
  left join dw.da_user_level t6 on t1.users_id=t6.users_id
  left join dw.da_restrict_userinfo@to_ods t7 on t7.users_id=t1.users_id
  left join dw.da_lyuser t8 on t1.users_id=t8.users_id_fk
 where t1.point_type=1
 and t1.flight_date>=trunc(sysdate)-3
 --and t2.channel='OTA'
 --and t1.points_money*100> round(t1.ticket_price/2,0)
 group by t2.channel,
case when t2.channel in('网站','手机') and t7.users_id is not null then '代理'
when t2.channel in('网站','手机') and t2.pay_gate in(15,29,31) then '易宝商旅卡'
else '非代理' end ,
case when t8.codeno=t2.codeno then '本人'
else '非本人' end;

----验证证件号码

select  t1.flights_order_head_id,t1.flights_order_id,t1.users_id,t2.client_id,t2.channel,t2.sub_channel,t6.memberlevelid,
t2.codeno 乘机人证件号,t8.codeno 积分生成账号,t10.code_no 多证件号
 from dw.fact_points_detail t1
 join dw.fact_recent_order_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id
   left join dw.da_user_level t6 on t1.users_id=t6.users_id
  left join dw.da_lyuser t8 on t1.users_id=t8.users_id_fk
  --left join dw.da_lyuser t9 on t2.client_id=t9.users_id_fk
  left join stg.c_cq_cust_code t10 on t8.cust_id=t10.custid
 where t1.point_type=1
 and t1.flight_date>=trunc(sysdate)-4
 and t2.channel in('网站','手机')
 and t2.pay_gate in(15,29,31)
 and t8.codeno<>t2.codeno

 


 ------496、微信支付宝占比

select t1.order_day 订单日期,
case when t1.gate_name like '%微信%' then '微信'
when t1.gate_name like '%支付宝%' then '支付宝' end 支付方式,
sum(t1.ticket_price+t1.port_pay+t1.ad_fy+t1.other_fy+t1.insurce_fee+t1.other_fee) 支付金额,
count(distinct t1.flights_Order_id) 订单号
 from dw.fact_order_detail t1
 where t1.order_day>=trunc(sysdate)-30
   and t1.order_day< trunc(sysdate)
   and t1.gate_name in('微信小程序','财付通微信','支付宝','支付宝无线')
   and t1.channel in('网站','手机')
   and t1.whole_flight like '9C%'
   group by t1.order_day,case when t1.gate_name like '%微信%' then '微信'
when t1.gate_name like '%支付宝%' then '支付宝' end;


------------------------------------------------------20211228----------------------------------------------------------
 ------497、辅收产品分析

select /*+parallel(4)*/
       tt.flight_no 航班号,
       tt.flights_segment_name 航段,
       tt.route_name 航线,
       dst.wf_segment_name 往返航线,
       tt.mile 行距,
       tt.route_type 经停,
       tt.originairport_name 起始站,
       case when tt.originairport_name in('浦东','虹桥','石家庄','沈阳','揭阳','扬州泰州','深圳','宁波','兰州','南昌','成都',
       '广州','西安','大连') then tt.originairport_name
       else '其他' end 基地,
       (tt.dest_sta-tt.origin_std)*24 航班时长,
       tt.oversale 计划量,
       sum(w.tickn) 散客机票量,
       sum(w.tickBG) 团队机票量,
       sum(w.tickapp) 自有渠道机票,
       sum(w.ticksum) 机票总数,
       to_char(tt.flight_date, 'yyyymmdd') 航班日,
       to_char(tt.origin_std, 'hh24:mi') 计划起始时间,
       to_char(tt.dest_sta, 'hh24:mi') 计划降落时间,
       case
         when to_char(tt.origin_std, 'hh24:mi') >= '07:00' and
              to_char(tt.origin_std, 'hh24:mi') <= '09:00' then
          '餐点'
         when to_char(tt.origin_std, 'hh24:mi') >= '11:00' and
              to_char(tt.origin_std, 'hh24:mi') <= '13:00' then
          '餐点'
         when to_char(tt.origin_std, 'hh24:mi') >= '17:00' and
              to_char(tt.origin_std, 'hh24:mi') <= '19:00' then
          '餐点'
         else
          '非餐点'
       end 是否餐点,
       sum(w.cbtick) 套票机票量,
       sum(w.tickswj) 商务座机票量,
       sum(w.tickjj) 组合产品机票量,
       sum(w.tickpt) 会员座机票量,
       sum(w.lugtick) 行李卡机票量,
       sum(w.seattick) 选座卡机票量,
       sum(line.lugonline) 线上行李销售额,
       sum(line.handbag) 手提行李销售额,
       sum(dl.bagfee) 地面行李销售额,
       sum(line.seatonline) 线上选座销售额,
       sum(line.foodonline) + sum(m.food) 线上餐食销售额,
       sum(line.insure) 线上保险销售额,
       sum(flightsale.flightfood) 机上餐食,
       sum(flightsale.flightkj) + sum(flightsale.flightjn) 机上跨境和纪念,
       sum(line.onlinefeesum) + sum(dl.bagfee) + sum(dl.feekdj) +
       sum(m.food) + sum(kd.kdfee) + sum(flightsale.flighttotal) 辅收总计,
       sum(bagw.bagw) 实际托运行李和,
       count(1) 航班量,
       sum(dim.旅行人数) 旅行人数,
        sum(dim.求学人数) 求学人数,
        sum(dim.散客团队人数) 散客团队人数,
        sum(dim.商务人数) 商务人数,
        sum(dim.探亲人数) 探亲人数,
        sum(dim.团队旅行人数) 团队旅行人数,
        sum(dim.性别无法识别人数) 性别无法识别人数,
        sum(dim.男性人数) 男性人数,
        sum(dim.女性人数) 女性人数,
        sum(dim.年龄无法识别量) 年龄无法识别量,
        sum(dim."0~17票量") "0~17票量",
        sum(dim."18~23票量") "18~23票量",
        sum(dim."24~30票量") "24~30票量",
        sum(dim."31~40票量") "31~40票量",
        sum(dim."41~50票量") "41~50票量",
        sum(dim."51~60票量") "51~60票量",
        sum(dim."60+票量") "60+票量"   
  from dw.da_flight tt
  left join (select t.segment_head_id,
       sum(case when t.ex_cfd1='旅行' then 1 else 0 end) 旅行人数,
       sum(case when t.ex_cfd1='求学' then 1 else 0 end) 求学人数,
       sum(case when t.ex_cfd1='散客团队' then 1 else 0 end) 散客团队人数,
       sum(case when t.ex_cfd1='商务' then 1 else 0 end) 商务人数,
       sum(case when t.ex_cfd1='探亲' then 1 else 0 end) 探亲人数,
       sum(case when t.ex_cfd1='团队旅行' then 1 else 0 end) 团队旅行人数,
       sum(case when t.gender='-' then 1 else 0 end) 性别无法识别人数,
       sum(case when t.ex_cfd1='男' then 1 else 0 end)  男性人数,
       sum(case when t.ex_cfd1='女' then 1 else 0 end) 女性人数,  
       sum(case when getage(t.flights_date, t.birthday) < 0 then 1 else 0 end) 年龄无法识别量,
       sum(case when getage(t.flights_date, t.birthday) >=0 and getage(t.flights_date, t.birthday) < 18
       then 1 else 0 end) "0~17票量",
              sum(case when getage(t.flights_date, t.birthday) >=18 and getage(t.flights_date, t.birthday) < 24
       then 1 else 0 end) "18~23票量",
              sum(case when getage(t.flights_date, t.birthday) >=24 and getage(t.flights_date, t.birthday) < 31
       then 1 else 0 end) "24~30票量",
              sum(case when getage(t.flights_date, t.birthday) >=31 and getage(t.flights_date, t.birthday) < 41
       then 1 else 0 end) "31~40票量",
                 sum(case when getage(t.flights_date, t.birthday) >=41 and getage(t.flights_date, t.birthday) < 51
       then 1 else 0 end) "41~50票量",
                 sum(case when getage(t.flights_date, t.birthday) >=51 and getage(t.flights_date, t.birthday) < 61
       then 1 else 0 end) "51~60票量", 
                 sum(case when getage(t.flights_date, t.birthday) >=61
       then 1 else 0 end) "60+票量"  
  from dw.fact_recent_order_detail t
  join dw.da_flight tt on t.segment_head_id = tt.segment_head_id
  where t.whole_flight like '9C%'
  and t.flights_date >= to_date('2021-11-27','yyyy-mm-dd')
  and t.flights_date < to_date ('2021-12-28','yyyy-mm-dd')
  and t.flag_id = 40
  and t.nationflag = '国内'
  group by t.segment_head_id) dim on tt.segment_head_id=dim.segment_head_id
  left join dw.dim_segment_type dst on dst.h_route_id=tt.h_route_id and dst.route_id=tt.route_id
  left join (select t.segment_head_id,
                    sum(case
                          when t.seats_name not in ('B', 'G', 'G1', 'G2') then
                           1
                          else
                           0
                        end) tickn,
                    sum(case
                          when t.seats_name in ('B', 'G', 'G1', 'G2') then
                           1
                          else
                           0
                        end) tickBG,
                    sum(case
                          when t.channel in ('手机', '网站') and r.users_id is null and
                               not regexp_like(g.gate_name, '易宝|商旅卡') then
                           1
                          else
                           0
                        end) tickapp,
                    count(1) ticksum,
                    sum(case
                          when ct.flights_order_head_id is not null then
                           1
                          else
                           0
                        end) cbtick,
                    sum(case
                          when t.seat_type = '商务经济座' then
                           1
                          else
                           0
                        end) tickswj,
                    sum(case
                          when t.seat_type = '经济座' then
                           1
                          else
                           0
                        end) tickjj,
                    sum(case
                          when t.seat_type = '普通座' then
                           1
                          else
                           0
                        end) tickpt,
                    sum(case
                          when n.prom_id in (2, 3) then
                           1
                          else
                           0
                        end) lugtick,
                    sum(case
                          when n.prom_id = 5 then
                           1
                          else
                           0
                        end) seattick
               from dw.fact_recent_order_detail t
               left join dw.fact_combo_ticket ct on ct.flights_order_head_id =
                                                    t.flights_order_head_id
               left join stg.y_cq_prom_order_record fz on fz.order_head_id =
                                                          t.flights_order_head_id
               left join stg.y_cq_prom_combo c on fz.rights_id = c.id
               left join stg.y_cq_prom_product n on c.combo_product_id =
                                                    n.prom_id
               left join stg.p_cq_pay_gate g on g.id = t.pay_gate
               left join dw.da_restrict_userinfo@to_ods r on r.users_id =
                                                             t.client_id
              where t.whole_flight like '9C%'
                and t.nationflag = '国内'
                and t.flag_id = 40
                and t.flights_date >= to_date('2021-11-27', 'yyyy-mm-dd')
                and t.flights_date < to_date('2021-12-27', 'yyyy-mm-dd')
                and t.seats_name is not null
              group by t.segment_head_id) w on w.segment_head_id =
                                               tt.segment_head_id --机票相关
  left join (select t1.segment_head_id,
                    sum(case
                          when t1.xtype_id in (6, 10, 17) then
                           t1.book_fee
                          else
                           0
                        end) lugonline,
                    sum(case
                          when t1.xtype_id = 3 then
                           t1.book_fee
                          else
                           0
                        end) seatonline,
                    sum(case
                          when t1.xtype_id = 7 then
                           t1.book_fee
                          else
                           0
                        end) foodonline,
                    sum(case
                          when t1.book_type = 1 then
                           t1.book_fee
                          else
                           0
                        end) insure,
                    sum(case
                          when t1.xtype_id = 23 then
                           t1.book_fee
                          else
                           0
                        end) handbag,
                    sum(case
                          when t1.xtype_id not in (24, 25, 34) then
                           t1.book_fee
                          else
                           0
                        end) onlinefeesum
                 from dw.fact_other_order_detail t1
              where t1.company_id = 0
                and t1.flights_date >= to_date('2021-11-27', 'yyyy-mm-dd')
                and t1.flights_date < to_date('2021-12-27', 'yyyy-mm-dd')
                and t1.nationflag = '国内'
                and t1.flag_id = 40
              group by t1.segment_head_id) line on line.segment_head_id =
                                                  tt.segment_head_id --线上辅收
  left join (select d.segment_head_id,
                    sum(d.fee_bag + nvl(d.bg_fee, 0)) bagfee,
                    sum(d.fee_kdj) feekdj
               from dw.fact_dcs_money_detail d
              where nvl(d.fee_bag, 0) + nvl(d.bg_fee, 0) <> 0
                and d.flights_date >= to_date('2021-11-27', 'yyyy-mm-dd')
                and d.flights_date < to_date('2021-12-27', 'yyyy-mm-dd')
                and d.nationflag = '国内'
                and d.company_id = 0
              group by d.segment_head_id) dl on dl.segment_head_id =
                                                tt.segment_head_id --地面行李/选座
  left join (select t4.segment_head_id,
                    sum(f.dinner_price * f.dinner_num) food
               from stg.s_cq_group_dinner_detail f
               Join dw.fact_order_detail t4 on f.order_head_id =
                                               t4.flights_order_head_id
              where t4.company_id = 0
                and t4.flights_date >= to_date('2021-11-27', 'yyyy-mm-dd')
                and t4.flights_date < to_date('2021-12-27', 'yyyy-mm-dd')
                and t4.nationflag = '国内'
                and t4.flag_id = 40
              group by t4.segment_head_id) m on m.segment_head_id =
                                                tt.segment_head_id --团队餐
  left join (select t6.segment_head_id,
                    sum(t5.book_price * t5.book_num) kdfee
               from dw.fact_express_detail t5
               Join dw.fact_order_detail t6 on t5.flights_order_head_id =
                                               t6.flights_order_head_id
              where t6.company_id = 0
                and t6.flag_id in (3, 5, 40, 41)
                and t5.flag = 2
                and t5.rid = 1
                and t5.FLIGHT_DATE >= to_date('2021-11-27', 'yyyy-mm-dd')
                and t5.flight_date < to_date('2021-12-27', 'yyyy-mm-dd')
                group by t6.segment_head_id) kd on kd.segment_head_id =
                                                                                tt.segment_head_id --快递
  left join (select t2.segment_head_id,
                    sum(l.bookfee) flighttotal,
                    sum(case
                          when l.type_name in ('餐食', '小吃', '饮料') then
                           l.bookfee
                          else
                           0
                        end) flightfood,
                    sum(case
                          when l.category = 3 then
                           l.bookfee
                          else
                           0
                        end) flightkj,
                    sum(case
                          when l.category not in (3) and
                               l.type_name not in ('餐食', '小吃', '饮料') and
                               l.merchant_name not in ('上海春秋中免免税品有限公司') then
                           l.bookfee
                          else
                           0
                        end) flightjn
               from dw.fact_prt_order_detail l
               join stg.prt_eshop_product p on p.id = l.product_id
               left join dw.da_foc_order t1 on t1.flights_date =
                                               to_date(l.flight_date,
                                                       'yyyymmdd')
                                           and t1.flights_no =
                                               (case when
                                                length(l.flight_no) < 6 then
                                                '9C' ||
                                                substr(l.flight_no, 1, 5) else
                                                substr(l.flight_no, 1, 7) end)
               left join dw.da_flight t2 on t1.flights_id = t2.flights_id
                                        and t1.segment_code =
                                            t2.segment_code
              where t2.segment_head_id is not null
                and t2.company_id = 0
                and l.merchant_name not in ('上海春秋中免免税品有限公司')
                and t2.flight_date >= to_date('2021-11-27', 'yyyy-mm-dd')
                and t2.flight_date < to_date('2021-12-27', 'yyyy-mm-dd')
                group by t2.segment_head_id) flightsale on flightsale.segment_head_id =
                                                                                        tt.segment_head_id --零售
  left join (select t9.segment_head_id, sum(gl.bagw) bagw
               from dw.fact_luggage_detail gl
               left join dw.fact_order_detail t9 on t9.flights_order_head_id =
                                                    gl.flights_order_head_id
              where t9.company_id = 0
                and t9.nationflag = '国内'
                and t9.flights_date >= to_date('2021-11-27', 'yyyy-mm-dd')
                and t9.flights_date < to_date('2021-12-27', 'yyyy-mm-dd')
                group by t9.segment_head_id) bagw on bagw.segment_head_id =
                                                                                   tt.segment_head_id --行李重量
 where tt.company_id = 0
   and tt.nationflag = '国内'
   and tt.flight_date >= to_date('2021-11-27', 'yyyy-mm-dd')
   and tt.flight_date < to_date('2021-12-27', 'yyyy-mm-dd')
   and tt.flag = 0
 group by tt.flight_no ,
       tt.flights_segment_name ,
       tt.route_name ,
       dst.wf_segment_name ,
       tt.mile ,
       tt.route_type ,
       tt.originairport_name ,
       case when tt.originairport_name in('浦东','虹桥','石家庄','沈阳','揭阳','扬州泰州','深圳','宁波','兰州','南昌','成都',
       '广州','西安','大连') then tt.originairport_name
       else '其他' end ,
       (tt.dest_sta-tt.origin_std)*24 ,
       to_char(tt.flight_date, 'yyyymmdd') ,
       to_char(tt.origin_std, 'hh24:mi') ,
       to_char(tt.dest_sta, 'hh24:mi') ,
       case
         when to_char(tt.origin_std, 'hh24:mi') >= '07:00' and
              to_char(tt.origin_std, 'hh24:mi') <= '09:00' then
          '餐点'
         when to_char(tt.origin_std, 'hh24:mi') >= '11:00' and
              to_char(tt.origin_std, 'hh24:mi') <= '13:00' then
          '餐点'
         when to_char(tt.origin_std, 'hh24:mi') >= '17:00' and
              to_char(tt.origin_std, 'hh24:mi') <= '19:00' then
          '餐点'
         else
          '非餐点'
       end,
       tt.oversale;






 ------498、

/*各位好，需要从11月15日-12月26日，宁波湛江，宁波长春，宁波南宁，
宁波北海，宁波桂林，宁波井冈山航线中挑选1500名购买往返程的客人的航班信息，包括姓名、身份证、去程航班号、回程航班号、
去程日期、回程日期，以上六项信息
*/



select /*+parallel(4) */
t2.traveller_name,t2.codeno,t2.whole_flight,t1.whole_flight,t2.flights_date,t1.flights_date
 from dw.fact_order_detail t1
 join dw.fact_order_detail t2 on t1.wf_lc_father_id=t2.flights_order_head_id
 join dw.da_flight t3 on t2.segment_head_id=t3.segment_head_id
  where t1.flights_order_head_id<>t1.wf_lc_father_id
 and t3.originairport_name ='宁波'
 and t3.destairport_name in('湛江','长春','南宁','北海','桂林','井冈山')
 and t2.flag_id=40
 and t1.flag_id=40
 and t2.flights_date>=to_date('2021-11-15','yyyy-mm-dd')
 and t2.flights_date<=to_date('2021-12-26','yyyy-mm-dd')

union  

select t2.traveller_name,t2.codeno,t1.whole_flight,t2.whole_flight,t1.flights_date,t2.flights_date
 from dw.fact_order_detail t1
  , dw.fact_order_detail t2 
 ,dw.da_flight t3 
 , dw.da_flight t4  
  where t1.codeno=t2.codeno
  and t1.traveller_name=t2.traveller_name
  and t1.segment_head_id=t3.segment_head_id
  and t2.segment_head_id=t4.segment_head_id
  and t2.flights_date> t1.flights_date
  and t2.flights_date<=t1.flights_date+7
  and t3.originairport_name=t4.destairport_name
  and t3.destairport_name=t4.originairport_name
 and t3.originairport_name ='宁波'
 and t3.destairport_name in('湛江','长春','南宁','北海','桂林','井冈山')
 and t2.flag_id=40
 and t1.flag_id=40
 and t1.flights_date>=to_date('2021-11-15','yyyy-mm-dd')
 and t1.flights_date<=to_date('2021-12-26','yyyy-mm-dd')
 and t2.flights_date>=to_date('2021-11-15','yyyy-mm-dd')
 and t2.flights_date<=to_date('2021-12-26','yyyy-mm-dd');




 ------499、市场部数据提取 #406350

 --针对【机上菜单-支付宝离线支付】的宣传活动，想申请调取一批用户手机号，作为活动抽奖使用，会以电话的形式联系旅客并告知其中奖
--调取对象：2021年11月27日至12月26日，在客舱内使用支付宝离线支付的旅客，消费金额由高到低排序前50名旅客。

---2021年11月27日至12月26日，在客舱内使用支付宝离线支付的旅客，消费金额由高到低排序前50名旅客

select /*t.id,\*decode(t.status,'200','支付成功',300,'已发货','301','部分发货','400','确认收货','500','已评价',
'600','已退货退款','601','退货中','602','退货失败','700','已退款','701','退款中','702','退款失败','703','退货退款中') 订单状态,*\
t1.pro_name,t1.SALE_PRICE,t1.pro_number,t3.flight_date,t4.daylinedate foc_date,t3.flight_no,t4.flightno foc_flightno,t3.flight_id,
t5.airport_name,t6.airport_name,
\*round((t4.f_sta-t4.f_std)*24,1) flight_time,*\t3.seat_no,t5.threecodeforcity oriairport,t6.threecodeforcity destairport,
tt2.EX_CFD1,tt2.gender,tt3.age,tt3.cust_province,tt3.cust_city 
*/
t.LOGIN_NAME,sum(t1.SALE_PRICE)
from stg.prt_eshop_order t
join stg.prt_eshop_order_detail t1 on t.id=t1.order_id
join stg.prt_eshop_order_payment t2 on t.id=t2.order_id
join stg.prt_eshop_order_flight t3 on t.id=t3.order_id
/*left  join stg.f_day_flight t4 on t3.flight_id=t4.dayflightid
left join hdb.cq_airport t5 on t5.f_code=t4.oriairport
left join hdb.cq_airport t6 on t6.f_code=t4.arrairport
left  join(select rl flights_order_id,ri vaild_code,sn seat_no,cn codno,fdate,fn,fs
from(
select t1.rl,t1.ri,t1.sn,t1.cn,t1.fdate,t1.fn,t1.fs
 from stg.s_dcs_old_h_bak t1
 where t1.fdate>=to_date('2021-11-27','yyyy-mm-dd')
 and t1.fdate<=to_date('2021-12-26','yyyy-mm-dd')
union 
select t1.rl,t1.ri,t1.sn,t1.cn,t1.fdate,t1.fn,t1.fs
 from stg.s_dcs_old_h t1
 where t1.fdate>=to_date('2021-11-27','yyyy-mm-dd')
 and t1.fdate<=to_date('2021-12-26','yyyy-mm-dd')
 ))tt1 on to_char(tt1.fdate,'yyyymmdd')=t3.flight_date and tt1.fn=t3.flight_no and tt1.fs=t5.threecodeforcity||t6.threecodeforcity
 and tt1.seat_no=t3.seat_no
left join dw.fact_recent_order_detail tt2 on tt1.flights_order_id=tt2.flights_order_id and tt1.vaild_code=tt2.valid_code 
left join dw.bi_order_region tt3 on tt2.flights_order_head_id=tt3.flights_order_head_id*/
where t.STATUS='400'
and t2.pay_type_name ='支付宝离线支付'
and t3.flight_date>='20211127'
and t3.flight_date<='20211226'
group by t.LOGIN_NAME
order by 2 desc



 ------500、市场部数据提取 #406348

--请提取GDS中的【乘机人号码黑名单管理】历史导入数据，包含限制下单、下单提醒的号码，重新匹下近1年的乘机情况，结合系统限制的结束日期，看哪些是要重新限制下单
select hh1.*,hh2.*
froM( 
 select *
  froM(
  select tel,begin_date,end_date,decode(limit_typem,1,'下单限制',2,'提醒') type,row_number()over(partition by tel order by ID desc) rid
     from cqsale.CQ_BLACK_AGENT_PHONE@tO_air
     where flag=1)h1
     where h1.rid=1)hh1   
   left join (select r_tel,suM(case when h2.flag_id in(3,5,40,7,11,12) then 1 else 0 end) 支付成功量,
   suM(case when h2.flag_id not in(3,5,40,7,11,12) then 1 else 0 end) 未支付量                  
               from cqsale.cq_order_head@to_air h2
               where h2.r_order_date>=trunc(sysdate)-365
                 and h2.r_order_date< trunc(sysdate)
                 group by r_tel) hh2 on hh1.tel=hh2.r_tel;
 
 
----------------------------------------------------------------20220104---------------------------------------------------
 ------501、航班日期--上海深圳航线退票数据分布

select t2.flight_date 航班日期,
t3.wf_city_name,t3.wf_segment,t2.flights_segment_name,
t4.province origin_province,
t5.province dest_province,
case when t1.money_fy=0 then '0元退票'
when t1.money_fy>0 then '非0元退票' end 费用类型,
case when t2.flag=2 then '取消航班'
else '正常航班' end 航班类型,
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)*24<2 then '[0,2H)'
when (t1.origin_std-t1.money_date)*24<24 then '[2H,24H)'
when (t1.origin_std-t1.money_date)<3 then '[24H,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)>=7 then '7D+' end priod,
case when t1.seats_name like 'P%' then 'P舱'
when t1.seats_name like 'R%' then 'R舱'
when t1.seats_name in('E','U','X','T','Q','N') then 'EUXTQN'
when t1.seats_name in('Y','S','H','V','K','L','M') then 'YSHVKLM'
when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '其他' end seattype,nvl(t1.seats_name,'YE') seats_name,
t6.channel,
case when t6.channel in('网站','手机') and t6.pay_gate in(15,29,31) then '代理'
when t6.channel in('网站','手机') and t7.users_id is not null then '代理'
else '非代理' end,
count(1) tkt,
sum(t1.money_fy) money_fy,
t1.apply_memo
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.fact_recent_order_detail t6 on t1.flights_order_head_id=t6.flights_order_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 left join hdb.cq_airport t4 on t2.originairport=t4.threecodeforcity
 left join hdb.cq_airport t5 on t2.destairport=t5.threecodeforcity
 left join dw.da_restrict_userinfo@to_ods t7 on t6.client_id=t7.users_id
 where t2.flight_date>=trunc(sysdate)-7
 and t2.flight_date< trunc(sysdate)
 and t2.company_id=0
 and t2.flights_city_name like '上海%深圳'
     group by t2.flight_date ,
t3.wf_city_name,t3.wf_segment,t2.flights_segment_name,
t4.province ,
t5.province ,
case when t1.money_fy=0 then '0元退票'
when t1.money_fy>0 then '非0元退票' end ,
case when t2.flag=2 then '取消航班'
else '正常航班' end  ,
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)*24<2 then '[0,2H)'
when (t1.origin_std-t1.money_date)*24<24 then '[2H,24H)'
when (t1.origin_std-t1.money_date)<3 then '[24H,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)>=7 then '7D+' end ,
case when t1.seats_name like 'P%' then 'P舱'
when t1.seats_name like 'R%' then 'R舱'
when t1.seats_name in('E','U','X','T','Q','N') then 'EUXTQN'
when t1.seats_name in('Y','S','H','V','K','L','M') then 'YSHVKLM'
when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '其他' end ,nvl(t1.seats_name,'YE'),
t6.channel,
case when t6.channel in('网站','手机') and t6.pay_gate in(15,29,31) then '代理'
when t6.channel in('网站','手机') and t7.users_id is not null then '代理'
else '非代理' end,t1.apply_memo;


---------------------------------------------------------------20220105------------------------------------------------------------------

 ------502、
/*
2012年-2021年
上海佐贺
佐贺上海
深圳佐贺
佐贺深圳
西安佐贺
佐贺西安
*/

select to_char(t1.flights_date,'yyyy') 航班年,t2.flights_city_name 航线城市,sum(t1.boardnum) 乘机人数
 from dw.da_main_order t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=date'2012-01-01'
   and t1.flights_date<=date'2021-12-31'
   and t2.flights_city_name like '%佐贺%'
   and regexp_like(t2.flights_city_name,'上海|深圳|西安')
 group by to_char(t1.flights_date,'yyyy'),t2.flights_city_name


 ------503、

--喜欢，黄明华要一个退票的数据，按月统计，从2020年1月到2021年12月，每月的退票数量 含bgo

select to_CHAR(t2.r_flights_date,'yyyymm'), count(1),sum(t1.money_fy)
 from dw.da_order_drawback t1
 join stg.s_cq_order_head t2 on t1.flights_order_head_id=t1.flights_order_head_id
 where t1.money_date>=date'2020-01-01'
 and t1.money_date< date'2022-01-01'
 and t2.r_money_class_id=0
 and t2.whole_flight like '9C%'
 group by to_CHAR(t2.r_flights_date,'yyyymm')
 

 ------504、

 --喜欢，黄明华要一个退票的数据，按月统计，从2020年1月到2021年12月，每月的退票数量 含bgo

select /*+parallel(4) */
to_CHAR(t1.money_date,'yyyymm'), count(1),sum(t1.money_fy)
 from dw.da_order_drawback t1
 join dw.fact_recent_order_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id
 where t1.money_date>=date'2020-01-01'
 and t1.money_date< date'2022-01-01'
 and t2.money_class_id=0
 and t2.whole_flight like '9C%'
 group by to_CHAR(t1.money_date,'yyyymm');

------------------------------------------------------20220107--------------------------------------------
 ------505、商务经济座销售客座率（销量/可售数）

select t1.flight_date 航班日期,t1.flight_no 航班号,t1.route_name 航线,t1.root_route_type 是否经停,
case when t1.root_route_type like '%经停%' then 24
else 12 end 商务布局数,count(distinct t1.segment_head_id) 航段数,
sum(t1.superseat_num) 商务计划数,
sum(tkt) 商务座销量,sum(t1.bgo_plan-t1.o_plan) bgplan,
sum(t4.itnum) 散客销量,sum(t4.boardnum) 乘机人数,sum(t1.oversale) 计划数
 from dw.da_flight t1
 left join (select  t2.segment_head_id,count(1) tkt
             from dw.bi_superseat_detail t2
             where t2.flag_id in(3,5,40)
             and t2.flight_date>=trunc(sysdate)-7
             group by t2.segment_head_id)t3 on t1.segment_head_id=t3.segment_head_id
  left join dw.da_main_order t4 on t1.segment_head_id=t4.segment_head_id
 where t1.flag=0
 and t1.flight_date>=to_date('2020-11-01','yyyy-mm-dd')
 and t1.flight_date< trunc(sysdate)
 and t1.company_id=0
 group by  t1.flight_date,t1.flight_no,t1.route_name,t1.root_route_type,case when t1.root_route_type like '%经停%' then 24
else 12 end;


 ------506、
 --收益快报中航线判断

select *
from(
select 
case when t1.route_flag='1' then  '经停三段'
when t1.route_flag is null and t1.cost_flag='3' then '经停合计'
when t1.route_flag='0' and t1.qr_flag='0' then '直飞' 
when t1.qr_flag='1' then '经停合计'
when t1.cost_flag='3' then '经停合计'
when t1.route_flag='2' then '同机中转'
end route_type,
t1.flight_date,t1.flight_no,t1.flight_no2,t1.segment_name,t1.FLIGHT_SEGMENT,
t1.qr_flag,t1.route_flag,t1.cost_flag
from cqsale.CM_FINANCIAL_DETAIL@to_air t1
where /*t1.flight_date>=trunc(sysdate)-30
and*/ t1.flight_date< trunc(sysdate)-6)h1
where h1.route_type is null;

------------------------------------------------------20220110-----------------------------------------------------------------------------
 ------507、2020/2021年平均折扣率

select /*+parallel(4) */
to_char(t1.flights_date,'yyyy'),sum(t1.ticket_price),sum(case when t1.seats_name is not null then t2.price
else 0 end) from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=date'2020-01-01'
 and t1.flights_date< date'2022-01-01'
 and t1.flag_id=40
 and t2.nationflag='国内'
 and t1.company_id=0
 group by to_char(t1.flights_date,'yyyy');


  select 
to_char(t1.flights_date,'yyyy'),sum(t1.boardprice),sum(t1.boardnum*t1.price),
sum(t1.boardprice)/sum(t1.boardnum*t1.price)
 from dw.da_main_order t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=date'2020-01-01'
 and t2.company_id=0
 and t2.nationflag='国内'
 group by to_char(t1.flights_date,'yyyy');


 ------508、退票理由分类

-----------------------------------------------------------------月份sql-------------------------------------------------------------

select /*+parallel(4) */
hb2.smonth,hb2.flights_segment_name,hb2.nationflag,hb2.segment_country,
hb2.seat_type,hb2.foc实际起飞延误时间,hb2.apply_memo,hb2.费用类型,hb2.航班类型,hb2.priod_date,
hb2.退票渠道,hb2.apply_user,
case when hb2.DELAY_HOUR>=0.25 and hb2.DELAY_HOUR< 1.5 then '15m~90m'
when hb2.DELAY_HOUR>=1.5 and hb2.DELAY_HOUR< 3 then '1.5h~3h' 
when hb2.DELAY_HOUR>=3 and hb2.DELAY_HOUR< 5 then '3h~5h' 
when hb2.DELAY_HOUR>=5  then '5h' 
else '未延迟' end 延误航班时间类型,
hb2.公告时间类型,
hb2.收费类型,
sum(hb2.money_fy) money_fy,
sum(hb2.ticketprice) ticketprice,
sum(hb2.ys_fee) ys_fee,
count(distinct hb2.flights_order_head_id) 退票量,
sum(hb2.ys_fee)-sum(hb2.money_fy) 金额差异
from (
select hb1.*,hb2.drawback_rate,case when hb1.ticketprice=0 then '0元机票'
 when hb1.money_fy=0 then '0元收费'
when hb1.ticketprice>0 and hb1.money_fy=hb1.ticketprice*hb2.drawback_rate then '正常收费'
when hb1.ticketprice>0 and hb1.money_fy> hb1.ticketprice*hb2.drawback_rate then '多收费'
when hb1.ticketprice>0 and hb1.money_fy< hb1.ticketprice*hb2.drawback_rate then '少收费'
else '正常收费'
end 收费类型,nvl(hb1.ticketprice*hb2.drawback_rate,hb1.money_fy) ys_fee

from(
select t1.flights_order_head_id,
to_char(t1.money_date,'yyyymm') smonth,
t9.r_order_date ,
t1.money_date,
t2.flight_date,
t2.flights_segment_name,
t2.area_type nationflag,
t2.segment_country,
case when t1.seattype='商务座' then '商务座'
else '非商务座' end seat_type,
case when t7.dep_time is not null then 
case when (t7.dep_time-t2.origin_std)*24*60< 15 then '延误15分钟以下'
when (t7.dep_time-t2.origin_std)*24*60>=15 and (t7.dep_time-t2.origin_std)*24*60< 90 then '15min~90min'
when (t7.dep_time-t2.origin_std)*24*60>=90 and (t7.dep_time-t2.origin_std)*24< 3 then '1.5h~3h'
when (t7.dep_time-t2.origin_std)*24>=3  then '3h+'
end
else null end  foc实际起飞延误时间,
case when t1.money_fy=0 and t1.ticketprice=0  and t1.seats_name in('O','D') then 'OD退票'
when t1.money_fy=0 and t1.ticketprice=0   then '套票退票'
when t1.money_fy=0  then '0元退票'
when t1.money_fy>0 then '非0元退票' end 费用类型,
case when t2.flag=2 then '取消航班'
when t6.unnormaltype is not null then t6.unnormaltype
else '正常航班' end 航班类型,
case when t2.area_type ='国内' then
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)*24<2 then '[0h,2h)'
when (t1.origin_std-t1.money_date)*24<24 then '[2h,1D)'
when (t1.origin_std-t1.money_date)<3 then '[1D,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)>=7 then '7D+' end 
when t2.area_type ='国际' then
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)<1 then '[0,1D)'
when (t1.origin_std-t1.money_date)<3 then '[1D,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)<15 then '[7D,15D)'
when (t1.origin_std-t1.money_date)<30 then '[15D,30D)'
when (t1.origin_std-t1.money_date)>=30 then '30D+' end 
else null end priod_date,
nvl(t1.seats_name,'YE') seats_name,
t1.flights_order_id,
case when t1.apply_memo  like '%定错%' then '旅客--订错重购'
when t1.apply_memo  like '%订错%' then '旅客--订错重购'
when t1.apply_memo  like '%重购%' then '旅客--订错重购'
when t1.apply_memo  like '%重构%' then '旅客--订错重购'
when t1.apply_memo  like '%重订%' then '旅客--订错重购'
when t1.apply_memo  like '%新定单%' then '旅客--订错重购'
when t1.apply_memo  like '%重新订购%' then '旅客--订错重购'
when t1.apply_memo  like '%重复订票%' then '旅客--订错重购'
when t1.apply_memo  like '%重新购票%' then '旅客--订错重购'
when t1.apply_memo  like '%重复购票%' then '旅客--订错重购'
when t1.apply_memo  like '%航班选错%' then '旅客--订错重购'
when t1.apply_memo  like '%新订单%' then '旅客--订错重购'
when t1.apply_memo  like '%订反%' then '旅客--订错重购'
when t1.apply_memo  like '%原订单%' then '旅客--订错重购'
when t1.apply_memo  like '%原定单%' then '旅客--订错重购'
when t1.apply_memo  like '%误买%' then '旅客--订错重购'
when t1.apply_memo  like '%补订%' then '旅客--补订儿童婴儿'
when t1.apply_memo  like '%补丁%' then '旅客--补订儿童婴儿'
when t1.apply_memo  like '%漏订%' then '旅客--补订儿童婴儿'
when t1.apply_memo  like '%误操作%' then '旅客--误操作'
when t1.apply_memo  like '%误操%' then '旅客--误操作'
when t1.apply_memo  like '%推燃油%' then '政策--燃油问题'
when t1.apply_memo  like '%燃油问题%' then '政策--燃油问题'
when t1.apply_memo  like '%燃油%' then '政策--燃油问题'
when t1.apply_memo  like '%延误%' then '航司--航班延误'
when t1.apply_memo  like '%航班取消%' then '航司--航班取消'
when t1.apply_memo  like '%回程取消%' then '航司--航班取消'
when t1.apply_memo  like '%去程航取%' then '航司--航班取消'
when t1.apply_memo  like '%取消航线%' then '航司--航班取消'
when t1.apply_memo  like '%号%取消%' then '航司--航班取消'
when t1.apply_memo  like '%回程%取消%' then '航司--航班取消'
when t1.apply_memo  like '%去程%取消%' then '航司--航班取消'
when t1.apply_memo  like '%第一程%取消%' then '航司--航班取消'
when t1.apply_memo  like '%第二程%取消%' then '航司--航班取消'
when t1.apply_memo  like '%第一段%取消%' then '航司--航班取消'
when t1.apply_memo  like '%第二段%取消%' then '航司--航班取消'
when t1.apply_memo  like '%前段%取消%' then '航司--航班取消'
when t1.apply_memo  like '%后段%取消%' then '航司--航班取消'
when t1.apply_memo  like '%去取消%' then '航司--航班取消'
when t1.apply_memo  like '%去程取消%' then '航司--航班取消'
when t1.apply_memo  like '%返程取消%' then '航司--航班取消'
when t1.apply_memo  like '%取消%' and t2.flag=2 then '航司--航班取消'
when t1.apply_memo  like '%航班备降%' then '航司--航班备降'
when t1.apply_memo  like '%备降%' then '航司--航班备降'
when t1.apply_memo  like '%航班改降%' then '航司--航班备降'
when t1.apply_memo  like '%航班时间调整%' then '航司--航班时刻调整'
when t1.apply_memo  like '%时刻调整%' then '航司--航班时刻调整'
when t1.apply_memo  like '%时刻变更%' then '航司--航班时刻调整'
when t1.apply_memo  like '%时调%' then '航司--航班时刻调整'
when t1.apply_memo  like '%补班%' then '航司--航班补班'
when t1.apply_memo  like '%价格跳水%' then '航司--价格跳水'
when t1.apply_memo  like '%价格下降%' then '航司--价格跳水'
when t1.apply_memo  like '%跳水%' then '航司--价格跳水'
when t1.apply_memo  like '%病退%' then '旅客--病退'
when t1.apply_memo  like '%出血%' then '旅客--病退'
when t1.apply_memo  like '%心脏病%' then '旅客--病退'
when t1.apply_memo  like '%食物中毒%' then '旅客--病退'
when t1.apply_memo  like '%孕妇%' then '旅客--病退'
when t1.apply_memo  like '%怀孕%' then '旅客--病退'
when t1.apply_memo  like '%肺炎%' then '旅客--病退'
when t1.apply_memo  like '%肠胃炎%' then '旅客--病退'
when t1.apply_memo  like '%死亡%' then '旅客--病退'
when t1.apply_memo  like '%因病%' then '旅客--病退'
when t1.apply_memo  like '%病陪%' then '旅客--病退'

when t1.apply_memo  like '%疫情%' then '疫情'
when t1.apply_memo  like '%新冠%' then '疫情'
when t1.apply_memo  like '%符合%授权%' then '疫情'
when t1.apply_memo  like '%进出授权%' then '疫情'
when t1.apply_memo  like '%行程卡%' then '疫情'
when t1.apply_memo  like '%隔离%' then '疫情'
when t1.apply_memo  like '%核酸%' then '疫情'
when t1.apply_memo  like '%旅居史%' then '疫情'
when t1.apply_memo  like '%旅行史%' then '疫情'
when t1.apply_memo  like '%防疫%' then '疫情'
when t1.apply_memo  like '%行程码%' then '疫情'
when t1.apply_memo  like '%分控%' then '特殊情况--分控同意'
when t1.apply_memo  like '%审核修改费%' then '特殊情况--审核修改费用'
when t1.apply_memo  like '%投诉%' then '投诉处理'
when t1.apply_memo  like '%市场部%同意%' then '投诉处理'
when t1.apply_memo  like '%汪老师%' then '投诉处理'
when t1.apply_memo  like '%应老师%' then '投诉处理'
when t1.apply_memo  like '%陆丹%' then '投诉处理'
when t1.apply_memo  like '%张英%' then '投诉处理'
when t1.apply_memo  like '%应张蝶%' then '投诉处理'
when t1.apply_memo  like '%顾老师%' then '投诉处理'
when t1.apply_memo  like '%汪华茂%' then '投诉处理'
when t1.apply_memo  like '%吴世娟%' then '投诉处理'
when t1.apply_memo  like '%蔡老师%' then '投诉处理'
when t1.apply_memo  like '%范香%' then '投诉处理'

when t1.apply_memo  like '%定错%' then '旅客--订错重购'
when t1.apply_memo  like '%买错%' then '旅客--订错重购'
when t1.apply_memo  like '%补儿童%' then '旅客--补订儿童婴儿'
when t1.apply_memo  like '%航班保护%' then '航司--航班保护'
when t1.apply_memo  like '%去程%保护%' then '航司--航班保护'
when t1.apply_memo  like '%取消%保护%' then '航司--航班保护'
when t1.apply_memo  like '%前段%保护%' then '航司--航班保护'
when t1.apply_memo  like '%后段%保护%' then '航司--航班保护'
when t1.apply_memo  like '%保护不乘坐%' then '航司--航班保护'
when t1.apply_memo  like '%保护航班不乘坐%' then '航司--航班保护'
when t1.apply_memo  like '%取消保护不坐%' then '航司--航班保护'
when t1.apply_memo  like '%航班保护不乘坐%' then '航司--航班保护'
when t1.apply_memo  like '%保护航班不坐%' then '航司--航班保护'
when t1.apply_memo  like '%保护航班%' then '航司--航班保护'
when t1.apply_memo  like '%保护不坐%' then '航司--航班保护'
when t1.apply_memo  like '%保护%' then '航司--航班保护'
when t1.apply_memo  like '%不正常航班%' then '航司--不正常航班'
when t1.apply_memo  like '%暂停销售%' then '航司--不正常航班'
when t1.apply_memo  like '%去程不正常%' then '航司--不正常航班'
when t1.apply_memo  like '%航班停售%' then '航司--不正常航班'
when t1.apply_memo  like '%前段不正常%' then '航司--不正常航班'
when t1.apply_memo  like '%不正常回程%' then '航司--不正常航班'
when t1.apply_memo  like '%航班不正常%' then '航司--不正常航班'
when t1.apply_memo  like '%停止销售%' then '航司--不正常航班'
when t1.apply_memo  like '%不正常%' then '航司--不正常航班'
when t1.apply_memo  like '%停售%' then '航司--不正常航班'
when t1.apply_memo  like '%术后%' then '旅客--病退'
when t1.apply_memo  like '%高危%' then '旅客--病退'
when t1.apply_memo  like '%地震%' then '特殊事件'
when t1.apply_memo  like '%暴乱%' then '特殊事件'
when t1.apply_memo  like '%暴动%' then '特殊事件'
when t1.apply_memo  like '%学生%' then '旅客--学生政策'
when t1.apply_memo  like '%学校%' then '旅客--学生政策'
when t1.apply_memo  like '%关系户%' then '关系户'
when t1.apply_memo  like '%二次%' then '特殊情况--二次退'
when t1.apply_memo  like '%2次%' then '特殊情况--二次退'
when t1.apply_memo  like '%分控%' then '特殊情况--主控同意'
when t1.apply_memo  like '%主控%' then '特殊情况--主控同意'
when t1.apply_memo  like '%总控%' then '特殊情况--主控同意'
when t1.apply_memo  like '%特殊退改%' then '特殊退改政策'
when t1.apply_memo  like '%退改政策%' then '特殊退改政策'
when t1.apply_memo  like '%特殊政策%' then '特殊退改政策'
when t1.apply_memo  like '%香港政策%' then '特殊退改政策'
when t1.apply_memo  like '%特殊退票%' then '特殊退改政策'
when t1.apply_memo  like '%自愿%' then '旅客自愿'
when lower(t1.apply_memo)  like '%ziyuan%' then '旅客自愿'
when t1.apply_memo  like '%单%退%' then '单退'
when t1.apply_memo  like '%退 机 建 与 燃 油%' then '旅客自愿'
when t1.apply_memo  like '%退 机 建%' then '旅客自愿'
when t1.apply_memo  like '%自退%' then '旅客自愿'
when t1.apply_memo  like '%退机建%' then '旅客自愿'
when t1.apply_memo  like '%tuishui%' then '旅客自愿'
when t1.apply_memo  like '%退机建费%' then '旅客自愿'
when t1.apply_memo  like '%退机税%' then '旅客自愿'
when t1.apply_memo  like '%褪税%' then '旅客自愿'
when t1.apply_memo  like '%推机税%' then '旅客自愿'
when t1.apply_memo  like '%退机场建设费%' then '旅客自愿'
when t1.apply_memo  like '%退稅%' then '旅客--自愿'
when t1.apply_memo  like '%退税%' then '旅客--自愿'
when t1.apply_memo  like '%被减%' then '旅客--被减'
when t1.apply_memo  like '%超售%' then '旅客--超售'
when t1.apply_memo  like '%误机%' then '旅客--误机'
when t1.apply_memo  like '%晚到%' then '旅客--误机'
when t1.apply_memo  like '%wuji%' then '旅客--误机'
when t1.apply_memo  like '%漏机%' then '旅客--误机'
when t1.apply_memo  like '%拒载%' then '旅客--拒载'
when t1.apply_memo  like '%遗失%' then '旅客--客票遗失'
when t1.apply_memo  like '%测试%' then '测试'
when lower(t1.apply_memo)  like '%test%' then '测试'
when t1.apply_memo  like '%盗卡%' then '旅客--盗卡'
when t1.apply_memo  like '%20%%' then '投诉--少收手续费处理'
when t1.apply_memo  like '%30%%' then '投诉--少收手续费处理'
when t1.apply_memo  like '%10%%' then '投诉--少收手续费处理'
when t1.apply_memo  like '%5%%' then '投诉--少收手续费处理'
when t1.apply_memo  like '%机构退票%' then '机构退票'
when t1.apply_memo  like '%授权%' then '疫情'
else  '其他原因'  end apply_memo,
t1.apply_user,
case when t1.money_terminal< 0 then '线上'
when t1.money_terminal>0 then '线下' end 退票渠道,
t6.unnormaltype 不正常类型,
t6.reason,
t6.PUBLISH_DATE,
t6.LAST_PUBLISH,
t6.DELAY_HOUR,
case when t6.PUBLISH_DATE is not null and t1.money_date >=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=3 then '不正常公告发布后延误3小时以上操作退票'
when t6.PUBLISH_DATE is not null and t1.money_date >=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=1.5 then '不正常公告发布后延误90分钟到3小时以上操作退票'
 when t6.PUBLISH_DATE is not null and  t1.money_date>=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=0.25 and t6.DELAY_HOUR< 1.5 then '不正常公告发布后延误15分钟到90分钟操作退票'
when t6.PUBLISH_DATE is not null and t1.money_date>=t6.PUBLISH_DATE and t6.unnormaltype='延误'
 then '不正常公告发布后其他延误操作退票'
 when t6.PUBLISH_DATE is not null and t1.money_date>=t6.PUBLISH_DATE
 then '不正常公告发布后非延误操作退票'
 else null end 公告时间类型,
t1.money_fy,
t1.ticketprice
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 left join hdb.cq_airport t4 on t2.originairport=t4.threecodeforcity
 left join hdb.cq_airport t5 on t2.destairport=t5.threecodeforcity
 left join stg.s_cq_order_head t9 on t1.flights_order_head_id=t9.flights_order_head_id
 left join (select *
from(
select t1.segment_head_id,t1.unnormaltype,t1.reason,t1.PUBLISH_DATE,t1.LAST_PUBLISH,t1.DELAY_HOUR,
row_number()over(partition by segment_head_id
order by t1.last_publish desc) rid
from dw.tw_unnormal_flight t1)h1
where h1.rid=1) t6 on t1.segment_head_id=t6.segment_head_id
left join dw.da_foc_flight t7 on t1.segment_head_id=t7.segment_head_id
  where t1.money_date>=date'2020-11-01'
 and t1.money_date< trunc(sysdate)
 and t2.company_id=0
     )hb1
left join dw.dim_tq_history_rule hb2 on hb1.nationflag=hb2.nationflag 
and hb1.seat_type=hb2.seat_type and hb1.priod_date=hb2.priod_type and hb1.seats_name=hb2.seats_name
and hb1.segment_country=nvl(hb2.segment_country,hb1.segment_country)
and trunc(hb1.r_order_date)>=hb2.begin_date and trunc(hb1.r_order_date)<=nvl(hb2.end_date,trunc(sysdate))
)hb2
group by hb2.smonth,hb2.flights_segment_name,hb2.nationflag,hb2.segment_country,
hb2.seat_type,hb2.foc实际起飞延误时间,hb2.apply_memo,hb2.费用类型,hb2.航班类型,hb2.priod_date,
hb2.退票渠道,hb2.apply_user,
case when hb2.DELAY_HOUR>=0.25 and hb2.DELAY_HOUR< 1.5 then '15m~90m'
when hb2.DELAY_HOUR>=1.5 and hb2.DELAY_HOUR< 3 then '1.5h~3h' 
when hb2.DELAY_HOUR>=3 and hb2.DELAY_HOUR< 5 then '3h~5h' 
when hb2.DELAY_HOUR>=5  then '5h' 
else '未延迟' end ,
hb2.公告时间类型,
hb2.收费类型;



--------------------------------------------------退票明细数据------------------------------------------------------

select hb1.*,hb2.drawback_rate 退票规则费率,hb1.机票票面金额*hb2.drawback_rate 应收退票手续费
from(
select t1.flights_order_head_id 机票编号,
t1.flights_order_id 订单号,
t9.order_date,
t1.money_date 退票申请时间,
t2.flight_date 航班日期,
t2.flights_segment_name 航段,
t2.area_type nationflag ,
t2.segment_country ,
case when t1.seattype='商务座' then '商务座'
else '非商务座' end seat_type,
case when t7.dep_time is not null then 
case when (t7.dep_time-t2.origin_std)*24*60< 15 then '延误15分钟以下'
when (t7.dep_time-t2.origin_std)*24*60>=15 and (t7.dep_time-t2.origin_std)*24*60< 90 then '15min~90min'
when (t7.dep_time-t2.origin_std)*24*60>=90 and (t7.dep_time-t2.origin_std)*24< 3 then '1.5h~3h'
when (t7.dep_time-t2.origin_std)*24>=3  then '3h+'
end
else null end  foc实际起飞延误时间类型,
case when t1.money_fy=0 and t1.ticketprice=0 then '0元机票'
when t1.money_fy=0 and t1.ticketprice=0 then '非0元机票0元退票'
when t1.money_fy>0 then '非0元退票' end 费用类型,
case when t2.flag=2 then '取消航班'
else '非取消航班' 
end 航班类型,
case when t2.area_type ='国内' then
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)*24<2 then '[0h,2h)'
when (t1.origin_std-t1.money_date)*24<24 then '[2h,1D)'
when (t1.origin_std-t1.money_date)<3 then '[1D,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)>=7 then '7D+' end 
when t2.area_type ='国际' then
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)<1 then '[0,1D)'
when (t1.origin_std-t1.money_date)<3 then '[1D,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)<15 then '[7D,15D)'
when (t1.origin_std-t1.money_date)<30 then '[15D,30D)'
when (t1.origin_std-t1.money_date)>=30 then '30D+' end 
else null end priod_date,
case when t1.seats_name in('Y','W') then 'YW'
when t1.seats_name in('S','H','V','K','L','M') then 'SHVKLM'
when t1.seats_name in('N','Q','T','X','U','E') then 'NQTXUE'
when t1.seats_name in('R1','R2','R3','R4') then 'R1R2R3R4'
when t1.seats_name in('P','P1','P2','P3','P4','P5') then 'PP1P2P3P4P5'
when t1.seats_name in('B','G','G1','G2','O') then 'BGO'
else '其他' end 退票提前期,nvl(t1.seats_name,'YE')  seats_name,
t1.apply_memo 申请理由,
t1.apply_user 申请人,
t11.terminal 退票操作终端,
case when t1.money_terminal<0 then '线上退票'
 when t1.money_terminal> 0 then '线下退票'  end  退票渠道,
t6.unnormaltype 不正常航班类型,
t6.reason 不正常航班理由,
t6.PUBLISH_DATE 不正常航班最开始发布时间,
t6.LAST_PUBLISH 不正常航班最后发布时间,
t6.DELAY_HOUR 延误小时,
case when t6.PUBLISH_DATE is not null and t1.money_date >=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=3 then '不正常公告发布后延误3小时以上操作退票'
when t6.PUBLISH_DATE is not null and t1.money_date >=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=1.5 then '不正常公告发布后延误90分钟到3小时以上操作退票'
 when t6.PUBLISH_DATE is not null and  t1.money_date>=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=0.25 and t6.DELAY_HOUR< 1.5 then '不正常公告发布后延误15分钟到90分钟操作退票'
when t6.PUBLISH_DATE is not null and t1.money_date>=t6.PUBLISH_DATE and t6.unnormaltype='延误'
 then '不正常公告发布后其他延误操作退票'
 when t6.PUBLISH_DATE is not null and t1.money_date>=t6.PUBLISH_DATE
 then '不正常公告发布后非延误操作退票'
 else null end 延误小时类型,
case when t9.is_wf=1 and t9.is_qu_hui=1 then '往返-去程'
when t9.is_wf=1 and t9.is_qu_hui=1 then '往返-返程'
when t9.is_wf=1 and t9.is_qu_hui=1 then '往返-返程'
when t9.IS_LC=1 and t9.wf_lc_father_id=nvl(t9.LC_FATHER_ID,0) then '联程-第一程'
when t9.IS_LC=1  then '联程-第二程'
else '-' end 关联机票,
t1.money_fy 退票手续费,
t1.ticketprice 机票票面金额
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 left join hdb.cq_airport t4 on t2.originairport=t4.threecodeforcity
 left join hdb.cq_airport t5 on t2.destairport=t5.threecodeforcity
 left join dw.fact_recent_order_detail t9 on t1.flights_order_head_id=t9.flights_order_head_id
 left join dw.da_order_change t10  on t1.segment_head_id=t10.new_segment_id and t1.flights_order_head_id=t10.flights_order_head_id
 left join stg.s_cq_terminal t11 on t11.terminal_id=t1.money_terminal
 left join (select *
from(
select t1.segment_head_id,t1.unnormaltype,t1.reason,t1.PUBLISH_DATE,t1.LAST_PUBLISH,t1.DELAY_HOUR,
row_number()over(partition by segment_head_id
order by t1.last_publish desc) rid
from dw.tw_unnormal_flight t1)h1
where h1.rid=1) t6 on t1.segment_head_id=t6.segment_head_id
left join dw.da_foc_flight t7 on t1.segment_head_id=t7.segment_head_id
  where t1.money_date>=date'2022-01-03'
 and t1.money_date< date'2022-01-09'+1
 and t2.company_id=0
     )hb1
left join dw.dim_tq_history_rule hb2 on hb1.nationflag=hb2.nationflag 
and hb1.seat_type=hb2.seat_type and hb1.priod_date=hb2.priod_type and hb1.seats_name=hb2.seats_name
and hb1.segment_country=nvl(hb2.segment_country,hb1.segment_country)
and trunc(hb1.order_date)>=hb2.begin_date and trunc(hb1.order_date)<=nvl(hb2.end_date,trunc(sysdate));

----------------------------------------------------20220114------------------------------------------------------------
 ------509、服务取消航班匹配


select to_char(t1.flight_date,'yyyymmdd')||t1.flight_no,max(t1.flag)
 from dw.da_flight t1
 where to_char(t1.flight_date,'yyyymmdd')||t1.flight_no in('202112109C6526');

 ------510、购买线上场景辅收的机票占比数据


select count(1),sum(t1.ticket_price),suM(book_fee),sum(t2.money_fy),
sum(case when ticket_price=0 then 0 else money_fy/ticket_price*book_fee end)
 from dw.fact_recent_order_detail t1
 join dw.da_order_drawback t2 on t2.flights_order_head_id=t1.flights_order_head_id
 join (select tt1.order_head_id,sum(tt1.book_price*tt1.r_com_rate) book_fee
  from stg.s_cq_other_order_head tt1
  where tt1.ex_nfd1 in(3,6,7,10,17,18, 23)
  and tt1.book_price>0
  and tt1.r_flights_date>=date'2021-12-01'
  and tt1.r_flights_date< date'2022-01-01'
  and tt1.flag_id in(3,5,40,41,7,11,12)
   group by tt1.order_head_id)t3 on t1.flights_order_head_id=t3.order_head_id 
 where t1.flights_date>=date'2021-12-01'
 and t1.flights_date< date'2022-01-01'
 and t1.flag_id in(7,11,12);
  


   select sum(ticketprice),count(1),sum(money_fy),sum(bookfee),
         sum(case when ticketprice=0 then 0 else money_fy/ticketprice*bookfee end)
  from(
  select h2.order_head_id,h4.ticket_price*h4.r_com_rate ticketprice,od.money_fy,
         sum(h2.book_price*h2.r_com_rate) bookfee       
  
  from cqsale.cq_other_order_head@to_air h2
  join cqsale.cq_other_order@to_air h3 on h2.order_id = h3.order_id
  join cqsale.cq_order_head@to_air h4 on h2.order_head_id =h4.flights_order_head_id
  join dw.Da_Order_Drawback od on h4.flights_order_head_id = od.flights_order_head_id
 where h2.r_flights_date >= to_date('2021-12-01', 'yyyy-mm-dd')
   and h2.r_flights_date < to_date('2021-12-31', 'yyyy-mm-dd')+1
   and h2.whole_flight like '9C%'
   and h2.ex_nfd1 in (3, 6, 7, 10, 17, 18, 23)
   and h4.flag_id in (7,11,12)
   and h2.book_price>0
   group by h2.order_head_id,h4.ticket_price*h4.r_com_rate ,od.money_fy);


select case when t1.flag_id in(7,11,12) then '退票'
else '支付' end stype,
sum(ticket_price) 机票金额,
sum(book_fee) 线上有购买金额的辅收金额,
sum(t2.money_fy) 退票手续费,
count(1) 机票量,
count(t3.order_head_id) 线上有购买金额的辅收票量
 from dw.fact_recent_order_detail t1
 left join dw.da_order_drawback t2 on t2.flights_order_head_id=t1.flights_order_head_id
 left join (select tt1.order_head_id,sum(tt1.book_price*tt1.r_com_rate) book_fee
  from stg.s_cq_other_order_head tt1
  where tt1.ex_nfd1 not in(24,25,34)
  and tt1.book_price>0
  and tt1.r_flights_date>=date'2021-12-01'
  and tt1.r_flights_date< date'2022-01-01'
  and tt1.flag_id in(3,5,40,41,7,11,12)
   group by tt1.order_head_id)t3 on t1.flights_order_head_id=t3.order_head_id 
 where t1.flights_date>=date'2021-12-01'
 and t1.flights_date< date'2022-01-01'
 and t1.flag_id in(3,5,40,41,7,11,12)
 group by case when t1.flag_id in(7,11,12) then '退票'
else '支付' end;


----------------------------------------------------20220117-------------------------------------------------------------------
 ------511、

----判断联系方式对应近30天机票量大于200张的账号是否被识别成代理

select *
from(
select t1.flights_order_head_id,t1.flights_order_id,t1.segment_head_id,t1.work_tel,t1.r_tel,t2.flag,
count(1),sum(count(1))over(partition by t1.work_tel) worktelnum,
sum(count(1))over(partition by t1.r_tel) rtelnum
 from dw.fact_order_detail t1
 left join if.v_da_restrict_userinfo t2 on t1.client_id=t2.users_id
 where t1.channel in('网站','手机')
 and t1.order_day>=trunc(sysdate)-30
 and t1.order_day< trunc(sysdate)
 group by t1.flights_order_head_id,t1.flights_order_id,t1.segment_head_id,t1.work_tel,t1.r_tel,t2.flag)h1
 where h1.worktelnum+h1.rtelnum>=200
 and nvl(h1.flag,0)<=4;

 ------512、联润认证金额


select split_part(timestamp, ' ', 1),
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133',
                                         '153',
                                         '162',
                                         '168',
                                         '169',
                                         '173',
                                         '174',
                                         '177',
                                         '179',
                                         '180',
                                         '181',
                                         '189',
                                         '189',
                                         '191',
                                         '196',
                                         '197',
                                         '199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130',
                                         '131',
                                         '132',
                                         '140',
                                         '146',
                                         '155',
                                         '156',
                                         '163',
                                         '166',
                                         '167',
                                         '171',
                                         '175',
                                         '176',
                                         '185',
                                         '186',
                                         '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',
                                         '135',
                                         '136',
                                         '137',
                                         '138',
                                         '139',
                                         '144',
                                         '147',
                                         '148',
                                         '150',
                                         '151',
                                         '152',
                                         '157',
                                         '158',
                                         '159',
                                         '165',
                                         '172',
                                         '178',
                                         '182',
                                         '183',
                                         '184',
                                         '187',
                                         '188',
                                         '195',
                                         '198') then
          '移动'
       end
       
      , 
       count(1)
  from dw.fact_threevaild_detail t1
  where split_part(timestamp, ' ', 1)>='2021-12-01'
  and split_part(timestamp, ' ', 1)<='2021-12-31'
 and t1.respcode in
       ('P300', 'P301', 'P305', 'P306', 'P307', 'SJ', 'NM', 'ID')
 group by split_part(timestamp, ' ', 1),
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133',
                                         '153',
                                         '162',
                                         '168',
                                         '169',
                                         '173',
                                         '174',
                                         '177',
                                         '179',
                                         '180',
                                         '181',
                                         '189',
                                         '189',
                                         '191',
                                         '196',
                                         '197',
                                         '199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130',
                                         '131',
                                         '132',
                                         '140',
                                         '146',
                                         '155',
                                         '156',
                                         '163',
                                         '166',
                                         '167',
                                         '171',
                                         '175',
                                         '176',
                                         '185',
                                         '186',
                                         '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',
                                         '135',
                                         '136',
                                         '137',
                                         '138',
                                         '139',
                                         '144',
                                         '147',
                                         '148',
                                         '150',
                                         '151',
                                         '152',
                                         '157',
                                         '158',
                                         '159',
                                         '165',
                                         '172',
                                         '178',
                                         '182',
                                         '183',
                                         '184',
                                         '187',
                                         '188',
                                         '195',
                                         '198') then
          '移动'
       end;


---------------------------------------------------------20220120----------------------------------------------------------------------
 ------513、

select t1.OPERATE_INFO,trunc(t1.RETURN_DATE),
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
when nvl(t1.web_id,0)>0 then t4.abrv
when t6.terminal_id>0 then t6.terminal end ,
count(distinct t1.flights_order_head_id)
 from stg.s_cq_return_ticket_channel t1
 left join stg.s_cq_agent_info t4 on t1.web_id=t4.agent_id
 left join stg.s_cq_terminal t6 on t1.terminal_id=t6.terminal_id
 left join dw.da_order_drawback t7 on t1.flights_order_head_id=t7.flights_order_head_id
 left join if.v_da_restrict_userinfo t8  on t1.users_id=t8.users_id
 group by t1.OPERATE_INFO,trunc(t1.RETURN_DATE),
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
when nvl(t1.web_id,0)>0 then t4.abrv
when t6.terminal_id>0 then t6.terminal end;



select t1.OPERATE_INFO,trunc(t1.RETURN_DATE),
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
when nvl(t1.web_id,0)>0 then t4.abrv
when t6.terminal_id>0 then t6.terminal end ,
t3.channel,
t3.sub_channel,
case when t7.money_fy=0 then '0元退票'
when t7.money_fy>0 then '非0元退票'
else '-' end 退票费用,
case when t8.users_id is not null then '代理'
else '非代理' end 是否代理,
t1.users_id,
count(distinct t1.flights_order_head_id)
 from stg.s_cq_return_ticket_channel t1
 left join dw.fact_recent_order_detail t3 on t1.FLIGHTS_ORDER_HEAD_ID=t3.flights_Order_head_id
 left join stg.s_cq_agent_info t4 on t1.web_id=t4.agent_id
 left join stg.s_cq_terminal t6 on t1.terminal_id=t6.terminal_id
 left join dw.da_order_drawback t7 on t1.flights_order_head_id=t7.flights_order_head_id
 left join if.v_da_restrict_userinfo t8  on t1.users_id=t8.users_id
 where t1.OPERATE_INFO='19957457038'
 and t3.order_day>=date'2021-01-01'
 --and t2.flag_id in(7,11,12)
 group by t1.OPERATE_INFO,trunc(t1.RETURN_DATE),t1.users_id,
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
when nvl(t1.web_id,0)>0 then t4.abrv
when t6.terminal_id>0 then t6.terminal end ,
t3.channel,
t3.sub_channel,
case when t7.money_fy=0 then '0元退票'
when t7.money_fy>0 then '非0元退票'
else '-' end ,
case when t8.users_id is not null then '代理'
else '非代理' end;



select *
froM(
select t1.OPERATE_INFO,/*trunc(t1.RETURN_DATE),*/
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
when nvl(t1.web_id,0)>0 then t4.abrv
when t1.terminal_id>0 then t6.terminal end ,
count(distinct t1.flights_order_head_id),
sum(count(distinct t1.flights_order_head_id))over(partition by t1.OPERATE_INFO ) xnum
 from stg.s_cq_return_ticket_channel t1
 left join stg.s_cq_agent_info t4 on t1.web_id=t4.agent_id
 left join stg.s_cq_terminal t6 on t1.terminal_id=t6.terminal_id
 left join dw.da_order_drawback t7 on t1.flights_order_head_id=t7.flights_order_head_id
 left join if.v_da_restrict_userinfo t8  on t1.users_id=t8.users_id
 group by t1.OPERATE_INFO,/*trunc(t1.RETURN_DATE),*/
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
when nvl(t1.web_id,0)>0 then t4.abrv
when t1.terminal_id>0 then t6.terminal end)h1
where h1.xnum>=100;



select /*+parallel(4) */
t1.OPERATE_INFO,
t3.flights_date,
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
else '线上渠道' end ,
count(distinct t1.flights_order_head_id),
sum(count(distinct t1.flights_order_head_id))over(partition by t1.OPERATE_INFO) xnum
 from stg.s_cq_return_ticket_channel t1
 join dw.fact_recent_order_detail t3 on t1.flights_order_head_id=t3.flights_Order_head_id
 where 
 t1.TERMINAL_ID<0 
 and nvl(t1.web_id,0)=0
 group by  t1.OPERATE_INFO,
t3.flights_date,
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
else '线上渠道' end


 

select /*+parallel(4) */
*
from (
select 
t1.OPERATE_INFO,
t3.flights_date,
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
else '线上渠道' end ,
count(distinct t1.flights_order_head_id),
sum(count(distinct t1.flights_order_head_id))over(partition by t1.OPERATE_INFO) xnum
 from stg.s_cq_return_ticket_channel t1
 join dw.fact_recent_order_detail t3 on t1.flights_order_head_id=t3.flights_Order_head_id
 where 
 t1.TERMINAL_ID<0 
 and nvl(t1.web_id,0)=0
 group by  t1.OPERATE_INFO,
t3.flights_date,
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
else '线上渠道' end)
where xnum>=100;



select /*+parallel(4) */ *
from (
select 
t1.flights_order_id,
t1.OPERATE_INFO,
t3.flights_date,
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
else '线上渠道' end ,
case when t4.flights_order_head_id is not null then 1
else 0 end stype,
count(distinct t1.flights_order_head_id),
sum(count(distinct t1.flights_order_head_id))over(partition by t1.OPERATE_INFO) xnum
 from stg.s_cq_return_ticket_channel t1
 join dw.fact_recent_order_detail t3 on t1.flights_order_head_id=t3.flights_Order_head_id
 join dw.da_order_drawback t5 on t1.flights_order_head_id=t5.flights_order_head_id
 left join dw.fact_recent_order_detail t4 on t3.segment_head_id=t4.segment_head_id and 
 t3.flights_order_head_id<>t4.flights_order_head_id
 and t3.codeno=t4.codeno and t4.order_date>=t5.money_date
 where 
 t1.TERMINAL_ID<0 
 and nvl(t1.web_id,0)=0
 and t1.OPERATE_INFO is not null 
 group by  t1.flights_order_id,
 t1.OPERATE_INFO,
t3.flights_date,
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
else '线上渠道' end,case when t4.flights_order_head_id is not null then 1
else 0 end )
where xnum>=100;


 




 ------514、


/*请提供这次小程序异常退票信息数据提取，退票订单+重购订单数据，具体字段如下：
订单号、航班号、航班日期、航段、旅客姓名、旅客证件号、订票终端，订单日期、订单时间、票价、舱位、机票优惠金额、支付机构、预订人姓名、注册预定电话、紧急联系人电话，联系人电话、退票终端、
退票费用、退票时间、退票手机号、退票IP地址（如有），订票IP地址（如有），备注（退票订单、重购订单）
*/


/*请提供这次小程序异常退票信息数据提取，退票订单+重购订单数据，具体字段如下：
订单号、航班号、航班日期、航段、旅客姓名、旅客证件号、订票终端，订单日期、订单时间、票价、舱位、机票优惠金额、支付机构、预订人姓名、
注册预定电话、紧急联系人电话，联系人电话、退票终端、退票费用、
退票时间、退票手机号、退票IP地址（如有），订票IP地址（如有），备注（退票订单、重购订单）
*/


select /*+parallel(4) */ 
*
from (
select 
t1.flights_order_id 订单号,
t3.whole_flight 航班号,
t3.flights_date 航班日期,
t3.whole_segment 航段,
t3.traveller_name 旅客姓名,
t3.channel 渠道大类,
t3.sub_channel 订票终端,
t3.order_day 订单日,
t3.order_date 订单时间,
t3.ticket_price 票价,
t3.seats_name 舱位,
nvl(tt3.youhui_result,0)+nvl(tt5.use_money,0) 机票优惠金额,
tt6.gate_name 支付机构,
t3.order_linkman 预订人姓名,
tt7.login_id 注册预订电话,
t3.r_tel 紧急联系人电话,
t3.work_tel 联系人电话,
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
else '线上渠道' end 退票终端,
t5.money_fy 退票费用,
t1.OPERATE_INFO 退票手机号 ,
'' 退票IP地址无,
t3.remote_ip 下单IP地址,
t4.flights_order_id 重购订单号,
count(distinct t1.flights_order_head_id),
sum(count(distinct t1.flights_order_head_id))over(partition by t1.OPERATE_INFO) xnum
 from stg.s_cq_return_ticket_channel t1
 join dw.fact_recent_order_detail t3 on t1.flights_order_head_id=t3.flights_Order_head_id
 join dw.da_order_drawback t5 on t1.flights_order_head_id=t5.flights_order_head_id
 left join dw.fact_recent_order_detail t4 on t3.segment_head_id=t4.segment_head_id and 
 t3.flights_order_head_id<>t4.flights_order_head_id
 and t3.codeno=t4.codeno and t4.order_date>=t5.money_date 
 left join stg.c_cq_order_youhui_detail tt3 on t1.flights_order_head_id=tt3.flights_order_head_id
left join dw.bi_yhq_use tt5 on tt5.flights_order_head_id=t1.flights_order_head_id
left join stg.p_cq_pay_gate tt6 on tt6.id=t3.pay_gate
left join dw.da_b2c_user tt7 on tt7.users_id=t3.client_id
 
 where 
 t1.TERMINAL_ID<0 
 and nvl(t1.web_id,0)=0
 and t1.sale_type_detail in(5,10)
 and t1.OPERATE_INFO is not null 
 group by t1.flights_order_id,
t3.whole_flight,
t3.flights_date,
t3.whole_segment,
t3.traveller_name,
t3.channel,
t3.sub_channel,
t3.order_day,
t3.order_date,
t3.ticket_price,
t3.seats_name,
nvl(tt3.youhui_result,0)+nvl(tt5.use_money,0) ,
tt6.gate_name,
t3.order_linkman,
tt7.login_id,
t3.r_tel,
t3.work_tel,
case when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL <=2 then '网站'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when t1.TERMINAL_ID<0 and nvl(t1.web_id,0)=0 and t1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
else '线上渠道' end ,
t5.money_fy ,
t1.OPERATE_INFO  ,
t3.remote_ip ,
t4.flights_order_id
  
 )
where xnum>=100;

----------------------------------------------------20220125---------------------------------------------------------
 ------515、

select /*+parallel(4)*/
 m1.ymd 航班日,
 m1.origincity_name 始发城市,
 m1.destcity_name 抵达城市,
 sum(nvl(m1.avgticket, 0)) / sum(nvl(m1.ticknum, 0)) 平均票价,
 sum(nvl(m1.onlinefee, 0)) / sum(nvl(m1.ticknum, 0)) 线上行李人均,
 sum(nvl(m1.onlinenum, 0)) / sum(nvl(m1.ticknum, 0)) 线上行李购买率,
 sum(nvl(m1.bagfee, 0)) / sum(nvl(m1.ticknum, 0)) 地面行李人均,
 sum(nvl(m1.bagnum, 0)) / sum(nvl(m1.ticknum, 0)) 地面行李购买率,
 (sum(nvl(m1.onlinefee, 0)) + sum(nvl(m1.bagfee, 0))) /
 sum(nvl(m1.ticknum, 0)) 总行李人均,
 (sum(nvl(m1.onlinenum, 0)) + sum(nvl(m1.bagnum, 0))) /
 sum(nvl(m1.ticknum, 0)) 总行李购买率,
 (sum(nvl(m1.onlinefee, 0)) + sum(nvl(m1.bagfee, 0)) +
 sum(nvl(m1.combotickprice, 0))) / sum(nvl(m1.ticknum, 0)) 总行李含组合商务座人均,
 (sum(nvl(m1.onlinenum, 0)) + sum(nvl(m1.bagnum, 0)) +
 sum(nvl(m1.comboticknum, 0))) / sum(nvl(m1.ticknum, 0)) 总行李含组合商务座购买率,
 sum(m1.ticknum) 机票总数,
 sum(nvl(m1.onlinefee, 0)) 线上行李金额,
 sum(nvl(m1.onlinenum, 0)) 线上行李数量,
 sum(nvl(m1.bagfee, 0)) 地面行李金额,
 sum(nvl(m1.bagnum, 0)) 地面行李数量,
 sum(nvl(m1.combotickprice, 0)) 商务组合价差,
 sum(nvl(m1.comboticknum, 0)) 商务组合数量

  from (select to_char(t.flights_date, 'yyyymmdd') ymd,
               tt.origincity_name,
               tt.destcity_name,
               sum(case
                     when t.is_swj > 0 then
                      1
                     when t.ex_cfd6 is not null and cp.id = 1 then
                      1
                     else
                      0
                   end) comboticknum,
               sum(case
                     when t.is_swj > 0 and sp.upgrade_type >= 0 then
                      nvl(sp.upgrade_fee, 0)
                     when t.is_swj > 0 and sp.upgrade_type < 0 then
                      nvl((t.ticket_price -
                          nvl(t.min_seat_price * t.rcd_rate, t.ticket_price)),
                          0)
                     when t.is_swj = 0 and t.ex_cfd6 is not null and cp.id = 1 then
                      nvl(cb.comb_fee, 0)
                     else
                      0
                   end) combotickprice,
               sum(nvl(t.ticket_price, 0)) avgticket,
               sum(nvl(h1.onlinenum, 0)) onlinenum,
               sum(nvl(h1.onlinefee, 0)) onlinefee,
               sum(nvl(h2.bagnum, 0)) bagnum,
               sum(nvl(h2.bagfee, 0)) bagfee,
               count(1) ticknum
          from dw.fact_order_detail t
          join dw.da_flight tt on t.segment_head_id = tt.segment_head_id
          left join dw.dim_comb_product cp on cp.type_id = t.ex_cfd6
                                          and cp.id = nvl(t.ex_nfd4, 1)
          left join dw.bi_superseat_detail sp on t.flights_order_head_id =
                                                 sp.flights_order_head_id
          left join dw.fact_comb_price cb on cb.flights_order_head_id =
                                             t.flights_order_head_id
          left join (select t1.flights_order_head_id,
                           sum(t1.book_num) onlinenum,
                           sum(t1.book_fee) onlinefee
                      from dw.fact_other_order_detail t1
                     where t1.xtype_id in (6, 10, 17, 23)
                       and t1.nationflag = '国内'
                       and t1.company_id = 0
                       and t1.flag_id = 40
                       and t1.flights_date >=
                           to_date('2019-01-01', 'yyyy-mm-dd')
                       and t1.flights_date < to_date('2020-01-01', 'yyyy-mm-dd') 
                     group by t1.flights_order_head_id) h1 on h1.flights_order_head_id =
                                                              t.flights_order_head_id
          left join (select d.flights_order_head_id,
                           sum(d.fee_bag + nvl(d.bg_fee, 0)) bagfee,
                           count(1) bagnum
                      from dw.fact_dcs_money_detail d
                     where nvl(d.fee_bag, 0) + nvl(d.bg_fee, 0) <> 0
                       and d.nationflag = '国内'
                       and d.company_id = 0
                       and d.flights_date >=
                           to_date('2019-01-01', 'yyyy-mm-dd')
                       and d.flights_date < to_date('2020-01-01', 'yyyy-mm-dd') 
                     group by d.flights_order_head_id) h2 on h2.flights_order_head_id =
                                                             t.flights_order_head_id
         where t.company_id = 0
           and t.flights_date >= to_date('2019-01-01', 'yyyy-mm-dd')
           and t.flights_date < to_date('2020-01-01', 'yyyy-mm-dd') 
           and t.nationflag = '国内'
           and t.flag_id = 40
           and t.seats_name is not null
         group by to_char(t.flights_date, 'yyyymmdd'),
                  tt.origincity_name,
                  tt.destcity_name) m1
 group by m1.ymd, m1.origincity_name, m1.destcity_name;

 
 ----------------------------------------------------------20220126--------------------------------------------------------------------
 ------516、

select h2.sdate,h2.city,case when rid2>1 then 100000 
else rid end rid1,
rid2,row_Number()over(order by case when rid2>1 then 100000 
else rid end) rid3
from(
select h1.sdate,h1.city,row_number()over(order by h1.sdate,h1.city) rid,
dense_rank()over(partition by city order by h1.sdate) rid2
from(
select '0401' sdate,'深圳' city
 from dual 
 
 union all
 
 select '0402' sdate,'深圳' city
 from dual 
 
 union all
 
 select '0403' sdate,'广州' city
 from dual 
 
 union all
 
 select '0404' sdate,'广州' city
 from dual )h1
 )h2;


 ------517、

select /*+parallel(4) */
*
from(
select h3.pid,count(distinct destcity_name) citynum,sum(onnum) ontkt,sum(tkt) tkt,sum(ticketprice) ticketprice,
sum(points) points,sum(ys_points)  ys_points
from(
select h2.pid,h2.flights_date,h2.destcity_name,h2.onnum,h2.tkt,h2.ticketprice,
case when nvl(h2.memberlevelid,2) =2 then 
case when rid2>=2 then h2.ticketprice*5
when rid2=1 then h2.ticketprice*(5+2*(rid3-1)) end
when nvl(h2.memberlevelid,2) =3 then 
case when rid2>=2 then h2.ticketprice*5*1.5
when rid2=1 then h2.ticketprice*(5+2*(rid3-1))*1.5 end
when nvl(h2.memberlevelid,2) =4 then 
case when rid2>=2 then h2.ticketprice*5*2
when rid2=1 then h2.ticketprice*(5+2*(rid3-1))*2 end
else h2.ticketprice
end points,
case when nvl(h2.memberlevelid,2) =2 then 
h2.ticketprice
when nvl(h2.memberlevelid,2) =3 then 
h2.ticketprice*1.5
when nvl(h2.memberlevelid,2) =4 then 
h2.ticketprice*2
end ys_points
from(
select h1.pid,h1.flights_date,h1.destcity_name,h1.onnum,h1.tkt,h1.ticketprice,
       h1.rid,h1.rid2,h1.memberlevelid,
case when rid2>1 then 100000 
else rid end rid1,
row_Number()over(partition by h1.pid  order by case when rid2>1 then 100000 
else rid end) rid3      
from(
select t1.traveller_name||t1.codeno pid,
   t1.flights_date,
   t2.destcity_name,
   dim1.memberlevelid,
 case when t1.channel in('网站','手机') and t3.users_id is not null then 0
   when t1.channel in('网站','手机') and t1.pay_gate in(15,29,31) then 0
     when t1.channel in('网站','手机')  then 1
     else 0 end onnum,  
     1 tkt,  
case when t3.flights_order_head_id is not null then t3.yhq_money
     else t1.ticket_price end ticketprice,
     row_number()over(partition by t1.traveller_name||t1.codeno order by t1.flights_date,t2.destcity_name) rid,
     dense_rank()over(partition by t1.traveller_name||t1.codeno,t2.destcity_name order by t1.flights_date) rid2
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
  left join (select t2.CODE_NO codeno,max(t1.memberlevelid)  memberlevelid
  from dw.da_user_level t1
  join stg.c_cq_cust_code t2 on t1.users_id=t2.user_id
  where t2.status in(1,9)
  and t1.memberlevelid in(2,3,4)
   group by t2.CODE_NO)dim1 on dim1.codeno=t1.codeno
  where t1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2022-01-01','yyyy-mm-dd')
   and t1.flag_id=40
   and t2.nationflag='国内'
   and upper(nvl(t1.EX_CFD7,'CHN'))='CHN'
   and t1.seats_name not in('O','D')
   and t1.seats_name is not null)h1
   )h2 
   )h3 
   group by h3.pid
   )h4
   where (points-ys_points)>=5000;




   select /*+parallel(4) */
*
from(
select h3.pid,count(distinct destcity_name) citynum,sum(onnum) ontkt,sum(tkt) tkt,sum(ticketprice) ticketprice,
sum(points) points,sum(ys_points)  ys_points
from(
select h2.pid,h2.flights_date,h2.destcity_name,h2.onnum,h2.tkt,h2.ticketprice,
case when nvl(h2.memberlevelid,2) =2 then 
case when rid2>=2 then h2.ticketprice*5
when rid2=1 then h2.ticketprice*(5+2*(rid3-1)) end
when nvl(h2.memberlevelid,2) =3 then 
case when rid2>=2 then h2.ticketprice*5*1.5
when rid2=1 then h2.ticketprice*(5+2*(rid3-1))*1.5 end
when nvl(h2.memberlevelid,2) =4 then 
case when rid2>=2 then h2.ticketprice*5*2
when rid2=1 then h2.ticketprice*(5+2*(rid3-1))*2 end
else h2.ticketprice
end points,
case when nvl(h2.memberlevelid,2) =2 then 
h2.ticketprice
when nvl(h2.memberlevelid,2) =3 then 
h2.ticketprice*1.5
when nvl(h2.memberlevelid,2) =4 then 
h2.ticketprice*2
end ys_points
from(
select h1.pid,h1.flights_date,h1.destcity_name,h1.onnum,h1.tkt,h1.ticketprice,
       h1.rid,h1.rid2,h1.memberlevelid,
case when rid2>1 then 100000 
else rid end rid1,
row_Number()over(partition by h1.pid  order by case when rid2>1 then 100000 
else rid end) rid3      
from(
select t1.traveller_name||t1.codeno pid,
   t1.flights_date,
   t2.destcity_name,
   dim1.memberlevelid,
 case when t1.channel in('网站','手机') and t3.users_id is not null then 0
   when t1.channel in('网站','手机') and t1.pay_gate in(15,29,31) then 0
     when t1.channel in('网站','手机')  then 1
     else 0 end onnum,  
     1 tkt,  
case when t3.flights_order_head_id is not null then t3.yhq_money
     else t1.ticket_price end ticketprice,
     row_number()over(partition by t1.traveller_name||t1.codeno order by t1.flights_date,t2.destcity_name) rid,
     dense_rank()over(partition by t1.traveller_name||t1.codeno,t2.destcity_name order by t1.flights_date) rid2
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
  left join (select t2.CODE_NO codeno,max(t1.memberlevelid)  memberlevelid
  from dw.da_user_level t1
  join stg.c_cq_cust_code t2 on t1.users_id=t2.user_id
  where t2.status in(1,9)
  and t1.memberlevelid in(2,3,4)
   group by t2.CODE_NO)dim1 on dim1.codeno=t1.codeno
 left join if.v_da_restrict_userinfo dim2 on dim2.users_id=t1.client_id
  where t1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2022-01-01','yyyy-mm-dd')
   and t1.flag_id=40
   and dim2.users_id is null
   and t2.nationflag='国内'
   and upper(nvl(t1.EX_CFD7,'CHN'))='CHN'
   and t1.channel in('网站','手机')
   and t1.pay_gate not in(15,29,31)   
   and t1.seats_name not in('O','D')
   and t1.seats_name is not null)h1
   )h2 
   )h3 
   group by h3.pid
   )h4
   where (points-ys_points)>=5000;
   
   
  ------汇总/聚合数据

 select /*+parallel(4) */
case when points-ys_points>=5000 and points-ys_points< 10000 then '50~100'
when points-ys_points>=10000 and points-ys_points< 15900 then '100~159'
when points-ys_points>=15900 and points-ys_points< 20000 then '159~200'
when points-ys_points>=20000 and points-ys_points< 25900 then '200~259'
when points-ys_points>=25900 and points-ys_points< 30000 then '259~300'
when points-ys_points>=30000 and points-ys_points< 35900 then '300~359'
when points-ys_points>=35900 and points-ys_points< 40000 then '359~400'
when points-ys_points>=40000 and points-ys_points< 45900 then '400~459'
when points-ys_points>=45900 and points-ys_points< 50000 then '459~500'
when points-ys_points>=50000 and points-ys_points< 55900 then '500~559'
when points-ys_points>=55900 and points-ys_points< 60000 then '559~600'
when points-ys_points>=60000 and points-ys_points< 65900 then '559~600'
when points-ys_points>=65900 and points-ys_points< 70000 then '659~700'
when points-ys_points>=70000 and points-ys_points< 100000 then '700~1000'
when points-ys_points>=100000 then '1000+' end points_type,
citynum 城市数量,
count(1) 乘机人数,
sum(tkt) 乘机次数,
sum(ontkt) 线上购票乘机次数,
sum(points) 积分返还量,
sum(ys_points) 应得积分量
from(
select h3.pid,count(distinct destcity_name) citynum,sum(onnum) ontkt,sum(tkt) tkt,sum(ticketprice) ticketprice,
sum(points) points,sum(ys_points)  ys_points
from(
select h2.pid,h2.flights_date,h2.destcity_name,h2.onnum,h2.tkt,h2.ticketprice,
case when nvl(h2.memberlevelid,2) =2 then 
case when rid2>=2 then h2.ticketprice*5
when rid2=1 then h2.ticketprice*(5+2*(rid3-1)) end
when nvl(h2.memberlevelid,2) =3 then 
case when rid2>=2 then h2.ticketprice*5*1.5
when rid2=1 then h2.ticketprice*(5+2*(rid3-1))*1.5 end
when nvl(h2.memberlevelid,2) =4 then 
case when rid2>=2 then h2.ticketprice*5*2
when rid2=1 then h2.ticketprice*(5+2*(rid3-1))*2 end
else h2.ticketprice
end points,
case when nvl(h2.memberlevelid,2) =2 then 
h2.ticketprice
when nvl(h2.memberlevelid,2) =3 then 
h2.ticketprice*1.5
when nvl(h2.memberlevelid,2) =4 then 
h2.ticketprice*2
end ys_points
from(
select h1.pid,h1.flights_date,h1.destcity_name,h1.onnum,h1.tkt,h1.ticketprice,
       h1.rid,h1.rid2,h1.memberlevelid,
case when rid2>1 then 100000 
else rid end rid1,
row_Number()over(partition by h1.pid  order by case when rid2>1 then 100000 
else rid end) rid3      
from(
select t1.traveller_name||t1.codeno pid,
   t1.flights_date,
   t2.destcity_name,
   dim1.memberlevelid,
 case when t1.channel in('网站','手机') and t3.users_id is not null then 0
   when t1.channel in('网站','手机') and t1.pay_gate in(15,29,31) then 0
     when t1.channel in('网站','手机')  then 1
     else 0 end onnum,  
     1 tkt,  
case when t3.flights_order_head_id is not null then t3.yhq_money
     else t1.ticket_price end ticketprice,
     row_number()over(partition by t1.traveller_name||t1.codeno order by t1.flights_date,t2.destcity_name) rid,
     dense_rank()over(partition by t1.traveller_name||t1.codeno,t2.destcity_name order by t1.flights_date) rid2
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
  left join (select t2.CODE_NO codeno,max(t1.memberlevelid)  memberlevelid
  from dw.da_user_level t1
  join stg.c_cq_cust_code t2 on t1.users_id=t2.user_id
  where t2.status in(1,9)
  and t1.memberlevelid in(2,3,4)
   group by t2.CODE_NO)dim1 on dim1.codeno=t1.codeno
  where t1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2022-01-01','yyyy-mm-dd')
   and t1.flag_id=40
   and t2.nationflag='国内'
   and t1.company_id=0
   and upper(nvl(t1.EX_CFD7,'CHN'))='CHN'
   and t1.seats_name not in('O','D')
   and t1.seats_name is not null)h1
   )h2 
   )h3 
   group by h3.pid
   )h4
   where (points-ys_points)>=5000
   group by case when points-ys_points>=5000 and points-ys_points< 10000 then '50~100'
when points-ys_points>=10000 and points-ys_points< 15900 then '100~159'
when points-ys_points>=15900 and points-ys_points< 20000 then '159~200'
when points-ys_points>=20000 and points-ys_points< 25900 then '200~259'
when points-ys_points>=25900 and points-ys_points< 30000 then '259~300'
when points-ys_points>=30000 and points-ys_points< 35900 then '300~359'
when points-ys_points>=35900 and points-ys_points< 40000 then '359~400'
when points-ys_points>=40000 and points-ys_points< 45900 then '400~459'
when points-ys_points>=45900 and points-ys_points< 50000 then '459~500'
when points-ys_points>=50000 and points-ys_points< 55900 then '500~559'
when points-ys_points>=55900 and points-ys_points< 60000 then '559~600'
when points-ys_points>=60000 and points-ys_points< 65900 then '559~600'
when points-ys_points>=65900 and points-ys_points< 70000 then '659~700'
when points-ys_points>=70000 and points-ys_points< 100000 then '700~1000'
when points-ys_points>=100000 then '1000+' end ,
citynum;


select /*+parallel(4) */
case when points-ys_points>=5000 and points-ys_points< 10000 then '50~100'
when points-ys_points>=10000 and points-ys_points< 15900 then '100~159'
when points-ys_points>=15900 and points-ys_points< 20000 then '159~200'
when points-ys_points>=20000 and points-ys_points< 25900 then '200~259'
when points-ys_points>=25900 and points-ys_points< 30000 then '259~300'
when points-ys_points>=30000 and points-ys_points< 35900 then '300~359'
when points-ys_points>=35900 and points-ys_points< 40000 then '359~400'
when points-ys_points>=40000 and points-ys_points< 45900 then '400~459'
when points-ys_points>=45900 and points-ys_points< 50000 then '459~500'
when points-ys_points>=50000 and points-ys_points< 55900 then '500~559'
when points-ys_points>=55900 and points-ys_points< 60000 then '559~600'
when points-ys_points>=60000 and points-ys_points< 65900 then '559~600'
when points-ys_points>=65900 and points-ys_points< 70000 then '659~700'
when points-ys_points>=70000 and points-ys_points< 100000 then '700~1000'
when points-ys_points>=100000 then '1000+' end points_type,
citynum 城市数量,
count(1) 乘机人数,
sum(tkt) 乘机次数,
sum(ontkt) 线上购票乘机次数,
sum(points) 积分返还量,
sum(ys_points) 应得积分量
from(
select h3.pid,count(distinct destcity_name) citynum,sum(onnum) ontkt,sum(tkt) tkt,sum(ticketprice) ticketprice,
sum(points) points,sum(ys_points)  ys_points
from(
select h2.pid,h2.flights_date,h2.destcity_name,h2.onnum,h2.tkt,h2.ticketprice,
case when nvl(h2.memberlevelid,2) =2 then 
case when rid2>=2 then h2.ticketprice*5
when rid2=1 then h2.ticketprice*(5+2*(rid3-1)) end
when nvl(h2.memberlevelid,2) =3 then 
case when rid2>=2 then h2.ticketprice*5*1.5
when rid2=1 then h2.ticketprice*(5+2*(rid3-1))*1.5 end
when nvl(h2.memberlevelid,2) =4 then 
case when rid2>=2 then h2.ticketprice*5*2
when rid2=1 then h2.ticketprice*(5+2*(rid3-1))*2 end
else h2.ticketprice
end points,
case when nvl(h2.memberlevelid,2) =2 then 
h2.ticketprice
when nvl(h2.memberlevelid,2) =3 then 
h2.ticketprice*1.5
when nvl(h2.memberlevelid,2) =4 then 
h2.ticketprice*2
end ys_points
from(
select h1.pid,h1.flights_date,h1.destcity_name,h1.onnum,h1.tkt,h1.ticketprice,
       h1.rid,h1.rid2,h1.memberlevelid,
case when rid2>1 then 100000 
else rid end rid1,
row_Number()over(partition by h1.pid  order by case when rid2>1 then 100000 
else rid end) rid3      
from(
select t1.traveller_name||t1.codeno pid,
   t1.flights_date,
   t2.destcity_name,
   dim1.memberlevelid,
 case when t1.channel in('网站','手机') and t3.users_id is not null then 0
   when t1.channel in('网站','手机') and t1.pay_gate in(15,29,31) then 0
     when t1.channel in('网站','手机')  then 1
     else 0 end onnum,  
     1 tkt,  
case when t3.flights_order_head_id is not null then t3.yhq_money
     else t1.ticket_price end ticketprice,
     row_number()over(partition by t1.traveller_name||t1.codeno order by t1.flights_date,t2.destcity_name) rid,
     dense_rank()over(partition by t1.traveller_name||t1.codeno,t2.destcity_name order by t1.flights_date) rid2
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
  left join (select t2.CODE_NO codeno,max(t1.memberlevelid)  memberlevelid
  from dw.da_user_level t1
  join stg.c_cq_cust_code t2 on t1.users_id=t2.user_id
  where t2.status in(1,9)
  and t1.memberlevelid in(2,3,4)
   group by t2.CODE_NO)dim1 on dim1.codeno=t1.codeno
 left join if.v_da_restrict_userinfo dim2 on dim2.users_id=t1.client_id
  where t1.flights_date>=to_date('2021-01-01','yyyy-mm-dd')
   and t1.flights_date< to_date('2022-01-01','yyyy-mm-dd')
   and t1.flag_id=40
   and dim2.users_id is null
   and t2.nationflag='国内'
   and t1.company_id=0
   and upper(nvl(t1.EX_CFD7,'CHN'))='CHN'
   and t1.channel in('网站','手机')
   and t1.pay_gate not in(15,29,31)   
   and t1.seats_name not in('O','D')
   and t1.seats_name is not null)h1
   )h2 
   )h3 
   group by h3.pid
   )h4
   where (points-ys_points)>=5000
   group by case when points-ys_points>=5000 and points-ys_points< 10000 then '50~100'
when points-ys_points>=10000 and points-ys_points< 15900 then '100~159'
when points-ys_points>=15900 and points-ys_points< 20000 then '159~200'
when points-ys_points>=20000 and points-ys_points< 25900 then '200~259'
when points-ys_points>=25900 and points-ys_points< 30000 then '259~300'
when points-ys_points>=30000 and points-ys_points< 35900 then '300~359'
when points-ys_points>=35900 and points-ys_points< 40000 then '359~400'
when points-ys_points>=40000 and points-ys_points< 45900 then '400~459'
when points-ys_points>=45900 and points-ys_points< 50000 then '459~500'
when points-ys_points>=50000 and points-ys_points< 55900 then '500~559'
when points-ys_points>=55900 and points-ys_points< 60000 then '559~600'
when points-ys_points>=60000 and points-ys_points< 65900 then '559~600'
when points-ys_points>=65900 and points-ys_points< 70000 then '659~700'
when points-ys_points>=70000 and points-ys_points< 100000 then '700~1000'
when points-ys_points>=100000 then '1000+' end ,
citynum;
   
   

 ------518、积分使用及兑换

select to_char(create_day, 'yyyymm') dd,
                       sum(case
                             when point_type in( 0,1) then
                              points_money
                             else
                              0
                           end) points_get,                          
                       sum(case
                             when point_type = 5 then
                              points_money
                             else
                              0
                           end) points_use
                  from dw.bi_points_amount
                 where create_day >= date'2019-01-01'   --无法使用date'20190101'
                   and create_day <= date'2021-12-31' 
                   group by  to_char(create_day, 'yyyymm')   




 ------519、


select  t1.cust_id,max(t1.flight_date) maxdate,
sum(t1.points_money) sumpoints,sum(case when t2.channel in('网站','手机') then t1.points_money
else 0 end) onpoints,sum(case when t2.channel in('OTA','旗舰店') then t1.points_money
else 0 end) otapoints,sum(case when t2.channel not in('网站','手机','OTA','旗舰店') then t1.points_money
else 0 end) b2bpoints
 from dw.fact_points_detail t1
 join dw.fact_order_detail t2 on t1.flights_order_head_id=t2.flights_order_head_id
 where t1.flight_date>=date'2019-01-01'
 and t1.flight_date< date'2020-01-01'
 group by t1.cust_id;


select to_char(maxdate,'yyyymm'),
        case when otapoints/sumpoints>0.5 then 'OTA'
        when onpoints/sumpoints>0.5 then 'online'
        when b2bpoints/sumpoints>0.5 then 'B2B'
        else 'oth' end,     
        
        count(1) pointusernum,
       count(h2.client_id) pointusenum,
       sum(sumpoints) sumpoints,
              sum(onpoints) onpoints,
       sum(otapoints) otapoints,
         sum(b2bpoints) b2bpoints,
         sum(h2.points_money) usepoints       
from(
select 
t1.users_id,
       max(t1.flight_date) maxdate,
       sum(t1.points_money) sumpoints,
       sum(case
             when t2.channel in ('网站', '手机') then
              t1.points_money
             else
              0
           end) onpoints,
       sum(case
             when t2.channel in ('OTA', '旗舰店') then
              t1.points_money
             else
              0
           end) otapoints,
       sum(case
             when t2.channel not in ('网站', '手机', 'OTA', '旗舰店') then
              t1.points_money
             else
              0
           end) b2bpoints
  from dw.fact_points_detail t1
  join dw.fact_order_detail t2 on t1.flights_order_head_id =
                                  t2.flights_order_head_id
 where t1.flight_date >= date '2019-01-01'
   and t1.flight_date < date '2022-01-01'
 group by t1.users_id)h1
left join( select t.client_id,
               sum(u.point_money) points_money
          from cqsale.cq_point_rule_use_info@to_air u
          join stg.s_cq_order t on t.flights_order_id = u.order_no        
         where  u.create_time >= to_date('2019-01-01', 'yyyy-mm-dd')
           and u.pay_yinda_status = 'Y' --取支付成功的数据
           and u.company_id = 0
           and t.pay_flag in(1,3)
group by t.client_id) h2 on h1.users_id=h2.client_id
group by to_char(maxdate,'yyyymm'),
        case when otapoints/sumpoints>0.5 then 'OTA'
        when onpoints/sumpoints>0.5 then 'online'
        when b2bpoints/sumpoints>0.5 then 'B2B'
        else 'oth' end;


------------------------------------------------------------------------------20220210----------------------------------------------------------
 ------520、退票明细数据抽查（1月份1周的数据)

select /*+parallel(4) */
hb2.flights_order_id,
hb2.order_date,
hb2.money_date,
hb2.flight_date,
hb2.flights_segment_name,
hb2.origin_std,
hb2.smonth,
hb2.nationflag,
hb2.seat_type,
hb2.foc实际起飞延误时间,
hb2.memo 理由明细 ,
case when hb2.ticketprice=0 and hb2.money_fy=0 then '0元机票'
when hb2.退票渠道='线上' and hb2.money_fy =0 then '0元线上'
when hb2.退票渠道='线下' and hb2.money_fy=0 then 
   case when hb2.is_guard ='不正常航班保护' then '航班保护0元'
        when hb2.航班类型 in('取消','取消航班') and hb2.公告时间类型 is not null then '取消航班0元'
        when hb2.航班类型 ='延误' and hb2.公告时间类型 ='不正常公告发布后延误3小时以上操作退票' then '延误3小时0元'
        when hb2.航班类型 ='延误' and hb2.公告时间类型 in('不正常公告发布后延误90分钟到3小时以上操作退票','不正常公告发布后延误3小时以上操作退票')
                and hb2.money_date>=date'2021-09-01' then '延误1.5小时0元'
        when hb2.航班类型 ='延误' and hb2.公告时间类型 in('不正常公告发布后延误90分钟到3小时以上操作退票',
'不正常公告发布后延误3小时以上操作退票','不正常公告发布后延误15分钟到90分钟操作退票')
 and hb2.money_date>=date'2021-11-16' then '延误15分钟0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间='3h+' then '起飞后退实际延误3H0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间 in('3h+','1.5h~3h') then '起飞后退实际延误1.5H0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间 in('15min~90min') then '起飞后退实际延误15min0元'
when hb2.航班类型<>'正常航班' and hb2.公告时间类型 is not null then '不正常航班公告后退票'
when hb2.apply_memo like '%疫情%' then '备注-疫情0元'
when hb2.apply_memo in('旅客--误操作','旅客--订错重购') then '备注-误操作0元'
when hb2.apply_memo 
in('航司--航班取消','航司--航班时刻调整','航司--航班保护','航司--不正常航班','航司--航班延误','航司--航班补班','航司--航班备降')
then '备注-不正常航班0元'
when hb2.apply_memo 
in('旅客--误机','航司--价格跳水','政策--燃油问题','旅客--超售','旅客--被减','旅客--拒载','投诉处理') then '备注-旅客投诉0元' 
when hb2.apply_memo <>'未填写相应申请理由' then '0元备注-其他理由0元'
else '无备注0元' end
when hb2.money_fy>0 then '退票收费' end apply_memo,

hb2.费用类型,
hb2.航班类型,
hb2.priod_date,
hb2.退票渠道,
hb2.apply_user,
case when hb2.DELAY_HOUR>=0.25 and hb2.DELAY_HOUR< 1.5 then '15m~90m'
when hb2.DELAY_HOUR>=1.5 and hb2.DELAY_HOUR< 3 then '1.5h~3h' 
when hb2.DELAY_HOUR>=3 and hb2.DELAY_HOUR< 5 then '3h~5h' 
when hb2.DELAY_HOUR>=5  then '5h' 
else '未延迟' end 延误航班时间类型,
hb2.公告时间类型,
hb2.收费类型,
hb2.return_channel,
hb2.order_channel,
hb2.is_guard 是否航班保护,
sum(hb2.money_fy) money_fy,
sum(hb2.ticketprice) ticketprice,
sum(hb2.ys_fee) ys_fee,
count(distinct hb2.flights_order_head_id) 退票量,
sum(hb2.ys_fee)-sum(hb2.money_fy) 金额差异
from (
select hb1.*,hb2.drawback_rate,case when hb1.ticketprice=0 then '0元机票'
 when hb1.money_fy=0 then '0元收费'
when hb1.ticketprice>0 and hb1.money_fy=hb1.ticketprice*hb2.drawback_rate then '正常收费'
when hb1.ticketprice>0 and hb1.money_fy> hb1.ticketprice*hb2.drawback_rate then '多收费'
when hb1.ticketprice>0 and hb1.money_fy< hb1.ticketprice*hb2.drawback_rate then '正常收费'
else '正常收费'
end 收费类型,nvl(hb1.ticketprice*hb2.drawback_rate,hb1.money_fy) ys_fee
from(
select t1.flights_order_head_id,
t1.flights_order_id,
t1.money_date,
to_char(t1.money_date,'yyyymm') smonth,
t9.order_date,
t2.flight_date,
t2.flights_segment_name,
t2.area_type nationflag,
t2.segment_country,
t2.origin_std,
case when t1.seattype='商务座' then '商务座'
else '非商务座' end seat_type,
case when scfl.dis_round is not null then 
        case when (scfl.dis_round -t2.origin_std)*24*60< 15 then '延误15分钟以下'
        when (scfl.dis_round -t2.origin_std)*24*60>=15 and (scfl.dis_round-t2.origin_std)*24*60< 90 then '15min~90min'
        when (scfl.dis_round -t2.origin_std)*24*60>=90 and (scfl.dis_round-t2.origin_std)*24< 3 then '1.5h~3h'
        when (scfl.dis_round -t2.origin_std)*24>=3  then '3h+' end
    else null end  foc实际起飞延误时间,
case when t1.money_fy=0 and t1.ticketprice=0  and t1.seats_name in('O','D') then 'OD退票'
    when t1.money_fy=0 and t1.ticketprice=0   then '套票退票'
    when t1.money_fy=0  then '0元退票'
    when t1.money_fy>0 then '非0元退票' end 费用类型,
case when t2.flag=2 then '取消'
when t6.unnormaltype is not null then t6.unnormaltype
else '正常航班' end 航班类型,
case when t2.area_type ='国内' then
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)*24<2 then '[0h,2h)'
when (t1.origin_std-t1.money_date)*24<24 then '[2h,1D)'
when (t1.origin_std-t1.money_date)<3 then '[1D,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)>=7 then '7D+' end 
when t2.area_type ='国际' then
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)<1 then '[0,1D)'
when (t1.origin_std-t1.money_date)<3 then '[1D,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)<15 then '[7D,15D)'
when (t1.origin_std-t1.money_date)<30 then '[15D,30D)'
when (t1.origin_std-t1.money_date)>=30 then '30D+' end 
else null end priod_date,
nvl(t1.seats_name,'YE') seats_name,
case when t1.apply_memo  like '%定错%' then '旅客--订错重购'
when t1.apply_memo  like '%订错%' then '旅客--订错重购'
when t1.apply_memo  like '%重购%' then '旅客--订错重购'
when t1.apply_memo  like '%重构%' then '旅客--订错重购'
when t1.apply_memo  like '%重订%' then '旅客--订错重购'
when t1.apply_memo  like '%新定单%' then '旅客--订错重购'
when t1.apply_memo  like '%重新订购%' then '旅客--订错重购'
when t1.apply_memo  like '%重复订票%' then '旅客--订错重购'
when t1.apply_memo  like '%重新购票%' then '旅客--订错重购'
when t1.apply_memo  like '%重复购票%' then '旅客--订错重购'
when t1.apply_memo  like '%航班选错%' then '旅客--订错重购'
when t1.apply_memo  like '%新订单%' then '旅客--订错重购'
when t1.apply_memo  like '%订反%' then '旅客--订错重购'
when t1.apply_memo  like '%原订单%' then '旅客--订错重购'
when t1.apply_memo  like '%原定单%' then '旅客--订错重购'
when t1.apply_memo  like '%误买%' then '旅客--订错重购'
when t1.apply_memo  like '%补订%' then '旅客--补订儿童婴儿'
when t1.apply_memo  like '%补丁%' then '旅客--补订儿童婴儿'
when t1.apply_memo  like '%漏订%' then '旅客--补订儿童婴儿'
when t1.apply_memo  like '%误操作%' then '旅客--误操作'
when t1.apply_memo  like '%误操%' then '旅客--误操作'
when t1.apply_memo  like '%推燃油%' then '政策--燃油问题'
when t1.apply_memo  like '%燃油问题%' then '政策--燃油问题'
when t1.apply_memo  like '%燃油%' then '政策--燃油问题'
when t1.apply_memo  like '%延误%' then '航司--航班延误'
when t1.apply_memo  like '%航班取消%' then '航司--航班取消'
when t1.apply_memo  like '%回程取消%' then '航司--航班取消'
when t1.apply_memo  like '%去程航取%' then '航司--航班取消'
when t1.apply_memo  like '%取消航线%' then '航司--航班取消'
when t1.apply_memo  like '%号%取消%' then '航司--航班取消'
when t1.apply_memo  like '%回程%取消%' then '航司--航班取消'
when t1.apply_memo  like '%去程%取消%' then '航司--航班取消'
when t1.apply_memo  like '%第一程%取消%' then '航司--航班取消'
when t1.apply_memo  like '%第二程%取消%' then '航司--航班取消'
when t1.apply_memo  like '%第一段%取消%' then '航司--航班取消'
when t1.apply_memo  like '%第二段%取消%' then '航司--航班取消'
when t1.apply_memo  like '%前段%取消%' then '航司--航班取消'
when t1.apply_memo  like '%后段%取消%' then '航司--航班取消'
when t1.apply_memo  like '%去取消%' then '航司--航班取消'
when t1.apply_memo  like '%去程取消%' then '航司--航班取消'
when t1.apply_memo  like '%返程取消%' then '航司--航班取消'
when t1.apply_memo  like '%取消%' and t2.flag=2 then '航司--航班取消'
when t1.apply_memo  like '%航班备降%' then '航司--航班备降'
when t1.apply_memo  like '%备降%' then '航司--航班备降'
when t1.apply_memo  like '%航班改降%' then '航司--航班备降'
when t1.apply_memo  like '%航班时间调整%' then '航司--航班时刻调整'
when t1.apply_memo  like '%时刻调整%' then '航司--航班时刻调整'
when t1.apply_memo  like '%时刻变更%' then '航司--航班时刻调整'
when t1.apply_memo  like '%时调%' then '航司--航班时刻调整'
when t1.apply_memo  like '%补班%' then '航司--航班补班'
when t1.apply_memo  like '%价格跳水%' then '航司--价格跳水'
when t1.apply_memo  like '%价格下降%' then '航司--价格跳水'
when t1.apply_memo  like '%跳水%' then '航司--价格跳水'
when t1.apply_memo  like '%病退%' then '旅客--病退'
when t1.apply_memo  like '%出血%' then '旅客--病退'
when t1.apply_memo  like '%心脏病%' then '旅客--病退'
when t1.apply_memo  like '%食物中毒%' then '旅客--病退'
when t1.apply_memo  like '%孕妇%' then '旅客--病退'
when t1.apply_memo  like '%怀孕%' then '旅客--病退'
when t1.apply_memo  like '%肺炎%' then '旅客--病退'
when t1.apply_memo  like '%肠胃炎%' then '旅客--病退'
when t1.apply_memo  like '%死亡%' then '旅客--病退'
when t1.apply_memo  like '%因病%' then '旅客--病退'
when t1.apply_memo  like '%病陪%' then '旅客--病退'

when t1.apply_memo  like '%疫情%' then '疫情'
when t1.apply_memo  like '%新冠%' then '疫情'
when t1.apply_memo  like '%符合%授权%' then '疫情'
when t1.apply_memo  like '%进出授权%' then '疫情'
when t1.apply_memo  like '%行程卡%' then '疫情'
when t1.apply_memo  like '%隔离%' then '疫情'
when t1.apply_memo  like '%核酸%' then '疫情'
when t1.apply_memo  like '%旅居史%' then '疫情'
when t1.apply_memo  like '%旅行史%' then '疫情'
when t1.apply_memo  like '%防疫%' then '疫情'
when t1.apply_memo  like '%行程码%' then '疫情'
when t1.apply_memo  like '%分控%' then '特殊情况--分控同意'
when t1.apply_memo  like '%审核修改费%' then '特殊情况--审核修改费用'
when t1.apply_memo  like '%投诉%' then '投诉处理'
when t1.apply_memo  like '%市场部%同意%' then '投诉处理'
when t1.apply_memo  like '%汪老师%' then '投诉处理'
when t1.apply_memo  like '%应老师%' then '投诉处理'
when t1.apply_memo  like '%陆丹%' then '投诉处理'
when t1.apply_memo  like '%张英%' then '投诉处理'
when t1.apply_memo  like '%应张蝶%' then '投诉处理'
when t1.apply_memo  like '%顾老师%' then '投诉处理'
when t1.apply_memo  like '%汪华茂%' then '投诉处理'
when t1.apply_memo  like '%吴世娟%' then '投诉处理'
when t1.apply_memo  like '%蔡老师%' then '投诉处理'
when t1.apply_memo  like '%范香%' then '投诉处理'

when t1.apply_memo  like '%定错%' then '旅客--订错重购'
when t1.apply_memo  like '%买错%' then '旅客--订错重购'
when t1.apply_memo  like '%补儿童%' then '旅客--补订儿童婴儿'
when t1.apply_memo  like '%航班保护%' then '航司--航班保护'
when t1.apply_memo  like '%去程%保护%' then '航司--航班保护'
when t1.apply_memo  like '%取消%保护%' then '航司--航班保护'
when t1.apply_memo  like '%前段%保护%' then '航司--航班保护'
when t1.apply_memo  like '%后段%保护%' then '航司--航班保护'
when t1.apply_memo  like '%保护不乘坐%' then '航司--航班保护'
when t1.apply_memo  like '%保护航班不乘坐%' then '航司--航班保护'
when t1.apply_memo  like '%取消保护不坐%' then '航司--航班保护'
when t1.apply_memo  like '%航班保护不乘坐%' then '航司--航班保护'
when t1.apply_memo  like '%保护航班不坐%' then '航司--航班保护'
when t1.apply_memo  like '%保护航班%' then '航司--航班保护'
when t1.apply_memo  like '%保护不坐%' then '航司--航班保护'
when t1.apply_memo  like '%保护%' then '航司--航班保护'
when t1.apply_memo  like '%不正常航班%' then '航司--不正常航班'
when t1.apply_memo  like '%暂停销售%' then '航司--不正常航班'
when t1.apply_memo  like '%去程不正常%' then '航司--不正常航班'
when t1.apply_memo  like '%航班停售%' then '航司--不正常航班'
when t1.apply_memo  like '%前段不正常%' then '航司--不正常航班'
when t1.apply_memo  like '%不正常回程%' then '航司--不正常航班'
when t1.apply_memo  like '%航班不正常%' then '航司--不正常航班'
when t1.apply_memo  like '%停止销售%' then '航司--不正常航班'
when t1.apply_memo  like '%不正常%' then '航司--不正常航班'
when t1.apply_memo  like '%停售%' then '航司--不正常航班'
when t1.apply_memo  like '%术后%' then '旅客--病退'
when t1.apply_memo  like '%高危%' then '旅客--病退'
when t1.apply_memo  like '%地震%' then '特殊事件'
when t1.apply_memo  like '%暴乱%' then '特殊事件'
when t1.apply_memo  like '%暴动%' then '特殊事件'
when t1.apply_memo  like '%学生%' then '旅客--学生政策'
when t1.apply_memo  like '%学校%' then '旅客--学生政策'
when t1.apply_memo  like '%关系户%' then '关系户'
when t1.apply_memo  like '%二次%' then '特殊情况--二次退'
when t1.apply_memo  like '%2次%' then '特殊情况--二次退'
when t1.apply_memo  like '%分控%' then '特殊情况--主控同意'
when t1.apply_memo  like '%主控%' then '特殊情况--主控同意'
when t1.apply_memo  like '%总控%' then '特殊情况--主控同意'
when t1.apply_memo  like '%特殊退改%' then '特殊退改政策'
when t1.apply_memo  like '%退改政策%' then '特殊退改政策'
when t1.apply_memo  like '%特殊政策%' then '特殊退改政策'
when t1.apply_memo  like '%香港政策%' then '特殊退改政策'
when t1.apply_memo  like '%特殊退票%' then '特殊退改政策'
when t1.apply_memo  like '%自愿%' then '旅客自愿'
when lower(t1.apply_memo)  like '%ziyuan%' then '旅客自愿'
when t1.apply_memo  like '%单%退%' then '单退'
when t1.apply_memo  like '%退 机 建 与 燃 油%' then '旅客自愿'
when t1.apply_memo  like '%退 机 建%' then '旅客自愿'
when t1.apply_memo  like '%自退%' then '旅客自愿'
when t1.apply_memo  like '%退机建%' then '旅客自愿'
when t1.apply_memo  like '%tuishui%' then '旅客自愿'
when t1.apply_memo  like '%退机建费%' then '旅客自愿'
when t1.apply_memo  like '%退机税%' then '旅客自愿'
when t1.apply_memo  like '%褪税%' then '旅客自愿'
when t1.apply_memo  like '%推机税%' then '旅客自愿'
when t1.apply_memo  like '%退机场建设费%' then '旅客自愿'
when t1.apply_memo  like '%退稅%' then '旅客--自愿'
when t1.apply_memo  like '%退税%' then '旅客--自愿'
when t1.apply_memo  like '%被减%' then '旅客--被减'
when t1.apply_memo  like '%超售%' then '旅客--超售'
when t1.apply_memo  like '%误机%' then '旅客--误机'
when t1.apply_memo  like '%晚到%' then '旅客--误机'
when t1.apply_memo  like '%wuji%' then '旅客--误机'
when t1.apply_memo  like '%漏机%' then '旅客--误机'
when t1.apply_memo  like '%拒载%' then '旅客--拒载'
when t1.apply_memo  like '%遗失%' then '旅客--客票遗失'
when t1.apply_memo  like '%测试%' then '测试'
when lower(t1.apply_memo)  like '%test%' then '测试'
when t1.apply_memo  like '%盗卡%' then '旅客--盗卡'
when t1.apply_memo  like '%20%%' then '投诉--少收手续费处理'
when t1.apply_memo  like '%30%%' then '投诉--少收手续费处理'
when t1.apply_memo  like '%10%%' then '投诉--少收手续费处理'
when t1.apply_memo  like '%5%%' then '投诉--少收手续费处理'
when t1.apply_memo  like '%机构退票%' then '机构退票'
when t1.apply_memo  like '%授权%' then '疫情'
when t1.apply_memo is not null then '其他原因'
else  '未填写相应申请理由'  end apply_memo,
t1.apply_user,
case when t1.money_terminal< 0 then '线上'
when t1.money_terminal>0 then '线下' end 退票渠道,
t6.unnormaltype 不正常类型,
t6.reason,
t6.PUBLISH_DATE,
t6.LAST_PUBLISH,
t6.DELAY_HOUR,
t1.apply_memo memo,
case when t6.PUBLISH_DATE is not null and t1.money_date >=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=3 then '不正常公告发布后延误3小时以上操作退票'
when t6.PUBLISH_DATE is not null and t1.money_date >=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=1.5 then '不正常公告发布后延误90分钟到3小时以上操作退票'
 when t6.PUBLISH_DATE is not null and  t1.money_date>=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=0.25 and t6.DELAY_HOUR< 1.5 then '不正常公告发布后延误15分钟到90分钟操作退票'
when t6.PUBLISH_DATE is not null and t1.money_date>=t6.PUBLISH_DATE and t6.unnormaltype='延误'
 then '不正常公告发布后其他延误操作退票'
 when t6.PUBLISH_DATE is not null and t1.money_date>=t6.PUBLISH_DATE
 then '不正常公告发布后非延误操作退票'
 else null end 公告时间类型,
t1.money_fy,
t1.ticketprice,
case when t8.order_head_id is not null then '不正常航班保护'
else '-' end is_guard,
dim1.return_channel,
case when t9.channel in('网站','手机') and t91.users_id is not null then '黑代理'
when t9.channel in('网站','手机') and t9.pay_gate in(15,29,31) then '黑代理'
when t9.channel in('OTA','旗舰店','网站','手机') then t9.sub_channel
when t9.channel not in('OTA','旗舰店','网站','手机')  then t9.channel end  order_channel
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 left join hdb.cq_airport t4 on t2.originairport=t4.threecodeforcity
 left join hdb.cq_airport t5 on t2.destairport=t5.threecodeforcity
left join (select distinct order_head_id
 from cqsale.cq_free_change_log@to_air
 where state in(1,2))t8 on t8.order_head_id=t1.flights_order_head_Id
 left join dw.fact_recent_order_detail t9 on t1.flights_order_head_id=t9.flights_order_head_id
 left join if.v_da_restrict_userinfo t91 on t9.client_id=t91.users_id
 --left join cqsale.cq_return_ticket_channel@to_air  t10 on t10.flights_order_head_id=t1.flights_order_head_id
 left join (select *
from(
select t1.segment_head_id,t1.unnormaltype,t1.reason,t1.PUBLISH_DATE,t1.LAST_PUBLISH,t1.DELAY_HOUR,
row_number()over(partition by segment_head_id
order by t1.last_publish desc) rid
from dw.tw_unnormal_flight t1)h1
where h1.rid=1) t6 on t1.segment_head_id=t6.segment_head_id
left join dw.da_foc_flight t7 on t1.segment_head_id=t7.segment_head_id
left join stg.s_cq_foc_landfee scfl on t7.foc_id=scfl.id
left join (select *
from(
select ct1.FLIGHTS_ORDER__HEAD_ID flights_order_head_id,
case when ct1.TERMINAL_ID<0 and nvl(ct1.web_id,0)=0 and ct1.SALE_TYPE_DETAIL <=2 then '网站'
when ct1.TERMINAL_ID<0 and nvl(ct1.web_id,0)=0 and ct1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when ct1.TERMINAL_ID<0 and nvl(ct1.web_id,0)=0 and ct1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when ct1.TERMINAL_ID<0 and nvl(ct1.web_id,0)=0 and ct1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
when ct1.TERMINAL_ID<0 and nvl(ct1.web_id,0)=0 then '线上自有渠道'
when nvl(ct1.web_id,0) in(1219,128,146,1482,1483,150,2185,228,2932,2956,3420,3979,435,4621,6298,7314,940)
then ct3.abrv
when  nvl(ct1.web_id,0) >0 and regexp_like(ct3.name,'(B2G)|(机构客户)|(集团客户)')  then '机构客户'
when  nvl(ct1.terminal_id,0) >0 and regexp_like(ct2.terminal,'(B2G)|(机构客户)|(集团客户)')  then '机构客户'
else 'B2B' end  return_channel,
ct1.OPERATE_INFO,
ct1.USERS_ID,
ct1.RETURN_DATE,
row_number()over(partition by ct1.FLIGHTS_ORDER__HEAD_ID order by ct1.RETURN_DATE) rid
 from cqsale.cq_return_ticket_channel@to_air ct1
 left join stg.s_cq_terminal ct2 on ct1.terminal_id=ct2.terminal_id
 left join stg.s_cq_agent_info ct3 on ct1.web_id=ct3.agent_id
 )
 where rid=1 
) dim1 on dim1.flights_order_head_id=t1.flights_order_head_id

  where t1.money_date>=date'2022-01-17'
 and t1.money_date< date'2022-01-24'
 and t2.company_id=0
     )hb1
left join dw.dim_tq_history_rule hb2 on hb1.nationflag=hb2.nationflag 
and hb1.seat_type=hb2.seat_type and hb1.priod_date=hb2.priod_type and hb1.seats_name=hb2.seats_name
and hb1.segment_country=nvl(hb2.segment_country,hb1.segment_country)
and trunc(hb1.order_date)>=hb2.begin_date and trunc(hb1.order_date)<=nvl(hb2.end_date,trunc(sysdate))
)hb2
group by 
hb2.flights_order_id,
hb2.order_date,
hb2.money_date,
hb2.flight_date,
hb2.flights_segment_name,
hb2.origin_std,
hb2.smonth,hb2.nationflag,
hb2.memo,
hb2.seat_type,hb2.foc实际起飞延误时间,case  when hb2.ticketprice=0 and hb2.money_fy=0 then '0元机票'
when hb2.退票渠道='线上' and hb2.money_fy =0 then '0元线上'
when hb2.退票渠道='线下' and hb2.money_fy=0 then 
case when hb2.is_guard ='不正常航班保护' then '航班保护0元'
when hb2.航班类型 in('取消','取消航班') and hb2.公告时间类型 is not null then '取消航班0元'
when hb2.航班类型 ='延误' and hb2.公告时间类型 ='不正常公告发布后延误3小时以上操作退票' then '延误3小时0元'
when hb2.航班类型 ='延误' and hb2.公告时间类型 in('不正常公告发布后延误90分钟到3小时以上操作退票','不正常公告发布后延误3小时以上操作退票')
 and hb2.money_date>=date'2021-09-01' then '延误1.5小时0元'
when hb2.航班类型 ='延误' and hb2.公告时间类型 in('不正常公告发布后延误90分钟到3小时以上操作退票',
'不正常公告发布后延误3小时以上操作退票','不正常公告发布后延误15分钟到90分钟操作退票')
 and hb2.money_date>=date'2021-11-16' then '延误15分钟0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间='3h+' then '起飞后退实际延误3H0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间 in('3h+','1.5h~3h') then '起飞后退实际延误1.5H0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间 in('15min~90min') then '起飞后退实际延误15min0元'
when hb2.航班类型<>'正常航班' and hb2.公告时间类型 is not null then '不正常航班公告后退票'
when hb2.apply_memo like '%疫情%' then '备注-疫情0元'
when hb2.apply_memo in('旅客--误操作','旅客--订错重购') then '备注-误操作0元'
when hb2.apply_memo 
in('航司--航班取消','航司--航班时刻调整','航司--航班保护','航司--不正常航班','航司--航班延误','航司--航班补班','航司--航班备降')
then '备注-不正常航班0元'
when hb2.apply_memo 
in('旅客--误机','航司--价格跳水','政策--燃油问题','旅客--超售','旅客--被减','旅客--拒载','投诉处理') then '备注-旅客投诉0元' 
when hb2.apply_memo <>'未填写相应申请理由' then '0元备注-其他理由0元'
else '无备注0元' end
when hb2.money_fy>0 then '退票收费' end,hb2.费用类型,hb2.航班类型,hb2.priod_date,
hb2.退票渠道,hb2.apply_user,
case when hb2.DELAY_HOUR>=0.25 and hb2.DELAY_HOUR< 1.5 then '15m~90m'
when hb2.DELAY_HOUR>=1.5 and hb2.DELAY_HOUR< 3 then '1.5h~3h' 
when hb2.DELAY_HOUR>=3 and hb2.DELAY_HOUR< 5 then '3h~5h' 
when hb2.DELAY_HOUR>=5  then '5h' 
else '未延迟' end ,
hb2.公告时间类型,
hb2.收费类型,
hb2.is_guard,
hb2.return_channel,
hb2.order_channel;

 ------521、优惠规则/优惠政策的数据统计

select to_char(t1.r_flights_date, 'yyyy') yy,
       to_char(t1.r_flights_date, 'mm') mm,
       case when ym.yh_style=2 then '绿翼立减'
            when ym.seg_lc_type =2 then '往返立减'
            when ym.seg_lc_type =3 then '中转立减'
            when ym.yh_style = 1 then 'B2G协议立减'
            when ym.yh_style = 0 then '基本立减'
            end 立减类型,          
         sum(yd.youhui_result) value
               from cust.cq_youhui_policy_main@to_air ym
               join cust.cq_order_youhui_detail@to_air yd on yd.youhui_id = ym.id
               join cqsale.cq_order_head@to_air t1 on t1.flights_order_head_id =yd.flights_order_head_id
              where ym.yh_ret_time = 1 --立减
                and t1.whole_flight like '9C%'
                and t1.r_flights_date >=date'2021-11-01'
                and t1.r_flights_date < trunc(sysdate, 'mm')
                and t1.flag_id in (3, 5, 40, 41)
  group by to_char(t1.r_flights_date, 'yyyy') yy,
          to_char(t1.r_flights_date, 'mm') mm,
          case when ym.yh_style=2 then '绿翼立减'
            when ym.seg_lc_type =2 then '往返立减'
            when ym.seg_lc_type =3 then '中转立减'
            when ym.yh_style = 1 then 'B2G协议立减'
            when ym.yh_style = 0 then '基本立减'
            end;

----------------------------------------------------------20220211-----------------------------------------------------------------------
 ------522、顾姗姗要求的飞机运行架数/飞机总数/月度UV等

select tb1.*,tb2.网站_UV,tB2.微信_UV,TB2.M站_UV,TB3.MAU APPUV
from(
select h1.*,h2.num2 实际运行架数,h2.flight_count 飞机总数
from(
select to_char(t1.flight_date,'yyyymm')  months,count(distinct t1.segment_code)  航段数
  from dw.da_flight t1
  where t1.flight_date>=to_date('2021-07-01','yyyy-mm-dd')
    and t1.flight_date< add_months(last_day(trunc(sysdate)),-1)+1
    and t1.flag<>2
    and t1.company_id=0
    group by to_char(t1.flight_date,'yyyymm'))h1
   left join(  
select  to_char(t1.date_time,'yyyymm') months,avg(run_airplane_count) num2,max(t1.flight_count) flight_count
 from stg.f_day_statistics t1
 where t1.date_time>=to_date('2021-07-01','yyyy-mm-dd')
   and t1.date_time< add_months(last_day(trunc(sysdate)),-1)+1
   group by to_char(t1.date_time,'yyyymm'))h2  on h1.months=h2.months)tb1
   left join (select * from 
   (select visit_month,channel,sum(active_user) UV
     from dw.bi_traffic_month_kpi
     where lang='/'
     and visit_month>='202107'
     group by visit_month,channel)h1
     pivot(sum(UV) for channel in('iOS' IOS_UV,'M站' M站_UV,'网站' 网站_UV,'微信' 微信_UV,'Android' Android_UV))
     )tb2  on tb1.months=tb2.visit_month
     left join(select to_number(replace(visit_month,'-','')) ym,sum(new_uv) active,sum(UV) mau
from dw.cj_month_trmnl@TO_ODS
      where lang='/'
      and to_number(replace(visit_month,'-',''))>='202107'
        and trmnl_tp in ('Android','IOS')
group by to_number(replace(visit_month,'-','')))tb3 on tb1.months=tb3.ym
order by 1;

----------------------------------------------------------20220212-------------------------------------------------------------
 ------523、

select t2.flight_date,
count(distinct t2.flights_id) flightnum,
sum(t1.ticketnum) ticketnum,
sum(t1.ticketprice)  ticketprice,
sum(t2.oversale) plannum,
count(distinct case when t2.flights_city_name like '%上海%' then t2.flights_id else null end) 上海航班量,
sum(case when t2.flights_city_name like '%上海%' then t1.ticketnum else 0 end) 上海销量,
sum(case when t2.flights_city_name like '%上海%' then t1.ticketprice else 0 end) 上海票价,
sum(case when t2.flights_city_name like '%上海%' then t2.oversale else 0 end) 上海计划量,

count(distinct case when t2.flights_city_name like '%石家庄%' then t2.flights_id else null end) 石家庄航班量,
sum(case when t2.flights_city_name like '%石家庄%' then t1.ticketnum else 0 end) 石家庄销量,
sum(case when t2.flights_city_name like '%石家庄%' then t1.ticketprice else 0 end) 石家庄票价,
sum(case when t2.flights_city_name like '%石家庄%' then t2.oversale else 0 end) 石家庄计划量,

count(distinct case when t2.flights_city_name like '%扬州泰州%' then t2.flights_id else null end) 扬泰航班量,
sum(case when t2.flights_city_name like '%扬州泰州%' then t1.ticketnum else 0 end) 扬泰销量,
sum(case when t2.flights_city_name like '%扬州泰州%' then t1.ticketprice else 0 end) 扬泰票价,
sum(case when t2.flights_city_name like '%扬州泰州%' then t2.oversale else 0 end) 扬泰计划量,

count(distinct case when t2.flights_city_name like '%兰州%' then t2.flights_id else null end) 兰州航班量,
sum(case when t2.flights_city_name like '%兰州%' then t1.ticketnum else 0 end) 兰州销量,
sum(case when t2.flights_city_name like '%兰州%' then t1.ticketprice else 0 end) 兰州票价,
sum(case when t2.flights_city_name like '%兰州%' then t2.oversale else 0 end) 兰州计划量,


count(distinct case when t2.flights_city_name like '%揭阳%' then t2.flights_id else null end) 揭阳航班量,
sum(case when t2.flights_city_name like '%揭阳%' then t1.ticketnum else 0 end) 揭阳销量,
sum(case when t2.flights_city_name like '%揭阳%' then t1.ticketprice else 0 end) 揭阳票价,
sum(case when t2.flights_city_name like '%揭阳%' then t2.oversale else 0 end) 揭阳计划量,


count(distinct case when t2.flights_city_name like '%宁波%' then t2.flights_id else null end) 宁波航班量,
sum(case when t2.flights_city_name like '%宁波%' then t1.ticketnum else 0 end) 宁波销量,
sum(case when t2.flights_city_name like '%宁波%' then t1.ticketprice else 0 end) 宁波票价,
sum(case when t2.flights_city_name like '%宁波%' then t2.oversale else 0 end) 宁波计划量,

count(distinct case when t2.flights_city_name like '%深圳%' then t2.flights_id else null end) 深圳航班量,
sum(case when t2.flights_city_name like '%深圳%' then t1.ticketnum else 0 end) 深圳销量,
sum(case when t2.flights_city_name like '%深圳%' then t1.ticketprice else 0 end) 深圳票价,
sum(case when t2.flights_city_name like '%深圳%' then t2.oversale else 0 end) 深圳计划量,

count(distinct case when t2.flights_city_name like '%南昌%' then t2.flights_id else null end) 南昌航班量,
sum(case when t2.flights_city_name like '%南昌%' then t1.ticketnum else 0 end) 南昌销量,
sum(case when t2.flights_city_name like '%南昌%' then t1.ticketprice else 0 end) 南昌票价,
sum(case when t2.flights_city_name like '%南昌%' then t2.oversale else 0 end) 南昌计划量,

count(distinct case when t2.flights_city_name like '%沈阳%' then t2.flights_id else null end) 沈阳航班量,
sum(case when t2.flights_city_name like '%沈阳%' then t1.ticketnum else 0 end) 沈阳销量,
sum(case when t2.flights_city_name like '%沈阳%' then t1.ticketprice else 0 end) 沈阳票价,
sum(case when t2.flights_city_name like '%沈阳%' then t2.oversale else 0 end) 沈阳计划量,

count(distinct case when t2.flights_city_name like '%大连%' then t2.flights_id else null end) 大连航班量,
sum(case when t2.flights_city_name like '%大连%' then t1.ticketnum else 0 end) 大连销量,
sum(case when t2.flights_city_name like '%大连%' then t1.ticketprice else 0 end) 大连票价,
sum(case when t2.flights_city_name like '%大连%' then t2.oversale else 0 end) 大连计划量
  from  dw.da_flight t2 
  left join dw.da_main_order t1 on t1.segment_head_id=t2.segment_head_id          
  left join dw.dim_segment_type t3 on t2.h_route_id = t3.h_route_id    
                                  and t2.route_id = t3.route_id 
 where t2.flight_date>=date'2021-11-01'         
   and t2.company_id = 0  
   and t2.flag=0    
   group by  t2.flight_date
   group by t2.flight_date;


----------------------------------------------------20220215-------------------------------------------------------
 ------524、西北首乘数据

select to_char(t1.flights_date,'yyyymm'), case when regexp_like(nvl(t3.province,'-') ,'(陕西)|(青海)|(甘肃)|(宁夏)') then t3.province 
else null end 出港,
count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join hdb.cq_airport t3 on t2.originairport=t3.threecodeforcity
 --left join hdb.cq_airport t4 on t2.destairport=t4.threecodeforcity
 where regexp_like(nvl(t3.province,'-') ,'(陕西)|(青海)|(甘肃)|(宁夏)')
  and t1.flights_date>=date'2021-10-01'
  and t1.flights_date<=date'2021-12-31'
  and t1.company_id=0
  and t2.flag=0
  group by to_char(t1.flights_date,'yyyymm'), case when regexp_like(nvl(t3.province,'-') ,'(陕西)|(青海)|(甘肃)|(宁夏)') then t3.province 
else null end;



select /*+parallel(4) */
case when h2.sname is not null then '首乘'
else '非首乘' end,
h1.flightmonth,
count(1)
froM(
select replace(t1.traveller_name,' ','')||t1.codeno sname,to_char(t1.flights_date,'yyyymm') flightmonth,count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join hdb.cq_airport t3 on t2.originairport=t3.threecodeforcity
 --left join hdb.cq_airport t4 on t2.destairport=t4.threecodeforcity
 where regexp_like(nvl(t3.province,'-') ,'(陕西)|(青海)|(甘肃)|(宁夏)')
  and t1.flights_date>=date'2021-10-01'
  and t1.flights_date<=date'2021-12-31'
  and t1.company_id=0
  and t2.flag=0
group by replace(t1.traveller_name,' ','')||t1.codeno ,to_char(t1.flights_date,'yyyymm'))h1
left join(
         select replace(t1.name||coalesce(t1.second_name,''),' ','')||t1.codeno sname,min(to_char(t1.r_flights_date,'yyyymm')) flightmonth
            from stg.s_cq_order_head t1
            where t1.flag_id in(3,5,40)
            and t1.r_company_id=0
            group by replace(t1.name||coalesce(t1.second_name,''),' ','')||t1.codeno)h2 on h1.sname=h2.sname and h1.flightmonth=h2.flightmonth
       group by case when h2.sname is not null then '首乘'
else '非首乘' end,
h1.flightmonth;
            

select /*+parallel(4) */
case when h2.sname is not null then '首乘'
else '非首乘' end,
count(1)
froM(
select replace(t1.traveller_name,' ','')||t1.codeno sname,count(1)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join hdb.cq_airport t3 on t2.originairport=t3.threecodeforcity
 --left join hdb.cq_airport t4 on t2.destairport=t4.threecodeforcity
 where regexp_like(nvl(t3.province,'-') ,'(陕西)|(青海)|(甘肃)|(宁夏)')
  and t1.flights_date>=date'2021-01-01'
  and t1.flights_date<=date'2021-12-31'
  and t1.company_id=0
  and t2.flag=0
group by replace(t1.traveller_name,' ','')||t1.codeno ,to_char(t1.flights_date,'yyyymm'))h1
left join(
         select replace(t1.name||coalesce(t1.second_name,''),' ','')||t1.codeno sname,min(to_char(t1.r_flights_date,'yyyy')) flightmonth
            from stg.s_cq_order_head t1
            where t1.flag_id in(3,5,40)
            and t1.r_company_id=0
            group by replace(t1.name||coalesce(t1.second_name,''),' ','')||t1.codeno)h2 on h1.sname=h2.sname and h2.flightmonth='2021'
       group by case when h2.sname is not null then '首乘'
else '非首乘' end;
            

 ------525、联润1月份数据统计

select split_part(timestamp, ' ', 1),
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133', '153','162','168','169',  '173',   '174',   '177',  '179',  '180',  '181','189',
         '189', '191','196', '197','199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130','131','132', '140', '146', '155',   '156',   '163',
                                         '166', '167', '171','175',  '176', '185',  '186',  '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',  '135','136','137', '138', '139', '144', '147',
                                         '148', '150', '151', '152', '157', '158',  '159', '165',
                                         '172',  '178', '182', '183', '184',  '187',  '188', '195',
                                         '198') then
          '移动'
       end
       
      , 
       count(1)
  from dw.fact_threevaild_detail t1
  
 where split_part(timestamp, ' ', 1)>='2022-01-01'
 and split_part(timestamp, ' ', 1)< '2022-02-01'
 and 
 t1.respcode in
       ('P300', 'P301', 'P305', 'P306', 'P307', 'SJ', 'NM', 'ID')
 group by split_part(timestamp, ' ', 1),
       case
         when substr(t1.phone, 1, 4) in ('1708', '1704', '1709', '1707') then
          '联通'
         when substr(t1.phone, 1, 4) in ('1703', '1705', '1706') then
          '移动'
         when substr(t1.phone, 1, 4) in ('1701', '1702', '1349') then
          '电信'
         when substr(t1.phone, 1, 3) in ('133', '153','162','168','169',  '173',   '174',   '177',  '179',  '180',  '181','189',
         '189', '191','196', '197','199') then
          '电信'
         when substr(t1.phone, 1, 3) in ('130','131','132', '140', '146', '155',   '156',   '163',
                                         '166', '167', '171','175',  '176', '185',  '186',  '192',
                                         '193') then
          '联通'
         when substr(t1.phone, 1, 3) in ('134',  '135','136','137', '138', '139', '144', '147',
                                         '148', '150', '151', '152', '157', '158',  '159', '165',
                                         '172',  '178', '182', '183', '184',  '187',  '188', '195',
                                         '198') then
          '移动'
       end;

-----------------------------------------------------20220216------------------------------------------------------------------
 ------526、

select /*+parallel(4) */ 
sum(tkt2),sum(tkt),count(1)
 from(
 select 
 t1.codeno,t2.tkt,count(1) tkt2
  from dw.fact_order_detail t1
   join(
  select  split_part(t1.sname,'-',2) codeno,count(1) tkt
 from dw.fact_combo_ticket t1
 where t1.combo_vision='V3.1'
 group by split_part(t1.sname,'-',2)) t2 on t1.codeno=t2.codeno
 where t1.flights_date>=date'2021-06-27'
 and t1.flights_date< date'2021-10-27'
 and t1.company_id=0
 group by t1.codeno,t2.tkt);
 
 ------527、


with TP1 as
      (select t1.codeno, count(1) ticket_num
         from dw.fact_recent_order_detail t1
         join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
         left join dw.fact_combo_ticket t3 on t1.flights_order_head_Id=t3.flights_order_head_id
         left join hdb.cq_airport t4 on t4.threecodeforcity = t2.originairport
         left join hdb.cq_airport t5 on t5.threecodeforcity= t2.destairport
        where t1.whole_flight like '9C%'
          and nvl(t1.seats_name, 'YE') != 'O'
          and t1.flag_id = 40         
          and length(t1.codeno) > 0
          --浙江、河北、辽宁、江苏、甘肃、揭阳、江西
          and t2.nationflag = '国内'
          and t4.province||t5.province like '%浙江%'
          and (case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end)>0
          --and t1.whole_segment like '%SJW%'
          and t1.sex = 1
          and t1.flights_date >= to_date('2021-03-01','yyyy-mm-dd')
          and t1.flights_date < =to_date('2021-06-30','yyyy-mm-dd')
         group by t1.codeno
       having count(1) >= 7),
    
    tp2 as
      (select 7,
              '所有日期' daytype,
              percentile_cont(0.25) within
        group(
        order by tile_25 desc) tile25_tile25, percentile_cont(0.75) within
        group(
        order by tile_25 desc) tile25_tile75, avg(tile_25) tile25_avg, median(tile_25) tile25_median, percentile_cont(0.25) within
        group(
        order by tile_75 desc) tile75_tile25, percentile_cont(0.75) within
        group(
        order by tile_75 desc) tile75_tile75, avg(tile_75) tile75_avg, median(tile_75) tile75_median, percentile_cont(0.25) within
        group(
        order by avg_num desc) avg_tile25, percentile_cont(0.75) within
        group(
        order by avg_num desc) avg_tile75, avg(avg_num) avg_avg, median(avg_num) avg_median, percentile_cont(0.25) within
        group(
        order by med_num desc) med_tile25, percentile_cont(0.75) within
        group(
        order by med_num desc) med_tile75, avg(med_num) med_avg, median(med_num) med_median
         from (select distinct h.people, 
     percentile_cont(0.25) within  group( order by h.ticket_price desc) over(partition by h.people) tile_25, 
     percentile_cont(0.75) within  group(order by h.ticket_price desc) over(partition by h.people) tile_75, 
     avg(ticket_price) over(partition by h.people) avg_num, 
     median(ticket_price) over(partition by h.people) med_num
      from (select t.codeno people,
      case when t1.seat_type='经济座' then  ( case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end) 
      -nvl(t1.comb_fee,98)
            when t1.seat_type='商务经济座' then nvl(t1.min_seat_price*nvl(t1.rcd_rate,1),( case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end))
                        else ( case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end) end ticket_price
                         from tp1 t
                         join dw.fact_recent_order_detail t1 on t.codeno = t1.codeno
                         join dw.da_flight t2 on t1.segment_head_id =
                                                 t2.segment_head_id
                         left join dw.fact_combo_ticket t3 on t1.flights_Order_head_id=t3.flights_order_head_id
                               left join hdb.cq_airport t4 on t4.threecodeforcity = t2.originairport
                        left join hdb.cq_airport t5 on t5.threecodeforcity= t2.destairport
                         
                         
                        where t1.whole_flight like '9C%'
                          and nvl(t1.seats_name, 'YE') != 'O'
                          and t1.flag_id = 40
                          and length(t1.codeno) > 0
                          and t2.nationflag = '国内' 
                          and t4.province||t5.province like '%浙江%'
                          and( case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end)>0
                          --and t1.whole_segment like '%SJW%'
                          and t1.sex = 1   
                                               
                          and t1.flights_date >=  to_date('2021-03-01','yyyy-mm-dd')
                          and t1.flights_date <=  to_date('2021-06-30','yyyy-mm-dd')) h)),
    
    tp3 as
      (select count(distinct t.codeno) people_num
         from tp1 t
      )    
      select /*+parallel(2) */
       tp2.*, tp3.*, sysdate create_time from tp2, tp3;


----各乘机频次对应乘机人数

select /*+parallel(2) */
ticket_num,count(1),sum(ticket_num)

from(
select t1.codeno, count(1) ticket_num
         from dw.fact_recent_order_detail t1
         join dw.da_flight t2 on t1.segment_head_id = t2.segment_head_id
         left join dw.fact_combo_ticket t3 on t1.flights_order_head_Id=t3.flights_order_head_id
                                        left join hdb.cq_airport t4 on t4.threecodeforcity = t2.originairport
                        left join hdb.cq_airport t5 on t5.threecodeforcity= t2.destairport
        where t1.whole_flight like '9C%'
          and nvl(t1.seats_name, 'YE') != 'O'
          and t1.flag_id = 40         
          and length(t1.codeno) > 0
          and t2.nationflag = '国内' 
          and t4.province||t5.province like '%浙江%'
          and (case when t1.ticket_price=0 and t3.YHQ_MONEY>0 then t3.YHQ_MONEY
                when t1.ticket_price>0 then ticket_price
                else 0 end)>0
          --and t1.whole_segment like '%SJW%'
          and t1.sex = 1
          and t1.flights_date >= to_date('2021-03-01','yyyy-mm-dd')
          and t1.flights_date < =to_date('2021-06-30','yyyy-mm-dd')
         group by t1.codeno
       having count(1) >= 7)
       group by ticket_num;


 select /*+parallel(4) */ 
sum(tkt2),sum(tkt),count(1)
 from(
 select 
 t1.codeno,t2.tkt,count(1) tkt2
  from dw.fact_order_detail t1
   join(
  select  split_part(t1.sname,'-',2) codeno,count(1) tkt
 from dw.fact_combo_ticket t1
 where t1.combo_vision='V3.1'
 group by split_part(t1.sname,'-',2)) t2 on t1.codeno=t2.codeno
 left join (select split_part(hh1.sname,'-',2) codeno
             from dw.fact_combo_ticket hh1 
             where hh1.combo_vision in('套票2.1','套票2.0')) t3 on t1.codeno=t3.codeno
 
  where t1.flights_date>=date'2020-10-27'
 and t1.flights_date< date'2021-03-26'
 and t1.company_id=0
 and t3.codeno is null 

 group by t1.codeno,t2.tkt);


 ------528、

 with dim as 
 (select h1.flight_date,
                    h1.totalnum,
                    h1.checkin_num,
                    h1.round_time,
                    h2.plf,
                    1 days,
                    h3.flight_count
               from (select t1.flight_date,
                            sum(t1.totalnum) totalnum,
                            sum(t1.checkin_num) checkin_num,
                            sum(t1.round_time) round_time
                       from hdb.recent_flights_cost t1
                      where t1.flight_date >= add_months(trunc(sysdate, 'yyyy'),-30)
                        and t1.flight_date <
                            trunc(add_months(sysdate, 12), 'yyyy')
                      group by t1.flight_date
                      ) h1
               left join (select t2.flight_date,
                                sum(t2.checkin_mile) /
                                sum(t2.checkin_s_mile) plf
                           from dw.bi_tbl_plf t2
                          where t2.flight_date >= add_months(trunc(sysdate, 'yyyy'),-30)
                            and t2.flight_date <  
                                trunc(add_months(sysdate, 12), 'yyyy')
                            and t2.checkin_s_mile > 0
                          group by t2.flight_date) h2 on h1.flight_date =
                                                         h2.flight_date
               left join (select t3.date_time,
                                max(t3.flight_count) flight_count
                           from stg.f_day_statistics t3
                          where t3.date_time >= add_months(trunc(sysdate, 'yyyy'),-30)
                            and t3.date_time <
                                trunc(add_months(sysdate, 12), 'yyyy')
                          group by t3.date_time) h3 on h1.flight_date =
                                                       h3.date_time
         )          
       select '今年' type,flight_date,totalnum,checkin_num,plf,days,flight_count
        from dim 
        where flight_date>=trunc(sysdate, 'yyyy')
         and  flight_date< trunc(add_months(sysdate, 12), 'yyyy')
         
       union all 
               
        select '去年' type,datetime,totalnum,checkin_num,plf,days,flight_count
        from dim p1 
        join dw.adt_datamatch_calendar p2 on to_number(to_char(sysdate,'yyyy'))=p2.year 
        and p1.flight_date=p2.corre_date
        and p2.corre_year = to_number(to_char(sysdate,'yyyy')) -1
        where p2.datetime>=trunc(sysdate, 'yyyy')
         and  p2.datetime< trunc(add_months(sysdate, 12), 'yyyy')
         

         union all 
               
        select '前年' type,datetime,totalnum,checkin_num,plf,days,flight_count
        from dim p1 
        join dw.adt_datamatch_calendar p2 on to_number(to_char(sysdate,'yyyy'))=p2.year 
        and p1.flight_date=p2.corre_date
        and p2.corre_year = to_number(to_char(sysdate,'yyyy')) -2
        where p2.datetime>=trunc(sysdate, 'yyyy')
         and  p2.datetime< trunc(add_months(sysdate, 12), 'yyyy');

-----------------------------------------------------20220221--------------------------------------------------------------------------------
 ------529、黑龙江吞吐数据

select h1.wf_city_name,min(h1.minflightdate),to_char(t1.flight_date,'yyyy'),
       count(1),sum(t1.checkin_num)
 from hdb.recent_flights_cost t1
 join( select t2.route_name,t2.wf_city_name,min(t1.flight_date) minflightdate
  from dw.da_flight t1
  left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
  where t2.wf_city_name in('上海＝哈尔滨','上海＝哈尔滨＝加格达奇','上海＝松原＝哈尔滨','揭阳＝哈尔滨＝加格达奇','宁波＝哈尔滨',
'石家庄＝哈尔滨',
'深圳＝淮安＝哈尔滨',
'扬州泰州＝哈尔滨',
'哈尔滨＝通化＝西安'
)
and t1.flag=0
and t1.company_id=0
group by t2.route_name,t2.wf_city_name)h1 on t1.route_name=h1.route_name
 where t1.flight_date>=date'2020-01-01'
 and t1.flight_date< date'2022-01-01'
 and t1.total_cost>0
 group by h1.wf_city_name,to_char(t1.flight_date,'yyyy')
 
 
 select t2.route_name,t2.wf_city_name,min(t1.flight_date)
  from dw.da_flight t1
  left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
  where t2.wf_city_name in('上海＝哈尔滨','上海＝哈尔滨＝加格达奇','上海＝松原＝哈尔滨','揭阳＝哈尔滨＝加格达奇','宁波＝哈尔滨',
'石家庄＝哈尔滨',
'深圳＝淮安＝哈尔滨',
'扬州泰州＝哈尔滨',
'哈尔滨＝通化＝西安'
)
and t1.flag=0
and t1.company_id=0
group by t2.route_name,t2.wf_city_name


 select t2.wf_city_name,min(t1.flight_date)
  from dw.da_flight t1
  left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
  where t1.flights_segment_name like  '%西安%哈尔滨%'
and t1.flag=0
and t1.company_id=0
group by t2.wf_city_name;



 select sum(t1.oversale)
  from dw.da_flight t1
  left join dw.dim_segment_type t2 on t1.route_id=t2.route_id and t1.h_route_id=t2.h_route_id
  where t1.flight_date>=date'2022-01-01'
  and t1.flight_date< date'2022-02-01'
  and  t1.flag=0
and t1.company_id=0;



---------------------------------------------------------------20220302------------------------------------------------------------
-------530、 航线收入预测
sselect h.*,h2.totalincome,h2.roundtime,h2.flightnum,h2.totalnum,
case when h.smonth>='201811' and h.smonth<='201910' then '2019'
when h.smonth>='201911' and h.smonth<='202010' then '2020'
when h.smonth>='202011' and h.smonth<='202110' then '2021'
when h.smonth>='202111' and h.smonth<='202210' then '2022' end syear,
substr(h.smonth,5,2) smonth
from(
select t3.route_name,t4.wf_segment_name,to_char(t3.flight_date,'yyyymm') smonth,sum((t3.dest_sta-t3.origin_std)*24) flighttime,
             decode(t3.root_nation_flag,1,'国内',2,'区域',3,'国际') nationflag,
                  count(distinct t3.flights_id) flightnum,sum(t3.oversale) plannum
            from dw.da_flight t3
            left join dw.dim_segment_type t4 on t3.route_id=t4.route_id and t3.h_route_id=t4.h_route_id
            where t3.flight_date>=date'2018-11-01'
              and t3.flight_date< date'2023-01-01'
              and t3.flag=0
              and t3.company_id=0
              and t3.segment_type not like '%经停AC%'
              group by  t3.route_name,t4.wf_segment_name,to_char(t3.flight_date,'yyyymm'), decode(t3.root_nation_flag,1,'国内',2,'区域',3,'国际'))h
left join(
select t1.route_name,h1.wf_segment_name,to_char(t1.flight_date,'yyyymm') smonth,
       decode(t1.nation_flag,1,'国内',2,'区域',3,'国际') nationflag,
       sum(t1.total_income-t1.tax_fee) totalincome,sum(t1.round_time) roundtime,
       count(1) flightnum,sum(t1.totalnum) totalnum
from  hdb.recent_flights_cost t1
left join(
select distinct t2.route_name,t2.wf_segment_name
 from dw.dim_segment_type t2
 )h1 on t1.route_name=h1.route_name            
 where t1.flight_date>=date'2018-11-01'
   and t1.flight_date< date'2022-03-01'
   and t1.total_cost>0
   group by t1.route_name,h1.wf_segment_name,to_char(t1.flight_date,'yyyymm'),decode(t1.nation_flag,1,'国内',2,'区域',3,'国际'))h2 on h.route_name=h2.route_name and h.wf_segment_name=h2.wf_segment_name
   and h.smonth=h2.smonth;
 




 ------531、2021年根据地出港旅客人数统计
select t2.origincity_name,sum(t1.boardnum)
 from dw.da_main_order t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=date'2021-01-01'
 and t1.flights_date< date'2022-01-01'
 and t2.company_id=0
 and t2.origincity_name in('上海','石家庄','沈阳','扬州泰州','揭阳','深圳','西安','兰州','南昌','宁波','成都')
 group by t2.origincity_name;


 ------532、
--航线：上海长白山
--航班日期：10/31-3/2
--字段：航班日期、航班号、航段、销售人数、航班收入（舱单）、与包机结算收入

select t1.flights_date,t1.whole_flight,t1.whole_segment,suM(case when t1.seats_name is not null then 1 else 0 end) tkt,
suM(t1.ticket_price+t1.ad_fy) 机票收入,null 
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=date'2021-10-31'
 and t1.flights_date< date'2022-03-03'
 and t1.company_id=0
 and t2.flights_city_name like '上海%长白山'
 and t1.flag_id=40
 group by t1.flights_date,t1.whole_flight,t1.whole_segment
 
 
 union all
 
 
 select h1.flight_date,h1.flight_no,h1.route_name,h1.totalnum,null,
h1.total_income
 from hdb.recent_flights_cost h1
 where h1.flight_date>=date'2021-10-31'
 and h1.flight_date< date'2022-03-03'
 and h1.route_name like '上海%长白山'



 ------533、套票产品导入 

delete from dw.adt_combo_productv3
where combo_vision='V3.12';

insert into dw.adt_combo_productv3
select h1.invoice_name,h2.id combo_id,h1.yhq_batch_id create_id,
h1.combo_vision,h1.promotion_date,h1.region,h1.combo_type,h2.sale_price,1 buy_platform,date'202206-30' EXPIRATION_DATE
from(
select invoice_name,substr(invoice_name,1,10)||(case when invoice_name like '%单人%' then '单人版'
when invoice_name like '%亲子%' then '亲子版' end) match_name,yhq_batch_id, 'V3.12' combo_vision,
date'2022-03-27' promotion_date,
case when substr(invoice_name,9,2)='双城' then '双城套票'
else substr(invoice_name,9,2) end region,
combo_type
  from yhq.cq_yhq_combo_config@to_air t
         where  valid_flag = 1
         and expiration_date=date'2022-06-30')h1
   left join(
      select t1.id,t1.name,substr(t1.name,1,10)||(case when t1.name like '%单人%' then '单人版'
when t1.name like '%亲子%' then '亲子版' end) match_name,t1.sale_price
 from stg.prt_eshop_product t1
 where name like '%套票%'
 and name like '%3.1%'
  and CT>=date'2022-02-25')h2 on h1.match_name=h2.match_name;


select *
          from yhq.cq_yhq_combo_config@to_air
         where  valid_flag = 1
         and expiration_date=date'2022-06-30';

 ------534、O舱优惠数据

select /*+parallel(4) */
flightmonth 航班月份,
       o_type 类型,
       department_name 部门,
       count(distinct client_id) 账号数,
       count(1) 机票数,
       count(distinct codeno) "乘机人数(去重)",
       sum(ticket_price) 机票票面金额,
       sum(minprice) 在售最低金额,       
       sum(minprice-ticket_price) 票面差价
from(
select 
to_char(t1.flights_date, 'yyyymm') flightmonth,
       t.flights_order_head_id,
       t.flights_order_id,
       t.segment_head_id,
       cc.personnel_id ,
       sd.department_name ,
       t.client_id,
       t.codeno,
       t.ticket_price,
       --t1.o_type,
       t.seats_name,
       case  when t1.min_seat_price*t1.RCD_RATE >0 then t1.min_seat_price*t1.RCD_RATE
       when tb3.minprice>0 then tb3.minprice
       when tb3.minprice2>0 then tb3.minprice2
       else null end minprice 
       ,
       decode(t1.o_type,0,'公务出差',1,'销售奖励',2,'宾客优惠',3,'积分奖励',4,'员工优惠',5,'合作机票',6,'营销优惠', 7,'加机组',
       8,'服务优惠票') o_type            
  from  dw.fact_order_detail t 
 join dw.fact_order_o_detail t1 on t.flights_order_head_id = t1.flights_order_head_id 
  left join cqsale.cq_crew_cust@to_air cc on cc.users_id_fk = t.client_id
  left join cqsale.cq_staff_department@to_air sd on sd.dept_code = cc.dept_code  
  left join(
 select tb2.flights_order_id,tb2.segment_head_id,
  max(ticketprice)over(partition by tb2.segment_head_id order by tb2.order_date rows between 1 preceding and 1 following) minprice,
  max(ticketprice)over(partition by tb2.segment_head_id order by tb2.order_date rows between 2 preceding and 2 following) minprice2
   from 
  (select tb1.flights_order_id,tb1.segment_head_id,tb1.order_date,avg(tb1.ticket_price) ticketprice
             from dw.fact_order_detail tb1
             left join dw.fact_combo_ticket t2 on tb1.flights_order_head_id=t2.flights_order_head_id
             where  tb1.flights_date >= to_date('2022-02-01', 'yyyy-mm-dd')
               and tb1.flights_date <  to_date('2022-03-01', 'yyyy-mm-dd')
               and tb1.seats_name not in('B','G','G1','G2','P2','P5','D','A','Z','I','J','W') 
               and tb1.sex=1  
               --and tb1.segment_head_id=1758670       
               and t2.flights_order_head_id is null
               group by tb1.flights_order_id,tb1.segment_head_id,tb1.order_date)tb2               
               ) tb3 on tb3.flights_order_id=t.flights_order_id 
               and tb3.segment_head_id=t.segment_head_id
 where t.flights_date >= to_date('2022-02-01', 'yyyy-mm-dd')
   and t.flights_date < to_date('2022-03-01', 'yyyy-mm-dd')
   --and nvl(t1.o_type,0) = 4
   and t.company_id = 0
   and t.flag_id = 40
   --and t.flights_order_id='ZBJTSY'
   --and t1.o_type=4
   )h1
   group by flightmonth ,h1.o_type,
       department_name;

----------------------------20200308------------------------------------------------------
 ------535、

select tp2.flights_segment,tp2.flight_date,tp2.min_price,tp2.rid
from(
select tp1.flights_segment,tp1.flight_date,tp1.min_price,row_number()over(partition by tp1.flights_segment
order by tp1.min_price desc) rid
from(
select hb1.flight_date,hb1.flights_segment,min(cabin_price) min_price
from(
select h1.segment_head_id,
       h1.seats_name ,
       h1.money ,
       h2.remnant ,
       trunc(h3.origin_std) flight_date ,
       h3.flights_segment ,       
       h3.r_flights_no flight_no ,
       h4.flights_segment_name,
       h7.sub_cabin,
       case when h7.sub_cabin is not null then h7.sub_cabin
       else h1.money end cabin_price
  from (select *
          from (select segment_head_id,
                       MONEY_E,
MONEY_H,
MONEY_I,
MONEY_K,
MONEY_L,
MONEY_M,
MONEY_N,
MONEY_P,
MONEY_P1,
MONEY_P2,
MONEY_P3,
MONEY_P4,
MONEY_P5,
MONEY_Q,
MONEY_R1,
MONEY_R2,
MONEY_R3,
MONEY_R4,
MONEY_S,
MONEY_T,
MONEY_U,
MONEY_V,
MONEY_X,
MONEY_Y                       
from cqsale.cq_flights_segment_head@to_air) unpivot(money for seats_name in (MONEY_E as 'E',
MONEY_H as 'H',
MONEY_I as 'I',
MONEY_K as 'K',
MONEY_L as 'L',
MONEY_M as 'M',
MONEY_N as 'N',
MONEY_P as 'P',
MONEY_P1 as 'P1',
MONEY_P2 as 'P2',
MONEY_P3 as 'P3',
MONEY_P4 as 'P4',
MONEY_P5 as 'P5',
MONEY_Q as 'Q',
MONEY_R1 as 'R1',
MONEY_R2 as 'R2',
MONEY_R3 as 'R3',
MONEY_R4 as 'R4',
MONEY_S as 'S',
MONEY_T as 'T',
MONEY_U as 'U',
MONEY_V as 'V',
MONEY_X as 'X',
MONEY_Y as 'Y'
))
                  ) h1
  join (select *
          from (select segment_head_id,
                       REMNANT_E,
REMNANT_H,
REMNANT_I,
REMNANT_K,
REMNANT_L,
REMNANT_M,
REMNANT_N,
REMNANT_P,
REMNANT_P1,
REMNANT_P2,
REMNANT_P3,
REMNANT_P4,
REMNANT_P5,
REMNANT_Q,
REMNANT_R1,
REMNANT_R2,
REMNANT_R3,
REMNANT_R4,
REMNANT_S,
REMNANT_T,
REMNANT_U,
REMNANT_V,
REMNANT_X,
REMNANT_Y
from cqsale.cq_flights_seats_amount@to_air) unpivot(remnant for seats_name in (REMNANT_E AS 'E',
REMNANT_H AS 'H',
REMNANT_I AS 'I',
REMNANT_K AS 'K',
REMNANT_L AS 'L',
REMNANT_M AS 'M',
REMNANT_N AS 'N',
REMNANT_P AS 'P',
REMNANT_P1 AS 'P1',
REMNANT_P2 AS 'P2',
REMNANT_P3 AS 'P3',
REMNANT_P4 AS 'P4',
REMNANT_P5 AS 'P5',
REMNANT_Q AS 'Q',
REMNANT_R1 AS 'R1',
REMNANT_R2 AS 'R2',
REMNANT_R3 AS 'R3',
REMNANT_R4 AS 'R4',
REMNANT_S AS 'S',
REMNANT_T AS 'T',
REMNANT_U AS 'U',
REMNANT_V AS 'V',
REMNANT_X AS 'X',
REMNANT_Y AS 'Y'))) h2 on h1.segment_head_id =  h2.segment_head_id    and h1.seats_name = h2.seats_name
  join cqsale.cq_flights_segment_head@to_air h3 on h1.segment_head_id =  h3.segment_head_id
  join cqsale.cq_flights_seats_amount@to_air h5 on h1.segment_head_id=h5.segment_head_id
  left join dw.da_flight h4 on h1.segment_head_id = h4.segment_head_id
  left join (
  select h6.segment_head_id,h6.main_cabin,max(h6.sub_cabin_price) sub_cabin
from stg.s_CQ_SUB_CABIN_SEGMENT_HEAD h6
where h6.state=1
group by h6.segment_head_id,h6.main_cabin)h7 on h1.segment_head_id=h7.segment_head_id and h1.seats_name=h7.main_cabin
 where h3.origin_std >= date'2022-03-27'
 and h3.origin_std< date'2022-07-01'
   --and h3.origin_std< trunc(sysdate)+2
   and h2.remnant > 0
   and h3.flag <> 2
   --and h1.segment_head_id =1438884
   and h3.r_flights_no like '9C%'
   and h1.seats_name not in('P2','P5','P3','P4','O','D','Z','A','I','J'))hb1
   group by hb1.flight_date,hb1.flights_segment)tp1
)tp2
where tp2.rid<=10




<<<<<<< HEAD
-----限价数据
=======
select t1.flight_date,
case when t1.route_name like '%浦东%' then '浦东'
else null end 浦东 ,
case when t1.route_name like '%虹桥%' then '虹桥'
else null end 虹桥,
case when t1.route_name like '%石家庄%' then '石家庄'
else null end 石家庄,
case when t1.route_name like '%沈阳%' then '沈阳'
else null end 沈阳,
case when t1.route_name like '%深圳%' then '深圳'
else null end 深圳,
case when t1.route_name like '%宁波%' then '宁波'
else null end 宁波,
case when t1.route_name like '%揭阳%' then '揭阳'
else null end 揭阳,
case when t1.route_name like '%扬州泰州%' then '扬泰'
else null end 扬泰,
case when t1.route_name like '%兰州%' then '兰州'
else null end 兰州,
case when t1.route_name like '%西安%' then '西安'
else null end 西安,
case when t1.route_name like '%南昌%' then '南昌'
else null end 南昌,
case when t1.route_name like '%成都%' then '成都'
else null end 成都,
sum(t1.totalnum) totalnum,sum(t1.checkin_num) checkin_num,
suM(t1.checkin_mile) checkin_mile,suM(t1.checkin_s_mile) checkin_s_mile
  from hdb.recent_flights_cost t1
  where t1.flight_date>=trunc(sysdate)-7
  and t1.flight_date< trunc(sysdate)
  group by t1.flight_date,
case when t1.route_name like '%浦东%' then '浦东';

else null end  ,
case when t1.route_name like '%虹桥%' then '虹桥'
else null end ,
case when t1.route_name like '%石家庄%' then '石家庄'
else null end ,
case when t1.route_name like '%沈阳%' then '沈阳'
else null end ,
case when t1.route_name like '%深圳%' then '深圳'
else null end ,
case when t1.route_name like '%宁波%' then '宁波'
else null end, 
case when t1.route_name like '%揭阳%' then '揭阳'
else null end ,
case when t1.route_name like '%扬州泰州%' then '扬泰'
else null end ,
case when t1.route_name like '%兰州%' then '兰州'
else null end ,
case when t1.route_name like '%西安%' then '西安'
else null end ,
case when t1.route_name like '%南昌%' then '南昌'
else null end ,
case when t1.route_name like '%成都%' then '成都'
else null end;





select t2.flight_date,sum(t2.checkin_mile)/sum(t2.checkin_s_mile)
 from dw.bi_tbl_plf  t2
 where t2.flight_date>=trunc(sysdate)-7
 group by t2.flight_date;

>>>>>>> e8e4d48dc862360ffa9cfb6878b69a5f7049a7f7
 
 ------536、乘机人复购率

 ---前一年的总乘机人次

select count(distinct t1.traveller_name||t1.codeno)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=date'2020-03-01'
 and t1.flights_date< date'2021-03-01'
 and t1.company_id=0
 and t1.seats_name is not null;

 ---前一年乘机人下一年再次乘机的比例

 select count(distinct t1.traveller_name||t1.codeno)
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=date'2020-03-01'
 and t1.flights_date< date'2021-03-01'
 and t1.company_id=0
 and t1.seats_name is not null 
 and exists(select 1
  from dw.fact_order_detail tt1
  where tt1.flights_date>=date'2021-03-01'
 and tt1.flights_date< date'2022-03-01'
 and tt1.company_id=0
 and tt1.seats_name is not null
 and t1.traveller_name=tt1.traveller_name
 and t1.codeno=tt1.codeno);


--------------------------------------------------------------------------------20220323-------------------------------------------------
 ------537、AA相应数据测算





select  /*+parallel(4) */
case when tktfee/6.37*5< 30000 then 'AAdvantage'
when tktfee/6.37*5>= 30000
and  tktfee/6.37*5< 75000 then 'AAdvantage Gold'
when tktfee/6.37*5>= 75000
and  tktfee/6.37*5< 125000 then 'AAdvantage Platinum'
when tktfee/6.37*5>= 125000
and  tktfee/6.37*5< 200000 then 'AAdvantage Platinum Pro'
when tktfee/6.37*5>=200000 then 'AAdvantage Executive Platinum'
end AA会员类型,
case when tktfee<3000 then '1星会员'
when tktfee>3000  and tktfee< 6000 and (tkt>=3  or mile>=6000 ) then '2星会员'
when tktfee>=6000 and tktfee< 10000 and (tkt>=7 or mile>=14000 ) then '3星会员'
when tktfee>=10000 and  tktfee< 15000  and (tkt>=11  or mile>=18000 ) then '4星会员'
when tktfee>=15000 and  tktfee< 20000 and (tkt>=14  or mile>=23000 ) then '5星会员'
when tktfee>=20000 and tktfee< 25000   and (tkt>=17 or mile>=28000 ) then '6星会员'
when tktfee>=25000 and tktfee< 50000 and (tkt>=30  or mile>=35000) then '银卡会员'
when tktfee>=50000 and tktfee< 150000 and (tkt>=40  or mile>=65000 ) then '金卡会员'
when tktfee>=150000 and (tkt>=50  or  mile >105000) then '白金卡会员'
else '其他' end 东航会员类型,

case when tktfee<1000 then '1000以下'
when tktfee<2000 then '1000~2000'
when tktfee<3000 then '2000~3000'
when tktfee<4000 then '3000~4000'
when tktfee<5000 then '4000~5000'
when tktfee<6000 then '5000~6000'
when tktfee<7000 then '6000~7000'
when tktfee<8000 then '7000~8000'
when tktfee<9000 then '8000~9000'
when tktfee<10000 then '9000~10000'
when tktfee<15000 then '10000~15000'
when tktfee<20000 then '15000~20000'
when tktfee>=20000 then '20000+' end,
count(1)
from(
select t1.traveller_name,t1.codeno,sum(t1.ticket_price+t1.ad_fy+t1.other_fy+t1.insurce_fee+t1.other_fee) tktfee,
count(1) tkt,sum(t2.mile) mile
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 where t1.flights_date>=date'2021-03-01'
 and t1.flights_date< date'2022-03-01'
 and t1.company_id=0
 group by t1.traveller_name,t1.codeno
 )h1
 group by case when tktfee/6.37*5< 30000 then 'AAdvantage'
when tktfee/6.37*5>= 30000
and  tktfee/6.37*5< 75000 then 'AAdvantage Gold'
when tktfee/6.37*5>= 75000
and  tktfee/6.37*5< 125000 then 'AAdvantage Platinum'
when tktfee/6.37*5>= 125000
and  tktfee/6.37*5< 200000 then 'AAdvantage Platinum Pro'
when tktfee/6.37*5>=200000 then 'AAdvantage Executive Platinum'
end ,
case when tktfee<3000 then '1星会员'
when tktfee>3000  and tktfee< 6000 and (tkt>=3  or mile>=6000 ) then '2星会员'
when tktfee>=6000 and tktfee< 10000 and (tkt>=7 or mile>=14000 ) then '3星会员'
when tktfee>=10000 and  tktfee< 15000  and (tkt>=11  or mile>=18000 ) then '4星会员'
when tktfee>=15000 and  tktfee< 20000 and (tkt>=14  or mile>=23000 ) then '5星会员'
when tktfee>=20000 and tktfee< 25000   and (tkt>=17 or mile>=28000 ) then '6星会员'
when tktfee>=25000 and tktfee< 50000 and (tkt>=30  or mile>=35000) then '银卡会员'
when tktfee>=50000 and tktfee< 150000 and (tkt>=40  or mile>=65000 ) then '金卡会员'
when tktfee>=150000 and (tkt>=50  or  mile >105000) then '白金卡会员'
else '其他' end ,

case when tktfee<1000 then '1000以下'
when tktfee<2000 then '1000~2000'
when tktfee<3000 then '2000~3000'
when tktfee<4000 then '3000~4000'
when tktfee<5000 then '4000~5000'
when tktfee<6000 then '5000~6000'
when tktfee<7000 then '6000~7000'
when tktfee<8000 then '7000~8000'
when tktfee<9000 then '8000~9000'
when tktfee<10000 then '9000~10000'
when tktfee<15000 then '10000~15000'
when tktfee<20000 then '15000~20000'
when tktfee>=20000 then '20000+' end;




--增加对于套票的处理
--剔除婴儿、剔除O舱
--针对乘机次数进行设定：自有渠道非0元乘机乘机次数*2，自有渠道0元乘机次数*1，其他渠道均为1





select  /*+parallel(4) */
case when tktfee/6.37*5< 30000 then 'AAdvantage'
when tktfee/6.37*5>= 30000
and  tktfee/6.37*5< 75000 then 'AAdvantage Gold'
when tktfee/6.37*5>= 75000
and  tktfee/6.37*5< 125000 then 'AAdvantage Platinum'
when tktfee/6.37*5>= 125000
and  tktfee/6.37*5< 200000 then 'AAdvantage Platinum Pro'
when tktfee/6.37*5>=200000 then 'AAdvantage Executive Platinum'
end AA会员类型,
case when tktfee<3000 then '1星会员'
when tktfee>3000  and tktfee< 6000 and (tkt>=3  or mile>=6000 ) then '2星会员'
when tktfee>=6000 and tktfee< 10000 and (tkt>=7 or mile>=14000 ) then '3星会员'
when tktfee>=10000 and  tktfee< 15000  and (tkt>=11  or mile>=18000 ) then '4星会员'
when tktfee>=15000 and  tktfee< 20000 and (tkt>=14  or mile>=23000 ) then '5星会员'
when tktfee>=20000 and tktfee< 25000   and (tkt>=17 or mile>=28000 ) then '6星会员'
when tktfee>=25000 and tktfee< 50000 and (tkt>=30  or mile>=35000) then '银卡会员'
when tktfee>=50000 and tktfee< 150000 and (tkt>=40  or mile>=65000 ) then '金卡会员'
when tktfee>=150000 and (tkt>=50  or  mile >105000) then '白金卡会员'
else '1星会员' end 东航会员类型,

case when tktfee<1000 then '1000以下'
when tktfee<2000 then '1000~2000'
when tktfee<3000 then '2000~3000'
when tktfee<4000 then '3000~4000'
when tktfee<5000 then '4000~5000'
when tktfee<6000 then '5000~6000'
when tktfee<7000 then '6000~7000'
when tktfee<8000 then '7000~8000'
when tktfee<9000 then '8000~9000'
when tktfee<10000 then '9000~10000'
when tktfee<15000 then '10000~15000'
when tktfee<20000 then '15000~20000'
when tktfee>=20000 then '20000+' end 金额分类,
case when hytktfee<1000 then '1000以下'
when hytktfee<2000 then '1000~2000'
when hytktfee<3000 then '2000~3000'
when hytktfee<4000 then '3000~4000'
when hytktfee<5000 then '4000~5000'
when hytktfee<6000 then '5000~6000'
when hytktfee<7000 then '6000~7000'
when hytktfee<8000 then '7000~8000'
when hytktfee<9000 then '8000~9000'
when hytktfee<10000 then '9000~10000'
when hytktfee<15000 then '10000~15000'
when hytktfee<20000 then '15000~20000'
when hytktfee>=20000 then '20000+' end 还原套票金额分类,
tkt 总乘机次数,
tkt2 剔除套票乘机次数,
count(1),
tkt3
from(
select t1.traveller_name,t1.codeno,sum(t1.ticket_price+t1.ad_fy+t1.other_fy+t1.insurce_fee+t1.other_fee) tktfee,
count(1) tkt,sum(t2.mile) mile,
count(distinct t3.flights_order_head_id) combotkt,
count(1)-count(distinct t3.flights_order_head_id) tkt2,
sum(case when t3.flights_order_head_id is not null then t3.yhq_money+t1.ad_fy+t1.other_fy+t1.insurce_fee+t1.other_fee
else t1.ticket_price+t1.ad_fy+t1.other_fy+t1.insurce_fee+t1.other_fee end) hytktfee,
sum(case when t1.channel in('网站','手机') and t1.ticket_price>0 then 2 else 1 end) tkt3
 from dw.fact_order_detail t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.fact_combo_ticket t3 on t1.flights_order_head_id=t3.flights_order_head_id
 where t1.flights_date>=date'2021-03-01'
 and t1.flights_date< date'2022-03-01'
 and t1.company_id=0
 and t1.seats_name is not null 
 and t1.seats_name <>'O'
 and t1.sex in(1,2)
 group by t1.traveller_name,t1.codeno
 )h1
 group by case when tktfee/6.37*5< 30000 then 'AAdvantage'
when tktfee/6.37*5>= 30000
and  tktfee/6.37*5< 75000 then 'AAdvantage Gold'
when tktfee/6.37*5>= 75000
and  tktfee/6.37*5< 125000 then 'AAdvantage Platinum'
when tktfee/6.37*5>= 125000
and  tktfee/6.37*5< 200000 then 'AAdvantage Platinum Pro'
when tktfee/6.37*5>=200000 then 'AAdvantage Executive Platinum'
end ,
case when tktfee<3000 then '1星会员'
when tktfee>3000  and tktfee< 6000 and (tkt>=3  or mile>=6000 ) then '2星会员'
when tktfee>=6000 and tktfee< 10000 and (tkt>=7 or mile>=14000 ) then '3星会员'
when tktfee>=10000 and  tktfee< 15000  and (tkt>=11  or mile>=18000 ) then '4星会员'
when tktfee>=15000 and  tktfee< 20000 and (tkt>=14  or mile>=23000 ) then '5星会员'
when tktfee>=20000 and tktfee< 25000   and (tkt>=17 or mile>=28000 ) then '6星会员'
when tktfee>=25000 and tktfee< 50000 and (tkt>=30  or mile>=35000) then '银卡会员'
when tktfee>=50000 and tktfee< 150000 and (tkt>=40  or mile>=65000 ) then '金卡会员'
when tktfee>=150000 and (tkt>=50  or  mile >105000) then '白金卡会员'
else '1星会员' end ,

case when tktfee<1000 then '1000以下'
when tktfee<2000 then '1000~2000'
when tktfee<3000 then '2000~3000'
when tktfee<4000 then '3000~4000'
when tktfee<5000 then '4000~5000'
when tktfee<6000 then '5000~6000'
when tktfee<7000 then '6000~7000'
when tktfee<8000 then '7000~8000'
when tktfee<9000 then '8000~9000'
when tktfee<10000 then '9000~10000'
when tktfee<15000 then '10000~15000'
when tktfee<20000 then '15000~20000'
when tktfee>=20000 then '20000+' end ,
case when hytktfee<1000 then '1000以下'
when hytktfee<2000 then '1000~2000'
when hytktfee<3000 then '2000~3000'
when hytktfee<4000 then '3000~4000'
when hytktfee<5000 then '4000~5000'
when hytktfee<6000 then '5000~6000'
when hytktfee<7000 then '6000~7000'
when hytktfee<8000 then '7000~8000'
when hytktfee<9000 then '8000~9000'
when hytktfee<10000 then '9000~10000'
when hytktfee<15000 then '10000~15000'
when hytktfee<20000 then '15000~20000'
when hytktfee>=20000 then '20000+' end ,
tkt ,
tkt2,
tkt3;


--------------------------------------------------------------20220324--------------------------------------------------------------
 ------538、订单修改查询（姓名、证件号修改）


 select t.users_id 操作人号,
 t.log_code,
            t.fy,
            t.differ_price,
            t.modify_content 变更内容,
            h.flights_order_id 订单号,
            h.seats_name 舱位,
            decode(h.r_nation_flag,1,'国内',2,'区域',3,'国际') 航线性质,
            h.ticket_no,
            f.flights_no,
            to_char(f.flights_date, 'yyyy-mm-dd') flights_date,
            to_char(t.modify_date, 'yyyy-mm-dd hh24:mi:ss') modify_date,
            ho.SALE_TYPE saleType,
            ho.SALE_TYPE_DETAIL saleTypeDetail,
            decode(ho.SALE_TYPE, '2', (SELECT ct.TERMINAL 
            FROM stg.s_CQ_TERMINAL ct WHERE ct.TERMINAL_ID(+) = ho.SALE_TYPE_DETAIL),
            '3', 'B2C网站',
            '4', (SELECT coot.ORIGIN_NAME FROM stg.s_CQ_ORDER_ORIGIN_TYPE coot WHERE coot.STATION_ID(+) = ho.SALE_TYPE_DETAIL),
            NULL
            ) AS modifyChannel
        from cqsale.cq_flights_head_history@to_air t,
        cqsale.cq_order_head@to_air h,
        cqsale.cq_flights@to_air f,
        cqsale.cq_flights_segment_head@to_air s, 
        cqsale.CQ_FH_HISTORY_O@to_air ho
        where t.flights_order_head_id=h.flights_order_head_id
        and h.segment_head_id=s.segment_head_id
        and s.flights_id=f.flights_id
        and t.FLIGHTS_HEAD_HISTORY_ID = ho.FH_HISTORY_ID(+)
        and t.MODIFY_DATE>=data'2022-01-01'
        and LOG_CODE =21
        and modify_content like '%姓名由%变为%'
        and modify_content like '%证件号由%变为%'


 ------539、


select /*+parallel(4) */
hb2.smonth,
case  when hb2.ticketprice=0 and hb2.money_fy=0 then '0元机票'
when hb2.退票渠道='线上' and hb2.money_fy =0 then '0元线上'
when hb2.退票渠道='线下' and hb2.money_fy=0 then 
case when hb2.is_guard ='不正常航班保护' then '航班保护0元'
when hb2.航班类型 in('取消','取消航班') and hb2.公告时间类型 is not null then '取消航班0元'
when hb2.航班类型 ='延误' and hb2.公告时间类型 ='不正常公告发布后延误3小时以上操作退票' then '延误3小时0元'
when hb2.航班类型 ='延误' and hb2.公告时间类型 in('不正常公告发布后延误90分钟到3小时以上操作退票','不正常公告发布后延误3小时以上操作退票')
 and hb2.money_date>=date'2021-09-01' then '延误1.5小时0元'
when hb2.航班类型 ='延误' and hb2.公告时间类型 in('不正常公告发布后延误90分钟到3小时以上操作退票',
'不正常公告发布后延误3小时以上操作退票','不正常公告发布后延误15分钟到90分钟操作退票')
 and hb2.money_date>=date'2021-11-16' then '延误15分钟0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间='3h+' then '起飞后退实际延误3H0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间 in('3h+','1.5h~3h') then '起飞后退实际延误1.5H0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间 in('15min~90min') then '起飞后退实际延误15min0元'
when hb2.航班类型<>'正常航班' and hb2.公告时间类型 is not null then '不正常航班公告后退票'
when hb2.apply_memo like '%疫情%' then hb2.apply_memo
when hb2.apply_memo in('旅客--误操作','旅客--订错重购') then '备注-误操作0元'
when hb2.apply_memo 
in('航司--航班取消','航司--航班时刻调整','航司--航班保护','航司--不正常航班','航司--航班延误','航司--航班补班','航司--航班备降')
then '备注-不正常航班0元'
when hb2.apply_memo 
in('旅客--误机','航司--价格跳水','政策--燃油问题','旅客--超售','旅客--被减','旅客--拒载','投诉处理') then '备注-旅客投诉0元' 
when hb2.apply_memo <>'未填写相应申请理由' then '0元备注-其他理由0元'
else '无备注0元' end
when hb2.money_fy>0 then '退票收费' end apply_memo,
hb2.费用类型,
hb2.收费类型,
sum(hb2.money_fy) money_fy,
sum(hb2.ticketprice) ticketprice,
sum(hb2.ys_fee) ys_fee,
count(distinct hb2.flights_order_head_id) 退票量,
sum(hb2.ys_fee)-sum(hb2.money_fy) 金额差异
from (
select hb1.*,hb2.drawback_rate,case when hb1.ticketprice=0 then '0元机票'
 when hb1.money_fy=0 then '0元收费'
when hb1.ticketprice>0 and hb1.money_fy=hb1.ticketprice*hb2.drawback_rate then '正常收费'
when hb1.ticketprice>0 and hb1.money_fy> hb1.ticketprice*hb2.drawback_rate then '多收费'
when hb1.ticketprice>0 and hb1.money_fy< hb1.ticketprice*hb2.drawback_rate then '少收费'
else '正常收费'
end 收费类型,nvl(hb1.ticketprice*hb2.drawback_rate,hb1.money_fy) ys_fee
from(
select t1.flights_order_head_id,
to_char(t1.money_date,'yyyymmdd') smonth,
t9.order_date,
t1.money_date,
t2.flight_date,
t2.flights_segment_name,
t2.area_type nationflag,
t2.segment_country,
t2.origin_std,
case when t1.seattype='商务座' then '商务座'
else '非商务座' end seat_type,
case when t9.order_date< to_date('2022-02-09','yyyy-mm-dd') and t1.origin_std>=to_date('2022-02-08','yyyy-mm-dd')
and t1.origin_std< to_date('2022-03-01','yyyy-mm-dd') and t1.money_date>=date'2022-02-08' 
and regexp_like(t2.flights_segment_name,'南宁|桂林|北海|柳州') then '外部-南宁桂林北海柳州进出港'
when t9.order_date< to_date('2022-02-02','yyyy-mm-dd') and t1.origin_std>=to_date('2022-02-01','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-21','yyyy-mm-dd') and t1.money_date>=date'2022-02-01' 
and regexp_like(t2.flights_segment_name,'深圳') then '外部-深圳2月初'
when t9.order_date< to_date('2022-01-27','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-26','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-09','yyyy-mm-dd') and t1.money_date>=date'2022-01-26' 
and t2.flights_segment_name like '%杭州%' then '外部-杭州1月下旬'
when t9.order_date< to_date('2022-01-26','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-25','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-08','yyyy-mm-dd') and t1.money_date>=date'2022-01-25' 
and t2.flights_segment_name like '%沈阳%' then '外部-沈阳1月下旬'

when t9.order_date< to_date('2022-01-25','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-24','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-07','yyyy-mm-dd') and t1.money_date>=date'2022-01-24' 
and regexp_like(t2.flights_city_name,'上海|天津|珠海') then '外部-上海天津珠海进出港'

when t9.order_date< to_date('2022-01-23','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-23','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-06','yyyy-mm-dd') and t1.money_date>=date'2022-01-23' 
and regexp_like(t2.flights_city_name,'济南|西双版纳') then '外部-济南西双版纳'

when t9.order_date< to_date('2022-01-19','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-18','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-02','yyyy-mm-dd') and t1.money_date>=date'2022-01-18' 
and regexp_like(t2.flights_city_name,'天津|西安|深圳|郑州') then '外部-天津西安深圳郑州'

when t9.order_date< to_date('2022-01-15','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-15','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-29','yyyy-mm-dd') and t1.money_date>=date'2022-01-14' 
and regexp_like(t2.flights_city_name,'珠海') then '外部-珠海1月中旬'

when t9.order_date< to_date('2022-01-14','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-14','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-28','yyyy-mm-dd') and t1.money_date>=date'2022-01-14' 
and regexp_like(t2.flights_city_name,'杭州') then '外部-杭州1月中旬'

when t9.order_date< to_date('2022-01-13','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-13','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-27','yyyy-mm-dd') and t1.money_date>=date'2022-01-13' 
and regexp_like(t2.flights_city_name,'上海') then '外部-上海1月中旬'

when t9.order_date< to_date('2022-01-12','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-12','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-27','yyyy-mm-dd') and t1.money_date>=date'2022-01-12' 
and regexp_like(t2.flights_city_name,'大连') then '外部-大连1月中旬'

when t9.order_date< to_date('2022-01-09','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-09','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-24','yyyy-mm-dd') and t1.money_date>=date'2022-01-09' 
and regexp_like(t2.flights_city_name,'天津') then '外部-天津1月中旬'


when t9.order_date< to_date('2022-01-07','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-07','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-22','yyyy-mm-dd') and t1.money_date>=date'2022-01-07' 
and regexp_like(t2.flights_city_name,'深圳') then '外部-深圳1月初'


when t9.order_date< to_date('2022-01-04','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-04','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-19','yyyy-mm-dd') and t1.money_date>=date'2022-01-04' 
and regexp_like(t2.flights_city_name,'深圳') then '外部-郑州1月初'

when t9.order_date< to_date('2022-01-02','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-02','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-17','yyyy-mm-dd') and t1.money_date>=date'2022-01-02' 
and regexp_like(t2.flights_city_name,'宁波') then '外部-宁波1月初'

when t9.order_date< to_date('2021-12-31','yyyy-mm-dd') and t1.origin_std>=to_date('2021-12-31','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-15','yyyy-mm-dd') and t1.money_date>=date'2021-12-31' 
and regexp_like(t2.flights_city_name,'洛阳') then '外部-洛阳12月底'
when t9.order_date< to_date('2021-12-28','yyyy-mm-dd') and t1.origin_std>=to_date('2021-12-28','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-12','yyyy-mm-dd') and t1.money_date>=date'2021-12-28' 
and regexp_like(t2.flights_city_name,'昆明|西双版纳') then '外部-昆明西双版纳12月底'

when t9.order_date< to_date('2021-12-23','yyyy-mm-dd') and t1.origin_std>=to_date('2021-12-22','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-22','yyyy-mm-dd') and t1.money_date>=date'2021-12-22' 
and regexp_like(t2.flights_city_name,'西安') then '外部-西安12月底'

when t9.order_date< to_date('2021-12-18','yyyy-mm-dd') and t1.origin_std>=to_date('2021-12-18','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-02','yyyy-mm-dd') and t1.money_date>=date'2021-12-17' 
and regexp_like(t2.flights_city_name,'西安|厦门|杭州|宁波') then '外部-西安厦门杭州宁波12月中旬'

when t9.order_date< to_date('2021-12-13','yyyy-mm-dd') and t1.origin_std>=to_date('2021-12-13','yyyy-mm-dd')
and t1.origin_std< to_date('2021-12-28','yyyy-mm-dd') and t1.money_date>=date'2021-12-13' 
and regexp_like(t2.flights_city_name,'杭州|宁波') then '外部-杭州宁波12月中旬'

when t9.order_date< to_date('2021-12-12','yyyy-mm-dd') and t1.origin_std>=to_date('2021-12-12','yyyy-mm-dd')
and t1.origin_std< to_date('2021-12-27','yyyy-mm-dd') and t1.money_date>=date'2021-12-12' 
and regexp_like(t2.flights_city_name,'西安') then '外部-西安12月中旬'

when t9.order_date< to_date('2021-12-08','yyyy-mm-dd') and t1.origin_std>=to_date('2021-12-08','yyyy-mm-dd')
and t1.origin_std< to_date('2021-12-23','yyyy-mm-dd') and t1.money_date>=date'2021-12-08' 
and regexp_like(t2.flights_city_name,'南京') then '外部-南京12月上旬'


when t9.order_date< to_date('2022-02-13','yyyy-mm-dd') and t1.origin_std>=to_date('2022-02-06','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-27','yyyy-mm-dd') and t1.money_date>=date'2022-02-06' 
and t2.flights_segment_name like '%南宁%' then '内部-南宁进出港'
when t9.order_date< to_date('2022-02-13','yyyy-mm-dd') and t1.origin_std>=to_date('2022-02-08','yyyy-mm-dd')
and t1.origin_std< to_date('2022-03-01','yyyy-mm-dd') and t1.money_date>=date'2022-02-08' 
and regexp_like(t2.flights_segment_name,'南宁|桂林|北海|柳州') then '内部-南宁桂林北海柳州进出港'
when t9.order_date< to_date('2022-02-13','yyyy-mm-dd') and t1.origin_std>=to_date('2022-02-08','yyyy-mm-dd')
and t1.origin_std< to_date('2022-03-01','yyyy-mm-dd') and t1.money_date>=date'2022-02-08' 
and regexp_like(t2.flights_segment_name,'南宁|桂林|北海|柳州') then '内部-南宁桂林北海柳州进出港'
when t9.order_date< to_date('2022-02-01','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-24','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-14','yyyy-mm-dd') and t1.money_date>=date'2022-01-24' 
and regexp_like(t2.flights_city_name,'上海|天津|珠海') then '内部-上海天津珠海进出港放宽一周'
when t9.order_date< to_date('2022-01-30','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-23','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-13','yyyy-mm-dd') and t1.money_date>=date'2022-01-23' 
and regexp_like(t2.flights_city_name,'济南|西双版纳') then '内部-济南西双版纳放宽一周'

when t9.order_date< to_date('2022-02-01','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-24','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-14','yyyy-mm-dd') and t1.money_date>=date'2022-01-24' 
and regexp_like(t2.flights_city_name,'伊宁|沈阳') then '内部-伊宁沈阳放宽一周'
when t9.order_date< to_date('2022-01-12','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-12','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-27','yyyy-mm-dd') and t1.money_date>=date'2022-01-12' 
and regexp_like(t2.flights_city_name,'大连') then '内部-大连1月中旬'

when t9.order_date< to_date('2022-01-08','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-08','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-23','yyyy-mm-dd') and t1.money_date>=date'2022-01-08' 
and regexp_like(t2.flights_city_name,'天津') then '内部-天津1月中旬'

when t9.order_date< to_date('2022-01-08','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-08','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-01','yyyy-mm-dd') and t1.money_date>=date'2022-01-08' 
and regexp_like(t2.flights_city_name,'西安|洛阳|宁波|郑州|上海|延安') then '内部-西安洛阳宁波郑州上海延安'

when  t1.origin_std>=to_date('2022-01-02','yyyy-mm-dd')
and t1.origin_std< to_date('2022-02-01','yyyy-mm-dd') and t1.money_date>=date'2022-01-02' and t1.money_date< date'2022-01-08'
and regexp_like(t2.flights_city_name,'西安|洛阳|宁波|昆明|延安') then '内部-西安洛阳宁波昆明延安'

when t9.order_date< to_date('2022-01-07','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-07','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-22','yyyy-mm-dd') and t1.money_date>=date'2022-01-07' 
and regexp_like(t2.flights_city_name,'深圳') then '内部-深圳1月上旬'

when t9.order_date< to_date('2022-01-04','yyyy-mm-dd') and t1.origin_std>=to_date('2022-01-03','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-18','yyyy-mm-dd') and t1.money_date>=date'2022-01-03' 
and regexp_like(t2.flights_city_name,'上海') then '内部-上海1月上旬'

when t9.order_date< to_date('2021-12-28','yyyy-mm-dd') and t1.origin_std>=to_date('2021-12-28','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-12','yyyy-mm-dd') and t1.money_date>=date'2021-12-28' 
and regexp_like(t2.flights_city_name,'南京') then '内部-南京12月底'

when t9.order_date< to_date('2021-12-27','yyyy-mm-dd') and t1.origin_std>=to_date('2021-12-27','yyyy-mm-dd')
and t1.origin_std< to_date('2022-01-11','yyyy-mm-dd') and t1.money_date>=date'2021-12-27' 
and regexp_like(t2.originairport_name,'揭阳|湛江|珠海|广州|深圳') then '内部-广东出发12月底'

else '---'

end  zhengce,

case when scfl.dis_round is not null then 
case when (scfl.dis_round -t2.origin_std)*24*60< 15 then '延误15分钟以下'
when (scfl.dis_round -t2.origin_std)*24*60>=15 and (scfl.dis_round-t2.origin_std)*24*60< 90 then '15min~90min'
when (scfl.dis_round -t2.origin_std)*24*60>=90 and (scfl.dis_round-t2.origin_std)*24< 3 then '1.5h~3h'
when (scfl.dis_round -t2.origin_std)*24>=3  then '3h+' end
else null end  foc实际起飞延误时间,
case when t1.money_fy=0 and t1.ticketprice=0  and t1.seats_name in('O','D') then 'OD退票'
when t1.money_fy=0 and t1.ticketprice=0   then '套票退票'
when t1.money_fy=0  then '0元退票'
when t1.money_fy>0 then '非0元退票' end 费用类型,
case when t2.flag=2 then '取消'
when t6.unnormaltype is not null then t6.unnormaltype
else '正常航班' end 航班类型,
case when t2.area_type ='国内' then
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)*24<2 then '[0h,2h)'
when (t1.origin_std-t1.money_date)*24<24 then '[2h,1D)'
when (t1.origin_std-t1.money_date)<3 then '[1D,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)>=7 then '7D+' end 
when t2.area_type ='国际' then
case when t1.origin_std-t1.money_date<0 then '离站后'
when (t1.origin_std-t1.money_date)<1 then '[0,1D)'
when (t1.origin_std-t1.money_date)<3 then '[1D,3D)'
when (t1.origin_std-t1.money_date)<7 then '[3D,7D)'
when (t1.origin_std-t1.money_date)<15 then '[7D,15D)'
when (t1.origin_std-t1.money_date)<30 then '[15D,30D)'
when (t1.origin_std-t1.money_date)>=30 then '30D+' end 
else null end priod_date,
nvl(t1.seats_name,'YE') seats_name,
t1.flights_order_id,
case when nvl(t1.apply_memo,dim2.memo_user)  like '%定错%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%订错%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%重购%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%重构%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%重订%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%新定单%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%重新订购%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%重复订票%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%重新购票%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%重复购票%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%航班选错%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%新订单%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%订反%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%原订单%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%原定单%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%误买%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%补订%' then '旅客--补订儿童婴儿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%补丁%' then '旅客--补订儿童婴儿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%漏订%' then '旅客--补订儿童婴儿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%误操作%' then '旅客--误操作'
when nvl(t1.apply_memo,dim2.memo_user)  like '%误操%' then '旅客--误操作'
when nvl(t1.apply_memo,dim2.memo_user)  like '%推燃油%' then '政策--燃油问题'
when nvl(t1.apply_memo,dim2.memo_user)  like '%燃油问题%' then '政策--燃油问题'
when nvl(t1.apply_memo,dim2.memo_user)  like '%燃油%' then '政策--燃油问题'
when nvl(t1.apply_memo,dim2.memo_user)  like '%延误%' then '航司--航班延误'
when nvl(t1.apply_memo,dim2.memo_user)  like '%航班取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%回程取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%去程航取%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%取消航线%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%号%取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%回程%取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%去程%取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%第一程%取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%第二程%取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%第一段%取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%第二段%取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%前段%取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%后段%取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%去取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%去程取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%返程取消%' then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%取消%' and t2.flag=2 then '航司--航班取消'
when nvl(t1.apply_memo,dim2.memo_user)  like '%航班备降%' then '航司--航班备降'
when nvl(t1.apply_memo,dim2.memo_user)  like '%备降%' then '航司--航班备降'
when nvl(t1.apply_memo,dim2.memo_user)  like '%航班改降%' then '航司--航班备降'
when nvl(t1.apply_memo,dim2.memo_user)  like '%航班时间调整%' then '航司--航班时刻调整'
when nvl(t1.apply_memo,dim2.memo_user)  like '%时刻调整%' then '航司--航班时刻调整'
when nvl(t1.apply_memo,dim2.memo_user)  like '%时刻变更%' then '航司--航班时刻调整'
when nvl(t1.apply_memo,dim2.memo_user)  like '%时调%' then '航司--航班时刻调整'
when nvl(t1.apply_memo,dim2.memo_user)  like '%补班%' then '航司--航班补班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%价格跳水%' then '航司--价格跳水'
when nvl(t1.apply_memo,dim2.memo_user)  like '%价格下降%' then '航司--价格跳水'
when nvl(t1.apply_memo,dim2.memo_user)  like '%跳水%' then '航司--价格跳水'
when nvl(t1.apply_memo,dim2.memo_user)  like '%病退%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%出血%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%心脏病%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%食物中毒%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%孕妇%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%怀孕%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%肺炎%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%肠胃炎%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%死亡%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%因病%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%病陪%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%符合%授权%' then '疫情-符合授权'
when nvl(t1.apply_memo,dim2.memo_user)  like '%进出授权%' then '疫情-符合授权'
when nvl(t1.apply_memo,dim2.memo_user)  like '%行程卡%' then '疫情-行程卡'
when nvl(t1.apply_memo,dim2.memo_user)  like '%隔离%' then '疫情-社区隔离'
when nvl(t1.apply_memo,dim2.memo_user)  like '%核酸%' then '疫情-核酸问题'
when nvl(t1.apply_memo,dim2.memo_user)  like '%核算%' then '疫情-核酸问题'
when nvl(t1.apply_memo,dim2.memo_user)  like '%旅居史%' then '疫情-旅居史'
when nvl(t1.apply_memo,dim2.memo_user)  like '%旅行史%' then '疫情-旅居史'
when nvl(t1.apply_memo,dim2.memo_user)  like '%行程码%' then '疫情-行程卡'
when nvl(t1.apply_memo,dim2.memo_user)  like '%拒载%' then '疫情-拒载'
when nvl(t1.apply_memo,dim2.memo_user)  like '%体温%' then '疫情-体温问题'
when nvl(t1.apply_memo,dim2.memo_user)  like '%防疫%' then '疫情'
when nvl(t1.apply_memo,dim2.memo_user)  like '%疫情%' then '疫情'
when nvl(t1.apply_memo,dim2.memo_user)  like '%新冠%' then '疫情'
when nvl(t1.apply_memo,dim2.memo_user)  like '%分控%' then '特殊情况--分控同意'
when nvl(t1.apply_memo,dim2.memo_user)  like '%审核修改费%' then '特殊情况--审核修改费用'
when nvl(t1.apply_memo,dim2.memo_user)  like '%投诉%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%市场部%同意%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%汪老师%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%应老师%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%陆丹%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%张英%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%应张蝶%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%顾老师%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%汪华茂%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%吴世娟%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%蔡老师%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%范香%' then '投诉处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%定错%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%买错%' then '旅客--订错重购'
when nvl(t1.apply_memo,dim2.memo_user)  like '%补儿童%' then '旅客--补订儿童婴儿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%航班保护%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%去程%保护%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%取消%保护%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%前段%保护%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%后段%保护%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%保护不乘坐%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%保护航班不乘坐%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%取消保护不坐%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%航班保护不乘坐%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%保护航班不坐%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%保护航班%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%保护不坐%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%保护%' then '航司--航班保护'
when nvl(t1.apply_memo,dim2.memo_user)  like '%不正常航班%' then '航司--不正常航班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%暂停销售%' then '航司--不正常航班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%去程不正常%' then '航司--不正常航班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%航班停售%' then '航司--不正常航班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%前段不正常%' then '航司--不正常航班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%不正常回程%' then '航司--不正常航班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%航班不正常%' then '航司--不正常航班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%停止销售%' then '航司--不正常航班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%不正常%' then '航司--不正常航班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%停售%' then '航司--不正常航班'
when nvl(t1.apply_memo,dim2.memo_user)  like '%术后%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%高危%' then '旅客--病退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%地震%' then '特殊事件'
when nvl(t1.apply_memo,dim2.memo_user)  like '%暴乱%' then '特殊事件'
when nvl(t1.apply_memo,dim2.memo_user)  like '%暴动%' then '特殊事件'
when nvl(t1.apply_memo,dim2.memo_user)  like '%学生%' then '旅客--学生政策'
when nvl(t1.apply_memo,dim2.memo_user)  like '%学校%' then '旅客--学生政策'
when nvl(t1.apply_memo,dim2.memo_user)  like '%关系户%' then '关系户'
when nvl(t1.apply_memo,dim2.memo_user)  like '%二次%' then '特殊情况--二次退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%2次%' then '特殊情况--二次退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%分控%' then '特殊情况--主控同意'
when nvl(t1.apply_memo,dim2.memo_user)  like '%主控%' then '特殊情况--主控同意'
when nvl(t1.apply_memo,dim2.memo_user)  like '%总控%' then '特殊情况--主控同意'
when nvl(t1.apply_memo,dim2.memo_user)  like '%特殊退改%' then '特殊退改政策'
when nvl(t1.apply_memo,dim2.memo_user)  like '%退改政策%' then '特殊退改政策'
when nvl(t1.apply_memo,dim2.memo_user)  like '%特殊政策%' then '特殊退改政策'
when nvl(t1.apply_memo,dim2.memo_user)  like '%香港政策%' then '特殊退改政策'
when nvl(t1.apply_memo,dim2.memo_user)  like '%特殊退票%' then '特殊退改政策'
when nvl(t1.apply_memo,dim2.memo_user)  like '%自愿%' then '旅客自愿'
when lower(nvl(t1.apply_memo,dim2.memo_user))  like '%ziyuan%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%单%退%' then '单退'
when nvl(t1.apply_memo,dim2.memo_user)  like '%退 机 建 与 燃 油%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%退 机 建%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%自退%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%退机建%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%tuishui%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%退机建费%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%退机税%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%褪税%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%推机税%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%退机场建设费%' then '旅客自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%退稅%' then '旅客--自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%退税%' then '旅客--自愿'
when nvl(t1.apply_memo,dim2.memo_user)  like '%被减%' then '旅客--被减'
when nvl(t1.apply_memo,dim2.memo_user)  like '%超售%' then '旅客--超售'
when nvl(t1.apply_memo,dim2.memo_user)  like '%误机%' then '旅客--误机'
when nvl(t1.apply_memo,dim2.memo_user)  like '%晚到%' then '旅客--误机'
when nvl(t1.apply_memo,dim2.memo_user)  like '%wuji%' then '旅客--误机'
when nvl(t1.apply_memo,dim2.memo_user)  like '%漏机%' then '旅客--误机'
when nvl(t1.apply_memo,dim2.memo_user)  like '%拒载%' then '疫情--拒载'
when nvl(t1.apply_memo,dim2.memo_user)  like '%遗失%' then '旅客--客票遗失'
when nvl(t1.apply_memo,dim2.memo_user)  like '%测试%' then '测试'
when lower(nvl(t1.apply_memo,dim2.memo_user))  like '%test%' then '测试'
when nvl(t1.apply_memo,dim2.memo_user)  like '%盗卡%' then '旅客--盗卡'
when nvl(t1.apply_memo,dim2.memo_user)  like '%20%%' then '投诉--少收手续费处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%30%%' then '投诉--少收手续费处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%10%%' then '投诉--少收手续费处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%5%%' then '投诉--少收手续费处理'
when nvl(t1.apply_memo,dim2.memo_user)  like '%机构退票%' then '机构退票'
when nvl(t1.apply_memo,dim2.memo_user)  like '%授权%' then '疫情-符合授权'
when nvl(t1.apply_memo,dim2.memo_user) is not null then '其他原因'
else  '未填写相应申请理由'  end  apply_memo,
t1.apply_user,
case when t1.money_terminal< 0 then '线上'
when t1.money_terminal>0 then '线下' end 退票渠道,
t6.unnormaltype 不正常类型,
t6.reason,
t6.PUBLISH_DATE,
t6.LAST_PUBLISH,
t6.DELAY_HOUR,
nvl(t1.apply_memo,dim2.memo_user) memo_foruser,
case when t6.PUBLISH_DATE is not null and t1.money_date >=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=3 then '不正常公告发布后延误3小时以上操作退票'
when t6.PUBLISH_DATE is not null and t1.money_date >=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=1.5 then '不正常公告发布后延误90分钟到3小时以上操作退票'
 when t6.PUBLISH_DATE is not null and  t1.money_date>=t6.PUBLISH_DATE and t6.unnormaltype='延误'
and t6.DELAY_HOUR>=0.25 and t6.DELAY_HOUR< 1.5 then '不正常公告发布后延误15分钟到90分钟操作退票'
when t6.PUBLISH_DATE is not null and t1.money_date>=t6.PUBLISH_DATE and t6.unnormaltype='延误'
 then '不正常公告发布后其他延误操作退票'
 when t6.PUBLISH_DATE is not null and t1.money_date>=t6.PUBLISH_DATE
 then '不正常公告发布后非延误操作退票'
 else null end 公告时间类型,
t1.money_fy,
t1.ticketprice,
case when t1.seats_name in('B','G','G1','G2','O','A','D','Z','I','J') then 'BGOADZIJ'
else '非特殊舱位' end seatnametype,
case when t8.order_head_id is not null then '不正常航班保护'
else '-' end is_guard,
dim1.return_channel,
case when t9.channel in('网站','手机') and t91.users_id is not null then '黑代理'
when t9.channel in('网站','手机') and t9.pay_gate in(15,29,31) then '黑代理'
when t9.channel in('OTA','旗舰店','网站','手机') then t9.sub_channel
when t9.channel not in('OTA','旗舰店','网站','手机')  then t9.channel end  order_channel
 from dw.da_order_drawback t1
 join dw.da_flight t2 on t1.segment_head_id=t2.segment_head_id
 left join dw.dim_segment_type t3 on t2.h_route_id=t3.h_route_id and t2.route_id=t3.route_id
 left join hdb.cq_airport t4 on t2.originairport=t4.threecodeforcity
 left join hdb.cq_airport t5 on t2.destairport=t5.threecodeforcity
left join (select distinct order_head_id
 from cqsale.cq_free_change_log@to_air
 where state in(1,2))t8 on t8.order_head_id=t1.flights_order_head_Id
 left join dw.fact_recent_order_detail t9 on t1.flights_order_head_id=t9.flights_order_head_id
 left join if.v_da_restrict_userinfo t91 on t9.client_id=t91.users_id
 --left join cqsale.cq_return_ticket_channel@to_air  t10 on t10.flights_order_head_id=t1.flights_order_head_id
 left join (select *
from(
select t1.segment_head_id,t1.unnormaltype,t1.reason,t1.PUBLISH_DATE,t1.LAST_PUBLISH,t1.DELAY_HOUR,
row_number()over(partition by segment_head_id
order by t1.last_publish desc) rid
from dw.tw_unnormal_flight t1)h1
where h1.rid=1) t6 on t1.segment_head_id=t6.segment_head_id
left join dw.da_foc_flight t7 on t1.segment_head_id=t7.segment_head_id
left join stg.s_cq_foc_landfee scfl on t7.foc_id=scfl.id
left join (select *
from(
select ct1.FLIGHTS_ORDER__HEAD_ID flights_order_head_id,
case when ct1.TERMINAL_ID<0 and nvl(ct1.web_id,0)=0 and ct1.SALE_TYPE_DETAIL <=2 then '网站'
when ct1.TERMINAL_ID<0 and nvl(ct1.web_id,0)=0 and ct1.SALE_TYPE_DETAIL in(5,10) then '小程序'
when ct1.TERMINAL_ID<0 and nvl(ct1.web_id,0)=0 and ct1.SALE_TYPE_DETAIL in(3,8)  then 'IOS'
when ct1.TERMINAL_ID<0 and nvl(ct1.web_id,0)=0 and ct1.SALE_TYPE_DETAIL in(4,9)  then 'Android'
when ct1.TERMINAL_ID<0 and nvl(ct1.web_id,0)=0 then '线上自有渠道'
when nvl(ct1.web_id,0) in(1219,128,146,1482,1483,150,2185,228,2932,2956,3420,3979,435,4621,6298,7314,940)
then ct3.abrv
when  nvl(ct1.web_id,0) >0 and regexp_like(ct3.name,'(B2G)|(机构客户)|(集团客户)')  then '机构客户'
when  nvl(ct1.terminal_id,0) >0 and regexp_like(ct2.terminal,'(B2G)|(机构客户)|(集团客户)')  then '机构客户'
else 'B2B' end  return_channel,
ct1.OPERATE_INFO,
ct1.USERS_ID,
ct1.RETURN_DATE,
row_number()over(partition by ct1.FLIGHTS_ORDER__HEAD_ID order by ct1.RETURN_DATE) rid
 from cqsale.cq_return_ticket_channel@to_air ct1
 left join stg.s_cq_terminal ct2 on ct1.terminal_id=ct2.terminal_id
 left join stg.s_cq_agent_info ct3 on ct1.web_id=ct3.agent_id
 )
 where rid=1 
) dim1 on dim1.flights_order_head_id=t1.flights_order_head_id
left join (select t1.flights_order_head_id,
       min(t1.memo_for_user)  memo_user
  from stg.s_cq_flights_head_history t1,
       stg.s_cq_order_head           t2,      
       stg.s_cq_flights_segment_head t9
 where t1.flights_order_head_id = t2.flights_order_head_id   
   and t2.segment_head_id = t9.segment_head_id
   and t9.origin_std >= to_date('2022-01-01', 'yyyy-mm-dd')
    and t1.log_code in (5,20)
    group by t1.flights_order_head_id
) dim2 on dim2.flights_order_head_Id=t1.flights_order_head_id




where t1.money_date>=date'2022-03-01'
 and t1.money_date< date'2022-03-25'
 and t2.company_id=0
     )hb1
left join dw.dim_tq_history_rule hb2 on hb1.nationflag=hb2.nationflag 
and hb1.seat_type=hb2.seat_type and hb1.priod_date=hb2.priod_type and hb1.seats_name=hb2.seats_name
and hb1.segment_country=nvl(hb2.segment_country,hb1.segment_country)
and trunc(hb1.order_date)>=hb2.begin_date and trunc(hb1.order_date)<=nvl(hb2.end_date,trunc(sysdate))
)hb2
group by hb2.smonth,
case  when hb2.ticketprice=0 and hb2.money_fy=0 then '0元机票'
when hb2.退票渠道='线上' and hb2.money_fy =0 then '0元线上'
when hb2.退票渠道='线下' and hb2.money_fy=0 then 
case when hb2.is_guard ='不正常航班保护' then '航班保护0元'
when hb2.航班类型 in('取消','取消航班') and hb2.公告时间类型 is not null then '取消航班0元'
when hb2.航班类型 ='延误' and hb2.公告时间类型 ='不正常公告发布后延误3小时以上操作退票' then '延误3小时0元'
when hb2.航班类型 ='延误' and hb2.公告时间类型 in('不正常公告发布后延误90分钟到3小时以上操作退票','不正常公告发布后延误3小时以上操作退票')
 and hb2.money_date>=date'2021-09-01' then '延误1.5小时0元'
when hb2.航班类型 ='延误' and hb2.公告时间类型 in('不正常公告发布后延误90分钟到3小时以上操作退票',
'不正常公告发布后延误3小时以上操作退票','不正常公告发布后延误15分钟到90分钟操作退票')
 and hb2.money_date>=date'2021-11-16' then '延误15分钟0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间='3h+' then '起飞后退实际延误3H0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间 in('3h+','1.5h~3h') then '起飞后退实际延误1.5H0元'
when hb2.money_date>=hb2.origin_std and hb2.foc实际起飞延误时间 in('15min~90min') then '起飞后退实际延误15min0元'
when hb2.航班类型<>'正常航班' and hb2.公告时间类型 is not null then '不正常航班公告后退票'
when hb2.apply_memo like '%疫情%' then hb2.apply_memo
when hb2.apply_memo in('旅客--误操作','旅客--订错重购') then '备注-误操作0元'
when hb2.apply_memo 
in('航司--航班取消','航司--航班时刻调整','航司--航班保护','航司--不正常航班','航司--航班延误','航司--航班补班','航司--航班备降')
then '备注-不正常航班0元'
when hb2.apply_memo 
in('旅客--误机','航司--价格跳水','政策--燃油问题','旅客--超售','旅客--被减','旅客--拒载','投诉处理') then '备注-旅客投诉0元' 
when hb2.apply_memo <>'未填写相应申请理由' then '0元备注-其他理由0元'
else '无备注0元' end
when hb2.money_fy>0 then '退票收费' end ,
hb2.费用类型,
hb2.收费类型;

----------------------------------------20220523-----------------------------------------------------------
 ------540、4、5月客座率数据提取
select to_char(t1.flight_date,'yyyymm'),t1.flight_segment,sum(t1.checkin_mile)/sum(t1.checkin_s_mile)
 from dw.bi_tbl_plf t1
 where t1.checkin_mile>0
 and t1.checkin_s_mile>0
 and t1.flight_date>=date'2022-04-01'
 and t1.flight_date<=date'2022-05-21'
 group by to_char(t1.flight_date,'yyyymm'),t1.flight_segment;
 

 ------541、服务匹配航班状态

select h1.flightno,decode(h1.flag,0,'正常',1,'受保护',2,'取消')
 from(
select  to_char(t1.flight_date,'yyyymmdd')||t1.flight_no flightno,min(t1.flag) flag
 from dw.da_flight t1
 where to_char(t1.flight_date,'yyyymmdd')||t1.flight_no
 in('202203299C8831',
'202203229C8797',
'202203149C6107',
'202205019C8807',
'202204229C6806',
'202204269C8970',
'202205039C6472',
'202205019C8846'
)
 group by to_char(t1.flight_date,'yyyymmdd')||t1.flight_no)h1;

 ------542、中转旅客信息匹配

select to_char(t1.r_flights_date,'yyyymmdd')||t1.whole_flight||replace(trim(t1.name||coalesce(t1.second_name,'')),' ','')||substr(t1.codeno,length(t1.codeno)-4+1,4),
max(case when t1.sex=3 then 3 else 0 end) 是否婴儿,
max(case when t1.flag_id =40 then 40 
when t1.flag_id in(7,11,12) then 2
when t1.flag_id in(8,9,10) then 1 
else 0 end) 状态
 from cqsale.cq_order_head@to_air t1
 left join stg.s_cq_order_head_flag t2 on t1.flag_id=t2.flag
 where t1.r_flights_date>=date'2022-04-01'
 and t1.r_flights_date<=date'2022-04-30'
 --and t1.r_flights_date=date'2022-04-16'
 --and t1.codeno like '6205%2859'
 and t1.name like '%%'
 and to_char(t1.r_flights_date,'yyyymmdd')||t1.whole_flight||replace(trim(t1.name||coalesce(t1.second_name,'')),' ','')||substr(t1.codeno,length(t1.codeno)-4+1,4)
 in('202204309C8711秦英杰1619',
'202204289C6367谷学领7817',
'202204289C6367李晓芹7825',
'202204279C7108李艳红0420',
'202204269C6232谢程喆0013',
'202204259C6790林建蒙4016',
'202204249C6376周浩良929X',
'202204229C6376张万才0811',
'202204169C6846龚雪002X',
'202204149C6306蔺亚龙4519',
'202204149C6846杨坤伟3228',
'202204129C6542温飞雪0644'
)
group by  to_char(t1.r_flights_date,'yyyymmdd')||t1.whole_flight||replace(trim(t1.name||coalesce(t1.second_name,'')),' ','')||substr(t1.codeno,length(t1.codeno)-4+1,4);


 ------543、航班号(XY)+航段(三字码)对应轮档小时、每班变动成本、小时成本

select flights_no,flights_segment,avg(h1.round_time) round_time,avg(vari_cost) vari_cost,sum(h1.vari_cost)/sum(h1.round_time) varicosthour
from(
select f.flights_date,
       f.flights_no,
       f.flights_segment,
       f.flights_id,
       f.segment_head_id,
       f.round_time,
       decode(f.ROUTE_FLAG, 0, '直飞', 1, '经停', 2, '同机中转') routeflag,
       decode(COST_FLAG,
              0,
              '直飞',
              1,
              '经停分段',
              2,
              '同机中转',
              3,
              '经停合计') costflag,
       nvl(F.QJ_FEE_NF, 0) + nvl(F.CAO_FEE, 0) + nvl(F.FUND_MONEY, 0) +
       nvl(F.FLIGHT_MONEY, 0) + nvl(F.DP_MONEY, 0) vari_cost
  from cqsale.CQ_FLIGHTS_COST@to_air F
 where f.flights_date >= trunc(sysdate) - 14
 and round_time>0
 and nvl(F.QJ_FEE_NF, 0) + nvl(F.CAO_FEE, 0) + nvl(F.FUND_MONEY, 0) +
       nvl(F.FLIGHT_MONEY, 0) + nvl(F.DP_MONEY, 0)>0
 )h1
 where h1.costflag<>'经停合计'
 group by flights_no,flights_segment;
  

 ------544、
 ------545、
 ------546、
 ------547、
 ------548、
 ------549、
 ------550、
 ------551、
 ------552、
 ------553、
 ------554、
 ------555、
 ------556、
 ------557、
 ------558、
 ------559、
 ------560、
 ------561、
 ------562、
 ------563、
 ------564、
 ------565、
 ------566、
 ------567、
 ------568、
 ------569、
 ------570、
 ------571、
 ------572、
